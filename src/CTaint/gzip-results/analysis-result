[STTAL]module identifier is <stdin>
[STTAL]discovered function bi_init
[STTAL]discovered function send_bits
[STTAL]discovered function bi_reverse
[STTAL]discovered function bi_windup
[STTAL]discovered function create_outfile
[STTAL]discovered function input_eof
[STTAL]discovered function copy_stat
[STTAL]discovered function shorten_name
[STTAL]discovered function check_ofname
[STTAL]discovered function progerror
[STTAL]discovered function getbits
[STTAL]discovered function read_pt_len
[STTAL]discovered function read_c_len
[STTAL]discovered function get_suffix
[STTAL]discovered function discard_input_bytes
[STTAL]discovered function open_and_stat
[STTAL]discovered function inflate
[STTAL]discovered function inflate_block
[STTAL]discovered function inflate_dynamic
[STTAL]discovered function inflate_stored
[STTAL]discovered function inflate_fixed
[STTAL]discovered function huft_build
[STTAL]discovered function huft_free
[STTAL]discovered function inflate_codes
[STTAL]discovered function lzw
[STTAL]discovered function ct_init
[STTAL]discovered function copy_block
[STTAL]discovered function lm_init
[STTAL]discovered function fill_window
[STTAL]discovered function deflate
[STTAL]discovered function deflate_fast
[STTAL]discovered function treat_file
[STTAL]discovered function longest_match
[STTAL]discovered function main
[STTAL]discovered function try_help
[STTAL]discovered function help
[STTAL]discovered function do_exit
[STTAL]discovered function license
[STTAL]discovered function version
[STTAL]discovered function install_signal_handlers
[STTAL]discovered function treat_stdin
[STTAL]discovered function do_list
[STTAL]discovered function abort_gzip
[STTAL]discovered function remove_output_file
[STTAL]discovered function abort_gzip_signal
[STTAL]discovered function open_input_file
[STTAL]discovered function treat_dir
[STTAL]discovered function make_ofname
[STTAL]discovered function get_method
[STTAL]discovered function gen_codes
[STTAL]discovered function init_block
[STTAL]discovered function flush_block
[STTAL]discovered function set_file_type
[STTAL]discovered function build_tree
[STTAL]discovered function build_bl_tree
[STTAL]discovered function compress_block
[STTAL]discovered function send_all_trees
[STTAL]discovered function ct_tally
[STTAL]discovered function send_tree
[STTAL]discovered function scan_tree
[STTAL]discovered function pqdownheap
[STTAL]discovered function gen_bitlen
[STTAL]discovered function unlzh
[STTAL]discovered function decode_start
[STTAL]discovered function decode
[STTAL]discovered function decode_c
[STTAL]discovered function decode_p
[STTAL]discovered function fillbuf
[STTAL]discovered function make_table
[STTAL]discovered function huf_decode_start
[STTAL]discovered function init_getbits
[STTAL]discovered function unlzw
[STTAL]discovered function unpack
[STTAL]discovered function read_tree
[STTAL]discovered function build_tree166
[STTAL]discovered function read_byte
[STTAL]discovered function check_zipfile
[STTAL]discovered function unzip
[STTAL]discovered function copy
[STTAL]discovered function write_buf
[STTAL]discovered function read_buffer
[STTAL]discovered function read_error
[STTAL]discovered function updcrc
[STTAL]discovered function clear_bufs
[STTAL]discovered function fill_inbuf
[STTAL]discovered function flush_window
[STTAL]discovered function flush_outbuf
[STTAL]discovered function write_buffer
[STTAL]discovered function write_error
[STTAL]discovered function strlwr
[STTAL]discovered function gzip_base_name
[STTAL]discovered function xunlink
[STTAL]discovered function make_simple_name
[STTAL]discovered function add_envopt
[STTAL]discovered function gzip_error
[STTAL]discovered function xalloc_die
[STTAL]discovered function warning
[STTAL]discovered function display_ratio
[STTAL]discovered function fprint_off
[STTAL]discovered function zip
[STTAL]discovered function file_read
## Starting intraprocedural analysis
[Processing][Function][file_read]
STORE [*p=q]:   store i8* %buf, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %size, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !578), !dbg !580
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i8** %2, align 8, !dbg !581
LOAD [p=*q]:   %6 = load i32* %3, align 4, !dbg !581
CALL [call func]:   %7 = call i32 @read_buffer(i32 %4, i8* %5, i32 %6), !dbg !581
STORE [*p=q]:   store i32 %7, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* %len, align 4, !dbg !582
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
STORE [*p=q]:   store i32 %11, i32* %1, !dbg !583
LOAD [p=*q]:   %13 = load i32* %len, align 4, !dbg !584
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
STORE [*p=q]:   store i32 %11, i32* %1, !dbg !583
LOAD [p=*q]:   %26 = load i32* %1, !dbg !590
Analyzing return instruction for file_read
	  %26 = load i32* %1, !dbg !590
LOAD [p=*q]:   %13 = load i32* %len, align 4, !dbg !584
CALL [call func]:   call void @read_error() #7, !dbg !585
LOAD [p=*q]:   %17 = load i8** %2, align 8, !dbg !587
LOAD [p=*q]:   %18 = load i32* %len, align 4, !dbg !587
CALL [call func]:   %19 = call i64 @updcrc(i8* %17, i32 %18), !dbg !587
STORE [*p=q]:   store i64 %19, i64* @crc, align 8, !dbg !587
LOAD [p=*q]:   %20 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %22 = load i64* @bytes_in, align 8, !dbg !588
STORE [*p=q]:   store i64 %23, i64* @bytes_in, align 8, !dbg !588
LOAD [p=*q]:   %24 = load i32* %len, align 4, !dbg !589
STORE [*p=q]:   store i32 %24, i32* %1, !dbg !589
CALL [call func]:   call void @read_error() #7, !dbg !585
LOAD [p=*q]:   %17 = load i8** %2, align 8, !dbg !587
LOAD [p=*q]:   %18 = load i32* %len, align 4, !dbg !587
CALL [call func]:   %19 = call i64 @updcrc(i8* %17, i32 %18), !dbg !587
STORE [*p=q]:   store i64 %19, i64* @crc, align 8, !dbg !587
LOAD [p=*q]:   %20 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %22 = load i64* @bytes_in, align 8, !dbg !588
STORE [*p=q]:   store i64 %23, i64* @bytes_in, align 8, !dbg !588
LOAD [p=*q]:   %24 = load i32* %len, align 4, !dbg !589
STORE [*p=q]:   store i32 %24, i32* %1, !dbg !589
LOAD [p=*q]:   %26 = load i32* %1, !dbg !590
Analyzing return instruction for file_read
	  %26 = load i32* %1, !dbg !590
LOAD [p=*q]:   %26 = load i32* %1, !dbg !590
Analyzing return instruction for file_read
	  %26 = load i32* %1, !dbg !590
[Processing][Function][zip]
STORE [*p=q]:   store i32 %in, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %out, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %flags}, metadata !578), !dbg !581
STORE [*p=q]:   store i8 0, i8* %flags, align 1, !dbg !582
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i16* %attr}, metadata !583), !dbg !585
STORE [*p=q]:   store i16 0, i16* %attr, align 2, !dbg !586
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i16* %deflate_flags}, metadata !587), !dbg !588
STORE [*p=q]:   store i16 0, i16* %deflate_flags, align 2, !dbg !589
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %stamp}, metadata !590), !dbg !591
LOAD [p=*q]:   %3 = load i32* %1, align 4, !dbg !592
STORE [*p=q]:   store i32 %3, i32* @ifd, align 4, !dbg !592
LOAD [p=*q]:   %4 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %4, i32* @ofd, align 4, !dbg !593
STORE [*p=q]:   store i32 0, i32* @outcnt, align 4, !dbg !594
STORE [*p=q]:   store i32 8, i32* @method, align 4, !dbg !595
LOAD [p=*q]:   %5 = load i8* getelementptr inbounds ([3 x i8]* @.str231, i32 0, i64 0), !dbg !596
LOAD [p=*q]:   %6 = load i32* @outcnt, align 4, !dbg !596
STORE [*p=q]:   store i32 %7, i32* @outcnt, align 4, !dbg !596
STORE [*p=q]:   store i8 %5, i8* %9, align 1, !dbg !596
LOAD [p=*q]:   %10 = load i32* @outcnt, align 4, !dbg !596
CALL [call func]:   call void @flush_outbuf(), !dbg !596
LOAD [p=*q]:   %14 = load i8* getelementptr inbounds ([3 x i8]* @.str231, i32 0, i64 1), !dbg !598
LOAD [p=*q]:   %15 = load i32* @outcnt, align 4, !dbg !598
STORE [*p=q]:   store i32 %16, i32* @outcnt, align 4, !dbg !598
STORE [*p=q]:   store i8 %14, i8* %18, align 1, !dbg !598
LOAD [p=*q]:   %19 = load i32* @outcnt, align 4, !dbg !598
CALL [call func]:   call void @flush_outbuf(), !dbg !596
LOAD [p=*q]:   %14 = load i8* getelementptr inbounds ([3 x i8]* @.str231, i32 0, i64 1), !dbg !598
LOAD [p=*q]:   %15 = load i32* @outcnt, align 4, !dbg !598
STORE [*p=q]:   store i32 %16, i32* @outcnt, align 4, !dbg !598
STORE [*p=q]:   store i8 %14, i8* %18, align 1, !dbg !598
LOAD [p=*q]:   %19 = load i32* @outcnt, align 4, !dbg !598
LOAD [p=*q]:   %14 = load i8* getelementptr inbounds ([3 x i8]* @.str231, i32 0, i64 1), !dbg !598
LOAD [p=*q]:   %15 = load i32* @outcnt, align 4, !dbg !598
STORE [*p=q]:   store i32 %16, i32* @outcnt, align 4, !dbg !598
STORE [*p=q]:   store i8 %14, i8* %18, align 1, !dbg !598
LOAD [p=*q]:   %19 = load i32* @outcnt, align 4, !dbg !598
CALL [call func]:   call void @flush_outbuf(), !dbg !598
LOAD [p=*q]:   %23 = load i32* @outcnt, align 4, !dbg !600
STORE [*p=q]:   store i32 %24, i32* @outcnt, align 4, !dbg !600
STORE [*p=q]:   store i8 8, i8* %26, align 1, !dbg !600
LOAD [p=*q]:   %27 = load i32* @outcnt, align 4, !dbg !600
CALL [call func]:   call void @flush_outbuf(), !dbg !598
LOAD [p=*q]:   %23 = load i32* @outcnt, align 4, !dbg !600
STORE [*p=q]:   store i32 %24, i32* @outcnt, align 4, !dbg !600
STORE [*p=q]:   store i8 8, i8* %26, align 1, !dbg !600
LOAD [p=*q]:   %27 = load i32* @outcnt, align 4, !dbg !600
LOAD [p=*q]:   %23 = load i32* @outcnt, align 4, !dbg !600
STORE [*p=q]:   store i32 %24, i32* @outcnt, align 4, !dbg !600
STORE [*p=q]:   store i8 8, i8* %26, align 1, !dbg !600
LOAD [p=*q]:   %27 = load i32* @outcnt, align 4, !dbg !600
CALL [call func]:   call void @flush_outbuf(), !dbg !600
LOAD [p=*q]:   %31 = load i32* @save_orig_name, align 4, !dbg !602
CALL [call func]:   call void @flush_outbuf(), !dbg !600
LOAD [p=*q]:   %31 = load i32* @save_orig_name, align 4, !dbg !602
LOAD [p=*q]:   %31 = load i32* @save_orig_name, align 4, !dbg !602
LOAD [p=*q]:   %34 = load i8* %flags, align 1, !dbg !603
STORE [*p=q]:   store i8 %37, i8* %flags, align 1, !dbg !603
LOAD [p=*q]:   %39 = load i8* %flags, align 1, !dbg !606
LOAD [p=*q]:   %40 = load i32* @outcnt, align 4, !dbg !606
STORE [*p=q]:   store i32 %41, i32* @outcnt, align 4, !dbg !606
STORE [*p=q]:   store i8 %39, i8* %43, align 1, !dbg !606
LOAD [p=*q]:   %44 = load i32* @outcnt, align 4, !dbg !606
LOAD [p=*q]:   %34 = load i8* %flags, align 1, !dbg !603
STORE [*p=q]:   store i8 %37, i8* %flags, align 1, !dbg !603
LOAD [p=*q]:   %39 = load i8* %flags, align 1, !dbg !606
LOAD [p=*q]:   %40 = load i32* @outcnt, align 4, !dbg !606
STORE [*p=q]:   store i32 %41, i32* @outcnt, align 4, !dbg !606
STORE [*p=q]:   store i8 %39, i8* %43, align 1, !dbg !606
LOAD [p=*q]:   %44 = load i32* @outcnt, align 4, !dbg !606
LOAD [p=*q]:   %39 = load i8* %flags, align 1, !dbg !606
LOAD [p=*q]:   %40 = load i32* @outcnt, align 4, !dbg !606
STORE [*p=q]:   store i32 %41, i32* @outcnt, align 4, !dbg !606
STORE [*p=q]:   store i8 %39, i8* %43, align 1, !dbg !606
LOAD [p=*q]:   %44 = load i32* @outcnt, align 4, !dbg !606
CALL [call func]:   call void @flush_outbuf(), !dbg !606
LOAD [p=*q]:   %48 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !608
CALL [call func]:   call void @flush_outbuf(), !dbg !606
LOAD [p=*q]:   %48 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !608
LOAD [p=*q]:   %48 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !608
LOAD [p=*q]:   %51 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !608
LOAD [p=*q]:   %51 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !608
LOAD [p=*q]:   %54 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !608
LOAD [p=*q]:   %54 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !608
STORE [*p=q]:   store i64 %57, i64* %stamp, align 8, !dbg !608
LOAD [p=*q]:   %58 = load i32* @outcnt, align 4, !dbg !609
STORE [*p=q]:   store i64 %57, i64* %stamp, align 8, !dbg !608
LOAD [p=*q]:   %58 = load i32* @outcnt, align 4, !dbg !609
STORE [*p=q]:   store i64 %57, i64* %stamp, align 8, !dbg !608
LOAD [p=*q]:   %58 = load i32* @outcnt, align 4, !dbg !609
LOAD [p=*q]:   %61 = load i64* %stamp, align 8, !dbg !612
LOAD [p=*q]:   %65 = load i32* @outcnt, align 4, !dbg !612
STORE [*p=q]:   store i32 %66, i32* @outcnt, align 4, !dbg !612
STORE [*p=q]:   store i8 %64, i8* %68, align 1, !dbg !612
LOAD [p=*q]:   %69 = load i64* %stamp, align 8, !dbg !612
LOAD [p=*q]:   %75 = load i32* @outcnt, align 4, !dbg !612
STORE [*p=q]:   store i32 %76, i32* @outcnt, align 4, !dbg !612
STORE [*p=q]:   store i8 %74, i8* %78, align 1, !dbg !612
LOAD [p=*q]:   %80 = load i64* %stamp, align 8, !dbg !614
LOAD [p=*q]:   %84 = load i32* @outcnt, align 4, !dbg !614
STORE [*p=q]:   store i32 %85, i32* @outcnt, align 4, !dbg !614
STORE [*p=q]:   store i8 %83, i8* %87, align 1, !dbg !614
LOAD [p=*q]:   %88 = load i32* @outcnt, align 4, !dbg !614
LOAD [p=*q]:   %61 = load i64* %stamp, align 8, !dbg !612
LOAD [p=*q]:   %65 = load i32* @outcnt, align 4, !dbg !612
STORE [*p=q]:   store i32 %66, i32* @outcnt, align 4, !dbg !612
STORE [*p=q]:   store i8 %64, i8* %68, align 1, !dbg !612
LOAD [p=*q]:   %69 = load i64* %stamp, align 8, !dbg !612
LOAD [p=*q]:   %75 = load i32* @outcnt, align 4, !dbg !612
STORE [*p=q]:   store i32 %76, i32* @outcnt, align 4, !dbg !612
STORE [*p=q]:   store i8 %74, i8* %78, align 1, !dbg !612
LOAD [p=*q]:   %107 = load i32* @outcnt, align 4, !dbg !619
LOAD [p=*q]:   %80 = load i64* %stamp, align 8, !dbg !614
LOAD [p=*q]:   %84 = load i32* @outcnt, align 4, !dbg !614
STORE [*p=q]:   store i32 %85, i32* @outcnt, align 4, !dbg !614
STORE [*p=q]:   store i8 %83, i8* %87, align 1, !dbg !614
LOAD [p=*q]:   %88 = load i32* @outcnt, align 4, !dbg !614
CALL [call func]:   call void @flush_outbuf(), !dbg !614
LOAD [p=*q]:   %92 = load i64* %stamp, align 8, !dbg !617
LOAD [p=*q]:   %98 = load i32* @outcnt, align 4, !dbg !617
STORE [*p=q]:   store i32 %99, i32* @outcnt, align 4, !dbg !617
STORE [*p=q]:   store i8 %97, i8* %101, align 1, !dbg !617
LOAD [p=*q]:   %102 = load i32* @outcnt, align 4, !dbg !617
CALL [call func]:   call void @flush_outbuf(), !dbg !614
LOAD [p=*q]:   %92 = load i64* %stamp, align 8, !dbg !617
LOAD [p=*q]:   %98 = load i32* @outcnt, align 4, !dbg !617
STORE [*p=q]:   store i32 %99, i32* @outcnt, align 4, !dbg !617
STORE [*p=q]:   store i8 %97, i8* %101, align 1, !dbg !617
LOAD [p=*q]:   %102 = load i32* @outcnt, align 4, !dbg !617
LOAD [p=*q]:   %92 = load i64* %stamp, align 8, !dbg !617
LOAD [p=*q]:   %98 = load i32* @outcnt, align 4, !dbg !617
STORE [*p=q]:   store i32 %99, i32* @outcnt, align 4, !dbg !617
STORE [*p=q]:   store i8 %97, i8* %101, align 1, !dbg !617
LOAD [p=*q]:   %102 = load i32* @outcnt, align 4, !dbg !617
CALL [call func]:   call void @flush_outbuf(), !dbg !617
CALL [call func]:   call void @flush_outbuf(), !dbg !617
LOAD [p=*q]:   %107 = load i32* @outcnt, align 4, !dbg !619
LOAD [p=*q]:   %107 = load i32* @outcnt, align 4, !dbg !619
LOAD [p=*q]:   %110 = load i64* %stamp, align 8, !dbg !621
LOAD [p=*q]:   %114 = load i32* @outcnt, align 4, !dbg !621
STORE [*p=q]:   store i32 %115, i32* @outcnt, align 4, !dbg !621
STORE [*p=q]:   store i8 %113, i8* %117, align 1, !dbg !621
LOAD [p=*q]:   %118 = load i64* %stamp, align 8, !dbg !621
LOAD [p=*q]:   %124 = load i32* @outcnt, align 4, !dbg !621
STORE [*p=q]:   store i32 %125, i32* @outcnt, align 4, !dbg !621
STORE [*p=q]:   store i8 %123, i8* %127, align 1, !dbg !621
LOAD [p=*q]:   %129 = load i64* %stamp, align 8, !dbg !623
LOAD [p=*q]:   %133 = load i32* @outcnt, align 4, !dbg !623
STORE [*p=q]:   store i32 %134, i32* @outcnt, align 4, !dbg !623
STORE [*p=q]:   store i8 %132, i8* %136, align 1, !dbg !623
LOAD [p=*q]:   %137 = load i32* @outcnt, align 4, !dbg !623
LOAD [p=*q]:   %110 = load i64* %stamp, align 8, !dbg !621
LOAD [p=*q]:   %114 = load i32* @outcnt, align 4, !dbg !621
STORE [*p=q]:   store i32 %115, i32* @outcnt, align 4, !dbg !621
STORE [*p=q]:   store i8 %113, i8* %117, align 1, !dbg !621
LOAD [p=*q]:   %118 = load i64* %stamp, align 8, !dbg !621
LOAD [p=*q]:   %124 = load i32* @outcnt, align 4, !dbg !621
STORE [*p=q]:   store i32 %125, i32* @outcnt, align 4, !dbg !621
STORE [*p=q]:   store i8 %123, i8* %127, align 1, !dbg !621
CALL [call func]:   %156 = call i64 @updcrc(i8* null, i32 0), !dbg !628
STORE [*p=q]:   store i64 %156, i64* @crc, align 8, !dbg !628
LOAD [p=*q]:   %157 = load i32* %2, align 4, !dbg !629
CALL [call func]:   call void @bi_init(i32 %157), !dbg !629
CALL [call func]:   call void @ct_init(i16* %attr, i32* @method), !dbg !630
LOAD [p=*q]:   %158 = load i32* @level, align 4, !dbg !631
CALL [call func]:   call void @lm_init(i32 %158, i16* %deflate_flags), !dbg !631
LOAD [p=*q]:   %159 = load i16* %deflate_flags, align 2, !dbg !632
LOAD [p=*q]:   %161 = load i32* @outcnt, align 4, !dbg !632
STORE [*p=q]:   store i32 %162, i32* @outcnt, align 4, !dbg !632
STORE [*p=q]:   store i8 %160, i8* %164, align 1, !dbg !632
LOAD [p=*q]:   %165 = load i32* @outcnt, align 4, !dbg !632
LOAD [p=*q]:   %129 = load i64* %stamp, align 8, !dbg !623
LOAD [p=*q]:   %133 = load i32* @outcnt, align 4, !dbg !623
STORE [*p=q]:   store i32 %134, i32* @outcnt, align 4, !dbg !623
STORE [*p=q]:   store i8 %132, i8* %136, align 1, !dbg !623
LOAD [p=*q]:   %137 = load i32* @outcnt, align 4, !dbg !623
CALL [call func]:   call void @flush_outbuf(), !dbg !623
LOAD [p=*q]:   %141 = load i64* %stamp, align 8, !dbg !626
LOAD [p=*q]:   %147 = load i32* @outcnt, align 4, !dbg !626
STORE [*p=q]:   store i32 %148, i32* @outcnt, align 4, !dbg !626
STORE [*p=q]:   store i8 %146, i8* %150, align 1, !dbg !626
LOAD [p=*q]:   %151 = load i32* @outcnt, align 4, !dbg !626
CALL [call func]:   call void @flush_outbuf(), !dbg !623
LOAD [p=*q]:   %141 = load i64* %stamp, align 8, !dbg !626
LOAD [p=*q]:   %147 = load i32* @outcnt, align 4, !dbg !626
STORE [*p=q]:   store i32 %148, i32* @outcnt, align 4, !dbg !626
STORE [*p=q]:   store i8 %146, i8* %150, align 1, !dbg !626
LOAD [p=*q]:   %151 = load i32* @outcnt, align 4, !dbg !626
LOAD [p=*q]:   %141 = load i64* %stamp, align 8, !dbg !626
LOAD [p=*q]:   %147 = load i32* @outcnt, align 4, !dbg !626
STORE [*p=q]:   store i32 %148, i32* @outcnt, align 4, !dbg !626
STORE [*p=q]:   store i8 %146, i8* %150, align 1, !dbg !626
LOAD [p=*q]:   %151 = load i32* @outcnt, align 4, !dbg !626
CALL [call func]:   call void @flush_outbuf(), !dbg !626
CALL [call func]:   call void @flush_outbuf(), !dbg !626
CALL [call func]:   %156 = call i64 @updcrc(i8* null, i32 0), !dbg !628
STORE [*p=q]:   store i64 %156, i64* @crc, align 8, !dbg !628
LOAD [p=*q]:   %157 = load i32* %2, align 4, !dbg !629
CALL [call func]:   call void @bi_init(i32 %157), !dbg !629
CALL [call func]:   call void @ct_init(i16* %attr, i32* @method), !dbg !630
LOAD [p=*q]:   %158 = load i32* @level, align 4, !dbg !631
CALL [call func]:   call void @lm_init(i32 %158, i16* %deflate_flags), !dbg !631
LOAD [p=*q]:   %159 = load i16* %deflate_flags, align 2, !dbg !632
LOAD [p=*q]:   %161 = load i32* @outcnt, align 4, !dbg !632
STORE [*p=q]:   store i32 %162, i32* @outcnt, align 4, !dbg !632
STORE [*p=q]:   store i8 %160, i8* %164, align 1, !dbg !632
LOAD [p=*q]:   %165 = load i32* @outcnt, align 4, !dbg !632
CALL [call func]:   %156 = call i64 @updcrc(i8* null, i32 0), !dbg !628
STORE [*p=q]:   store i64 %156, i64* @crc, align 8, !dbg !628
LOAD [p=*q]:   %157 = load i32* %2, align 4, !dbg !629
CALL [call func]:   call void @bi_init(i32 %157), !dbg !629
CALL [call func]:   call void @ct_init(i16* %attr, i32* @method), !dbg !630
LOAD [p=*q]:   %158 = load i32* @level, align 4, !dbg !631
CALL [call func]:   call void @lm_init(i32 %158, i16* %deflate_flags), !dbg !631
LOAD [p=*q]:   %159 = load i16* %deflate_flags, align 2, !dbg !632
LOAD [p=*q]:   %161 = load i32* @outcnt, align 4, !dbg !632
STORE [*p=q]:   store i32 %162, i32* @outcnt, align 4, !dbg !632
STORE [*p=q]:   store i8 %160, i8* %164, align 1, !dbg !632
LOAD [p=*q]:   %165 = load i32* @outcnt, align 4, !dbg !632
CALL [call func]:   call void @flush_outbuf(), !dbg !632
LOAD [p=*q]:   %169 = load i32* @outcnt, align 4, !dbg !634
STORE [*p=q]:   store i32 %170, i32* @outcnt, align 4, !dbg !634
STORE [*p=q]:   store i8 3, i8* %172, align 1, !dbg !634
LOAD [p=*q]:   %173 = load i32* @outcnt, align 4, !dbg !634
CALL [call func]:   call void @flush_outbuf(), !dbg !632
LOAD [p=*q]:   %169 = load i32* @outcnt, align 4, !dbg !634
STORE [*p=q]:   store i32 %170, i32* @outcnt, align 4, !dbg !634
STORE [*p=q]:   store i8 3, i8* %172, align 1, !dbg !634
LOAD [p=*q]:   %173 = load i32* @outcnt, align 4, !dbg !634
LOAD [p=*q]:   %169 = load i32* @outcnt, align 4, !dbg !634
STORE [*p=q]:   store i32 %170, i32* @outcnt, align 4, !dbg !634
STORE [*p=q]:   store i8 3, i8* %172, align 1, !dbg !634
LOAD [p=*q]:   %173 = load i32* @outcnt, align 4, !dbg !634
CALL [call func]:   call void @flush_outbuf(), !dbg !634
LOAD [p=*q]:   %177 = load i32* @save_orig_name, align 4, !dbg !636
CALL [call func]:   call void @flush_outbuf(), !dbg !634
LOAD [p=*q]:   %177 = load i32* @save_orig_name, align 4, !dbg !636
LOAD [p=*q]:   %177 = load i32* @save_orig_name, align 4, !dbg !636
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !637), !dbg !639
CALL [call func]:   %180 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)) #4, !dbg !640
STORE [*p=q]:   store i8* %180, i8** %p, align 8, !dbg !640
LOAD [p=*q]:   %199 = load i32* @outcnt, align 4, !dbg !647
STORE [*p=q]:   store i64 %200, i64* @header_bytes, align 8, !dbg !647
CALL [call func]:   %201 = call i64 @deflate(), !dbg !648
LOAD [p=*q]:   %202 = load i64* @ifile_size, align 8, !dbg !649
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !637), !dbg !639
CALL [call func]:   %180 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)) #4, !dbg !640
STORE [*p=q]:   store i8* %180, i8** %p, align 8, !dbg !640
LOAD [p=*q]:   %182 = load i8** %p, align 8, !dbg !642
LOAD [p=*q]:   %183 = load i8* %182, !dbg !642
LOAD [p=*q]:   %184 = load i32* @outcnt, align 4, !dbg !642
STORE [*p=q]:   store i32 %185, i32* @outcnt, align 4, !dbg !642
STORE [*p=q]:   store i8 %183, i8* %187, align 1, !dbg !642
LOAD [p=*q]:   %188 = load i32* @outcnt, align 4, !dbg !642
LOAD [p=*q]:   %182 = load i8** %p, align 8, !dbg !642
LOAD [p=*q]:   %183 = load i8* %182, !dbg !642
LOAD [p=*q]:   %184 = load i32* @outcnt, align 4, !dbg !642
STORE [*p=q]:   store i32 %185, i32* @outcnt, align 4, !dbg !642
STORE [*p=q]:   store i8 %183, i8* %187, align 1, !dbg !642
LOAD [p=*q]:   %188 = load i32* @outcnt, align 4, !dbg !642
CALL [call func]:   call void @flush_outbuf(), !dbg !642
CALL [call func]:   call void @flush_outbuf(), !dbg !642
LOAD [p=*q]:   %193 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %194, i8** %p, align 8, !dbg !645
LOAD [p=*q]:   %195 = load i8* %193, !dbg !645
LOAD [p=*q]:   %193 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %194, i8** %p, align 8, !dbg !645
LOAD [p=*q]:   %195 = load i8* %193, !dbg !645
LOAD [p=*q]:   %182 = load i8** %p, align 8, !dbg !642
LOAD [p=*q]:   %183 = load i8* %182, !dbg !642
LOAD [p=*q]:   %184 = load i32* @outcnt, align 4, !dbg !642
STORE [*p=q]:   store i32 %185, i32* @outcnt, align 4, !dbg !642
STORE [*p=q]:   store i8 %183, i8* %187, align 1, !dbg !642
LOAD [p=*q]:   %188 = load i32* @outcnt, align 4, !dbg !642
LOAD [p=*q]:   %199 = load i32* @outcnt, align 4, !dbg !647
STORE [*p=q]:   store i64 %200, i64* @header_bytes, align 8, !dbg !647
CALL [call func]:   %201 = call i64 @deflate(), !dbg !648
LOAD [p=*q]:   %202 = load i64* @ifile_size, align 8, !dbg !649
LOAD [p=*q]:   %199 = load i32* @outcnt, align 4, !dbg !647
STORE [*p=q]:   store i64 %200, i64* @header_bytes, align 8, !dbg !647
CALL [call func]:   %201 = call i64 @deflate(), !dbg !648
LOAD [p=*q]:   %202 = load i64* @ifile_size, align 8, !dbg !649
LOAD [p=*q]:   %205 = load i64* @bytes_in, align 8, !dbg !649
LOAD [p=*q]:   %206 = load i64* @ifile_size, align 8, !dbg !649
LOAD [p=*q]:   %213 = load i32* @outcnt, align 4, !dbg !653
LOAD [p=*q]:   %205 = load i64* @bytes_in, align 8, !dbg !649
LOAD [p=*q]:   %206 = load i64* @ifile_size, align 8, !dbg !649
LOAD [p=*q]:   %209 = load %struct._IO_FILE** @stderr, align 8, !dbg !650
LOAD [p=*q]:   %210 = load i8** @program_name, align 8, !dbg !650
CALL [call func]:   %211 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %209, i8* getelementptr inbounds ([41 x i8]* @.str1234, i32 0, i32 0), i8* %210, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !650
LOAD [p=*q]:   %213 = load i32* @outcnt, align 4, !dbg !653
LOAD [p=*q]:   %209 = load %struct._IO_FILE** @stderr, align 8, !dbg !650
LOAD [p=*q]:   %210 = load i8** @program_name, align 8, !dbg !650
CALL [call func]:   %211 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %209, i8* getelementptr inbounds ([41 x i8]* @.str1234, i32 0, i32 0), i8* %210, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !650
LOAD [p=*q]:   %213 = load i32* @outcnt, align 4, !dbg !653
LOAD [p=*q]:   %213 = load i32* @outcnt, align 4, !dbg !653
LOAD [p=*q]:   %216 = load i64* @crc, align 8, !dbg !656
LOAD [p=*q]:   %220 = load i32* @outcnt, align 4, !dbg !656
STORE [*p=q]:   store i32 %221, i32* @outcnt, align 4, !dbg !656
STORE [*p=q]:   store i8 %219, i8* %223, align 1, !dbg !656
LOAD [p=*q]:   %224 = load i64* @crc, align 8, !dbg !656
LOAD [p=*q]:   %230 = load i32* @outcnt, align 4, !dbg !656
STORE [*p=q]:   store i32 %231, i32* @outcnt, align 4, !dbg !656
STORE [*p=q]:   store i8 %229, i8* %233, align 1, !dbg !656
LOAD [p=*q]:   %235 = load i64* @crc, align 8, !dbg !658
LOAD [p=*q]:   %239 = load i32* @outcnt, align 4, !dbg !658
STORE [*p=q]:   store i32 %240, i32* @outcnt, align 4, !dbg !658
STORE [*p=q]:   store i8 %238, i8* %242, align 1, !dbg !658
LOAD [p=*q]:   %243 = load i32* @outcnt, align 4, !dbg !658
LOAD [p=*q]:   %216 = load i64* @crc, align 8, !dbg !656
LOAD [p=*q]:   %220 = load i32* @outcnt, align 4, !dbg !656
STORE [*p=q]:   store i32 %221, i32* @outcnt, align 4, !dbg !656
STORE [*p=q]:   store i8 %219, i8* %223, align 1, !dbg !656
LOAD [p=*q]:   %224 = load i64* @crc, align 8, !dbg !656
LOAD [p=*q]:   %230 = load i32* @outcnt, align 4, !dbg !656
STORE [*p=q]:   store i32 %231, i32* @outcnt, align 4, !dbg !656
STORE [*p=q]:   store i8 %229, i8* %233, align 1, !dbg !656
LOAD [p=*q]:   %262 = load i32* @outcnt, align 4, !dbg !663
LOAD [p=*q]:   %235 = load i64* @crc, align 8, !dbg !658
LOAD [p=*q]:   %239 = load i32* @outcnt, align 4, !dbg !658
STORE [*p=q]:   store i32 %240, i32* @outcnt, align 4, !dbg !658
STORE [*p=q]:   store i8 %238, i8* %242, align 1, !dbg !658
LOAD [p=*q]:   %243 = load i32* @outcnt, align 4, !dbg !658
CALL [call func]:   call void @flush_outbuf(), !dbg !658
LOAD [p=*q]:   %247 = load i64* @crc, align 8, !dbg !661
LOAD [p=*q]:   %253 = load i32* @outcnt, align 4, !dbg !661
STORE [*p=q]:   store i32 %254, i32* @outcnt, align 4, !dbg !661
STORE [*p=q]:   store i8 %252, i8* %256, align 1, !dbg !661
LOAD [p=*q]:   %257 = load i32* @outcnt, align 4, !dbg !661
CALL [call func]:   call void @flush_outbuf(), !dbg !658
LOAD [p=*q]:   %247 = load i64* @crc, align 8, !dbg !661
LOAD [p=*q]:   %253 = load i32* @outcnt, align 4, !dbg !661
STORE [*p=q]:   store i32 %254, i32* @outcnt, align 4, !dbg !661
STORE [*p=q]:   store i8 %252, i8* %256, align 1, !dbg !661
LOAD [p=*q]:   %257 = load i32* @outcnt, align 4, !dbg !661
LOAD [p=*q]:   %247 = load i64* @crc, align 8, !dbg !661
LOAD [p=*q]:   %253 = load i32* @outcnt, align 4, !dbg !661
STORE [*p=q]:   store i32 %254, i32* @outcnt, align 4, !dbg !661
STORE [*p=q]:   store i8 %252, i8* %256, align 1, !dbg !661
LOAD [p=*q]:   %257 = load i32* @outcnt, align 4, !dbg !661
CALL [call func]:   call void @flush_outbuf(), !dbg !661
CALL [call func]:   call void @flush_outbuf(), !dbg !661
LOAD [p=*q]:   %262 = load i32* @outcnt, align 4, !dbg !663
LOAD [p=*q]:   %262 = load i32* @outcnt, align 4, !dbg !663
LOAD [p=*q]:   %265 = load i64* @crc, align 8, !dbg !665
LOAD [p=*q]:   %269 = load i32* @outcnt, align 4, !dbg !665
STORE [*p=q]:   store i32 %270, i32* @outcnt, align 4, !dbg !665
STORE [*p=q]:   store i8 %268, i8* %272, align 1, !dbg !665
LOAD [p=*q]:   %273 = load i64* @crc, align 8, !dbg !665
LOAD [p=*q]:   %279 = load i32* @outcnt, align 4, !dbg !665
STORE [*p=q]:   store i32 %280, i32* @outcnt, align 4, !dbg !665
STORE [*p=q]:   store i8 %278, i8* %282, align 1, !dbg !665
LOAD [p=*q]:   %284 = load i64* @crc, align 8, !dbg !667
LOAD [p=*q]:   %288 = load i32* @outcnt, align 4, !dbg !667
STORE [*p=q]:   store i32 %289, i32* @outcnt, align 4, !dbg !667
STORE [*p=q]:   store i8 %287, i8* %291, align 1, !dbg !667
LOAD [p=*q]:   %292 = load i32* @outcnt, align 4, !dbg !667
LOAD [p=*q]:   %265 = load i64* @crc, align 8, !dbg !665
LOAD [p=*q]:   %269 = load i32* @outcnt, align 4, !dbg !665
STORE [*p=q]:   store i32 %270, i32* @outcnt, align 4, !dbg !665
STORE [*p=q]:   store i8 %268, i8* %272, align 1, !dbg !665
LOAD [p=*q]:   %273 = load i64* @crc, align 8, !dbg !665
LOAD [p=*q]:   %279 = load i32* @outcnt, align 4, !dbg !665
STORE [*p=q]:   store i32 %280, i32* @outcnt, align 4, !dbg !665
STORE [*p=q]:   store i8 %278, i8* %282, align 1, !dbg !665
LOAD [p=*q]:   %311 = load i32* @outcnt, align 4, !dbg !672
LOAD [p=*q]:   %284 = load i64* @crc, align 8, !dbg !667
LOAD [p=*q]:   %288 = load i32* @outcnt, align 4, !dbg !667
STORE [*p=q]:   store i32 %289, i32* @outcnt, align 4, !dbg !667
STORE [*p=q]:   store i8 %287, i8* %291, align 1, !dbg !667
LOAD [p=*q]:   %292 = load i32* @outcnt, align 4, !dbg !667
CALL [call func]:   call void @flush_outbuf(), !dbg !667
LOAD [p=*q]:   %296 = load i64* @crc, align 8, !dbg !670
LOAD [p=*q]:   %302 = load i32* @outcnt, align 4, !dbg !670
STORE [*p=q]:   store i32 %303, i32* @outcnt, align 4, !dbg !670
STORE [*p=q]:   store i8 %301, i8* %305, align 1, !dbg !670
LOAD [p=*q]:   %306 = load i32* @outcnt, align 4, !dbg !670
CALL [call func]:   call void @flush_outbuf(), !dbg !667
LOAD [p=*q]:   %296 = load i64* @crc, align 8, !dbg !670
LOAD [p=*q]:   %302 = load i32* @outcnt, align 4, !dbg !670
STORE [*p=q]:   store i32 %303, i32* @outcnt, align 4, !dbg !670
STORE [*p=q]:   store i8 %301, i8* %305, align 1, !dbg !670
LOAD [p=*q]:   %306 = load i32* @outcnt, align 4, !dbg !670
LOAD [p=*q]:   %296 = load i64* @crc, align 8, !dbg !670
LOAD [p=*q]:   %302 = load i32* @outcnt, align 4, !dbg !670
STORE [*p=q]:   store i32 %303, i32* @outcnt, align 4, !dbg !670
STORE [*p=q]:   store i8 %301, i8* %305, align 1, !dbg !670
LOAD [p=*q]:   %306 = load i32* @outcnt, align 4, !dbg !670
CALL [call func]:   call void @flush_outbuf(), !dbg !670
CALL [call func]:   call void @flush_outbuf(), !dbg !670
LOAD [p=*q]:   %311 = load i32* @outcnt, align 4, !dbg !672
LOAD [p=*q]:   %311 = load i32* @outcnt, align 4, !dbg !672
LOAD [p=*q]:   %314 = load i64* @bytes_in, align 8, !dbg !675
LOAD [p=*q]:   %318 = load i32* @outcnt, align 4, !dbg !675
STORE [*p=q]:   store i32 %319, i32* @outcnt, align 4, !dbg !675
STORE [*p=q]:   store i8 %317, i8* %321, align 1, !dbg !675
LOAD [p=*q]:   %322 = load i64* @bytes_in, align 8, !dbg !675
LOAD [p=*q]:   %328 = load i32* @outcnt, align 4, !dbg !675
STORE [*p=q]:   store i32 %329, i32* @outcnt, align 4, !dbg !675
STORE [*p=q]:   store i8 %327, i8* %331, align 1, !dbg !675
LOAD [p=*q]:   %333 = load i64* @bytes_in, align 8, !dbg !677
LOAD [p=*q]:   %337 = load i32* @outcnt, align 4, !dbg !677
STORE [*p=q]:   store i32 %338, i32* @outcnt, align 4, !dbg !677
STORE [*p=q]:   store i8 %336, i8* %340, align 1, !dbg !677
LOAD [p=*q]:   %341 = load i32* @outcnt, align 4, !dbg !677
LOAD [p=*q]:   %314 = load i64* @bytes_in, align 8, !dbg !675
LOAD [p=*q]:   %318 = load i32* @outcnt, align 4, !dbg !675
STORE [*p=q]:   store i32 %319, i32* @outcnt, align 4, !dbg !675
STORE [*p=q]:   store i8 %317, i8* %321, align 1, !dbg !675
LOAD [p=*q]:   %322 = load i64* @bytes_in, align 8, !dbg !675
LOAD [p=*q]:   %328 = load i32* @outcnt, align 4, !dbg !675
STORE [*p=q]:   store i32 %329, i32* @outcnt, align 4, !dbg !675
STORE [*p=q]:   store i8 %327, i8* %331, align 1, !dbg !675
LOAD [p=*q]:   %360 = load i32* @outcnt, align 4, !dbg !682
LOAD [p=*q]:   %333 = load i64* @bytes_in, align 8, !dbg !677
LOAD [p=*q]:   %337 = load i32* @outcnt, align 4, !dbg !677
STORE [*p=q]:   store i32 %338, i32* @outcnt, align 4, !dbg !677
STORE [*p=q]:   store i8 %336, i8* %340, align 1, !dbg !677
LOAD [p=*q]:   %341 = load i32* @outcnt, align 4, !dbg !677
CALL [call func]:   call void @flush_outbuf(), !dbg !677
LOAD [p=*q]:   %345 = load i64* @bytes_in, align 8, !dbg !680
LOAD [p=*q]:   %351 = load i32* @outcnt, align 4, !dbg !680
STORE [*p=q]:   store i32 %352, i32* @outcnt, align 4, !dbg !680
STORE [*p=q]:   store i8 %350, i8* %354, align 1, !dbg !680
LOAD [p=*q]:   %355 = load i32* @outcnt, align 4, !dbg !680
CALL [call func]:   call void @flush_outbuf(), !dbg !677
LOAD [p=*q]:   %345 = load i64* @bytes_in, align 8, !dbg !680
LOAD [p=*q]:   %351 = load i32* @outcnt, align 4, !dbg !680
STORE [*p=q]:   store i32 %352, i32* @outcnt, align 4, !dbg !680
STORE [*p=q]:   store i8 %350, i8* %354, align 1, !dbg !680
LOAD [p=*q]:   %355 = load i32* @outcnt, align 4, !dbg !680
LOAD [p=*q]:   %345 = load i64* @bytes_in, align 8, !dbg !680
LOAD [p=*q]:   %351 = load i32* @outcnt, align 4, !dbg !680
STORE [*p=q]:   store i32 %352, i32* @outcnt, align 4, !dbg !680
STORE [*p=q]:   store i8 %350, i8* %354, align 1, !dbg !680
LOAD [p=*q]:   %355 = load i32* @outcnt, align 4, !dbg !680
CALL [call func]:   call void @flush_outbuf(), !dbg !680
CALL [call func]:   call void @flush_outbuf(), !dbg !680
LOAD [p=*q]:   %360 = load i32* @outcnt, align 4, !dbg !682
LOAD [p=*q]:   %360 = load i32* @outcnt, align 4, !dbg !682
LOAD [p=*q]:   %363 = load i64* @bytes_in, align 8, !dbg !684
LOAD [p=*q]:   %367 = load i32* @outcnt, align 4, !dbg !684
STORE [*p=q]:   store i32 %368, i32* @outcnt, align 4, !dbg !684
STORE [*p=q]:   store i8 %366, i8* %370, align 1, !dbg !684
LOAD [p=*q]:   %371 = load i64* @bytes_in, align 8, !dbg !684
LOAD [p=*q]:   %377 = load i32* @outcnt, align 4, !dbg !684
STORE [*p=q]:   store i32 %378, i32* @outcnt, align 4, !dbg !684
STORE [*p=q]:   store i8 %376, i8* %380, align 1, !dbg !684
LOAD [p=*q]:   %382 = load i64* @bytes_in, align 8, !dbg !686
LOAD [p=*q]:   %386 = load i32* @outcnt, align 4, !dbg !686
STORE [*p=q]:   store i32 %387, i32* @outcnt, align 4, !dbg !686
STORE [*p=q]:   store i8 %385, i8* %389, align 1, !dbg !686
LOAD [p=*q]:   %390 = load i32* @outcnt, align 4, !dbg !686
LOAD [p=*q]:   %363 = load i64* @bytes_in, align 8, !dbg !684
LOAD [p=*q]:   %367 = load i32* @outcnt, align 4, !dbg !684
STORE [*p=q]:   store i32 %368, i32* @outcnt, align 4, !dbg !684
STORE [*p=q]:   store i8 %366, i8* %370, align 1, !dbg !684
LOAD [p=*q]:   %371 = load i64* @bytes_in, align 8, !dbg !684
LOAD [p=*q]:   %377 = load i32* @outcnt, align 4, !dbg !684
STORE [*p=q]:   store i32 %378, i32* @outcnt, align 4, !dbg !684
STORE [*p=q]:   store i8 %376, i8* %380, align 1, !dbg !684
LOAD [p=*q]:   %409 = load i64* @header_bytes, align 8, !dbg !691
STORE [*p=q]:   store i64 %410, i64* @header_bytes, align 8, !dbg !691
CALL [call func]:   call void @flush_outbuf(), !dbg !692
Analyzing return instruction for zip
	i32 0
LOAD [p=*q]:   %382 = load i64* @bytes_in, align 8, !dbg !686
LOAD [p=*q]:   %386 = load i32* @outcnt, align 4, !dbg !686
STORE [*p=q]:   store i32 %387, i32* @outcnt, align 4, !dbg !686
STORE [*p=q]:   store i8 %385, i8* %389, align 1, !dbg !686
LOAD [p=*q]:   %390 = load i32* @outcnt, align 4, !dbg !686
CALL [call func]:   call void @flush_outbuf(), !dbg !686
LOAD [p=*q]:   %394 = load i64* @bytes_in, align 8, !dbg !689
LOAD [p=*q]:   %400 = load i32* @outcnt, align 4, !dbg !689
STORE [*p=q]:   store i32 %401, i32* @outcnt, align 4, !dbg !689
STORE [*p=q]:   store i8 %399, i8* %403, align 1, !dbg !689
LOAD [p=*q]:   %404 = load i32* @outcnt, align 4, !dbg !689
CALL [call func]:   call void @flush_outbuf(), !dbg !686
LOAD [p=*q]:   %394 = load i64* @bytes_in, align 8, !dbg !689
LOAD [p=*q]:   %400 = load i32* @outcnt, align 4, !dbg !689
STORE [*p=q]:   store i32 %401, i32* @outcnt, align 4, !dbg !689
STORE [*p=q]:   store i8 %399, i8* %403, align 1, !dbg !689
LOAD [p=*q]:   %404 = load i32* @outcnt, align 4, !dbg !689
LOAD [p=*q]:   %394 = load i64* @bytes_in, align 8, !dbg !689
LOAD [p=*q]:   %400 = load i32* @outcnt, align 4, !dbg !689
STORE [*p=q]:   store i32 %401, i32* @outcnt, align 4, !dbg !689
STORE [*p=q]:   store i8 %399, i8* %403, align 1, !dbg !689
LOAD [p=*q]:   %404 = load i32* @outcnt, align 4, !dbg !689
CALL [call func]:   call void @flush_outbuf(), !dbg !689
CALL [call func]:   call void @flush_outbuf(), !dbg !689
LOAD [p=*q]:   %409 = load i64* @header_bytes, align 8, !dbg !691
STORE [*p=q]:   store i64 %410, i64* @header_bytes, align 8, !dbg !691
CALL [call func]:   call void @flush_outbuf(), !dbg !692
Analyzing return instruction for zip
	i32 0
LOAD [p=*q]:   %409 = load i64* @header_bytes, align 8, !dbg !691
STORE [*p=q]:   store i64 %410, i64* @header_bytes, align 8, !dbg !691
CALL [call func]:   call void @flush_outbuf(), !dbg !692
Analyzing return instruction for zip
	i32 0
[Processing][Function][fprint_off]
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
Analyzing return instruction for fprint_off
No return value for: fprint_off
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
Analyzing return instruction for fprint_off
No return value for: fprint_off
[Processing][Function][display_ratio]
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
Analyzing return instruction for display_ratio
No return value for: display_ratio
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
Analyzing return instruction for display_ratio
No return value for: display_ratio
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
Analyzing return instruction for display_ratio
No return value for: display_ratio
[Processing][Function][warning]
STORE [*p=q]:   store i8* %m, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load i32* @quiet, align 4, !dbg !576
LOAD [p=*q]:   %10 = load i32* @exit_code, align 4, !dbg !576
LOAD [p=*q]:   %5 = load %struct._IO_FILE** @stderr, align 8, !dbg !576
LOAD [p=*q]:   %6 = load i8** @program_name, align 8, !dbg !576
LOAD [p=*q]:   %7 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %8 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([21 x i8]* @.str4186, i32 0, i32 0), i8* %6, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %7), !dbg !576
LOAD [p=*q]:   %5 = load %struct._IO_FILE** @stderr, align 8, !dbg !576
LOAD [p=*q]:   %6 = load i8** @program_name, align 8, !dbg !576
LOAD [p=*q]:   %7 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %8 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([21 x i8]* @.str4186, i32 0, i32 0), i8* %6, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %7), !dbg !576
LOAD [p=*q]:   %10 = load i32* @exit_code, align 4, !dbg !576
LOAD [p=*q]:   %10 = load i32* @exit_code, align 4, !dbg !576
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !576
Analyzing return instruction for warning
No return value for: warning
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !576
Analyzing return instruction for warning
No return value for: warning
Analyzing return instruction for warning
No return value for: warning
[Processing][Function][xalloc_die]
LOAD [p=*q]:   %1 = load %struct._IO_FILE** @stderr, align 8, !dbg !574
LOAD [p=*q]:   %2 = load i8** @program_name, align 8, !dbg !574
CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([23 x i8]* @.str3185, i32 0, i32 0), i8* %2), !dbg !574
CALL [call func]:   call void @abort_gzip() #7, !dbg !576
Analyzing return instruction for xalloc_die
No return value for: xalloc_die
[Processing][Function][gzip_error]
STORE [*p=q]:   store i8* %m, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !576
LOAD [p=*q]:   %3 = load i8** @program_name, align 8, !dbg !576
LOAD [p=*q]:   %4 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
CALL [call func]:   call void @abort_gzip() #7, !dbg !578
Analyzing return instruction for gzip_error
No return value for: gzip_error
[Processing][Function][add_envopt]
STORE [*p=q]:   store i32* %argcp, i32** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32** %2}, metadata !574), !dbg !575
STORE [*p=q]:   store i8*** %argvp, i8**** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8**** %3}, metadata !576), !dbg !578
STORE [*p=q]:   store i8* %envvar_name, i8** %4, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %4}, metadata !579), !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !581), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %oargv}, metadata !584), !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %nargv}, metadata !586), !dbg !587
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %oargc}, metadata !588), !dbg !589
LOAD [p=*q]:   %5 = load i32** %2, align 8, !dbg !590
LOAD [p=*q]:   %6 = load i32* %5, !dbg !590
STORE [*p=q]:   store i32 %6, i32* %oargc, align 4, !dbg !590
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nargc}, metadata !591), !dbg !592
STORE [*p=q]:   store i32 0, i32* %nargc, align 4, !dbg !593
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %env_val}, metadata !594), !dbg !595
LOAD [p=*q]:   %7 = load i8** %4, align 8, !dbg !596
CALL [call func]:   %8 = call i8* @getenv(i8* %7) #3, !dbg !596
STORE [*p=q]:   store i8* %8, i8** %env_val, align 8, !dbg !596
LOAD [p=*q]:   %9 = load i8** %env_val, align 8, !dbg !597
STORE [*p=q]:   store i8* null, i8** %1, !dbg !598
LOAD [p=*q]:   %13 = load i8** %env_val, align 8, !dbg !599
CALL [call func]:   %14 = call noalias i8* @xstrdup(i8* %13), !dbg !599
STORE [*p=q]:   store i8* %14, i8** %env_val, align 8, !dbg !599
LOAD [p=*q]:   %15 = load i8** %env_val, align 8, !dbg !600
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !600
STORE [*p=q]:   store i8* null, i8** %1, !dbg !598
LOAD [p=*q]:   %112 = load i8** %1, !dbg !634
Analyzing return instruction for add_envopt
	  %112 = load i8** %1, !dbg !634
LOAD [p=*q]:   %13 = load i8** %env_val, align 8, !dbg !599
CALL [call func]:   %14 = call noalias i8* @xstrdup(i8* %13), !dbg !599
STORE [*p=q]:   store i8* %14, i8** %env_val, align 8, !dbg !599
LOAD [p=*q]:   %15 = load i8** %env_val, align 8, !dbg !600
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !600
LOAD [p=*q]:   %17 = load i8** %p, align 8, !dbg !600
LOAD [p=*q]:   %18 = load i8* %17, !dbg !600
LOAD [p=*q]:   %17 = load i8** %p, align 8, !dbg !600
LOAD [p=*q]:   %18 = load i8* %17, !dbg !600
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !602
CALL [call func]:   %22 = call i64 @strspn(i8* %21, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !602
LOAD [p=*q]:   %23 = load i8** %p, align 8, !dbg !602
STORE [*p=q]:   store i8* %24, i8** %p, align 8, !dbg !602
LOAD [p=*q]:   %25 = load i8** %p, align 8, !dbg !604
LOAD [p=*q]:   %26 = load i8* %25, !dbg !604
LOAD [p=*q]:   %46 = load i32* %nargc, align 4, !dbg !611
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !602
CALL [call func]:   %22 = call i64 @strspn(i8* %21, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !602
LOAD [p=*q]:   %23 = load i8** %p, align 8, !dbg !602
STORE [*p=q]:   store i8* %24, i8** %p, align 8, !dbg !602
LOAD [p=*q]:   %25 = load i8** %p, align 8, !dbg !604
LOAD [p=*q]:   %26 = load i8* %25, !dbg !604
LOAD [p=*q]:   %31 = load i8** %p, align 8, !dbg !606
CALL [call func]:   %32 = call i64 @strcspn(i8* %31, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !606
LOAD [p=*q]:   %33 = load i8** %p, align 8, !dbg !606
STORE [*p=q]:   store i8* %34, i8** %p, align 8, !dbg !606
LOAD [p=*q]:   %35 = load i8** %p, align 8, !dbg !607
LOAD [p=*q]:   %36 = load i8* %35, !dbg !607
LOAD [p=*q]:   %46 = load i32* %nargc, align 4, !dbg !611
LOAD [p=*q]:   %31 = load i8** %p, align 8, !dbg !606
CALL [call func]:   %32 = call i64 @strcspn(i8* %31, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !606
LOAD [p=*q]:   %33 = load i8** %p, align 8, !dbg !606
STORE [*p=q]:   store i8* %34, i8** %p, align 8, !dbg !606
LOAD [p=*q]:   %35 = load i8** %p, align 8, !dbg !607
LOAD [p=*q]:   %36 = load i8* %35, !dbg !607
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !608
STORE [*p=q]:   store i8* %40, i8** %p, align 8, !dbg !608
STORE [*p=q]:   store i8 0, i8* %39, !dbg !608
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !608
STORE [*p=q]:   store i8* %40, i8** %p, align 8, !dbg !608
STORE [*p=q]:   store i8 0, i8* %39, !dbg !608
LOAD [p=*q]:   %43 = load i32* %nargc, align 4, !dbg !610
STORE [*p=q]:   store i32 %44, i32* %nargc, align 4, !dbg !610
LOAD [p=*q]:   %43 = load i32* %nargc, align 4, !dbg !610
STORE [*p=q]:   store i32 %44, i32* %nargc, align 4, !dbg !610
LOAD [p=*q]:   %17 = load i8** %p, align 8, !dbg !600
LOAD [p=*q]:   %18 = load i8* %17, !dbg !600
LOAD [p=*q]:   %46 = load i32* %nargc, align 4, !dbg !611
LOAD [p=*q]:   %49 = load i8** %env_val, align 8, !dbg !612
CALL [call func]:   call void @free(i8* %49) #3, !dbg !612
STORE [*p=q]:   store i8* null, i8** %1, !dbg !614
LOAD [p=*q]:   %51 = load i32* %nargc, align 4, !dbg !615
LOAD [p=*q]:   %52 = load i32** %2, align 8, !dbg !615
LOAD [p=*q]:   %53 = load i32* %52, !dbg !615
STORE [*p=q]:   store i32 %54, i32* %52, !dbg !615
LOAD [p=*q]:   %55 = load i32** %2, align 8, !dbg !616
LOAD [p=*q]:   %56 = load i32* %55, !dbg !616
CALL [call func]:   %59 = call noalias i8* @xcalloc(i64 %58, i64 8), !dbg !616
STORE [*p=q]:   store i8** %60, i8*** %nargv, align 8, !dbg !616
LOAD [p=*q]:   %61 = load i8**** %3, align 8, !dbg !617
LOAD [p=*q]:   %62 = load i8*** %61, !dbg !617
STORE [*p=q]:   store i8** %62, i8*** %oargv, align 8, !dbg !617
LOAD [p=*q]:   %63 = load i8*** %nargv, align 8, !dbg !618
LOAD [p=*q]:   %64 = load i8**** %3, align 8, !dbg !618
STORE [*p=q]:   store i8** %63, i8*** %64, !dbg !618
LOAD [p=*q]:   %65 = load i32* %oargc, align 4, !dbg !619
STORE [*p=q]:   store i32 %66, i32* %oargc, align 4, !dbg !619
LOAD [p=*q]:   %49 = load i8** %env_val, align 8, !dbg !612
CALL [call func]:   call void @free(i8* %49) #3, !dbg !612
STORE [*p=q]:   store i8* null, i8** %1, !dbg !614
LOAD [p=*q]:   %112 = load i8** %1, !dbg !634
Analyzing return instruction for add_envopt
	  %112 = load i8** %1, !dbg !634
LOAD [p=*q]:   %51 = load i32* %nargc, align 4, !dbg !615
LOAD [p=*q]:   %52 = load i32** %2, align 8, !dbg !615
LOAD [p=*q]:   %53 = load i32* %52, !dbg !615
STORE [*p=q]:   store i32 %54, i32* %52, !dbg !615
LOAD [p=*q]:   %55 = load i32** %2, align 8, !dbg !616
LOAD [p=*q]:   %56 = load i32* %55, !dbg !616
CALL [call func]:   %59 = call noalias i8* @xcalloc(i64 %58, i64 8), !dbg !616
STORE [*p=q]:   store i8** %60, i8*** %nargv, align 8, !dbg !616
LOAD [p=*q]:   %61 = load i8**** %3, align 8, !dbg !617
LOAD [p=*q]:   %62 = load i8*** %61, !dbg !617
STORE [*p=q]:   store i8** %62, i8*** %oargv, align 8, !dbg !617
LOAD [p=*q]:   %63 = load i8*** %nargv, align 8, !dbg !618
LOAD [p=*q]:   %64 = load i8**** %3, align 8, !dbg !618
STORE [*p=q]:   store i8** %63, i8*** %64, !dbg !618
LOAD [p=*q]:   %65 = load i32* %oargc, align 4, !dbg !619
STORE [*p=q]:   store i32 %66, i32* %oargc, align 4, !dbg !619
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([8 x i8]* @.str1183, i32 0, i32 0)) #7, !dbg !620
LOAD [p=*q]:   %70 = load i8*** %oargv, align 8, !dbg !621
STORE [*p=q]:   store i8** %71, i8*** %oargv, align 8, !dbg !621
LOAD [p=*q]:   %72 = load i8** %70, !dbg !621
LOAD [p=*q]:   %73 = load i8*** %nargv, align 8, !dbg !621
STORE [*p=q]:   store i8** %74, i8*** %nargv, align 8, !dbg !621
STORE [*p=q]:   store i8* %72, i8** %73, !dbg !621
LOAD [p=*q]:   %75 = load i8** %env_val, align 8, !dbg !622
STORE [*p=q]:   store i8* %75, i8** %p, align 8, !dbg !622
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([8 x i8]* @.str1183, i32 0, i32 0)) #7, !dbg !620
LOAD [p=*q]:   %70 = load i8*** %oargv, align 8, !dbg !621
STORE [*p=q]:   store i8** %71, i8*** %oargv, align 8, !dbg !621
LOAD [p=*q]:   %72 = load i8** %70, !dbg !621
LOAD [p=*q]:   %73 = load i8*** %nargv, align 8, !dbg !621
STORE [*p=q]:   store i8** %74, i8*** %nargv, align 8, !dbg !621
STORE [*p=q]:   store i8* %72, i8** %73, !dbg !621
LOAD [p=*q]:   %75 = load i8** %env_val, align 8, !dbg !622
STORE [*p=q]:   store i8* %75, i8** %p, align 8, !dbg !622
LOAD [p=*q]:   %77 = load i32* %nargc, align 4, !dbg !622
LOAD [p=*q]:   %77 = load i32* %nargc, align 4, !dbg !622
LOAD [p=*q]:   %80 = load i8** %p, align 8, !dbg !624
CALL [call func]:   %81 = call i64 @strspn(i8* %80, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !624
LOAD [p=*q]:   %82 = load i8** %p, align 8, !dbg !624
STORE [*p=q]:   store i8* %83, i8** %p, align 8, !dbg !624
LOAD [p=*q]:   %84 = load i8** %p, align 8, !dbg !626
LOAD [p=*q]:   %85 = load i8*** %nargv, align 8, !dbg !626
STORE [*p=q]:   store i8** %86, i8*** %nargv, align 8, !dbg !626
STORE [*p=q]:   store i8* %84, i8** %85, !dbg !626
LOAD [p=*q]:   %80 = load i8** %p, align 8, !dbg !624
CALL [call func]:   %81 = call i64 @strspn(i8* %80, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !624
LOAD [p=*q]:   %82 = load i8** %p, align 8, !dbg !624
STORE [*p=q]:   store i8* %83, i8** %p, align 8, !dbg !624
LOAD [p=*q]:   %84 = load i8** %p, align 8, !dbg !626
LOAD [p=*q]:   %85 = load i8*** %nargv, align 8, !dbg !626
STORE [*p=q]:   store i8** %86, i8*** %nargv, align 8, !dbg !626
STORE [*p=q]:   store i8* %84, i8** %85, !dbg !626
LOAD [p=*q]:   %88 = load i8** %p, align 8, !dbg !627
STORE [*p=q]:   store i8* %89, i8** %p, align 8, !dbg !627
LOAD [p=*q]:   %90 = load i8* %88, !dbg !627
LOAD [p=*q]:   %88 = load i8** %p, align 8, !dbg !627
STORE [*p=q]:   store i8* %89, i8** %p, align 8, !dbg !627
LOAD [p=*q]:   %90 = load i8* %88, !dbg !627
LOAD [p=*q]:   %88 = load i8** %p, align 8, !dbg !627
STORE [*p=q]:   store i8* %89, i8** %p, align 8, !dbg !627
LOAD [p=*q]:   %90 = load i8* %88, !dbg !627
LOAD [p=*q]:   %95 = load i32* %nargc, align 4, !dbg !629
STORE [*p=q]:   store i32 %96, i32* %nargc, align 4, !dbg !629
LOAD [p=*q]:   %95 = load i32* %nargc, align 4, !dbg !629
STORE [*p=q]:   store i32 %96, i32* %nargc, align 4, !dbg !629
LOAD [p=*q]:   %77 = load i32* %nargc, align 4, !dbg !622
LOAD [p=*q]:   %99 = load i32* %oargc, align 4, !dbg !630
STORE [*p=q]:   store i32 %100, i32* %oargc, align 4, !dbg !630
LOAD [p=*q]:   %99 = load i32* %oargc, align 4, !dbg !630
STORE [*p=q]:   store i32 %100, i32* %oargc, align 4, !dbg !630
LOAD [p=*q]:   %103 = load i8*** %oargv, align 8, !dbg !631
STORE [*p=q]:   store i8** %104, i8*** %oargv, align 8, !dbg !631
LOAD [p=*q]:   %105 = load i8** %103, !dbg !631
LOAD [p=*q]:   %106 = load i8*** %nargv, align 8, !dbg !631
STORE [*p=q]:   store i8** %107, i8*** %nargv, align 8, !dbg !631
STORE [*p=q]:   store i8* %105, i8** %106, !dbg !631
LOAD [p=*q]:   %109 = load i8*** %nargv, align 8, !dbg !632
STORE [*p=q]:   store i8* null, i8** %109, !dbg !632
LOAD [p=*q]:   %110 = load i8** %env_val, align 8, !dbg !633
STORE [*p=q]:   store i8* %110, i8** %1, !dbg !633
LOAD [p=*q]:   %103 = load i8*** %oargv, align 8, !dbg !631
STORE [*p=q]:   store i8** %104, i8*** %oargv, align 8, !dbg !631
LOAD [p=*q]:   %105 = load i8** %103, !dbg !631
LOAD [p=*q]:   %106 = load i8*** %nargv, align 8, !dbg !631
STORE [*p=q]:   store i8** %107, i8*** %nargv, align 8, !dbg !631
STORE [*p=q]:   store i8* %105, i8** %106, !dbg !631
LOAD [p=*q]:   %99 = load i32* %oargc, align 4, !dbg !630
STORE [*p=q]:   store i32 %100, i32* %oargc, align 4, !dbg !630
LOAD [p=*q]:   %109 = load i8*** %nargv, align 8, !dbg !632
STORE [*p=q]:   store i8* null, i8** %109, !dbg !632
LOAD [p=*q]:   %110 = load i8** %env_val, align 8, !dbg !633
STORE [*p=q]:   store i8* %110, i8** %1, !dbg !633
LOAD [p=*q]:   %112 = load i8** %1, !dbg !634
Analyzing return instruction for add_envopt
	  %112 = load i8** %1, !dbg !634
LOAD [p=*q]:   %112 = load i8** %1, !dbg !634
Analyzing return instruction for add_envopt
	  %112 = load i8** %1, !dbg !634
[Processing][Function][make_simple_name]
STORE [*p=q]:   store i8* %name, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 46) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %4 = load i8** %p, align 8, !dbg !580
LOAD [p=*q]:   %8 = load i8** %p, align 8, !dbg !582
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
Analyzing return instruction for make_simple_name
No return value for: make_simple_name
LOAD [p=*q]:   %8 = load i8** %p, align 8, !dbg !582
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
LOAD [p=*q]:   %12 = load i8** %p, align 8, !dbg !583
STORE [*p=q]:   store i8* %13, i8** %p, align 8, !dbg !583
LOAD [p=*q]:   %12 = load i8** %p, align 8, !dbg !583
STORE [*p=q]:   store i8* %13, i8** %p, align 8, !dbg !583
LOAD [p=*q]:   %16 = load i8** %p, align 8, !dbg !585
STORE [*p=q]:   store i8* %17, i8** %p, align 8, !dbg !585
LOAD [p=*q]:   %18 = load i8* %17, !dbg !585
LOAD [p=*q]:   %16 = load i8** %p, align 8, !dbg !585
STORE [*p=q]:   store i8* %17, i8** %p, align 8, !dbg !585
LOAD [p=*q]:   %18 = load i8* %17, !dbg !585
LOAD [p=*q]:   %22 = load i8** %p, align 8, !dbg !587
STORE [*p=q]:   store i8 95, i8* %22, !dbg !587
LOAD [p=*q]:   %22 = load i8** %p, align 8, !dbg !587
STORE [*p=q]:   store i8 95, i8* %22, !dbg !587
LOAD [p=*q]:   %25 = load i8** %p, align 8, !dbg !588
LOAD [p=*q]:   %26 = load i8** %1, align 8, !dbg !588
LOAD [p=*q]:   %25 = load i8** %p, align 8, !dbg !588
LOAD [p=*q]:   %26 = load i8** %1, align 8, !dbg !588
LOAD [p=*q]:   %16 = load i8** %p, align 8, !dbg !585
STORE [*p=q]:   store i8* %17, i8** %p, align 8, !dbg !585
LOAD [p=*q]:   %18 = load i8* %17, !dbg !585
Analyzing return instruction for make_simple_name
No return value for: make_simple_name
Analyzing return instruction for make_simple_name
No return value for: make_simple_name
[Processing][Function][xunlink]
STORE [*p=q]:   store i8* %filename, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i32 @unlink(i8* %2) #3, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %r, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* %r, align 4, !dbg !580
Analyzing return instruction for xunlink
	  %4 = load i32* %r, align 4, !dbg !580
[Processing][Function][gzip_base_name]
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
Analyzing return instruction for gzip_base_name
	  %9 = load i8** %1, align 8, !dbg !581
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
Analyzing return instruction for gzip_base_name
	  %9 = load i8** %1, align 8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
Analyzing return instruction for gzip_base_name
	  %9 = load i8** %1, align 8, !dbg !581
[Processing][Function][strlwr]
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %t}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
STORE [*p=q]:   store i8* %2, i8** %t, align 8, !dbg !579
LOAD [p=*q]:   %4 = load i8** %t, align 8, !dbg !579
LOAD [p=*q]:   %5 = load i8* %4, !dbg !579
LOAD [p=*q]:   %4 = load i8** %t, align 8, !dbg !579
LOAD [p=*q]:   %5 = load i8* %4, !dbg !579
LOAD [p=*q]:   %8 = load i8** %t, align 8, !dbg !581
LOAD [p=*q]:   %9 = load i8* %8, !dbg !581
CALL [call func]:   %12 = call i16** @__ctype_b_loc() #1, !dbg !582
LOAD [p=*q]:   %13 = load i16** %12, !dbg !582
LOAD [p=*q]:   %15 = load i16* %14, !dbg !582
LOAD [p=*q]:   %36 = load i8** %1, align 8, !dbg !584
Analyzing return instruction for strlwr
	  %36 = load i8** %1, align 8, !dbg !584
LOAD [p=*q]:   %8 = load i8** %t, align 8, !dbg !581
LOAD [p=*q]:   %9 = load i8* %8, !dbg !581
CALL [call func]:   %12 = call i16** @__ctype_b_loc() #1, !dbg !582
LOAD [p=*q]:   %13 = load i16** %12, !dbg !582
LOAD [p=*q]:   %15 = load i16* %14, !dbg !582
LOAD [p=*q]:   %20 = load i8** %t, align 8, !dbg !582
LOAD [p=*q]:   %21 = load i8* %20, !dbg !582
CALL [call func]:   %23 = call i32 @tolower(i32 %22) #3, !dbg !582
LOAD [p=*q]:   %25 = load i8** %t, align 8, !dbg !582
LOAD [p=*q]:   %26 = load i8* %25, !dbg !582
LOAD [p=*q]:   %20 = load i8** %t, align 8, !dbg !582
LOAD [p=*q]:   %21 = load i8* %20, !dbg !582
CALL [call func]:   %23 = call i32 @tolower(i32 %22) #3, !dbg !582
LOAD [p=*q]:   %31 = load i8** %t, align 8, !dbg !582
STORE [*p=q]:   store i8 %30, i8* %31, !dbg !582
LOAD [p=*q]:   %25 = load i8** %t, align 8, !dbg !582
LOAD [p=*q]:   %26 = load i8* %25, !dbg !582
LOAD [p=*q]:   %31 = load i8** %t, align 8, !dbg !582
STORE [*p=q]:   store i8 %30, i8* %31, !dbg !582
LOAD [p=*q]:   %31 = load i8** %t, align 8, !dbg !582
STORE [*p=q]:   store i8 %30, i8* %31, !dbg !582
LOAD [p=*q]:   %33 = load i8** %t, align 8, !dbg !583
STORE [*p=q]:   store i8* %34, i8** %t, align 8, !dbg !583
LOAD [p=*q]:   %33 = load i8** %t, align 8, !dbg !583
STORE [*p=q]:   store i8* %34, i8** %t, align 8, !dbg !583
LOAD [p=*q]:   %4 = load i8** %t, align 8, !dbg !579
LOAD [p=*q]:   %5 = load i8* %4, !dbg !579
LOAD [p=*q]:   %36 = load i8** %1, align 8, !dbg !584
Analyzing return instruction for strlwr
	  %36 = load i8** %1, align 8, !dbg !584
[Processing][Function][write_error]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !574), !dbg !576
CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
LOAD [p=*q]:   %2 = load i32* %1, !dbg !577
STORE [*p=q]:   store i32 %2, i32* %e, align 4, !dbg !577
LOAD [p=*q]:   %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i8** @program_name, align 8, !dbg !578
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
LOAD [p=*q]:   %6 = load i32* %e, align 4, !dbg !579
CALL [call func]:   %7 = call i32* @__errno_location() #1, !dbg !579
STORE [*p=q]:   store i32 %6, i32* %7, !dbg !579
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !580
CALL [call func]:   call void @abort_gzip() #7, !dbg !581
Analyzing return instruction for write_error
No return value for: write_error
[Processing][Function][write_buffer]
STORE [*p=q]:   store i32 %fd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i8* %buf, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !576), !dbg !579
STORE [*p=q]:   store i32 %cnt, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !580), !dbg !581
LOAD [p=*q]:   %4 = load i32* %3, align 4, !dbg !582
STORE [*p=q]:   store i32 2147483647, i32* %3, align 4, !dbg !584
LOAD [p=*q]:   %8 = load i32* %1, align 4, !dbg !585
LOAD [p=*q]:   %9 = load i8** %2, align 8, !dbg !585
LOAD [p=*q]:   %10 = load i32* %3, align 4, !dbg !585
CALL [call func]:   %12 = call i64 @write(i32 %8, i8* %9, i64 %11), !dbg !585
Analyzing return instruction for write_buffer
	  %13 = trunc i64 %12 to i32, !dbg !585
STORE [*p=q]:   store i32 2147483647, i32* %3, align 4, !dbg !584
LOAD [p=*q]:   %8 = load i32* %1, align 4, !dbg !585
LOAD [p=*q]:   %9 = load i8** %2, align 8, !dbg !585
LOAD [p=*q]:   %10 = load i32* %3, align 4, !dbg !585
CALL [call func]:   %12 = call i64 @write(i32 %8, i8* %9, i64 %11), !dbg !585
Analyzing return instruction for write_buffer
	  %13 = trunc i64 %12 to i32, !dbg !585
LOAD [p=*q]:   %8 = load i32* %1, align 4, !dbg !585
LOAD [p=*q]:   %9 = load i8** %2, align 8, !dbg !585
LOAD [p=*q]:   %10 = load i32* %3, align 4, !dbg !585
CALL [call func]:   %12 = call i64 @write(i32 %8, i8* %9, i64 %11), !dbg !585
Analyzing return instruction for write_buffer
	  %13 = trunc i64 %12 to i32, !dbg !585
[Processing][Function][flush_outbuf]
LOAD [p=*q]:   %1 = load i32* @outcnt, align 4, !dbg !574
LOAD [p=*q]:   %5 = load i32* @ofd, align 4, !dbg !577
LOAD [p=*q]:   %6 = load i32* @outcnt, align 4, !dbg !577
CALL [call func]:   call void @write_buf(i32 %5, i8* getelementptr inbounds ([18432 x i8]* @outbuf, i32 0, i32 0), i32 %6), !dbg !577
LOAD [p=*q]:   %7 = load i32* @outcnt, align 4, !dbg !578
LOAD [p=*q]:   %9 = load i64* @bytes_out, align 8, !dbg !578
STORE [*p=q]:   store i64 %10, i64* @bytes_out, align 8, !dbg !578
STORE [*p=q]:   store i32 0, i32* @outcnt, align 4, !dbg !579
Analyzing return instruction for flush_outbuf
No return value for: flush_outbuf
LOAD [p=*q]:   %5 = load i32* @ofd, align 4, !dbg !577
LOAD [p=*q]:   %6 = load i32* @outcnt, align 4, !dbg !577
CALL [call func]:   call void @write_buf(i32 %5, i8* getelementptr inbounds ([18432 x i8]* @outbuf, i32 0, i32 0), i32 %6), !dbg !577
LOAD [p=*q]:   %7 = load i32* @outcnt, align 4, !dbg !578
LOAD [p=*q]:   %9 = load i64* @bytes_out, align 8, !dbg !578
STORE [*p=q]:   store i64 %10, i64* @bytes_out, align 8, !dbg !578
STORE [*p=q]:   store i32 0, i32* @outcnt, align 4, !dbg !579
Analyzing return instruction for flush_outbuf
No return value for: flush_outbuf
Analyzing return instruction for flush_outbuf
No return value for: flush_outbuf
[Processing][Function][flush_window]
LOAD [p=*q]:   %1 = load i32* @outcnt, align 4, !dbg !574
LOAD [p=*q]:   %5 = load i32* @outcnt, align 4, !dbg !577
CALL [call func]:   %6 = call i64 (...)* bitcast (i64 (i8*, i32)* @updcrc to i64 (...)*)(i8* getelementptr inbounds ([65536 x i8]* @window, i32 0, i32 0), i32 %5), !dbg !577
LOAD [p=*q]:   %7 = load i32* @test, align 4, !dbg !578
Analyzing return instruction for flush_window
No return value for: flush_window
LOAD [p=*q]:   %5 = load i32* @outcnt, align 4, !dbg !577
CALL [call func]:   %6 = call i64 (...)* bitcast (i64 (i8*, i32)* @updcrc to i64 (...)*)(i8* getelementptr inbounds ([65536 x i8]* @window, i32 0, i32 0), i32 %5), !dbg !577
LOAD [p=*q]:   %7 = load i32* @test, align 4, !dbg !578
LOAD [p=*q]:   %13 = load i32* @outcnt, align 4, !dbg !582
LOAD [p=*q]:   %15 = load i64* @bytes_out, align 8, !dbg !582
STORE [*p=q]:   store i64 %16, i64* @bytes_out, align 8, !dbg !582
STORE [*p=q]:   store i32 0, i32* @outcnt, align 4, !dbg !583
LOAD [p=*q]:   %10 = load i32* @ofd, align 4, !dbg !579
LOAD [p=*q]:   %11 = load i32* @outcnt, align 4, !dbg !579
CALL [call func]:   call void @write_buf(i32 %10, i8* getelementptr inbounds ([65536 x i8]* @window, i32 0, i32 0), i32 %11), !dbg !579
LOAD [p=*q]:   %10 = load i32* @ofd, align 4, !dbg !579
LOAD [p=*q]:   %11 = load i32* @outcnt, align 4, !dbg !579
CALL [call func]:   call void @write_buf(i32 %10, i8* getelementptr inbounds ([65536 x i8]* @window, i32 0, i32 0), i32 %11), !dbg !579
LOAD [p=*q]:   %13 = load i32* @outcnt, align 4, !dbg !582
LOAD [p=*q]:   %15 = load i64* @bytes_out, align 8, !dbg !582
STORE [*p=q]:   store i64 %16, i64* @bytes_out, align 8, !dbg !582
STORE [*p=q]:   store i32 0, i32* @outcnt, align 4, !dbg !583
LOAD [p=*q]:   %13 = load i32* @outcnt, align 4, !dbg !582
LOAD [p=*q]:   %15 = load i64* @bytes_out, align 8, !dbg !582
STORE [*p=q]:   store i64 %16, i64* @bytes_out, align 8, !dbg !582
STORE [*p=q]:   store i32 0, i32* @outcnt, align 4, !dbg !583
Analyzing return instruction for flush_window
No return value for: flush_window
Analyzing return instruction for flush_window
No return value for: flush_window
[Processing][Function][fill_inbuf]
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
Analyzing return instruction for fill_inbuf
	  %42 = load i32* %1, !dbg !600
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
Analyzing return instruction for fill_inbuf
	  %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
Analyzing return instruction for fill_inbuf
	  %42 = load i32* %1, !dbg !600
[Processing][Function][clear_bufs]
STORE [*p=q]:   store i32 0, i32* @outcnt, align 4, !dbg !574
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !576
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !576
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !577
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !577
Analyzing return instruction for clear_bufs
No return value for: clear_bufs
[Processing][Function][updcrc]
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
Analyzing return instruction for updcrc
	  %35 = xor i64 %34, 4294967295, !dbg !595
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
Analyzing return instruction for updcrc
	  %35 = xor i64 %34, 4294967295, !dbg !595
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
Analyzing return instruction for updcrc
	  %35 = xor i64 %34, 4294967295, !dbg !595
[Processing][Function][read_error]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !574), !dbg !576
CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
LOAD [p=*q]:   %2 = load i32* %1, !dbg !577
STORE [*p=q]:   store i32 %2, i32* %e, align 4, !dbg !577
LOAD [p=*q]:   %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i8** @program_name, align 8, !dbg !578
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
LOAD [p=*q]:   %6 = load i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %9 = load i32* %e, align 4, !dbg !580
CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
STORE [*p=q]:   store i32 %9, i32* %10, !dbg !580
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
LOAD [p=*q]:   %12 = load %struct._IO_FILE** @stderr, align 8, !dbg !584
CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
LOAD [p=*q]:   %9 = load i32* %e, align 4, !dbg !580
CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
STORE [*p=q]:   store i32 %9, i32* %10, !dbg !580
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
CALL [call func]:   call void @abort_gzip() #7, !dbg !586
LOAD [p=*q]:   %12 = load %struct._IO_FILE** @stderr, align 8, !dbg !584
CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
CALL [call func]:   call void @abort_gzip() #7, !dbg !586
CALL [call func]:   call void @abort_gzip() #7, !dbg !586
Analyzing return instruction for read_error
No return value for: read_error
[Processing][Function][read_buffer]
STORE [*p=q]:   store i32 %fd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i8* %buf, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !576), !dbg !579
STORE [*p=q]:   store i32 %cnt, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !580), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !582), !dbg !584
LOAD [p=*q]:   %4 = load i32* %3, align 4, !dbg !585
STORE [*p=q]:   store i32 2147483647, i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %8 = load i32* %1, align 4, !dbg !587
LOAD [p=*q]:   %9 = load i8** %2, align 8, !dbg !587
LOAD [p=*q]:   %10 = load i32* %3, align 4, !dbg !587
CALL [call func]:   %12 = call i64 @read(i32 %8, i8* %9, i64 %11), !dbg !587
  %9 = load i8** %2, align 8, !dbg !587 gets tainted
@.str = private unnamed_addr constant [15 x i8] c"bad pack level\00", align 1 	 also gets tainted
i8* %buf 	 also gets tainted
  %39 = load i8** %2, align 8, !dbg !599 	 also gets tainted
Found a source read with arg_pos 1
STORE [*p=q]:   store i32 %13, i32* %len, align 4, !dbg !587
LOAD [p=*q]:   %14 = load i32* %len, align 4, !dbg !588
STORE [*p=q]:   store i32 2147483647, i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %8 = load i32* %1, align 4, !dbg !587
LOAD [p=*q]:   %9 = load i8** %2, align 8, !dbg !587
LOAD [p=*q]:   %10 = load i32* %3, align 4, !dbg !587
CALL [call func]:   %12 = call i64 @read(i32 %8, i8* %9, i64 %11), !dbg !587
Found a source read with arg_pos 1
STORE [*p=q]:   store i32 %13, i32* %len, align 4, !dbg !587
LOAD [p=*q]:   %14 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %8 = load i32* %1, align 4, !dbg !587
LOAD [p=*q]:   %9 = load i8** %2, align 8, !dbg !587
LOAD [p=*q]:   %10 = load i32* %3, align 4, !dbg !587
CALL [call func]:   %12 = call i64 @read(i32 %8, i8* %9, i64 %11), !dbg !587
Found a source read with arg_pos 1
STORE [*p=q]:   store i32 %13, i32* %len, align 4, !dbg !587
LOAD [p=*q]:   %14 = load i32* %len, align 4, !dbg !588
CALL [call func]:   %17 = call i32* @__errno_location() #1, !dbg !589
LOAD [p=*q]:   %18 = load i32* %17, !dbg !589
LOAD [p=*q]:   %48 = load i32* %len, align 4, !dbg !602
Analyzing return instruction for read_buffer
	  %48 = load i32* %len, align 4, !dbg !602
CALL [call func]:   %17 = call i32* @__errno_location() #1, !dbg !589
LOAD [p=*q]:   %18 = load i32* %17, !dbg !589
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %flags}, metadata !590), !dbg !592
LOAD [p=*q]:   %21 = load i32* %1, align 4, !dbg !593
CALL [call func]:   %22 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %21, i32 3), !dbg !593
STORE [*p=q]:   store i32 %22, i32* %flags, align 4, !dbg !593
LOAD [p=*q]:   %23 = load i32* %flags, align 4, !dbg !594
LOAD [p=*q]:   %48 = load i32* %len, align 4, !dbg !602
Analyzing return instruction for read_buffer
	  %48 = load i32* %len, align 4, !dbg !602
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %flags}, metadata !590), !dbg !592
LOAD [p=*q]:   %21 = load i32* %1, align 4, !dbg !593
CALL [call func]:   %22 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %21, i32 3), !dbg !593
STORE [*p=q]:   store i32 %22, i32* %flags, align 4, !dbg !593
LOAD [p=*q]:   %23 = load i32* %flags, align 4, !dbg !594
LOAD [p=*q]:   %26 = load i32* %flags, align 4, !dbg !595
LOAD [p=*q]:   %26 = load i32* %flags, align 4, !dbg !595
LOAD [p=*q]:   %32 = load i32* %1, align 4, !dbg !598
LOAD [p=*q]:   %33 = load i32* %flags, align 4, !dbg !598
CALL [call func]:   %35 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %32, i32 4, i32 %34), !dbg !598
CALL [call func]:   %30 = call i32* @__errno_location() #1, !dbg !597
STORE [*p=q]:   store i32 11, i32* %30, !dbg !597
CALL [call func]:   %30 = call i32* @__errno_location() #1, !dbg !597
STORE [*p=q]:   store i32 11, i32* %30, !dbg !597
LOAD [p=*q]:   %32 = load i32* %1, align 4, !dbg !598
LOAD [p=*q]:   %33 = load i32* %flags, align 4, !dbg !598
CALL [call func]:   %35 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %32, i32 4, i32 %34), !dbg !598
LOAD [p=*q]:   %38 = load i32* %1, align 4, !dbg !599
LOAD [p=*q]:   %39 = load i8** %2, align 8, !dbg !599
LOAD [p=*q]:   %40 = load i32* %3, align 4, !dbg !599
CALL [call func]:   %42 = call i64 @read(i32 %38, i8* %39, i64 %41), !dbg !599
Found a source read with arg_pos 1
STORE [*p=q]:   store i32 %43, i32* %len, align 4, !dbg !599
LOAD [p=*q]:   %38 = load i32* %1, align 4, !dbg !599
LOAD [p=*q]:   %39 = load i8** %2, align 8, !dbg !599
LOAD [p=*q]:   %40 = load i32* %3, align 4, !dbg !599
CALL [call func]:   %42 = call i64 @read(i32 %38, i8* %39, i64 %41), !dbg !599
Found a source read with arg_pos 1
STORE [*p=q]:   store i32 %43, i32* %len, align 4, !dbg !599
LOAD [p=*q]:   %48 = load i32* %len, align 4, !dbg !602
Analyzing return instruction for read_buffer
	  %48 = load i32* %len, align 4, !dbg !602
LOAD [p=*q]:   %48 = load i32* %len, align 4, !dbg !602
Analyzing return instruction for read_buffer
	  %48 = load i32* %len, align 4, !dbg !602
[Processing][Function][write_buf]
STORE [*p=q]:   store i32 %fd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i8* %buf, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !576), !dbg !579
STORE [*p=q]:   store i32 %cnt, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !580), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !582), !dbg !584
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !586
LOAD [p=*q]:   %6 = load i8** %2, align 8, !dbg !586
LOAD [p=*q]:   %7 = load i32* %3, align 4, !dbg !586
CALL [call func]:   %8 = call i32 (...)* bitcast (i32 (i32, i8*, i32)* @write_buffer to i32 (...)*)(i32 %5, i8* %6, i32 %7), !dbg !586
STORE [*p=q]:   store i32 %8, i32* %n, align 4, !dbg !586
LOAD [p=*q]:   %9 = load i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !586
LOAD [p=*q]:   %6 = load i8** %2, align 8, !dbg !586
LOAD [p=*q]:   %7 = load i32* %3, align 4, !dbg !586
CALL [call func]:   %8 = call i32 (...)* bitcast (i32 (i32, i8*, i32)* @write_buffer to i32 (...)*)(i32 %5, i8* %6, i32 %7), !dbg !586
STORE [*p=q]:   store i32 %8, i32* %n, align 4, !dbg !586
LOAD [p=*q]:   %9 = load i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %12 = load i32* %n, align 4, !dbg !587
Analyzing return instruction for write_buf
No return value for: write_buf
LOAD [p=*q]:   %12 = load i32* %n, align 4, !dbg !587
CALL [call func]:   call void @write_error() #7, !dbg !589
LOAD [p=*q]:   %16 = load i32* %n, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %3, align 4, !dbg !591
STORE [*p=q]:   store i32 %18, i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %20 = load i32* %n, align 4, !dbg !592
STORE [*p=q]:   store i8* %22, i8** %2, align 8, !dbg !592
CALL [call func]:   call void @write_error() #7, !dbg !589
LOAD [p=*q]:   %16 = load i32* %n, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %3, align 4, !dbg !591
STORE [*p=q]:   store i32 %18, i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %20 = load i32* %n, align 4, !dbg !592
STORE [*p=q]:   store i8* %22, i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !586
LOAD [p=*q]:   %6 = load i8** %2, align 8, !dbg !586
LOAD [p=*q]:   %7 = load i32* %3, align 4, !dbg !586
CALL [call func]:   %8 = call i32 (...)* bitcast (i32 (i32, i8*, i32)* @write_buffer to i32 (...)*)(i32 %5, i8* %6, i32 %7), !dbg !586
STORE [*p=q]:   store i32 %8, i32* %n, align 4, !dbg !586
LOAD [p=*q]:   %9 = load i32* %3, align 4, !dbg !586
Analyzing return instruction for write_buf
No return value for: write_buf
[Processing][Function][copy]
STORE [*p=q]:   store i32 %in, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %out, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %got}, metadata !578), !dbg !580
CALL [call func]:   %3 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 0, i32* %3, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !582
LOAD [p=*q]:   %6 = load i32* @inptr, align 4, !dbg !582
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !582
LOAD [p=*q]:   %6 = load i32* @inptr, align 4, !dbg !582
LOAD [p=*q]:   %9 = load i32* %2, align 4, !dbg !583
LOAD [p=*q]:   %10 = load i32* @inptr, align 4, !dbg !583
LOAD [p=*q]:   %13 = load i32* @insize, align 4, !dbg !583
LOAD [p=*q]:   %14 = load i32* @inptr, align 4, !dbg !583
CALL [call func]:   call void @write_buf(i32 %9, i8* %12, i32 %15), !dbg !583
LOAD [p=*q]:   %16 = load i32* @insize, align 4, !dbg !585
LOAD [p=*q]:   %17 = load i32* @inptr, align 4, !dbg !585
LOAD [p=*q]:   %20 = load i64* @bytes_out, align 8, !dbg !585
STORE [*p=q]:   store i64 %21, i64* @bytes_out, align 8, !dbg !585
LOAD [p=*q]:   %22 = load i32* %1, align 4, !dbg !586
CALL [call func]:   %23 = call i32 @read_buffer(i32 %22, i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i32 32768), !dbg !586
STORE [*p=q]:   store i32 %23, i32* %got, align 4, !dbg !586
LOAD [p=*q]:   %24 = load i32* %got, align 4, !dbg !587
Analyzing return instruction for copy
	i32 0
LOAD [p=*q]:   %9 = load i32* %2, align 4, !dbg !583
LOAD [p=*q]:   %10 = load i32* @inptr, align 4, !dbg !583
LOAD [p=*q]:   %13 = load i32* @insize, align 4, !dbg !583
LOAD [p=*q]:   %14 = load i32* @inptr, align 4, !dbg !583
CALL [call func]:   call void @write_buf(i32 %9, i8* %12, i32 %15), !dbg !583
LOAD [p=*q]:   %16 = load i32* @insize, align 4, !dbg !585
LOAD [p=*q]:   %17 = load i32* @inptr, align 4, !dbg !585
LOAD [p=*q]:   %20 = load i64* @bytes_out, align 8, !dbg !585
STORE [*p=q]:   store i64 %21, i64* @bytes_out, align 8, !dbg !585
LOAD [p=*q]:   %22 = load i32* %1, align 4, !dbg !586
CALL [call func]:   %23 = call i32 @read_buffer(i32 %22, i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i32 32768), !dbg !586
STORE [*p=q]:   store i32 %23, i32* %got, align 4, !dbg !586
LOAD [p=*q]:   %24 = load i32* %got, align 4, !dbg !587
CALL [call func]:   call void @read_error() #7, !dbg !588
LOAD [p=*q]:   %28 = load i32* %got, align 4, !dbg !589
LOAD [p=*q]:   %30 = load i64* @bytes_in, align 8, !dbg !589
STORE [*p=q]:   store i64 %31, i64* @bytes_in, align 8, !dbg !589
LOAD [p=*q]:   %32 = load i32* %got, align 4, !dbg !590
STORE [*p=q]:   store i32 %32, i32* @insize, align 4, !dbg !590
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !591
CALL [call func]:   call void @read_error() #7, !dbg !588
LOAD [p=*q]:   %28 = load i32* %got, align 4, !dbg !589
LOAD [p=*q]:   %30 = load i64* @bytes_in, align 8, !dbg !589
STORE [*p=q]:   store i64 %31, i64* @bytes_in, align 8, !dbg !589
LOAD [p=*q]:   %32 = load i32* %got, align 4, !dbg !590
STORE [*p=q]:   store i32 %32, i32* @insize, align 4, !dbg !590
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !591
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !582
LOAD [p=*q]:   %6 = load i32* @inptr, align 4, !dbg !582
Analyzing return instruction for copy
	i32 0
[Processing][Function][unzip]
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %out, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %orig_crc}, metadata !578), !dbg !581
STORE [*p=q]:   store i64 0, i64* %orig_crc, align 8, !dbg !582
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %orig_len}, metadata !583), !dbg !584
STORE [*p=q]:   store i64 0, i64* %orig_len, align 8, !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !586), !dbg !587
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[16 x i8]* %buf}, metadata !588), !dbg !591
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %err}, metadata !592), !dbg !593
STORE [*p=q]:   store i32 0, i32* %err, align 4, !dbg !594
LOAD [p=*q]:   %4 = load i32* %2, align 4, !dbg !595
STORE [*p=q]:   store i32 %4, i32* @ifd, align 4, !dbg !595
LOAD [p=*q]:   %5 = load i32* %3, align 4, !dbg !596
STORE [*p=q]:   store i32 %5, i32* @ofd, align 4, !dbg !596
CALL [call func]:   %6 = call i64 @updcrc(i8* null, i32 0), !dbg !597
LOAD [p=*q]:   %7 = load i32* @pkzip, align 4, !dbg !598
LOAD [p=*q]:   %10 = load i32* @ext_header, align 4, !dbg !598
LOAD [p=*q]:   %54 = load i32* @method, align 4, !dbg !603
LOAD [p=*q]:   %10 = load i32* @ext_header, align 4, !dbg !598
LOAD [p=*q]:   %54 = load i32* @method, align 4, !dbg !603
LOAD [p=*q]:   %13 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 14), !dbg !599
LOAD [p=*q]:   %16 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 15), !dbg !599
LOAD [p=*q]:   %22 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 16), !dbg !599
LOAD [p=*q]:   %25 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 17), !dbg !599
STORE [*p=q]:   store i64 %32, i64* %orig_crc, align 8, !dbg !599
LOAD [p=*q]:   %33 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 22), !dbg !601
LOAD [p=*q]:   %36 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 23), !dbg !601
LOAD [p=*q]:   %42 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 24), !dbg !601
LOAD [p=*q]:   %45 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 25), !dbg !601
STORE [*p=q]:   store i64 %52, i64* %orig_len, align 8, !dbg !601
LOAD [p=*q]:   %13 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 14), !dbg !599
LOAD [p=*q]:   %16 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 15), !dbg !599
LOAD [p=*q]:   %22 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 16), !dbg !599
LOAD [p=*q]:   %25 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 17), !dbg !599
STORE [*p=q]:   store i64 %32, i64* %orig_crc, align 8, !dbg !599
LOAD [p=*q]:   %33 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 22), !dbg !601
LOAD [p=*q]:   %36 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 23), !dbg !601
LOAD [p=*q]:   %42 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 24), !dbg !601
LOAD [p=*q]:   %45 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 25), !dbg !601
STORE [*p=q]:   store i64 %52, i64* %orig_len, align 8, !dbg !601
LOAD [p=*q]:   %54 = load i32* @method, align 4, !dbg !603
LOAD [p=*q]:   %54 = load i32* @method, align 4, !dbg !603
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %res}, metadata !604), !dbg !606
CALL [call func]:   %57 = call i32 @inflate(), !dbg !607
STORE [*p=q]:   store i32 %57, i32* %res, align 4, !dbg !607
LOAD [p=*q]:   %58 = load i32* %res, align 4, !dbg !608
LOAD [p=*q]:   %68 = load i32* @pkzip, align 4, !dbg !615
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %res}, metadata !604), !dbg !606
CALL [call func]:   %57 = call i32 @inflate(), !dbg !607
STORE [*p=q]:   store i32 %57, i32* %res, align 4, !dbg !607
LOAD [p=*q]:   %58 = load i32* %res, align 4, !dbg !608
CALL [call func]:   call void @xalloc_die() #7, !dbg !609
LOAD [p=*q]:   %62 = load i32* %res, align 4, !dbg !611
CALL [call func]:   call void @xalloc_die() #7, !dbg !609
LOAD [p=*q]:   %62 = load i32* %res, align 4, !dbg !611
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([41 x i8]* @.str3170, i32 0, i32 0)) #7, !dbg !612
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([41 x i8]* @.str3170, i32 0, i32 0)) #7, !dbg !612
LOAD [p=*q]:   %179 = load i32* @pkzip, align 4, !dbg !637
LOAD [p=*q]:   %68 = load i32* @pkzip, align 4, !dbg !615
LOAD [p=*q]:   %71 = load i32* @method, align 4, !dbg !615
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([31 x i8]* @.str6173, i32 0, i32 0)) #7, !dbg !635
LOAD [p=*q]:   %71 = load i32* @method, align 4, !dbg !615
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %n1}, metadata !616), !dbg !618
LOAD [p=*q]:   %74 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 22), !dbg !619
LOAD [p=*q]:   %77 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 23), !dbg !619
LOAD [p=*q]:   %83 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 24), !dbg !619
LOAD [p=*q]:   %86 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 25), !dbg !619
STORE [*p=q]:   store i64 %93, i64* %n1, align 8, !dbg !619
LOAD [p=*q]:   %94 = load i64* %n1, align 8, !dbg !620
LOAD [p=*q]:   %95 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 18), !dbg !620
LOAD [p=*q]:   %98 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 19), !dbg !620
LOAD [p=*q]:   %104 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 20), !dbg !620
LOAD [p=*q]:   %107 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 21), !dbg !620
LOAD [p=*q]:   %115 = load i32* @decrypt, align 4, !dbg !620
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([31 x i8]* @.str6173, i32 0, i32 0)) #7, !dbg !635
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %n1}, metadata !616), !dbg !618
LOAD [p=*q]:   %74 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 22), !dbg !619
LOAD [p=*q]:   %77 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 23), !dbg !619
LOAD [p=*q]:   %83 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 24), !dbg !619
LOAD [p=*q]:   %86 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 25), !dbg !619
STORE [*p=q]:   store i64 %93, i64* %n1, align 8, !dbg !619
LOAD [p=*q]:   %94 = load i64* %n1, align 8, !dbg !620
LOAD [p=*q]:   %95 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 18), !dbg !620
LOAD [p=*q]:   %98 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 19), !dbg !620
LOAD [p=*q]:   %104 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 20), !dbg !620
LOAD [p=*q]:   %107 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 21), !dbg !620
LOAD [p=*q]:   %115 = load i32* @decrypt, align 4, !dbg !620
LOAD [p=*q]:   %122 = load %struct._IO_FILE** @stderr, align 8, !dbg !621
LOAD [p=*q]:   %123 = load i64* %n1, align 8, !dbg !621
LOAD [p=*q]:   %124 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 18), !dbg !621
LOAD [p=*q]:   %127 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 19), !dbg !621
LOAD [p=*q]:   %133 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 20), !dbg !621
LOAD [p=*q]:   %136 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 21), !dbg !621
CALL [call func]:   %144 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %122, i8* getelementptr inbounds ([18 x i8]* @.str4171, i32 0, i32 0), i64 %123, i64 %143), !dbg !621
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([41 x i8]* @.str5172, i32 0, i32 0)) #7, !dbg !623
LOAD [p=*q]:   %122 = load %struct._IO_FILE** @stderr, align 8, !dbg !621
LOAD [p=*q]:   %123 = load i64* %n1, align 8, !dbg !621
LOAD [p=*q]:   %124 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 18), !dbg !621
LOAD [p=*q]:   %127 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 19), !dbg !621
LOAD [p=*q]:   %133 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 20), !dbg !621
LOAD [p=*q]:   %136 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 21), !dbg !621
CALL [call func]:   %144 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %122, i8* getelementptr inbounds ([18 x i8]* @.str4171, i32 0, i32 0), i64 %123, i64 %143), !dbg !621
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([41 x i8]* @.str5172, i32 0, i32 0)) #7, !dbg !623
LOAD [p=*q]:   %147 = load i64* %n1, align 8, !dbg !624
STORE [*p=q]:   store i64 %148, i64* %n1, align 8, !dbg !624
LOAD [p=*q]:   %147 = load i64* %n1, align 8, !dbg !624
STORE [*p=q]:   store i64 %148, i64* %n1, align 8, !dbg !624
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %c}, metadata !625), !dbg !627
LOAD [p=*q]:   %151 = load i32* @inptr, align 4, !dbg !628
LOAD [p=*q]:   %152 = load i32* @insize, align 4, !dbg !628
CALL [call func]:   call void @flush_window(), !dbg !633
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %c}, metadata !625), !dbg !627
LOAD [p=*q]:   %151 = load i32* @inptr, align 4, !dbg !628
LOAD [p=*q]:   %152 = load i32* @insize, align 4, !dbg !628
LOAD [p=*q]:   %155 = load i32* @inptr, align 4, !dbg !628
STORE [*p=q]:   store i32 %156, i32* @inptr, align 4, !dbg !628
LOAD [p=*q]:   %159 = load i8* %158, align 1, !dbg !628
CALL [call func]:   %162 = call i32 @fill_inbuf(i32 0), !dbg !629
LOAD [p=*q]:   %155 = load i32* @inptr, align 4, !dbg !628
STORE [*p=q]:   store i32 %156, i32* @inptr, align 4, !dbg !628
LOAD [p=*q]:   %159 = load i8* %158, align 1, !dbg !628
STORE [*p=q]:   store i8 %165, i8* %c, align 1, !dbg !629
LOAD [p=*q]:   %166 = load i8* %c, align 1, !dbg !630
LOAD [p=*q]:   %167 = load i32* @outcnt, align 4, !dbg !630
STORE [*p=q]:   store i32 %168, i32* @outcnt, align 4, !dbg !630
STORE [*p=q]:   store i8 %166, i8* %170, align 1, !dbg !630
LOAD [p=*q]:   %171 = load i32* @outcnt, align 4, !dbg !630
CALL [call func]:   %162 = call i32 @fill_inbuf(i32 0), !dbg !629
STORE [*p=q]:   store i8 %165, i8* %c, align 1, !dbg !629
LOAD [p=*q]:   %166 = load i8* %c, align 1, !dbg !630
LOAD [p=*q]:   %167 = load i32* @outcnt, align 4, !dbg !630
STORE [*p=q]:   store i32 %168, i32* @outcnt, align 4, !dbg !630
STORE [*p=q]:   store i8 %166, i8* %170, align 1, !dbg !630
LOAD [p=*q]:   %171 = load i32* @outcnt, align 4, !dbg !630
STORE [*p=q]:   store i8 %165, i8* %c, align 1, !dbg !629
LOAD [p=*q]:   %166 = load i8* %c, align 1, !dbg !630
LOAD [p=*q]:   %167 = load i32* @outcnt, align 4, !dbg !630
STORE [*p=q]:   store i32 %168, i32* @outcnt, align 4, !dbg !630
STORE [*p=q]:   store i8 %166, i8* %170, align 1, !dbg !630
LOAD [p=*q]:   %171 = load i32* @outcnt, align 4, !dbg !630
CALL [call func]:   call void @flush_window(), !dbg !630
CALL [call func]:   call void @flush_window(), !dbg !630
LOAD [p=*q]:   %147 = load i64* %n1, align 8, !dbg !624
STORE [*p=q]:   store i64 %148, i64* %n1, align 8, !dbg !624
CALL [call func]:   call void @flush_window(), !dbg !633
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([31 x i8]* @.str6173, i32 0, i32 0)) #7, !dbg !635
LOAD [p=*q]:   %179 = load i32* @pkzip, align 4, !dbg !637
LOAD [p=*q]:   %179 = load i32* @pkzip, align 4, !dbg !637
LOAD [p=*q]:   %271 = load i32* @ext_header, align 4, !dbg !649
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !638
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !638
LOAD [p=*q]:   %183 = load i32* %n, align 4, !dbg !638
LOAD [p=*q]:   %183 = load i32* %n, align 4, !dbg !638
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %209 = load i8* %208, align 1, !dbg !646
LOAD [p=*q]:   %213 = load i8* %212, align 1, !dbg !646
LOAD [p=*q]:   %222 = load i8* %221, !dbg !646
LOAD [p=*q]:   %228 = load i8* %227, !dbg !646
STORE [*p=q]:   store i64 %235, i64* %orig_crc, align 8, !dbg !646
LOAD [p=*q]:   %239 = load i8* %238, !dbg !647
LOAD [p=*q]:   %245 = load i8* %244, !dbg !647
LOAD [p=*q]:   %255 = load i8* %254, !dbg !647
LOAD [p=*q]:   %262 = load i8* %261, !dbg !647
STORE [*p=q]:   store i64 %269, i64* %orig_len, align 8, !dbg !647
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !641
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !643
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !641
LOAD [p=*q]:   %201 = load i32* %n, align 4, !dbg !643
STORE [*p=q]:   store i8 %200, i8* %203, align 1, !dbg !643
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !643
LOAD [p=*q]:   %201 = load i32* %n, align 4, !dbg !643
STORE [*p=q]:   store i8 %200, i8* %203, align 1, !dbg !643
LOAD [p=*q]:   %201 = load i32* %n, align 4, !dbg !643
STORE [*p=q]:   store i8 %200, i8* %203, align 1, !dbg !643
LOAD [p=*q]:   %205 = load i32* %n, align 4, !dbg !645
STORE [*p=q]:   store i32 %206, i32* %n, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* %n, align 4, !dbg !645
STORE [*p=q]:   store i32 %206, i32* %n, align 4, !dbg !645
LOAD [p=*q]:   %183 = load i32* %n, align 4, !dbg !638
LOAD [p=*q]:   %209 = load i8* %208, align 1, !dbg !646
LOAD [p=*q]:   %213 = load i8* %212, align 1, !dbg !646
LOAD [p=*q]:   %222 = load i8* %221, !dbg !646
LOAD [p=*q]:   %228 = load i8* %227, !dbg !646
STORE [*p=q]:   store i64 %235, i64* %orig_crc, align 8, !dbg !646
LOAD [p=*q]:   %239 = load i8* %238, !dbg !647
LOAD [p=*q]:   %245 = load i8* %244, !dbg !647
LOAD [p=*q]:   %255 = load i8* %254, !dbg !647
LOAD [p=*q]:   %262 = load i8* %261, !dbg !647
STORE [*p=q]:   store i64 %269, i64* %orig_len, align 8, !dbg !647
LOAD [p=*q]:   %370 = load i64* %orig_crc, align 8, !dbg !661
CALL [call func]:   %371 = call i64 @updcrc(i8* getelementptr inbounds ([18432 x i8]* @outbuf, i32 0, i32 0), i32 0), !dbg !662
LOAD [p=*q]:   %271 = load i32* @ext_header, align 4, !dbg !649
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !650
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !650
LOAD [p=*q]:   %275 = load i32* %n, align 4, !dbg !650
LOAD [p=*q]:   %275 = load i32* %n, align 4, !dbg !650
LOAD [p=*q]:   %278 = load i32* @inptr, align 4, !dbg !653
LOAD [p=*q]:   %279 = load i32* @insize, align 4, !dbg !653
LOAD [p=*q]:   %303 = load i8* %302, !dbg !658
LOAD [p=*q]:   %309 = load i8* %308, !dbg !658
LOAD [p=*q]:   %319 = load i8* %318, !dbg !658
LOAD [p=*q]:   %326 = load i8* %325, !dbg !658
STORE [*p=q]:   store i64 %333, i64* %orig_crc, align 8, !dbg !658
LOAD [p=*q]:   %337 = load i8* %336, !dbg !659
LOAD [p=*q]:   %343 = load i8* %342, !dbg !659
LOAD [p=*q]:   %353 = load i8* %352, !dbg !659
LOAD [p=*q]:   %360 = load i8* %359, !dbg !659
STORE [*p=q]:   store i64 %367, i64* %orig_len, align 8, !dbg !659
LOAD [p=*q]:   %278 = load i32* @inptr, align 4, !dbg !653
LOAD [p=*q]:   %279 = load i32* @insize, align 4, !dbg !653
LOAD [p=*q]:   %282 = load i32* @inptr, align 4, !dbg !653
STORE [*p=q]:   store i32 %283, i32* @inptr, align 4, !dbg !653
LOAD [p=*q]:   %286 = load i8* %285, align 1, !dbg !653
CALL [call func]:   %289 = call i32 @fill_inbuf(i32 0), !dbg !655
LOAD [p=*q]:   %282 = load i32* @inptr, align 4, !dbg !653
STORE [*p=q]:   store i32 %283, i32* @inptr, align 4, !dbg !653
LOAD [p=*q]:   %286 = load i8* %285, align 1, !dbg !653
LOAD [p=*q]:   %293 = load i32* %n, align 4, !dbg !655
STORE [*p=q]:   store i8 %292, i8* %295, align 1, !dbg !655
CALL [call func]:   %289 = call i32 @fill_inbuf(i32 0), !dbg !655
LOAD [p=*q]:   %293 = load i32* %n, align 4, !dbg !655
STORE [*p=q]:   store i8 %292, i8* %295, align 1, !dbg !655
LOAD [p=*q]:   %293 = load i32* %n, align 4, !dbg !655
STORE [*p=q]:   store i8 %292, i8* %295, align 1, !dbg !655
LOAD [p=*q]:   %297 = load i32* %n, align 4, !dbg !657
STORE [*p=q]:   store i32 %298, i32* %n, align 4, !dbg !657
LOAD [p=*q]:   %297 = load i32* %n, align 4, !dbg !657
STORE [*p=q]:   store i32 %298, i32* %n, align 4, !dbg !657
LOAD [p=*q]:   %275 = load i32* %n, align 4, !dbg !650
LOAD [p=*q]:   %303 = load i8* %302, !dbg !658
LOAD [p=*q]:   %309 = load i8* %308, !dbg !658
LOAD [p=*q]:   %319 = load i8* %318, !dbg !658
LOAD [p=*q]:   %326 = load i8* %325, !dbg !658
STORE [*p=q]:   store i64 %333, i64* %orig_crc, align 8, !dbg !658
LOAD [p=*q]:   %337 = load i8* %336, !dbg !659
LOAD [p=*q]:   %343 = load i8* %342, !dbg !659
LOAD [p=*q]:   %353 = load i8* %352, !dbg !659
LOAD [p=*q]:   %360 = load i8* %359, !dbg !659
STORE [*p=q]:   store i64 %367, i64* %orig_len, align 8, !dbg !659
LOAD [p=*q]:   %370 = load i64* %orig_crc, align 8, !dbg !661
CALL [call func]:   %371 = call i64 @updcrc(i8* getelementptr inbounds ([18432 x i8]* @outbuf, i32 0, i32 0), i32 0), !dbg !662
LOAD [p=*q]:   %370 = load i64* %orig_crc, align 8, !dbg !661
CALL [call func]:   %371 = call i64 @updcrc(i8* getelementptr inbounds ([18432 x i8]* @outbuf, i32 0, i32 0), i32 0), !dbg !662
LOAD [p=*q]:   %374 = load %struct._IO_FILE** @stderr, align 8, !dbg !663
LOAD [p=*q]:   %375 = load i8** @program_name, align 8, !dbg !663
CALL [call func]:   %376 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %374, i8* getelementptr inbounds ([45 x i8]* @.str7174, i32 0, i32 0), i8* %375, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !663
STORE [*p=q]:   store i32 1, i32* %err, align 4, !dbg !665
LOAD [p=*q]:   %378 = load i64* %orig_len, align 8, !dbg !667
LOAD [p=*q]:   %379 = load i64* @bytes_out, align 8, !dbg !667
LOAD [p=*q]:   %374 = load %struct._IO_FILE** @stderr, align 8, !dbg !663
LOAD [p=*q]:   %375 = load i8** @program_name, align 8, !dbg !663
CALL [call func]:   %376 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %374, i8* getelementptr inbounds ([45 x i8]* @.str7174, i32 0, i32 0), i8* %375, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !663
STORE [*p=q]:   store i32 1, i32* %err, align 4, !dbg !665
LOAD [p=*q]:   %378 = load i64* %orig_len, align 8, !dbg !667
LOAD [p=*q]:   %379 = load i64* @bytes_out, align 8, !dbg !667
LOAD [p=*q]:   %378 = load i64* %orig_len, align 8, !dbg !667
LOAD [p=*q]:   %379 = load i64* @bytes_out, align 8, !dbg !667
LOAD [p=*q]:   %383 = load %struct._IO_FILE** @stderr, align 8, !dbg !668
LOAD [p=*q]:   %384 = load i8** @program_name, align 8, !dbg !668
CALL [call func]:   %385 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %383, i8* getelementptr inbounds ([48 x i8]* @.str8175, i32 0, i32 0), i8* %384, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !668
STORE [*p=q]:   store i32 1, i32* %err, align 4, !dbg !670
LOAD [p=*q]:   %387 = load i32* @pkzip, align 4, !dbg !672
LOAD [p=*q]:   %383 = load %struct._IO_FILE** @stderr, align 8, !dbg !668
LOAD [p=*q]:   %384 = load i8** @program_name, align 8, !dbg !668
CALL [call func]:   %385 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %383, i8* getelementptr inbounds ([48 x i8]* @.str8175, i32 0, i32 0), i8* %384, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !668
STORE [*p=q]:   store i32 1, i32* %err, align 4, !dbg !670
LOAD [p=*q]:   %387 = load i32* @pkzip, align 4, !dbg !672
LOAD [p=*q]:   %387 = load i32* @pkzip, align 4, !dbg !672
LOAD [p=*q]:   %390 = load i32* @inptr, align 4, !dbg !672
LOAD [p=*q]:   %392 = load i32* @insize, align 4, !dbg !672
STORE [*p=q]:   store i32 0, i32* @pkzip, align 4, !dbg !683
STORE [*p=q]:   store i32 0, i32* @ext_header, align 4, !dbg !683
LOAD [p=*q]:   %455 = load i32* %err, align 4, !dbg !684
LOAD [p=*q]:   %390 = load i32* @inptr, align 4, !dbg !672
LOAD [p=*q]:   %392 = load i32* @insize, align 4, !dbg !672
LOAD [p=*q]:   %395 = load i32* @inptr, align 4, !dbg !672
LOAD [p=*q]:   %399 = load i8* %398, !dbg !672
LOAD [p=*q]:   %402 = load i32* @inptr, align 4, !dbg !672
LOAD [p=*q]:   %406 = load i8* %405, !dbg !672
LOAD [p=*q]:   %412 = load i32* @inptr, align 4, !dbg !672
LOAD [p=*q]:   %417 = load i8* %416, !dbg !672
LOAD [p=*q]:   %420 = load i32* @inptr, align 4, !dbg !672
LOAD [p=*q]:   %425 = load i8* %424, !dbg !672
STORE [*p=q]:   store i32 0, i32* @pkzip, align 4, !dbg !683
STORE [*p=q]:   store i32 0, i32* @ext_header, align 4, !dbg !683
LOAD [p=*q]:   %455 = load i32* %err, align 4, !dbg !684
LOAD [p=*q]:   %395 = load i32* @inptr, align 4, !dbg !672
LOAD [p=*q]:   %399 = load i8* %398, !dbg !672
LOAD [p=*q]:   %402 = load i32* @inptr, align 4, !dbg !672
LOAD [p=*q]:   %406 = load i8* %405, !dbg !672
LOAD [p=*q]:   %412 = load i32* @inptr, align 4, !dbg !672
LOAD [p=*q]:   %417 = load i8* %416, !dbg !672
LOAD [p=*q]:   %420 = load i32* @inptr, align 4, !dbg !672
LOAD [p=*q]:   %425 = load i8* %424, !dbg !672
LOAD [p=*q]:   %435 = load i32* @to_stdout, align 4, !dbg !673
STORE [*p=q]:   store i32 0, i32* @pkzip, align 4, !dbg !683
STORE [*p=q]:   store i32 0, i32* @ext_header, align 4, !dbg !683
LOAD [p=*q]:   %455 = load i32* %err, align 4, !dbg !684
LOAD [p=*q]:   %435 = load i32* @to_stdout, align 4, !dbg !673
LOAD [p=*q]:   %438 = load i32* @quiet, align 4, !dbg !675
LOAD [p=*q]:   %450 = load %struct._IO_FILE** @stderr, align 8, !dbg !679
LOAD [p=*q]:   %451 = load i8** @program_name, align 8, !dbg !679
CALL [call func]:   %452 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %450, i8* getelementptr inbounds ([45 x i8]* @.str10177, i32 0, i32 0), i8* %451, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !679
STORE [*p=q]:   store i32 1, i32* %err, align 4, !dbg !681
LOAD [p=*q]:   %438 = load i32* @quiet, align 4, !dbg !675
LOAD [p=*q]:   %445 = load i32* @exit_code, align 4, !dbg !675
LOAD [p=*q]:   %441 = load %struct._IO_FILE** @stderr, align 8, !dbg !675
LOAD [p=*q]:   %442 = load i8** @program_name, align 8, !dbg !675
CALL [call func]:   %443 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %441, i8* getelementptr inbounds ([46 x i8]* @.str9176, i32 0, i32 0), i8* %442, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !675
LOAD [p=*q]:   %441 = load %struct._IO_FILE** @stderr, align 8, !dbg !675
LOAD [p=*q]:   %442 = load i8** @program_name, align 8, !dbg !675
CALL [call func]:   %443 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %441, i8* getelementptr inbounds ([46 x i8]* @.str9176, i32 0, i32 0), i8* %442, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !675
LOAD [p=*q]:   %445 = load i32* @exit_code, align 4, !dbg !675
LOAD [p=*q]:   %445 = load i32* @exit_code, align 4, !dbg !675
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !675
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !675
LOAD [p=*q]:   %450 = load %struct._IO_FILE** @stderr, align 8, !dbg !679
LOAD [p=*q]:   %451 = load i8** @program_name, align 8, !dbg !679
CALL [call func]:   %452 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %450, i8* getelementptr inbounds ([45 x i8]* @.str10177, i32 0, i32 0), i8* %451, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !679
STORE [*p=q]:   store i32 1, i32* %err, align 4, !dbg !681
STORE [*p=q]:   store i32 0, i32* @pkzip, align 4, !dbg !683
STORE [*p=q]:   store i32 0, i32* @ext_header, align 4, !dbg !683
LOAD [p=*q]:   %455 = load i32* %err, align 4, !dbg !684
STORE [*p=q]:   store i32 0, i32* @pkzip, align 4, !dbg !683
STORE [*p=q]:   store i32 0, i32* @ext_header, align 4, !dbg !683
LOAD [p=*q]:   %455 = load i32* %err, align 4, !dbg !684
STORE [*p=q]:   store i32 0, i32* %1, !dbg !685
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !686
LOAD [p=*q]:   %459 = load i32* @test, align 4, !dbg !687
STORE [*p=q]:   store i32 0, i32* %1, !dbg !685
LOAD [p=*q]:   %465 = load i32* %1, !dbg !690
Analyzing return instruction for unzip
	  %465 = load i32* %1, !dbg !690
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !686
LOAD [p=*q]:   %459 = load i32* @test, align 4, !dbg !687
LOAD [p=*q]:   %463 = load i32* %err, align 4, !dbg !689
STORE [*p=q]:   store i32 %463, i32* %1, !dbg !689
CALL [call func]:   call void @abort_gzip() #7, !dbg !688
CALL [call func]:   call void @abort_gzip() #7, !dbg !688
LOAD [p=*q]:   %463 = load i32* %err, align 4, !dbg !689
STORE [*p=q]:   store i32 %463, i32* %1, !dbg !689
LOAD [p=*q]:   %465 = load i32* %1, !dbg !690
Analyzing return instruction for unzip
	  %465 = load i32* %1, !dbg !690
LOAD [p=*q]:   %465 = load i32* %1, !dbg !690
Analyzing return instruction for unzip
	  %465 = load i32* %1, !dbg !690
[Processing][Function][check_zipfile]
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %h}, metadata !576), !dbg !580
LOAD [p=*q]:   %3 = load i32* @inptr, align 4, !dbg !581
STORE [*p=q]:   store i8* %5, i8** %h, align 8, !dbg !581
LOAD [p=*q]:   %6 = load i32* %2, align 4, !dbg !582
STORE [*p=q]:   store i32 %6, i32* @ifd, align 4, !dbg !582
LOAD [p=*q]:   %7 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i8* %9, !dbg !583
LOAD [p=*q]:   %13 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %16 = load i8* %15, !dbg !583
LOAD [p=*q]:   %22 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %25 = load i8* %24, !dbg !583
LOAD [p=*q]:   %28 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %31 = load i8* %30, !dbg !583
LOAD [p=*q]:   %37 = load i32* @inptr, align 4, !dbg !583
STORE [*p=q]:   store i32 %38, i32* @inptr, align 4, !dbg !583
LOAD [p=*q]:   %39 = load i32* @inptr, align 4, !dbg !584
LOAD [p=*q]:   %40 = load i32* @insize, align 4, !dbg !584
LOAD [p=*q]:   %75 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
LOAD [p=*q]:   %76 = load i8** @program_name, align 8, !dbg !585
CALL [call func]:   %77 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([31 x i8]* @.str167, i32 0, i32 0), i8* %76, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !585
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !587
STORE [*p=q]:   store i32 1, i32* %1, !dbg !588
LOAD [p=*q]:   %43 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %45 = load i8* %44, !dbg !584
LOAD [p=*q]:   %48 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %50 = load i8* %49, !dbg !584
LOAD [p=*q]:   %56 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %59 = load i8* %58, !dbg !584
LOAD [p=*q]:   %62 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %65 = load i8* %64, !dbg !584
LOAD [p=*q]:   %43 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %45 = load i8* %44, !dbg !584
LOAD [p=*q]:   %48 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %50 = load i8* %49, !dbg !584
LOAD [p=*q]:   %56 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %59 = load i8* %58, !dbg !584
LOAD [p=*q]:   %62 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %65 = load i8* %64, !dbg !584
LOAD [p=*q]:   %75 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
LOAD [p=*q]:   %76 = load i8** @program_name, align 8, !dbg !585
CALL [call func]:   %77 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([31 x i8]* @.str167, i32 0, i32 0), i8* %76, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !585
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !587
STORE [*p=q]:   store i32 1, i32* %1, !dbg !588
LOAD [p=*q]:   %79 = load i8** %h, align 8, !dbg !589
LOAD [p=*q]:   %81 = load i8* %80, !dbg !589
STORE [*p=q]:   store i32 %82, i32* @method, align 4, !dbg !589
LOAD [p=*q]:   %83 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %75 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
LOAD [p=*q]:   %76 = load i8** @program_name, align 8, !dbg !585
CALL [call func]:   %77 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([31 x i8]* @.str167, i32 0, i32 0), i8* %76, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !585
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !587
STORE [*p=q]:   store i32 1, i32* %1, !dbg !588
LOAD [p=*q]:   %112 = load i32* %1, !dbg !603
Analyzing return instruction for check_zipfile
	  %112 = load i32* %1, !dbg !603
LOAD [p=*q]:   %79 = load i8** %h, align 8, !dbg !589
LOAD [p=*q]:   %81 = load i8* %80, !dbg !589
STORE [*p=q]:   store i32 %82, i32* @method, align 4, !dbg !589
LOAD [p=*q]:   %83 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %86 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %93 = load i8** %h, align 8, !dbg !595
LOAD [p=*q]:   %95 = load i8* %94, !dbg !595
STORE [*p=q]:   store i32 %97, i32* @decrypt, align 4, !dbg !595
LOAD [p=*q]:   %86 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %89 = load %struct._IO_FILE** @stderr, align 8, !dbg !591
LOAD [p=*q]:   %90 = load i8** @program_name, align 8, !dbg !591
CALL [call func]:   %91 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([58 x i8]* @.str1168, i32 0, i32 0), i8* %90, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !593
STORE [*p=q]:   store i32 1, i32* %1, !dbg !594
LOAD [p=*q]:   %93 = load i8** %h, align 8, !dbg !595
LOAD [p=*q]:   %95 = load i8* %94, !dbg !595
STORE [*p=q]:   store i32 %97, i32* @decrypt, align 4, !dbg !595
LOAD [p=*q]:   %89 = load %struct._IO_FILE** @stderr, align 8, !dbg !591
LOAD [p=*q]:   %90 = load i8** @program_name, align 8, !dbg !591
CALL [call func]:   %91 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([58 x i8]* @.str1168, i32 0, i32 0), i8* %90, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !593
STORE [*p=q]:   store i32 1, i32* %1, !dbg !594
LOAD [p=*q]:   %112 = load i32* %1, !dbg !603
Analyzing return instruction for check_zipfile
	  %112 = load i32* %1, !dbg !603
LOAD [p=*q]:   %93 = load i8** %h, align 8, !dbg !595
LOAD [p=*q]:   %95 = load i8* %94, !dbg !595
STORE [*p=q]:   store i32 %97, i32* @decrypt, align 4, !dbg !595
LOAD [p=*q]:   %100 = load %struct._IO_FILE** @stderr, align 8, !dbg !596
LOAD [p=*q]:   %101 = load i8** @program_name, align 8, !dbg !596
CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([38 x i8]* @.str2169, i32 0, i32 0), i8* %101, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !596
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !598
STORE [*p=q]:   store i32 1, i32* %1, !dbg !599
LOAD [p=*q]:   %104 = load i8** %h, align 8, !dbg !600
LOAD [p=*q]:   %106 = load i8* %105, !dbg !600
STORE [*p=q]:   store i32 %110, i32* @ext_header, align 4, !dbg !600
STORE [*p=q]:   store i32 1, i32* @pkzip, align 4, !dbg !601
STORE [*p=q]:   store i32 0, i32* %1, !dbg !602
LOAD [p=*q]:   %100 = load %struct._IO_FILE** @stderr, align 8, !dbg !596
LOAD [p=*q]:   %101 = load i8** @program_name, align 8, !dbg !596
CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([38 x i8]* @.str2169, i32 0, i32 0), i8* %101, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !596
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !598
STORE [*p=q]:   store i32 1, i32* %1, !dbg !599
LOAD [p=*q]:   %112 = load i32* %1, !dbg !603
Analyzing return instruction for check_zipfile
	  %112 = load i32* %1, !dbg !603
LOAD [p=*q]:   %104 = load i8** %h, align 8, !dbg !600
LOAD [p=*q]:   %106 = load i8* %105, !dbg !600
STORE [*p=q]:   store i32 %110, i32* @ext_header, align 4, !dbg !600
STORE [*p=q]:   store i32 1, i32* @pkzip, align 4, !dbg !601
STORE [*p=q]:   store i32 0, i32* %1, !dbg !602
LOAD [p=*q]:   %112 = load i32* %1, !dbg !603
Analyzing return instruction for check_zipfile
	  %112 = load i32* %1, !dbg !603
LOAD [p=*q]:   %112 = load i32* %1, !dbg !603
Analyzing return instruction for check_zipfile
	  %112 = load i32* %1, !dbg !603
[Processing][Function][read_byte]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %b}, metadata !574), !dbg !576
LOAD [p=*q]:   %1 = load i32* @inptr, align 4, !dbg !577
LOAD [p=*q]:   %2 = load i32* @insize, align 4, !dbg !577
LOAD [p=*q]:   %5 = load i32* @inptr, align 4, !dbg !577
STORE [*p=q]:   store i32 %6, i32* @inptr, align 4, !dbg !577
LOAD [p=*q]:   %9 = load i8* %8, align 1, !dbg !577
CALL [call func]:   %12 = call i32 @fill_inbuf(i32 0), !dbg !578
LOAD [p=*q]:   %5 = load i32* @inptr, align 4, !dbg !577
STORE [*p=q]:   store i32 %6, i32* @inptr, align 4, !dbg !577
LOAD [p=*q]:   %9 = load i8* %8, align 1, !dbg !577
STORE [*p=q]:   store i32 %14, i32* %b, align 4, !dbg !578
LOAD [p=*q]:   %15 = load i32* %b, align 4, !dbg !579
CALL [call func]:   %12 = call i32 @fill_inbuf(i32 0), !dbg !578
STORE [*p=q]:   store i32 %14, i32* %b, align 4, !dbg !578
LOAD [p=*q]:   %15 = load i32* %b, align 4, !dbg !579
STORE [*p=q]:   store i32 %14, i32* %b, align 4, !dbg !578
LOAD [p=*q]:   %15 = load i32* %b, align 4, !dbg !579
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([50 x i8]* @.str2161, i32 0, i32 0)) #7, !dbg !580
LOAD [p=*q]:   %19 = load i32* %b, align 4, !dbg !581
Analyzing return instruction for read_byte
	  %20 = trunc i32 %19 to i8, !dbg !581
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([50 x i8]* @.str2161, i32 0, i32 0)) #7, !dbg !580
LOAD [p=*q]:   %19 = load i32* %b, align 4, !dbg !581
Analyzing return instruction for read_byte
	  %20 = trunc i32 %19 to i8, !dbg !581
[Processing][Function][build_tree166]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nodes}, metadata !574), !dbg !576
STORE [*p=q]:   store i32 0, i32* %nodes, align 4, !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %prefixp}, metadata !580), !dbg !582
LOAD [p=*q]:   %1 = load i32* @max_len, align 4, !dbg !583
STORE [*p=q]:   store i32 %1, i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %3 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %3 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %6 = load i32* %nodes, align 4, !dbg !585
STORE [*p=q]:   store i32 %7, i32* %nodes, align 4, !dbg !585
LOAD [p=*q]:   %8 = load i32* %nodes, align 4, !dbg !587
LOAD [p=*q]:   %9 = load i32* %len, align 4, !dbg !587
STORE [*p=q]:   store i32 %8, i32* %11, align 4, !dbg !587
LOAD [p=*q]:   %12 = load i32* %nodes, align 4, !dbg !588
LOAD [p=*q]:   %13 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %16 = load i32* %15, align 4, !dbg !588
STORE [*p=q]:   store i32 %17, i32* %15, align 4, !dbg !588
LOAD [p=*q]:   %18 = load i32* %len, align 4, !dbg !589
LOAD [p=*q]:   %21 = load i32* %20, align 4, !dbg !589
LOAD [p=*q]:   %22 = load i32* %nodes, align 4, !dbg !589
STORE [*p=q]:   store i32 %23, i32* %nodes, align 4, !dbg !589
LOAD [p=*q]:   %28 = load i32* @max_len, align 4, !dbg !592
LOAD [p=*q]:   %6 = load i32* %nodes, align 4, !dbg !585
STORE [*p=q]:   store i32 %7, i32* %nodes, align 4, !dbg !585
LOAD [p=*q]:   %8 = load i32* %nodes, align 4, !dbg !587
LOAD [p=*q]:   %9 = load i32* %len, align 4, !dbg !587
STORE [*p=q]:   store i32 %8, i32* %11, align 4, !dbg !587
LOAD [p=*q]:   %12 = load i32* %nodes, align 4, !dbg !588
LOAD [p=*q]:   %13 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %16 = load i32* %15, align 4, !dbg !588
STORE [*p=q]:   store i32 %17, i32* %15, align 4, !dbg !588
LOAD [p=*q]:   %18 = load i32* %len, align 4, !dbg !589
LOAD [p=*q]:   %21 = load i32* %20, align 4, !dbg !589
LOAD [p=*q]:   %22 = load i32* %nodes, align 4, !dbg !589
STORE [*p=q]:   store i32 %23, i32* %nodes, align 4, !dbg !589
LOAD [p=*q]:   %25 = load i32* %len, align 4, !dbg !591
STORE [*p=q]:   store i32 %26, i32* %len, align 4, !dbg !591
LOAD [p=*q]:   %25 = load i32* %len, align 4, !dbg !591
STORE [*p=q]:   store i32 %26, i32* %len, align 4, !dbg !591
LOAD [p=*q]:   %3 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %28 = load i32* @max_len, align 4, !dbg !592
LOAD [p=*q]:   %31 = load i32* @max_len, align 4, !dbg !592
LOAD [p=*q]:   %31 = load i32* @max_len, align 4, !dbg !592
STORE [*p=q]:   store i32 %34, i32* @peek_bits, align 4, !dbg !592
LOAD [p=*q]:   %35 = load i32* @peek_bits, align 4, !dbg !593
STORE [*p=q]:   store i8* %38, i8** %prefixp, align 8, !dbg !593
STORE [*p=q]:   store i32 1, i32* %len, align 4, !dbg !594
STORE [*p=q]:   store i32 %34, i32* @peek_bits, align 4, !dbg !592
LOAD [p=*q]:   %35 = load i32* @peek_bits, align 4, !dbg !593
STORE [*p=q]:   store i8* %38, i8** %prefixp, align 8, !dbg !593
STORE [*p=q]:   store i32 1, i32* %len, align 4, !dbg !594
STORE [*p=q]:   store i32 %34, i32* @peek_bits, align 4, !dbg !592
LOAD [p=*q]:   %35 = load i32* @peek_bits, align 4, !dbg !593
STORE [*p=q]:   store i8* %38, i8** %prefixp, align 8, !dbg !593
STORE [*p=q]:   store i32 1, i32* %len, align 4, !dbg !594
LOAD [p=*q]:   %40 = load i32* %len, align 4, !dbg !594
LOAD [p=*q]:   %41 = load i32* @peek_bits, align 4, !dbg !594
LOAD [p=*q]:   %40 = load i32* %len, align 4, !dbg !594
LOAD [p=*q]:   %41 = load i32* @peek_bits, align 4, !dbg !594
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %prefixes}, metadata !596), !dbg !598
LOAD [p=*q]:   %44 = load i32* %len, align 4, !dbg !599
LOAD [p=*q]:   %47 = load i32* %46, align 4, !dbg !599
LOAD [p=*q]:   %48 = load i32* @peek_bits, align 4, !dbg !599
LOAD [p=*q]:   %49 = load i32* %len, align 4, !dbg !599
STORE [*p=q]:   store i32 %51, i32* %prefixes, align 4, !dbg !599
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %prefixes}, metadata !596), !dbg !598
LOAD [p=*q]:   %44 = load i32* %len, align 4, !dbg !599
LOAD [p=*q]:   %47 = load i32* %46, align 4, !dbg !599
LOAD [p=*q]:   %48 = load i32* @peek_bits, align 4, !dbg !599
LOAD [p=*q]:   %49 = load i32* %len, align 4, !dbg !599
STORE [*p=q]:   store i32 %51, i32* %prefixes, align 4, !dbg !599
LOAD [p=*q]:   %53 = load i32* %prefixes, align 4, !dbg !600
STORE [*p=q]:   store i32 %54, i32* %prefixes, align 4, !dbg !600
LOAD [p=*q]:   %53 = load i32* %prefixes, align 4, !dbg !600
STORE [*p=q]:   store i32 %54, i32* %prefixes, align 4, !dbg !600
LOAD [p=*q]:   %57 = load i32* %len, align 4, !dbg !601
LOAD [p=*q]:   %59 = load i8** %prefixp, align 8, !dbg !601
STORE [*p=q]:   store i8* %60, i8** %prefixp, align 8, !dbg !601
STORE [*p=q]:   store i8 %58, i8* %60, !dbg !601
LOAD [p=*q]:   %57 = load i32* %len, align 4, !dbg !601
LOAD [p=*q]:   %59 = load i8** %prefixp, align 8, !dbg !601
STORE [*p=q]:   store i8* %60, i8** %prefixp, align 8, !dbg !601
STORE [*p=q]:   store i8 %58, i8* %60, !dbg !601
LOAD [p=*q]:   %53 = load i32* %prefixes, align 4, !dbg !600
STORE [*p=q]:   store i32 %54, i32* %prefixes, align 4, !dbg !600
LOAD [p=*q]:   %63 = load i32* %len, align 4, !dbg !603
STORE [*p=q]:   store i32 %64, i32* %len, align 4, !dbg !603
LOAD [p=*q]:   %63 = load i32* %len, align 4, !dbg !603
STORE [*p=q]:   store i32 %64, i32* %len, align 4, !dbg !603
LOAD [p=*q]:   %40 = load i32* %len, align 4, !dbg !594
LOAD [p=*q]:   %41 = load i32* @peek_bits, align 4, !dbg !594
LOAD [p=*q]:   %67 = load i8** %prefixp, align 8, !dbg !604
LOAD [p=*q]:   %67 = load i8** %prefixp, align 8, !dbg !604
LOAD [p=*q]:   %70 = load i8** %prefixp, align 8, !dbg !605
STORE [*p=q]:   store i8* %71, i8** %prefixp, align 8, !dbg !605
STORE [*p=q]:   store i8 0, i8* %71, !dbg !605
Analyzing return instruction for build_tree166
No return value for: build_tree166
LOAD [p=*q]:   %70 = load i8** %prefixp, align 8, !dbg !605
STORE [*p=q]:   store i8* %71, i8** %prefixp, align 8, !dbg !605
STORE [*p=q]:   store i8 0, i8* %71, !dbg !605
LOAD [p=*q]:   %67 = load i8** %prefixp, align 8, !dbg !604
Analyzing return instruction for build_tree166
No return value for: build_tree166
[Processing][Function][read_tree]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !574), !dbg !576
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %base}, metadata !577), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !579), !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %max_leaves}, metadata !581), !dbg !582
STORE [*p=q]:   store i32 1, i32* %max_leaves, align 4, !dbg !583
STORE [*p=q]:   store i64 0, i64* @orig_len, align 8, !dbg !584
STORE [*p=q]:   store i32 1, i32* %n, align 4, !dbg !585
LOAD [p=*q]:   %2 = load i32* %n, align 4, !dbg !585
LOAD [p=*q]:   %2 = load i32* %n, align 4, !dbg !585
LOAD [p=*q]:   %5 = load i64* @orig_len, align 8, !dbg !587
CALL [call func]:   %7 = call zeroext i8 @read_byte(), !dbg !588
STORE [*p=q]:   store i64 %9, i64* @orig_len, align 8, !dbg !588
CALL [call func]:   %14 = call zeroext i8 @read_byte(), !dbg !590
STORE [*p=q]:   store i32 %15, i32* @max_len, align 4, !dbg !590
LOAD [p=*q]:   %16 = load i32* @max_len, align 4, !dbg !591
LOAD [p=*q]:   %5 = load i64* @orig_len, align 8, !dbg !587
CALL [call func]:   %7 = call zeroext i8 @read_byte(), !dbg !588
STORE [*p=q]:   store i64 %9, i64* @orig_len, align 8, !dbg !588
LOAD [p=*q]:   %11 = load i32* %n, align 4, !dbg !589
STORE [*p=q]:   store i32 %12, i32* %n, align 4, !dbg !589
LOAD [p=*q]:   %11 = load i32* %n, align 4, !dbg !589
STORE [*p=q]:   store i32 %12, i32* %n, align 4, !dbg !589
LOAD [p=*q]:   %2 = load i32* %n, align 4, !dbg !585
CALL [call func]:   %14 = call zeroext i8 @read_byte(), !dbg !590
STORE [*p=q]:   store i32 %15, i32* @max_len, align 4, !dbg !590
LOAD [p=*q]:   %16 = load i32* @max_len, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i32* @max_len, align 4, !dbg !591
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([64 x i8]* @.str3162, i32 0, i32 0)) #7, !dbg !592
LOAD [p=*q]:   %19 = load i32* @max_len, align 4, !dbg !591
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !593
STORE [*p=q]:   store i32 1, i32* %len, align 4, !dbg !594
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([64 x i8]* @.str3162, i32 0, i32 0)) #7, !dbg !592
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([64 x i8]* @.str3162, i32 0, i32 0)) #7, !dbg !592
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !593
STORE [*p=q]:   store i32 1, i32* %len, align 4, !dbg !594
LOAD [p=*q]:   %24 = load i32* %len, align 4, !dbg !594
LOAD [p=*q]:   %25 = load i32* @max_len, align 4, !dbg !594
LOAD [p=*q]:   %24 = load i32* %len, align 4, !dbg !594
LOAD [p=*q]:   %25 = load i32* @max_len, align 4, !dbg !594
CALL [call func]:   %28 = call zeroext i8 @read_byte(), !dbg !596
LOAD [p=*q]:   %30 = load i32* %len, align 4, !dbg !596
STORE [*p=q]:   store i32 %29, i32* %32, align 4, !dbg !596
LOAD [p=*q]:   %33 = load i32* %max_leaves, align 4, !dbg !598
LOAD [p=*q]:   %34 = load i32* %len, align 4, !dbg !598
LOAD [p=*q]:   %35 = load i32* @max_len, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i32* %len, align 4, !dbg !598
LOAD [p=*q]:   %42 = load i32* %41, align 4, !dbg !598
LOAD [p=*q]:   %65 = load i32* %n, align 4, !dbg !604
CALL [call func]:   %28 = call zeroext i8 @read_byte(), !dbg !596
LOAD [p=*q]:   %30 = load i32* %len, align 4, !dbg !596
STORE [*p=q]:   store i32 %29, i32* %32, align 4, !dbg !596
LOAD [p=*q]:   %33 = load i32* %max_leaves, align 4, !dbg !598
LOAD [p=*q]:   %34 = load i32* %len, align 4, !dbg !598
LOAD [p=*q]:   %35 = load i32* @max_len, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i32* %len, align 4, !dbg !598
LOAD [p=*q]:   %42 = load i32* %41, align 4, !dbg !598
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([32 x i8]* @.str4163, i32 0, i32 0)) #7, !dbg !599
LOAD [p=*q]:   %46 = load i32* %max_leaves, align 4, !dbg !600
LOAD [p=*q]:   %47 = load i32* %len, align 4, !dbg !600
LOAD [p=*q]:   %50 = load i32* %49, align 4, !dbg !600
STORE [*p=q]:   store i32 %54, i32* %max_leaves, align 4, !dbg !600
LOAD [p=*q]:   %55 = load i32* %len, align 4, !dbg !601
LOAD [p=*q]:   %58 = load i32* %57, align 4, !dbg !601
LOAD [p=*q]:   %59 = load i32* %n, align 4, !dbg !601
STORE [*p=q]:   store i32 %60, i32* %n, align 4, !dbg !601
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([32 x i8]* @.str4163, i32 0, i32 0)) #7, !dbg !599
LOAD [p=*q]:   %46 = load i32* %max_leaves, align 4, !dbg !600
LOAD [p=*q]:   %47 = load i32* %len, align 4, !dbg !600
LOAD [p=*q]:   %50 = load i32* %49, align 4, !dbg !600
STORE [*p=q]:   store i32 %54, i32* %max_leaves, align 4, !dbg !600
LOAD [p=*q]:   %55 = load i32* %len, align 4, !dbg !601
LOAD [p=*q]:   %58 = load i32* %57, align 4, !dbg !601
LOAD [p=*q]:   %59 = load i32* %n, align 4, !dbg !601
STORE [*p=q]:   store i32 %60, i32* %n, align 4, !dbg !601
LOAD [p=*q]:   %62 = load i32* %len, align 4, !dbg !603
STORE [*p=q]:   store i32 %63, i32* %len, align 4, !dbg !603
LOAD [p=*q]:   %62 = load i32* %len, align 4, !dbg !603
STORE [*p=q]:   store i32 %63, i32* %len, align 4, !dbg !603
LOAD [p=*q]:   %24 = load i32* %len, align 4, !dbg !594
LOAD [p=*q]:   %25 = load i32* @max_len, align 4, !dbg !594
LOAD [p=*q]:   %65 = load i32* %n, align 4, !dbg !604
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([32 x i8]* @.str4163, i32 0, i32 0)) #7, !dbg !605
LOAD [p=*q]:   %69 = load i32* @max_len, align 4, !dbg !607
LOAD [p=*q]:   %72 = load i32* %71, align 4, !dbg !607
STORE [*p=q]:   store i32 %73, i32* %71, align 4, !dbg !607
STORE [*p=q]:   store i32 0, i32* %base, align 4, !dbg !608
STORE [*p=q]:   store i32 1, i32* %len, align 4, !dbg !609
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([32 x i8]* @.str4163, i32 0, i32 0)) #7, !dbg !605
LOAD [p=*q]:   %69 = load i32* @max_len, align 4, !dbg !607
LOAD [p=*q]:   %72 = load i32* %71, align 4, !dbg !607
STORE [*p=q]:   store i32 %73, i32* %71, align 4, !dbg !607
STORE [*p=q]:   store i32 0, i32* %base, align 4, !dbg !608
STORE [*p=q]:   store i32 1, i32* %len, align 4, !dbg !609
LOAD [p=*q]:   %75 = load i32* %len, align 4, !dbg !609
LOAD [p=*q]:   %76 = load i32* @max_len, align 4, !dbg !609
LOAD [p=*q]:   %75 = load i32* %len, align 4, !dbg !609
LOAD [p=*q]:   %76 = load i32* @max_len, align 4, !dbg !609
LOAD [p=*q]:   %79 = load i32* %base, align 4, !dbg !611
LOAD [p=*q]:   %80 = load i32* %len, align 4, !dbg !611
STORE [*p=q]:   store i32 %79, i32* %82, align 4, !dbg !611
LOAD [p=*q]:   %83 = load i32* %len, align 4, !dbg !613
LOAD [p=*q]:   %86 = load i32* %85, align 4, !dbg !613
STORE [*p=q]:   store i32 %86, i32* %n, align 4, !dbg !613
LOAD [p=*q]:   %104 = load i32* @max_len, align 4, !dbg !621
LOAD [p=*q]:   %107 = load i32* %106, align 4, !dbg !621
STORE [*p=q]:   store i32 %108, i32* %106, align 4, !dbg !621
Analyzing return instruction for read_tree
No return value for: read_tree
LOAD [p=*q]:   %79 = load i32* %base, align 4, !dbg !611
LOAD [p=*q]:   %80 = load i32* %len, align 4, !dbg !611
STORE [*p=q]:   store i32 %79, i32* %82, align 4, !dbg !611
LOAD [p=*q]:   %83 = load i32* %len, align 4, !dbg !613
LOAD [p=*q]:   %86 = load i32* %85, align 4, !dbg !613
STORE [*p=q]:   store i32 %86, i32* %n, align 4, !dbg !613
LOAD [p=*q]:   %88 = load i32* %n, align 4, !dbg !613
LOAD [p=*q]:   %88 = load i32* %n, align 4, !dbg !613
CALL [call func]:   %91 = call zeroext i8 @read_byte(), !dbg !615
LOAD [p=*q]:   %92 = load i32* %base, align 4, !dbg !615
STORE [*p=q]:   store i32 %93, i32* %base, align 4, !dbg !615
STORE [*p=q]:   store i8 %91, i8* %95, align 1, !dbg !615
CALL [call func]:   %91 = call zeroext i8 @read_byte(), !dbg !615
LOAD [p=*q]:   %92 = load i32* %base, align 4, !dbg !615
STORE [*p=q]:   store i32 %93, i32* %base, align 4, !dbg !615
STORE [*p=q]:   store i8 %91, i8* %95, align 1, !dbg !615
LOAD [p=*q]:   %97 = load i32* %n, align 4, !dbg !618
STORE [*p=q]:   store i32 %98, i32* %n, align 4, !dbg !618
LOAD [p=*q]:   %97 = load i32* %n, align 4, !dbg !618
STORE [*p=q]:   store i32 %98, i32* %n, align 4, !dbg !618
LOAD [p=*q]:   %88 = load i32* %n, align 4, !dbg !613
LOAD [p=*q]:   %101 = load i32* %len, align 4, !dbg !620
STORE [*p=q]:   store i32 %102, i32* %len, align 4, !dbg !620
LOAD [p=*q]:   %101 = load i32* %len, align 4, !dbg !620
STORE [*p=q]:   store i32 %102, i32* %len, align 4, !dbg !620
LOAD [p=*q]:   %75 = load i32* %len, align 4, !dbg !609
LOAD [p=*q]:   %76 = load i32* @max_len, align 4, !dbg !609
LOAD [p=*q]:   %104 = load i32* @max_len, align 4, !dbg !621
LOAD [p=*q]:   %107 = load i32* %106, align 4, !dbg !621
STORE [*p=q]:   store i32 %108, i32* %106, align 4, !dbg !621
Analyzing return instruction for read_tree
No return value for: read_tree
[Processing][Function][unpack]
STORE [*p=q]:   store i32 %in, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %out, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !578), !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %eob}, metadata !581), !dbg !582
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %peek}, metadata !583), !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %peek_mask}, metadata !585), !dbg !586
LOAD [p=*q]:   %3 = load i32* %1, align 4, !dbg !587
STORE [*p=q]:   store i32 %3, i32* @ifd, align 4, !dbg !587
LOAD [p=*q]:   %4 = load i32* %2, align 4, !dbg !588
STORE [*p=q]:   store i32 %4, i32* @ofd, align 4, !dbg !588
CALL [call func]:   call void @read_tree(), !dbg !589
CALL [call func]:   call void @build_tree166(), !dbg !590
STORE [*p=q]:   store i32 0, i32* @valid, align 4, !dbg !591
STORE [*p=q]:   store i64 0, i64* @bitbuf158, align 8, !dbg !591
LOAD [p=*q]:   %5 = load i32* @peek_bits, align 4, !dbg !592
STORE [*p=q]:   store i32 %7, i32* %peek_mask, align 4, !dbg !592
LOAD [p=*q]:   %8 = load i32* @max_len, align 4, !dbg !593
LOAD [p=*q]:   %11 = load i32* %10, align 4, !dbg !593
STORE [*p=q]:   store i32 %12, i32* %eob, align 4, !dbg !593
LOAD [p=*q]:   %15 = load i32* @valid, align 4, !dbg !596
LOAD [p=*q]:   %16 = load i32* @peek_bits, align 4, !dbg !596
LOAD [p=*q]:   %15 = load i32* @valid, align 4, !dbg !596
LOAD [p=*q]:   %16 = load i32* @peek_bits, align 4, !dbg !596
LOAD [p=*q]:   %19 = load i64* @bitbuf158, align 8, !dbg !596
CALL [call func]:   %21 = call zeroext i8 @read_byte(), !dbg !596
STORE [*p=q]:   store i64 %23, i64* @bitbuf158, align 8, !dbg !596
LOAD [p=*q]:   %24 = load i32* @valid, align 4, !dbg !596
STORE [*p=q]:   store i32 %25, i32* @valid, align 4, !dbg !596
LOAD [p=*q]:   %27 = load i64* @bitbuf158, align 8, !dbg !596
LOAD [p=*q]:   %28 = load i32* @valid, align 4, !dbg !596
LOAD [p=*q]:   %29 = load i32* @peek_bits, align 4, !dbg !596
LOAD [p=*q]:   %33 = load i32* %peek_mask, align 4, !dbg !596
STORE [*p=q]:   store i32 %36, i32* %peek, align 4, !dbg !596
LOAD [p=*q]:   %37 = load i32* %peek, align 4, !dbg !599
LOAD [p=*q]:   %40 = load i8* %39, align 1, !dbg !599
STORE [*p=q]:   store i32 %41, i32* %len, align 4, !dbg !599
LOAD [p=*q]:   %42 = load i32* %len, align 4, !dbg !600
LOAD [p=*q]:   %19 = load i64* @bitbuf158, align 8, !dbg !596
CALL [call func]:   %21 = call zeroext i8 @read_byte(), !dbg !596
STORE [*p=q]:   store i64 %23, i64* @bitbuf158, align 8, !dbg !596
LOAD [p=*q]:   %24 = load i32* @valid, align 4, !dbg !596
STORE [*p=q]:   store i32 %25, i32* @valid, align 4, !dbg !596
LOAD [p=*q]:   %15 = load i32* @valid, align 4, !dbg !596
LOAD [p=*q]:   %16 = load i32* @peek_bits, align 4, !dbg !596
LOAD [p=*q]:   %27 = load i64* @bitbuf158, align 8, !dbg !596
LOAD [p=*q]:   %28 = load i32* @valid, align 4, !dbg !596
LOAD [p=*q]:   %29 = load i32* @peek_bits, align 4, !dbg !596
LOAD [p=*q]:   %33 = load i32* %peek_mask, align 4, !dbg !596
STORE [*p=q]:   store i32 %36, i32* %peek, align 4, !dbg !596
LOAD [p=*q]:   %37 = load i32* %peek, align 4, !dbg !599
LOAD [p=*q]:   %40 = load i8* %39, align 1, !dbg !599
STORE [*p=q]:   store i32 %41, i32* %len, align 4, !dbg !599
LOAD [p=*q]:   %42 = load i32* %len, align 4, !dbg !600
LOAD [p=*q]:   %45 = load i32* @peek_bits, align 4, !dbg !601
LOAD [p=*q]:   %46 = load i32* %len, align 4, !dbg !601
LOAD [p=*q]:   %48 = load i32* %peek, align 4, !dbg !601
STORE [*p=q]:   store i32 %49, i32* %peek, align 4, !dbg !601
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %mask}, metadata !604), !dbg !606
LOAD [p=*q]:   %51 = load i32* %peek_mask, align 4, !dbg !607
STORE [*p=q]:   store i64 %52, i64* %mask, align 8, !dbg !607
LOAD [p=*q]:   %53 = load i32* @peek_bits, align 4, !dbg !608
STORE [*p=q]:   store i32 %53, i32* %len, align 4, !dbg !608
LOAD [p=*q]:   %45 = load i32* @peek_bits, align 4, !dbg !601
LOAD [p=*q]:   %46 = load i32* %len, align 4, !dbg !601
LOAD [p=*q]:   %48 = load i32* %peek, align 4, !dbg !601
STORE [*p=q]:   store i32 %49, i32* %peek, align 4, !dbg !601
LOAD [p=*q]:   %91 = load i32* %peek, align 4, !dbg !615
LOAD [p=*q]:   %92 = load i32* %eob, align 4, !dbg !615
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %mask}, metadata !604), !dbg !606
LOAD [p=*q]:   %51 = load i32* %peek_mask, align 4, !dbg !607
STORE [*p=q]:   store i64 %52, i64* %mask, align 8, !dbg !607
LOAD [p=*q]:   %53 = load i32* @peek_bits, align 4, !dbg !608
STORE [*p=q]:   store i32 %53, i32* %len, align 4, !dbg !608
LOAD [p=*q]:   %55 = load i32* %peek, align 4, !dbg !609
LOAD [p=*q]:   %56 = load i32* %len, align 4, !dbg !609
LOAD [p=*q]:   %59 = load i32* %58, align 4, !dbg !609
LOAD [p=*q]:   %55 = load i32* %peek, align 4, !dbg !609
LOAD [p=*q]:   %56 = load i32* %len, align 4, !dbg !609
LOAD [p=*q]:   %59 = load i32* %58, align 4, !dbg !609
LOAD [p=*q]:   %62 = load i32* %len, align 4, !dbg !610
STORE [*p=q]:   store i32 %63, i32* %len, align 4, !dbg !610
LOAD [p=*q]:   %64 = load i64* %mask, align 8, !dbg !610
STORE [*p=q]:   store i64 %66, i64* %mask, align 8, !dbg !610
LOAD [p=*q]:   %62 = load i32* %len, align 4, !dbg !610
STORE [*p=q]:   store i32 %63, i32* %len, align 4, !dbg !610
LOAD [p=*q]:   %64 = load i64* %mask, align 8, !dbg !610
STORE [*p=q]:   store i64 %66, i64* %mask, align 8, !dbg !610
LOAD [p=*q]:   %68 = load i32* @valid, align 4, !dbg !612
LOAD [p=*q]:   %69 = load i32* %len, align 4, !dbg !612
LOAD [p=*q]:   %68 = load i32* @valid, align 4, !dbg !612
LOAD [p=*q]:   %69 = load i32* %len, align 4, !dbg !612
LOAD [p=*q]:   %72 = load i64* @bitbuf158, align 8, !dbg !612
CALL [call func]:   %74 = call zeroext i8 @read_byte(), !dbg !612
STORE [*p=q]:   store i64 %76, i64* @bitbuf158, align 8, !dbg !612
LOAD [p=*q]:   %77 = load i32* @valid, align 4, !dbg !612
STORE [*p=q]:   store i32 %78, i32* @valid, align 4, !dbg !612
LOAD [p=*q]:   %80 = load i64* @bitbuf158, align 8, !dbg !612
LOAD [p=*q]:   %81 = load i32* @valid, align 4, !dbg !612
LOAD [p=*q]:   %82 = load i32* %len, align 4, !dbg !612
LOAD [p=*q]:   %86 = load i64* %mask, align 8, !dbg !612
STORE [*p=q]:   store i32 %88, i32* %peek, align 4, !dbg !612
LOAD [p=*q]:   %72 = load i64* @bitbuf158, align 8, !dbg !612
CALL [call func]:   %74 = call zeroext i8 @read_byte(), !dbg !612
STORE [*p=q]:   store i64 %76, i64* @bitbuf158, align 8, !dbg !612
LOAD [p=*q]:   %77 = load i32* @valid, align 4, !dbg !612
STORE [*p=q]:   store i32 %78, i32* @valid, align 4, !dbg !612
LOAD [p=*q]:   %68 = load i32* @valid, align 4, !dbg !612
LOAD [p=*q]:   %69 = load i32* %len, align 4, !dbg !612
LOAD [p=*q]:   %80 = load i64* @bitbuf158, align 8, !dbg !612
LOAD [p=*q]:   %81 = load i32* @valid, align 4, !dbg !612
LOAD [p=*q]:   %82 = load i32* %len, align 4, !dbg !612
LOAD [p=*q]:   %86 = load i64* %mask, align 8, !dbg !612
STORE [*p=q]:   store i32 %88, i32* %peek, align 4, !dbg !612
LOAD [p=*q]:   %55 = load i32* %peek, align 4, !dbg !609
LOAD [p=*q]:   %56 = load i32* %len, align 4, !dbg !609
LOAD [p=*q]:   %59 = load i32* %58, align 4, !dbg !609
LOAD [p=*q]:   %91 = load i32* %peek, align 4, !dbg !615
LOAD [p=*q]:   %92 = load i32* %eob, align 4, !dbg !615
LOAD [p=*q]:   %91 = load i32* %peek, align 4, !dbg !615
LOAD [p=*q]:   %92 = load i32* %eob, align 4, !dbg !615
LOAD [p=*q]:   %96 = load i32* %eob, align 4, !dbg !617
LOAD [p=*q]:   %97 = load i32* %peek, align 4, !dbg !617
CALL [call func]:   call void @flush_window(), !dbg !623
LOAD [p=*q]:   %122 = load i64* @orig_len, align 8, !dbg !624
LOAD [p=*q]:   %123 = load i64* @bytes_out, align 8, !dbg !624
LOAD [p=*q]:   %96 = load i32* %eob, align 4, !dbg !617
LOAD [p=*q]:   %97 = load i32* %peek, align 4, !dbg !617
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([43 x i8]* @.str159, i32 0, i32 0)) #7, !dbg !618
LOAD [p=*q]:   %101 = load i32* %peek, align 4, !dbg !619
LOAD [p=*q]:   %102 = load i32* %len, align 4, !dbg !619
LOAD [p=*q]:   %105 = load i32* %104, align 4, !dbg !619
LOAD [p=*q]:   %109 = load i8* %108, align 1, !dbg !619
LOAD [p=*q]:   %110 = load i32* @outcnt, align 4, !dbg !619
STORE [*p=q]:   store i32 %111, i32* @outcnt, align 4, !dbg !619
STORE [*p=q]:   store i8 %109, i8* %113, align 1, !dbg !619
LOAD [p=*q]:   %114 = load i32* @outcnt, align 4, !dbg !619
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([43 x i8]* @.str159, i32 0, i32 0)) #7, !dbg !618
LOAD [p=*q]:   %101 = load i32* %peek, align 4, !dbg !619
LOAD [p=*q]:   %102 = load i32* %len, align 4, !dbg !619
LOAD [p=*q]:   %105 = load i32* %104, align 4, !dbg !619
LOAD [p=*q]:   %109 = load i8* %108, align 1, !dbg !619
LOAD [p=*q]:   %110 = load i32* @outcnt, align 4, !dbg !619
STORE [*p=q]:   store i32 %111, i32* @outcnt, align 4, !dbg !619
STORE [*p=q]:   store i8 %109, i8* %113, align 1, !dbg !619
LOAD [p=*q]:   %114 = load i32* @outcnt, align 4, !dbg !619
CALL [call func]:   call void @flush_window(), !dbg !619
LOAD [p=*q]:   %118 = load i32* %len, align 4, !dbg !621
LOAD [p=*q]:   %119 = load i32* @valid, align 4, !dbg !621
STORE [*p=q]:   store i32 %120, i32* @valid, align 4, !dbg !621
CALL [call func]:   call void @flush_window(), !dbg !619
LOAD [p=*q]:   %118 = load i32* %len, align 4, !dbg !621
LOAD [p=*q]:   %119 = load i32* @valid, align 4, !dbg !621
STORE [*p=q]:   store i32 %120, i32* @valid, align 4, !dbg !621
LOAD [p=*q]:   %118 = load i32* %len, align 4, !dbg !621
LOAD [p=*q]:   %119 = load i32* @valid, align 4, !dbg !621
STORE [*p=q]:   store i32 %120, i32* @valid, align 4, !dbg !621
CALL [call func]:   call void @flush_window(), !dbg !623
LOAD [p=*q]:   %122 = load i64* @orig_len, align 8, !dbg !624
LOAD [p=*q]:   %123 = load i64* @bytes_out, align 8, !dbg !624
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([38 x i8]* @.str1160, i32 0, i32 0)) #7, !dbg !625
Analyzing return instruction for unpack
	i32 0
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([38 x i8]* @.str1160, i32 0, i32 0)) #7, !dbg !625
Analyzing return instruction for unpack
	i32 0
[Processing][Function][unlzw]
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %out, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %stackp}, metadata !578), !dbg !582
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %code}, metadata !583), !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %finchar}, metadata !586), !dbg !587
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %oldcode}, metadata !588), !dbg !589
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %incode}, metadata !590), !dbg !591
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %inbits}, metadata !592), !dbg !593
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %posbits}, metadata !594), !dbg !595
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %outpos}, metadata !596), !dbg !597
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %bitmask}, metadata !598), !dbg !599
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %free_ent}, metadata !600), !dbg !601
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %maxcode}, metadata !602), !dbg !603
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %maxmaxcode}, metadata !604), !dbg !605
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n_bits}, metadata !606), !dbg !607
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %rsize}, metadata !608), !dbg !609
LOAD [p=*q]:   %4 = load i32* @inptr, align 4, !dbg !610
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !610
LOAD [p=*q]:   %8 = load i32* @inptr, align 4, !dbg !610
STORE [*p=q]:   store i32 %9, i32* @inptr, align 4, !dbg !610
LOAD [p=*q]:   %12 = load i8* %11, align 1, !dbg !610
CALL [call func]:   %15 = call i32 @fill_inbuf(i32 0), !dbg !611
LOAD [p=*q]:   %8 = load i32* @inptr, align 4, !dbg !610
STORE [*p=q]:   store i32 %9, i32* @inptr, align 4, !dbg !610
LOAD [p=*q]:   %12 = load i8* %11, align 1, !dbg !610
STORE [*p=q]:   store i32 %17, i32* @maxbits, align 4, !dbg !611
LOAD [p=*q]:   %18 = load i32* @maxbits, align 4, !dbg !612
STORE [*p=q]:   store i32 %19, i32* @block_mode, align 4, !dbg !612
LOAD [p=*q]:   %20 = load i32* @maxbits, align 4, !dbg !613
CALL [call func]:   %15 = call i32 @fill_inbuf(i32 0), !dbg !611
STORE [*p=q]:   store i32 %17, i32* @maxbits, align 4, !dbg !611
LOAD [p=*q]:   %18 = load i32* @maxbits, align 4, !dbg !612
STORE [*p=q]:   store i32 %19, i32* @block_mode, align 4, !dbg !612
LOAD [p=*q]:   %20 = load i32* @maxbits, align 4, !dbg !613
STORE [*p=q]:   store i32 %17, i32* @maxbits, align 4, !dbg !611
LOAD [p=*q]:   %18 = load i32* @maxbits, align 4, !dbg !612
STORE [*p=q]:   store i32 %19, i32* @block_mode, align 4, !dbg !612
LOAD [p=*q]:   %20 = load i32* @maxbits, align 4, !dbg !613
LOAD [p=*q]:   %24 = load i32* @quiet, align 4, !dbg !614
LOAD [p=*q]:   %38 = load i32* @maxbits, align 4, !dbg !618
STORE [*p=q]:   store i32 %39, i32* @maxbits, align 4, !dbg !618
LOAD [p=*q]:   %40 = load i32* @maxbits, align 4, !dbg !619
STORE [*p=q]:   store i64 %42, i64* %maxmaxcode, align 8, !dbg !619
LOAD [p=*q]:   %43 = load i32* @maxbits, align 4, !dbg !620
LOAD [p=*q]:   %24 = load i32* @quiet, align 4, !dbg !614
LOAD [p=*q]:   %33 = load i32* @exit_code, align 4, !dbg !614
LOAD [p=*q]:   %27 = load %struct._IO_FILE** @stderr, align 8, !dbg !614
LOAD [p=*q]:   %28 = load i8** @program_name, align 8, !dbg !614
LOAD [p=*q]:   %29 = load i32* @maxbits, align 4, !dbg !614
CALL [call func]:   %31 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([38 x i8]* @.str152, i32 0, i32 0), i8* %28, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %30), !dbg !614
LOAD [p=*q]:   %27 = load %struct._IO_FILE** @stderr, align 8, !dbg !614
LOAD [p=*q]:   %28 = load i8** @program_name, align 8, !dbg !614
LOAD [p=*q]:   %29 = load i32* @maxbits, align 4, !dbg !614
CALL [call func]:   %31 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([38 x i8]* @.str152, i32 0, i32 0), i8* %28, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %30), !dbg !614
LOAD [p=*q]:   %33 = load i32* @exit_code, align 4, !dbg !614
LOAD [p=*q]:   %33 = load i32* @exit_code, align 4, !dbg !614
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !614
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !614
LOAD [p=*q]:   %38 = load i32* @maxbits, align 4, !dbg !618
STORE [*p=q]:   store i32 %39, i32* @maxbits, align 4, !dbg !618
LOAD [p=*q]:   %40 = load i32* @maxbits, align 4, !dbg !619
STORE [*p=q]:   store i64 %42, i64* %maxmaxcode, align 8, !dbg !619
LOAD [p=*q]:   %43 = load i32* @maxbits, align 4, !dbg !620
LOAD [p=*q]:   %38 = load i32* @maxbits, align 4, !dbg !618
STORE [*p=q]:   store i32 %39, i32* @maxbits, align 4, !dbg !618
LOAD [p=*q]:   %40 = load i32* @maxbits, align 4, !dbg !619
STORE [*p=q]:   store i64 %42, i64* %maxmaxcode, align 8, !dbg !619
LOAD [p=*q]:   %43 = load i32* @maxbits, align 4, !dbg !620
LOAD [p=*q]:   %46 = load %struct._IO_FILE** @stderr, align 8, !dbg !621
LOAD [p=*q]:   %47 = load i8** @program_name, align 8, !dbg !621
LOAD [p=*q]:   %48 = load i32* @maxbits, align 4, !dbg !621
CALL [call func]:   %49 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([59 x i8]* @.str1153, i32 0, i32 0), i8* %47, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %48, i32 16), !dbg !621
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !623
STORE [*p=q]:   store i32 1, i32* %1, !dbg !624
LOAD [p=*q]:   %51 = load i32* @insize, align 4, !dbg !625
STORE [*p=q]:   store i32 %51, i32* %rsize, align 4, !dbg !625
STORE [*p=q]:   store i32 9, i32* %n_bits, align 4, !dbg !626
STORE [*p=q]:   store i64 511, i64* %maxcode, align 8, !dbg !626
LOAD [p=*q]:   %52 = load i32* %n_bits, align 4, !dbg !627
STORE [*p=q]:   store i32 %54, i32* %bitmask, align 4, !dbg !627
STORE [*p=q]:   store i64 -1, i64* %oldcode, align 8, !dbg !628
STORE [*p=q]:   store i32 0, i32* %finchar, align 4, !dbg !629
STORE [*p=q]:   store i32 0, i32* %outpos, align 4, !dbg !630
LOAD [p=*q]:   %55 = load i32* @inptr, align 4, !dbg !631
STORE [*p=q]:   store i64 %57, i64* %posbits, align 8, !dbg !631
LOAD [p=*q]:   %58 = load i32* @block_mode, align 4, !dbg !632
STORE [*p=q]:   store i64 %61, i64* %free_ent, align 8, !dbg !632
CALL [call func]:   call void @llvm.memset.p0i8.i64(i8* bitcast ([65536 x i16]* @prev to i8*), i8 0, i64 256, i32 1, i1 false), !dbg !633
STORE [*p=q]:   store i64 255, i64* %code, align 8, !dbg !634
LOAD [p=*q]:   %46 = load %struct._IO_FILE** @stderr, align 8, !dbg !621
LOAD [p=*q]:   %47 = load i8** @program_name, align 8, !dbg !621
LOAD [p=*q]:   %48 = load i32* @maxbits, align 4, !dbg !621
CALL [call func]:   %49 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([59 x i8]* @.str1153, i32 0, i32 0), i8* %47, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %48, i32 16), !dbg !621
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !623
STORE [*p=q]:   store i32 1, i32* %1, !dbg !624
LOAD [p=*q]:   %417 = load i32* %1, !dbg !765
Analyzing return instruction for unlzw
	  %417 = load i32* %1, !dbg !765
LOAD [p=*q]:   %51 = load i32* @insize, align 4, !dbg !625
STORE [*p=q]:   store i32 %51, i32* %rsize, align 4, !dbg !625
STORE [*p=q]:   store i32 9, i32* %n_bits, align 4, !dbg !626
STORE [*p=q]:   store i64 511, i64* %maxcode, align 8, !dbg !626
LOAD [p=*q]:   %52 = load i32* %n_bits, align 4, !dbg !627
STORE [*p=q]:   store i32 %54, i32* %bitmask, align 4, !dbg !627
STORE [*p=q]:   store i64 -1, i64* %oldcode, align 8, !dbg !628
STORE [*p=q]:   store i32 0, i32* %finchar, align 4, !dbg !629
STORE [*p=q]:   store i32 0, i32* %outpos, align 4, !dbg !630
LOAD [p=*q]:   %55 = load i32* @inptr, align 4, !dbg !631
STORE [*p=q]:   store i64 %57, i64* %posbits, align 8, !dbg !631
LOAD [p=*q]:   %58 = load i32* @block_mode, align 4, !dbg !632
STORE [*p=q]:   store i64 %61, i64* %free_ent, align 8, !dbg !632
CALL [call func]:   call void @llvm.memset.p0i8.i64(i8* bitcast ([65536 x i16]* @prev to i8*), i8 0, i64 256, i32 1, i1 false), !dbg !633
STORE [*p=q]:   store i64 255, i64* %code, align 8, !dbg !634
LOAD [p=*q]:   %63 = load i64* %code, align 8, !dbg !634
LOAD [p=*q]:   %63 = load i64* %code, align 8, !dbg !634
LOAD [p=*q]:   %66 = load i64* %code, align 8, !dbg !636
LOAD [p=*q]:   %68 = load i64* %code, align 8, !dbg !636
STORE [*p=q]:   store i8 %67, i8* %69, align 1, !dbg !636
LOAD [p=*q]:   %66 = load i64* %code, align 8, !dbg !636
LOAD [p=*q]:   %68 = load i64* %code, align 8, !dbg !636
STORE [*p=q]:   store i8 %67, i8* %69, align 1, !dbg !636
LOAD [p=*q]:   %71 = load i64* %code, align 8, !dbg !639
STORE [*p=q]:   store i64 %72, i64* %code, align 8, !dbg !639
LOAD [p=*q]:   %71 = load i64* %code, align 8, !dbg !639
STORE [*p=q]:   store i64 %72, i64* %code, align 8, !dbg !639
LOAD [p=*q]:   %63 = load i64* %code, align 8, !dbg !634
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !641), !dbg !643
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !644), !dbg !645
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %o}, metadata !646), !dbg !647
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !641), !dbg !643
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !644), !dbg !645
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %o}, metadata !646), !dbg !647
LOAD [p=*q]:   %76 = load i64* %posbits, align 8, !dbg !649
STORE [*p=q]:   store i32 %78, i32* %o, align 4, !dbg !649
LOAD [p=*q]:   %79 = load i32* %o, align 4, !dbg !650
LOAD [p=*q]:   %80 = load i32* @insize, align 4, !dbg !650
LOAD [p=*q]:   %76 = load i64* %posbits, align 8, !dbg !649
STORE [*p=q]:   store i32 %78, i32* %o, align 4, !dbg !649
LOAD [p=*q]:   %79 = load i32* %o, align 4, !dbg !650
LOAD [p=*q]:   %80 = load i32* @insize, align 4, !dbg !650
LOAD [p=*q]:   %83 = load i32* @insize, align 4, !dbg !650
LOAD [p=*q]:   %84 = load i32* %o, align 4, !dbg !650
LOAD [p=*q]:   %83 = load i32* @insize, align 4, !dbg !650
LOAD [p=*q]:   %84 = load i32* %o, align 4, !dbg !650
STORE [*p=q]:   store i32 %88, i32* %e, align 4, !dbg !650
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !651
STORE [*p=q]:   store i32 %88, i32* %e, align 4, !dbg !650
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !651
STORE [*p=q]:   store i32 %88, i32* %e, align 4, !dbg !650
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !651
LOAD [p=*q]:   %90 = load i32* %i, align 4, !dbg !651
LOAD [p=*q]:   %91 = load i32* %e, align 4, !dbg !651
LOAD [p=*q]:   %90 = load i32* %i, align 4, !dbg !651
LOAD [p=*q]:   %91 = load i32* %e, align 4, !dbg !651
LOAD [p=*q]:   %94 = load i32* %i, align 4, !dbg !653
LOAD [p=*q]:   %95 = load i32* %o, align 4, !dbg !653
LOAD [p=*q]:   %99 = load i8* %98, align 1, !dbg !653
LOAD [p=*q]:   %100 = load i32* %i, align 4, !dbg !653
STORE [*p=q]:   store i8 %99, i8* %102, align 1, !dbg !653
LOAD [p=*q]:   %107 = load i32* %e, align 4, !dbg !657
STORE [*p=q]:   store i32 %107, i32* @insize, align 4, !dbg !657
STORE [*p=q]:   store i64 0, i64* %posbits, align 8, !dbg !658
LOAD [p=*q]:   %108 = load i32* @insize, align 4, !dbg !659
LOAD [p=*q]:   %94 = load i32* %i, align 4, !dbg !653
LOAD [p=*q]:   %95 = load i32* %o, align 4, !dbg !653
LOAD [p=*q]:   %99 = load i8* %98, align 1, !dbg !653
LOAD [p=*q]:   %100 = load i32* %i, align 4, !dbg !653
STORE [*p=q]:   store i8 %99, i8* %102, align 1, !dbg !653
LOAD [p=*q]:   %104 = load i32* %i, align 4, !dbg !656
STORE [*p=q]:   store i32 %105, i32* %i, align 4, !dbg !656
LOAD [p=*q]:   %104 = load i32* %i, align 4, !dbg !656
STORE [*p=q]:   store i32 %105, i32* %i, align 4, !dbg !656
LOAD [p=*q]:   %90 = load i32* %i, align 4, !dbg !651
LOAD [p=*q]:   %91 = load i32* %e, align 4, !dbg !651
LOAD [p=*q]:   %107 = load i32* %e, align 4, !dbg !657
STORE [*p=q]:   store i32 %107, i32* @insize, align 4, !dbg !657
STORE [*p=q]:   store i64 0, i64* %posbits, align 8, !dbg !658
LOAD [p=*q]:   %108 = load i32* @insize, align 4, !dbg !659
LOAD [p=*q]:   %111 = load i32* %2, align 4, !dbg !660
LOAD [p=*q]:   %112 = load i32* @insize, align 4, !dbg !660
CALL [call func]:   %115 = call i32 @read_buffer(i32 %111, i8* %114, i32 32768), !dbg !660
STORE [*p=q]:   store i32 %115, i32* %rsize, align 4, !dbg !660
LOAD [p=*q]:   %116 = load i32* %rsize, align 4, !dbg !662
LOAD [p=*q]:   %128 = load i32* %rsize, align 4, !dbg !668
LOAD [p=*q]:   %111 = load i32* %2, align 4, !dbg !660
LOAD [p=*q]:   %112 = load i32* @insize, align 4, !dbg !660
CALL [call func]:   %115 = call i32 @read_buffer(i32 %111, i8* %114, i32 32768), !dbg !660
STORE [*p=q]:   store i32 %115, i32* %rsize, align 4, !dbg !660
LOAD [p=*q]:   %116 = load i32* %rsize, align 4, !dbg !662
CALL [call func]:   call void @read_error() #7, !dbg !663
LOAD [p=*q]:   %120 = load i32* %rsize, align 4, !dbg !665
LOAD [p=*q]:   %121 = load i32* @insize, align 4, !dbg !665
STORE [*p=q]:   store i32 %122, i32* @insize, align 4, !dbg !665
LOAD [p=*q]:   %123 = load i32* %rsize, align 4, !dbg !666
LOAD [p=*q]:   %125 = load i64* @bytes_in, align 8, !dbg !666
STORE [*p=q]:   store i64 %126, i64* @bytes_in, align 8, !dbg !666
CALL [call func]:   call void @read_error() #7, !dbg !663
LOAD [p=*q]:   %120 = load i32* %rsize, align 4, !dbg !665
LOAD [p=*q]:   %121 = load i32* @insize, align 4, !dbg !665
STORE [*p=q]:   store i32 %122, i32* @insize, align 4, !dbg !665
LOAD [p=*q]:   %123 = load i32* %rsize, align 4, !dbg !666
LOAD [p=*q]:   %125 = load i64* @bytes_in, align 8, !dbg !666
STORE [*p=q]:   store i64 %126, i64* @bytes_in, align 8, !dbg !666
LOAD [p=*q]:   %128 = load i32* %rsize, align 4, !dbg !668
LOAD [p=*q]:   %128 = load i32* %rsize, align 4, !dbg !668
LOAD [p=*q]:   %131 = load i32* @insize, align 4, !dbg !668
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !668
LOAD [p=*q]:   %134 = load i32* %n_bits, align 4, !dbg !668
LOAD [p=*q]:   %140 = load i32* @insize, align 4, !dbg !668
LOAD [p=*q]:   %143 = load i32* %n_bits, align 4, !dbg !668
LOAD [p=*q]:   %131 = load i32* @insize, align 4, !dbg !668
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !668
LOAD [p=*q]:   %134 = load i32* %n_bits, align 4, !dbg !668
STORE [*p=q]:   store i64 %148, i64* %inbits, align 8, !dbg !668
LOAD [p=*q]:   %140 = load i32* @insize, align 4, !dbg !668
LOAD [p=*q]:   %143 = load i32* %n_bits, align 4, !dbg !668
STORE [*p=q]:   store i64 %148, i64* %inbits, align 8, !dbg !668
STORE [*p=q]:   store i64 %148, i64* %inbits, align 8, !dbg !668
LOAD [p=*q]:   %150 = load i64* %inbits, align 8, !dbg !669
LOAD [p=*q]:   %151 = load i64* %posbits, align 8, !dbg !669
LOAD [p=*q]:   %150 = load i64* %inbits, align 8, !dbg !669
LOAD [p=*q]:   %151 = load i64* %posbits, align 8, !dbg !669
LOAD [p=*q]:   %154 = load i64* %free_ent, align 8, !dbg !670
LOAD [p=*q]:   %155 = load i64* %maxcode, align 8, !dbg !670
LOAD [p=*q]:   %154 = load i64* %free_ent, align 8, !dbg !670
LOAD [p=*q]:   %155 = load i64* %maxcode, align 8, !dbg !670
LOAD [p=*q]:   %158 = load i64* %posbits, align 8, !dbg !672
LOAD [p=*q]:   %160 = load i32* %n_bits, align 4, !dbg !672
LOAD [p=*q]:   %163 = load i64* %posbits, align 8, !dbg !672
LOAD [p=*q]:   %165 = load i32* %n_bits, align 4, !dbg !672
LOAD [p=*q]:   %169 = load i32* %n_bits, align 4, !dbg !672
STORE [*p=q]:   store i64 %174, i64* %posbits, align 8, !dbg !672
LOAD [p=*q]:   %175 = load i32* %n_bits, align 4, !dbg !674
STORE [*p=q]:   store i32 %176, i32* %n_bits, align 4, !dbg !674
LOAD [p=*q]:   %177 = load i32* %n_bits, align 4, !dbg !675
LOAD [p=*q]:   %178 = load i32* @maxbits, align 4, !dbg !675
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !683), !dbg !685
LOAD [p=*q]:   %192 = load i64* %posbits, align 8, !dbg !685
STORE [*p=q]:   store i8* %194, i8** %p, align 8, !dbg !685
LOAD [p=*q]:   %195 = load i8** %p, align 8, !dbg !685
LOAD [p=*q]:   %197 = load i8* %196, !dbg !685
LOAD [p=*q]:   %199 = load i8** %p, align 8, !dbg !685
LOAD [p=*q]:   %201 = load i8* %200, !dbg !685
LOAD [p=*q]:   %205 = load i8** %p, align 8, !dbg !685
LOAD [p=*q]:   %207 = load i8* %206, !dbg !685
LOAD [p=*q]:   %211 = load i64* %posbits, align 8, !dbg !685
LOAD [p=*q]:   %214 = load i32* %bitmask, align 4, !dbg !685
STORE [*p=q]:   store i64 %216, i64* %code, align 8, !dbg !685
LOAD [p=*q]:   %217 = load i32* %n_bits, align 4, !dbg !685
LOAD [p=*q]:   %219 = load i64* %posbits, align 8, !dbg !685
STORE [*p=q]:   store i64 %220, i64* %posbits, align 8, !dbg !685
LOAD [p=*q]:   %221 = load i64* %oldcode, align 8, !dbg !686
LOAD [p=*q]:   %158 = load i64* %posbits, align 8, !dbg !672
LOAD [p=*q]:   %160 = load i32* %n_bits, align 4, !dbg !672
LOAD [p=*q]:   %163 = load i64* %posbits, align 8, !dbg !672
LOAD [p=*q]:   %165 = load i32* %n_bits, align 4, !dbg !672
LOAD [p=*q]:   %169 = load i32* %n_bits, align 4, !dbg !672
STORE [*p=q]:   store i64 %174, i64* %posbits, align 8, !dbg !672
LOAD [p=*q]:   %175 = load i32* %n_bits, align 4, !dbg !674
STORE [*p=q]:   store i32 %176, i32* %n_bits, align 4, !dbg !674
LOAD [p=*q]:   %177 = load i32* %n_bits, align 4, !dbg !675
LOAD [p=*q]:   %178 = load i32* @maxbits, align 4, !dbg !675
LOAD [p=*q]:   %181 = load i64* %maxmaxcode, align 8, !dbg !676
STORE [*p=q]:   store i64 %181, i64* %maxcode, align 8, !dbg !676
LOAD [p=*q]:   %183 = load i32* %n_bits, align 4, !dbg !679
STORE [*p=q]:   store i64 %186, i64* %maxcode, align 8, !dbg !679
LOAD [p=*q]:   %181 = load i64* %maxmaxcode, align 8, !dbg !676
STORE [*p=q]:   store i64 %181, i64* %maxcode, align 8, !dbg !676
LOAD [p=*q]:   %188 = load i32* %n_bits, align 4, !dbg !681
STORE [*p=q]:   store i32 %190, i32* %bitmask, align 4, !dbg !681
LOAD [p=*q]:   %183 = load i32* %n_bits, align 4, !dbg !679
STORE [*p=q]:   store i64 %186, i64* %maxcode, align 8, !dbg !679
LOAD [p=*q]:   %188 = load i32* %n_bits, align 4, !dbg !681
STORE [*p=q]:   store i32 %190, i32* %bitmask, align 4, !dbg !681
LOAD [p=*q]:   %188 = load i32* %n_bits, align 4, !dbg !681
STORE [*p=q]:   store i32 %190, i32* %bitmask, align 4, !dbg !681
LOAD [p=*q]:   %76 = load i64* %posbits, align 8, !dbg !649
STORE [*p=q]:   store i32 %78, i32* %o, align 4, !dbg !649
LOAD [p=*q]:   %79 = load i32* %o, align 4, !dbg !650
LOAD [p=*q]:   %80 = load i32* @insize, align 4, !dbg !650
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !683), !dbg !685
LOAD [p=*q]:   %192 = load i64* %posbits, align 8, !dbg !685
STORE [*p=q]:   store i8* %194, i8** %p, align 8, !dbg !685
LOAD [p=*q]:   %195 = load i8** %p, align 8, !dbg !685
LOAD [p=*q]:   %197 = load i8* %196, !dbg !685
LOAD [p=*q]:   %199 = load i8** %p, align 8, !dbg !685
LOAD [p=*q]:   %201 = load i8* %200, !dbg !685
LOAD [p=*q]:   %205 = load i8** %p, align 8, !dbg !685
LOAD [p=*q]:   %207 = load i8* %206, !dbg !685
LOAD [p=*q]:   %211 = load i64* %posbits, align 8, !dbg !685
LOAD [p=*q]:   %214 = load i32* %bitmask, align 4, !dbg !685
STORE [*p=q]:   store i64 %216, i64* %code, align 8, !dbg !685
LOAD [p=*q]:   %217 = load i32* %n_bits, align 4, !dbg !685
LOAD [p=*q]:   %219 = load i64* %posbits, align 8, !dbg !685
STORE [*p=q]:   store i64 %220, i64* %posbits, align 8, !dbg !685
LOAD [p=*q]:   %221 = load i64* %oldcode, align 8, !dbg !686
LOAD [p=*q]:   %224 = load i64* %code, align 8, !dbg !687
LOAD [p=*q]:   %236 = load i64* %code, align 8, !dbg !692
LOAD [p=*q]:   %224 = load i64* %code, align 8, !dbg !687
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([15 x i8]* @.str2154, i32 0, i32 0)) #7, !dbg !689
LOAD [p=*q]:   %228 = load i64* %code, align 8, !dbg !690
STORE [*p=q]:   store i64 %228, i64* %oldcode, align 8, !dbg !690
STORE [*p=q]:   store i32 %229, i32* %finchar, align 4, !dbg !690
LOAD [p=*q]:   %231 = load i32* %outpos, align 4, !dbg !690
STORE [*p=q]:   store i32 %232, i32* %outpos, align 4, !dbg !690
STORE [*p=q]:   store i8 %230, i8* %234, align 1, !dbg !690
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([15 x i8]* @.str2154, i32 0, i32 0)) #7, !dbg !689
LOAD [p=*q]:   %228 = load i64* %code, align 8, !dbg !690
STORE [*p=q]:   store i64 %228, i64* %oldcode, align 8, !dbg !690
STORE [*p=q]:   store i32 %229, i32* %finchar, align 4, !dbg !690
LOAD [p=*q]:   %231 = load i32* %outpos, align 4, !dbg !690
STORE [*p=q]:   store i32 %232, i32* %outpos, align 4, !dbg !690
STORE [*p=q]:   store i8 %230, i8* %234, align 1, !dbg !690
LOAD [p=*q]:   %150 = load i64* %inbits, align 8, !dbg !669
LOAD [p=*q]:   %151 = load i64* %posbits, align 8, !dbg !669
LOAD [p=*q]:   %236 = load i64* %code, align 8, !dbg !692
LOAD [p=*q]:   %239 = load i32* @block_mode, align 4, !dbg !692
LOAD [p=*q]:   %263 = load i64* %code, align 8, !dbg !700
STORE [*p=q]:   store i64 %263, i64* %incode, align 8, !dbg !700
STORE [*p=q]:   store i8* bitcast (i16* getelementptr inbounds ([32768 x i16]* @d_buf, i32 0, i64 32767) to i8*), i8** %stackp, align 8, !dbg !701
LOAD [p=*q]:   %264 = load i64* %code, align 8, !dbg !702
LOAD [p=*q]:   %265 = load i64* %free_ent, align 8, !dbg !702
LOAD [p=*q]:   %239 = load i32* @block_mode, align 4, !dbg !692
CALL [call func]:   call void @llvm.memset.p0i8.i64(i8* bitcast ([65536 x i16]* @prev to i8*), i8 0, i64 256, i32 1, i1 false), !dbg !693
STORE [*p=q]:   store i64 256, i64* %free_ent, align 8, !dbg !695
LOAD [p=*q]:   %242 = load i64* %posbits, align 8, !dbg !696
LOAD [p=*q]:   %244 = load i32* %n_bits, align 4, !dbg !696
LOAD [p=*q]:   %247 = load i64* %posbits, align 8, !dbg !696
LOAD [p=*q]:   %249 = load i32* %n_bits, align 4, !dbg !696
LOAD [p=*q]:   %253 = load i32* %n_bits, align 4, !dbg !696
STORE [*p=q]:   store i64 %258, i64* %posbits, align 8, !dbg !696
STORE [*p=q]:   store i32 9, i32* %n_bits, align 4, !dbg !697
STORE [*p=q]:   store i64 511, i64* %maxcode, align 8, !dbg !697
LOAD [p=*q]:   %259 = load i32* %n_bits, align 4, !dbg !698
STORE [*p=q]:   store i32 %261, i32* %bitmask, align 4, !dbg !698
LOAD [p=*q]:   %263 = load i64* %code, align 8, !dbg !700
STORE [*p=q]:   store i64 %263, i64* %incode, align 8, !dbg !700
STORE [*p=q]:   store i8* bitcast (i16* getelementptr inbounds ([32768 x i16]* @d_buf, i32 0, i64 32767) to i8*), i8** %stackp, align 8, !dbg !701
LOAD [p=*q]:   %264 = load i64* %code, align 8, !dbg !702
LOAD [p=*q]:   %265 = load i64* %free_ent, align 8, !dbg !702
CALL [call func]:   call void @llvm.memset.p0i8.i64(i8* bitcast ([65536 x i16]* @prev to i8*), i8 0, i64 256, i32 1, i1 false), !dbg !693
STORE [*p=q]:   store i64 256, i64* %free_ent, align 8, !dbg !695
LOAD [p=*q]:   %242 = load i64* %posbits, align 8, !dbg !696
LOAD [p=*q]:   %244 = load i32* %n_bits, align 4, !dbg !696
LOAD [p=*q]:   %247 = load i64* %posbits, align 8, !dbg !696
LOAD [p=*q]:   %249 = load i32* %n_bits, align 4, !dbg !696
LOAD [p=*q]:   %253 = load i32* %n_bits, align 4, !dbg !696
STORE [*p=q]:   store i64 %258, i64* %posbits, align 8, !dbg !696
STORE [*p=q]:   store i32 9, i32* %n_bits, align 4, !dbg !697
STORE [*p=q]:   store i64 511, i64* %maxcode, align 8, !dbg !697
LOAD [p=*q]:   %259 = load i32* %n_bits, align 4, !dbg !698
STORE [*p=q]:   store i32 %261, i32* %bitmask, align 4, !dbg !698
LOAD [p=*q]:   %76 = load i64* %posbits, align 8, !dbg !649
STORE [*p=q]:   store i32 %78, i32* %o, align 4, !dbg !649
LOAD [p=*q]:   %79 = load i32* %o, align 4, !dbg !650
LOAD [p=*q]:   %80 = load i32* @insize, align 4, !dbg !650
LOAD [p=*q]:   %263 = load i64* %code, align 8, !dbg !700
STORE [*p=q]:   store i64 %263, i64* %incode, align 8, !dbg !700
STORE [*p=q]:   store i8* bitcast (i16* getelementptr inbounds ([32768 x i16]* @d_buf, i32 0, i64 32767) to i8*), i8** %stackp, align 8, !dbg !701
LOAD [p=*q]:   %264 = load i64* %code, align 8, !dbg !702
LOAD [p=*q]:   %265 = load i64* %free_ent, align 8, !dbg !702
LOAD [p=*q]:   %268 = load i64* %code, align 8, !dbg !703
LOAD [p=*q]:   %269 = load i64* %free_ent, align 8, !dbg !703
LOAD [p=*q]:   %268 = load i64* %code, align 8, !dbg !703
LOAD [p=*q]:   %269 = load i64* %free_ent, align 8, !dbg !703
LOAD [p=*q]:   %272 = load i32* @test, align 4, !dbg !705
LOAD [p=*q]:   %289 = load i32* %finchar, align 4, !dbg !712
LOAD [p=*q]:   %291 = load i8** %stackp, align 8, !dbg !712
STORE [*p=q]:   store i8* %292, i8** %stackp, align 8, !dbg !712
STORE [*p=q]:   store i8 %290, i8* %292, !dbg !712
LOAD [p=*q]:   %293 = load i64* %oldcode, align 8, !dbg !713
STORE [*p=q]:   store i64 %293, i64* %code, align 8, !dbg !713
LOAD [p=*q]:   %272 = load i32* @test, align 4, !dbg !705
LOAD [p=*q]:   %285 = load i32* @to_stdout, align 4, !dbg !711
CALL [call func]:   call void @gzip_error(i8* %287) #7, !dbg !711
LOAD [p=*q]:   %275 = load i32* %outpos, align 4, !dbg !705
LOAD [p=*q]:   %275 = load i32* %outpos, align 4, !dbg !705
LOAD [p=*q]:   %278 = load i32* %3, align 4, !dbg !707
LOAD [p=*q]:   %279 = load i32* %outpos, align 4, !dbg !707
CALL [call func]:   call void @write_buf(i32 %278, i8* getelementptr inbounds ([18432 x i8]* @outbuf, i32 0, i32 0), i32 %279), !dbg !707
LOAD [p=*q]:   %280 = load i32* %outpos, align 4, !dbg !709
LOAD [p=*q]:   %282 = load i64* @bytes_out, align 8, !dbg !709
STORE [*p=q]:   store i64 %283, i64* @bytes_out, align 8, !dbg !709
LOAD [p=*q]:   %285 = load i32* @to_stdout, align 4, !dbg !711
CALL [call func]:   call void @gzip_error(i8* %287) #7, !dbg !711
LOAD [p=*q]:   %278 = load i32* %3, align 4, !dbg !707
LOAD [p=*q]:   %279 = load i32* %outpos, align 4, !dbg !707
CALL [call func]:   call void @write_buf(i32 %278, i8* getelementptr inbounds ([18432 x i8]* @outbuf, i32 0, i32 0), i32 %279), !dbg !707
LOAD [p=*q]:   %280 = load i32* %outpos, align 4, !dbg !709
LOAD [p=*q]:   %282 = load i64* @bytes_out, align 8, !dbg !709
STORE [*p=q]:   store i64 %283, i64* @bytes_out, align 8, !dbg !709
LOAD [p=*q]:   %285 = load i32* @to_stdout, align 4, !dbg !711
CALL [call func]:   call void @gzip_error(i8* %287) #7, !dbg !711
LOAD [p=*q]:   %285 = load i32* @to_stdout, align 4, !dbg !711
CALL [call func]:   call void @gzip_error(i8* %287) #7, !dbg !711
LOAD [p=*q]:   %289 = load i32* %finchar, align 4, !dbg !712
LOAD [p=*q]:   %291 = load i8** %stackp, align 8, !dbg !712
STORE [*p=q]:   store i8* %292, i8** %stackp, align 8, !dbg !712
STORE [*p=q]:   store i8 %290, i8* %292, !dbg !712
LOAD [p=*q]:   %293 = load i64* %oldcode, align 8, !dbg !713
STORE [*p=q]:   store i64 %293, i64* %code, align 8, !dbg !713
LOAD [p=*q]:   %296 = load i64* %code, align 8, !dbg !715
LOAD [p=*q]:   %296 = load i64* %code, align 8, !dbg !715
LOAD [p=*q]:   %299 = load i64* %code, align 8, !dbg !716
LOAD [p=*q]:   %301 = load i8* %300, align 1, !dbg !716
LOAD [p=*q]:   %302 = load i8** %stackp, align 8, !dbg !716
STORE [*p=q]:   store i8* %303, i8** %stackp, align 8, !dbg !716
STORE [*p=q]:   store i8 %301, i8* %303, !dbg !716
LOAD [p=*q]:   %304 = load i64* %code, align 8, !dbg !718
LOAD [p=*q]:   %306 = load i16* %305, align 1, !dbg !718
STORE [*p=q]:   store i64 %307, i64* %code, align 8, !dbg !718
LOAD [p=*q]:   %309 = load i64* %code, align 8, !dbg !720
LOAD [p=*q]:   %311 = load i8* %310, align 1, !dbg !720
STORE [*p=q]:   store i32 %312, i32* %finchar, align 4, !dbg !720
LOAD [p=*q]:   %314 = load i8** %stackp, align 8, !dbg !720
STORE [*p=q]:   store i8* %315, i8** %stackp, align 8, !dbg !720
STORE [*p=q]:   store i8 %313, i8* %315, !dbg !720
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i1}, metadata !721), !dbg !723
LOAD [p=*q]:   %316 = load i32* %outpos, align 4, !dbg !724
LOAD [p=*q]:   %317 = load i8** %stackp, align 8, !dbg !724
STORE [*p=q]:   store i32 %320, i32* %i1, align 4, !dbg !724
LOAD [p=*q]:   %299 = load i64* %code, align 8, !dbg !716
LOAD [p=*q]:   %301 = load i8* %300, align 1, !dbg !716
LOAD [p=*q]:   %302 = load i8** %stackp, align 8, !dbg !716
STORE [*p=q]:   store i8* %303, i8** %stackp, align 8, !dbg !716
STORE [*p=q]:   store i8 %301, i8* %303, !dbg !716
LOAD [p=*q]:   %304 = load i64* %code, align 8, !dbg !718
LOAD [p=*q]:   %306 = load i16* %305, align 1, !dbg !718
STORE [*p=q]:   store i64 %307, i64* %code, align 8, !dbg !718
LOAD [p=*q]:   %296 = load i64* %code, align 8, !dbg !715
LOAD [p=*q]:   %309 = load i64* %code, align 8, !dbg !720
LOAD [p=*q]:   %311 = load i8* %310, align 1, !dbg !720
STORE [*p=q]:   store i32 %312, i32* %finchar, align 4, !dbg !720
LOAD [p=*q]:   %314 = load i8** %stackp, align 8, !dbg !720
STORE [*p=q]:   store i8* %315, i8** %stackp, align 8, !dbg !720
STORE [*p=q]:   store i8 %313, i8* %315, !dbg !720
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i1}, metadata !721), !dbg !723
LOAD [p=*q]:   %316 = load i32* %outpos, align 4, !dbg !724
LOAD [p=*q]:   %317 = load i8** %stackp, align 8, !dbg !724
STORE [*p=q]:   store i32 %320, i32* %i1, align 4, !dbg !724
LOAD [p=*q]:   %372 = load i32* %outpos, align 4, !dbg !747
LOAD [p=*q]:   %375 = load i8** %stackp, align 8, !dbg !747
LOAD [p=*q]:   %376 = load i32* %i1, align 4, !dbg !747
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %374, i8* %375, i64 %377, i32 1, i1 false), !dbg !747
LOAD [p=*q]:   %378 = load i32* %i1, align 4, !dbg !749
LOAD [p=*q]:   %379 = load i32* %outpos, align 4, !dbg !749
STORE [*p=q]:   store i32 %380, i32* %outpos, align 4, !dbg !749
LOAD [p=*q]:   %325 = load i32* %i1, align 4, !dbg !727
LOAD [p=*q]:   %326 = load i32* %outpos, align 4, !dbg !727
LOAD [p=*q]:   %325 = load i32* %i1, align 4, !dbg !727
LOAD [p=*q]:   %326 = load i32* %outpos, align 4, !dbg !727
LOAD [p=*q]:   %330 = load i32* %outpos, align 4, !dbg !729
STORE [*p=q]:   store i32 %331, i32* %i1, align 4, !dbg !729
LOAD [p=*q]:   %333 = load i32* %i1, align 4, !dbg !730
LOAD [p=*q]:   %330 = load i32* %outpos, align 4, !dbg !729
STORE [*p=q]:   store i32 %331, i32* %i1, align 4, !dbg !729
LOAD [p=*q]:   %333 = load i32* %i1, align 4, !dbg !730
LOAD [p=*q]:   %333 = load i32* %i1, align 4, !dbg !730
LOAD [p=*q]:   %336 = load i32* %outpos, align 4, !dbg !731
LOAD [p=*q]:   %339 = load i8** %stackp, align 8, !dbg !731
LOAD [p=*q]:   %340 = load i32* %i1, align 4, !dbg !731
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %338, i8* %339, i64 %341, i32 1, i1 false), !dbg !731
LOAD [p=*q]:   %342 = load i32* %i1, align 4, !dbg !733
LOAD [p=*q]:   %343 = load i32* %outpos, align 4, !dbg !733
STORE [*p=q]:   store i32 %344, i32* %outpos, align 4, !dbg !733
LOAD [p=*q]:   %346 = load i32* %outpos, align 4, !dbg !735
LOAD [p=*q]:   %336 = load i32* %outpos, align 4, !dbg !731
LOAD [p=*q]:   %339 = load i8** %stackp, align 8, !dbg !731
LOAD [p=*q]:   %340 = load i32* %i1, align 4, !dbg !731
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %338, i8* %339, i64 %341, i32 1, i1 false), !dbg !731
LOAD [p=*q]:   %342 = load i32* %i1, align 4, !dbg !733
LOAD [p=*q]:   %343 = load i32* %outpos, align 4, !dbg !733
STORE [*p=q]:   store i32 %344, i32* %outpos, align 4, !dbg !733
LOAD [p=*q]:   %346 = load i32* %outpos, align 4, !dbg !735
LOAD [p=*q]:   %346 = load i32* %outpos, align 4, !dbg !735
LOAD [p=*q]:   %349 = load i32* @test, align 4, !dbg !736
LOAD [p=*q]:   %360 = load i32* %i1, align 4, !dbg !744
LOAD [p=*q]:   %361 = load i8** %stackp, align 8, !dbg !744
STORE [*p=q]:   store i8* %363, i8** %stackp, align 8, !dbg !744
LOAD [p=*q]:   %349 = load i32* @test, align 4, !dbg !736
STORE [*p=q]:   store i32 0, i32* %outpos, align 4, !dbg !742
LOAD [p=*q]:   %352 = load i32* %3, align 4, !dbg !738
LOAD [p=*q]:   %353 = load i32* %outpos, align 4, !dbg !738
CALL [call func]:   call void @write_buf(i32 %352, i8* getelementptr inbounds ([18432 x i8]* @outbuf, i32 0, i32 0), i32 %353), !dbg !738
LOAD [p=*q]:   %354 = load i32* %outpos, align 4, !dbg !740
LOAD [p=*q]:   %356 = load i64* @bytes_out, align 8, !dbg !740
STORE [*p=q]:   store i64 %357, i64* @bytes_out, align 8, !dbg !740
LOAD [p=*q]:   %352 = load i32* %3, align 4, !dbg !738
LOAD [p=*q]:   %353 = load i32* %outpos, align 4, !dbg !738
CALL [call func]:   call void @write_buf(i32 %352, i8* getelementptr inbounds ([18432 x i8]* @outbuf, i32 0, i32 0), i32 %353), !dbg !738
LOAD [p=*q]:   %354 = load i32* %outpos, align 4, !dbg !740
LOAD [p=*q]:   %356 = load i64* @bytes_out, align 8, !dbg !740
STORE [*p=q]:   store i64 %357, i64* @bytes_out, align 8, !dbg !740
STORE [*p=q]:   store i32 0, i32* %outpos, align 4, !dbg !742
STORE [*p=q]:   store i32 0, i32* %outpos, align 4, !dbg !742
LOAD [p=*q]:   %360 = load i32* %i1, align 4, !dbg !744
LOAD [p=*q]:   %361 = load i8** %stackp, align 8, !dbg !744
STORE [*p=q]:   store i8* %363, i8** %stackp, align 8, !dbg !744
LOAD [p=*q]:   %360 = load i32* %i1, align 4, !dbg !744
LOAD [p=*q]:   %361 = load i8** %stackp, align 8, !dbg !744
STORE [*p=q]:   store i8* %363, i8** %stackp, align 8, !dbg !744
LOAD [p=*q]:   %365 = load i8** %stackp, align 8, !dbg !745
STORE [*p=q]:   store i32 %368, i32* %i1, align 4, !dbg !745
LOAD [p=*q]:   %365 = load i8** %stackp, align 8, !dbg !745
STORE [*p=q]:   store i32 %368, i32* %i1, align 4, !dbg !745
LOAD [p=*q]:   %325 = load i32* %i1, align 4, !dbg !727
LOAD [p=*q]:   %326 = load i32* %outpos, align 4, !dbg !727
LOAD [p=*q]:   %382 = load i64* %free_ent, align 8, !dbg !750
STORE [*p=q]:   store i64 %382, i64* %code, align 8, !dbg !750
LOAD [p=*q]:   %383 = load i64* %maxmaxcode, align 8, !dbg !750
LOAD [p=*q]:   %372 = load i32* %outpos, align 4, !dbg !747
LOAD [p=*q]:   %375 = load i8** %stackp, align 8, !dbg !747
LOAD [p=*q]:   %376 = load i32* %i1, align 4, !dbg !747
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %374, i8* %375, i64 %377, i32 1, i1 false), !dbg !747
LOAD [p=*q]:   %378 = load i32* %i1, align 4, !dbg !749
LOAD [p=*q]:   %379 = load i32* %outpos, align 4, !dbg !749
STORE [*p=q]:   store i32 %380, i32* %outpos, align 4, !dbg !749
LOAD [p=*q]:   %382 = load i64* %free_ent, align 8, !dbg !750
STORE [*p=q]:   store i64 %382, i64* %code, align 8, !dbg !750
LOAD [p=*q]:   %383 = load i64* %maxmaxcode, align 8, !dbg !750
LOAD [p=*q]:   %382 = load i64* %free_ent, align 8, !dbg !750
STORE [*p=q]:   store i64 %382, i64* %code, align 8, !dbg !750
LOAD [p=*q]:   %383 = load i64* %maxmaxcode, align 8, !dbg !750
LOAD [p=*q]:   %386 = load i64* %oldcode, align 8, !dbg !751
LOAD [p=*q]:   %388 = load i64* %code, align 8, !dbg !751
STORE [*p=q]:   store i16 %387, i16* %389, align 1, !dbg !751
LOAD [p=*q]:   %390 = load i32* %finchar, align 4, !dbg !753
LOAD [p=*q]:   %392 = load i64* %code, align 8, !dbg !753
STORE [*p=q]:   store i8 %391, i8* %393, align 1, !dbg !753
LOAD [p=*q]:   %394 = load i64* %code, align 8, !dbg !754
STORE [*p=q]:   store i64 %395, i64* %free_ent, align 8, !dbg !754
LOAD [p=*q]:   %397 = load i64* %incode, align 8, !dbg !756
STORE [*p=q]:   store i64 %397, i64* %oldcode, align 8, !dbg !756
LOAD [p=*q]:   %386 = load i64* %oldcode, align 8, !dbg !751
LOAD [p=*q]:   %388 = load i64* %code, align 8, !dbg !751
STORE [*p=q]:   store i16 %387, i16* %389, align 1, !dbg !751
LOAD [p=*q]:   %390 = load i32* %finchar, align 4, !dbg !753
LOAD [p=*q]:   %392 = load i64* %code, align 8, !dbg !753
STORE [*p=q]:   store i8 %391, i8* %393, align 1, !dbg !753
LOAD [p=*q]:   %394 = load i64* %code, align 8, !dbg !754
STORE [*p=q]:   store i64 %395, i64* %free_ent, align 8, !dbg !754
LOAD [p=*q]:   %397 = load i64* %incode, align 8, !dbg !756
STORE [*p=q]:   store i64 %397, i64* %oldcode, align 8, !dbg !756
LOAD [p=*q]:   %397 = load i64* %incode, align 8, !dbg !756
STORE [*p=q]:   store i64 %397, i64* %oldcode, align 8, !dbg !756
LOAD [p=*q]:   %150 = load i64* %inbits, align 8, !dbg !669
LOAD [p=*q]:   %151 = load i64* %posbits, align 8, !dbg !669
LOAD [p=*q]:   %400 = load i32* %rsize, align 4, !dbg !758
LOAD [p=*q]:   %400 = load i32* %rsize, align 4, !dbg !758
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !641), !dbg !643
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !644), !dbg !645
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %o}, metadata !646), !dbg !647
LOAD [p=*q]:   %403 = load i32* @test, align 4, !dbg !759
LOAD [p=*q]:   %403 = load i32* @test, align 4, !dbg !759
STORE [*p=q]:   store i32 0, i32* %1, !dbg !764
LOAD [p=*q]:   %406 = load i32* %outpos, align 4, !dbg !759
LOAD [p=*q]:   %406 = load i32* %outpos, align 4, !dbg !759
LOAD [p=*q]:   %409 = load i32* %3, align 4, !dbg !760
LOAD [p=*q]:   %410 = load i32* %outpos, align 4, !dbg !760
CALL [call func]:   call void @write_buf(i32 %409, i8* getelementptr inbounds ([18432 x i8]* @outbuf, i32 0, i32 0), i32 %410), !dbg !760
LOAD [p=*q]:   %411 = load i32* %outpos, align 4, !dbg !762
LOAD [p=*q]:   %413 = load i64* @bytes_out, align 8, !dbg !762
STORE [*p=q]:   store i64 %414, i64* @bytes_out, align 8, !dbg !762
STORE [*p=q]:   store i32 0, i32* %1, !dbg !764
LOAD [p=*q]:   %409 = load i32* %3, align 4, !dbg !760
LOAD [p=*q]:   %410 = load i32* %outpos, align 4, !dbg !760
CALL [call func]:   call void @write_buf(i32 %409, i8* getelementptr inbounds ([18432 x i8]* @outbuf, i32 0, i32 0), i32 %410), !dbg !760
LOAD [p=*q]:   %411 = load i32* %outpos, align 4, !dbg !762
LOAD [p=*q]:   %413 = load i64* @bytes_out, align 8, !dbg !762
STORE [*p=q]:   store i64 %414, i64* @bytes_out, align 8, !dbg !762
STORE [*p=q]:   store i32 0, i32* %1, !dbg !764
STORE [*p=q]:   store i32 0, i32* %1, !dbg !764
LOAD [p=*q]:   %417 = load i32* %1, !dbg !765
Analyzing return instruction for unlzw
	  %417 = load i32* %1, !dbg !765
LOAD [p=*q]:   %417 = load i32* %1, !dbg !765
Analyzing return instruction for unlzw
	  %417 = load i32* %1, !dbg !765
[Processing][Function][init_getbits]
STORE [*p=q]:   store i16 0, i16* @bitbuf, align 2, !dbg !574
STORE [*p=q]:   store i32 0, i32* @subbitbuf, align 4, !dbg !576
STORE [*p=q]:   store i32 0, i32* @bitcount, align 4, !dbg !577
CALL [call func]:   call void (...)* bitcast (void (i32)* @fillbuf to void (...)*)(i32 16), !dbg !578
Analyzing return instruction for init_getbits
No return value for: init_getbits
[Processing][Function][huf_decode_start]
CALL [call func]:   call void @init_getbits(), !dbg !574
STORE [*p=q]:   store i32 0, i32* @blocksize, align 4, !dbg !576
Analyzing return instruction for huf_decode_start
No return value for: huf_decode_start
[Processing][Function][make_table]
STORE [*p=q]:   store i32 %nchar, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i8* %bitlen, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 %tablebits, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !579), !dbg !580
STORE [*p=q]:   store i16* %table, i16** %4, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i16** %4}, metadata !581), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[17 x i16]* %count}, metadata !584), !dbg !587
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[17 x i16]* %weight}, metadata !588), !dbg !589
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[18 x i16]* %start}, metadata !590), !dbg !594
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i16** %p}, metadata !595), !dbg !596
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !597), !dbg !598
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %k}, metadata !599), !dbg !600
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !601), !dbg !602
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %ch}, metadata !603), !dbg !604
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %jutbits}, metadata !605), !dbg !606
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %avail}, metadata !607), !dbg !608
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nextcode}, metadata !609), !dbg !610
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %mask}, metadata !611), !dbg !612
STORE [*p=q]:   store i32 1, i32* %i, align 4, !dbg !613
LOAD [p=*q]:   %6 = load i32* %i, align 4, !dbg !613
LOAD [p=*q]:   %6 = load i32* %i, align 4, !dbg !613
LOAD [p=*q]:   %9 = load i32* %i, align 4, !dbg !615
STORE [*p=q]:   store i16 0, i16* %11, align 2, !dbg !615
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !617
LOAD [p=*q]:   %9 = load i32* %i, align 4, !dbg !615
STORE [*p=q]:   store i16 0, i16* %11, align 2, !dbg !615
LOAD [p=*q]:   %13 = load i32* %i, align 4, !dbg !616
STORE [*p=q]:   store i32 %14, i32* %i, align 4, !dbg !616
LOAD [p=*q]:   %13 = load i32* %i, align 4, !dbg !616
STORE [*p=q]:   store i32 %14, i32* %i, align 4, !dbg !616
LOAD [p=*q]:   %6 = load i32* %i, align 4, !dbg !613
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !617
LOAD [p=*q]:   %17 = load i32* %i, align 4, !dbg !617
LOAD [p=*q]:   %18 = load i32* %1, align 4, !dbg !617
LOAD [p=*q]:   %17 = load i32* %i, align 4, !dbg !617
LOAD [p=*q]:   %18 = load i32* %1, align 4, !dbg !617
LOAD [p=*q]:   %21 = load i32* %i, align 4, !dbg !619
LOAD [p=*q]:   %23 = load i8** %2, align 8, !dbg !619
LOAD [p=*q]:   %25 = load i8* %24, !dbg !619
LOAD [p=*q]:   %28 = load i16* %27, align 2, !dbg !619
STORE [*p=q]:   store i16 %29, i16* %27, align 2, !dbg !619
STORE [*p=q]:   store i16 0, i16* %34, align 2, !dbg !621
STORE [*p=q]:   store i32 1, i32* %i, align 4, !dbg !622
LOAD [p=*q]:   %21 = load i32* %i, align 4, !dbg !619
LOAD [p=*q]:   %23 = load i8** %2, align 8, !dbg !619
LOAD [p=*q]:   %25 = load i8* %24, !dbg !619
LOAD [p=*q]:   %28 = load i16* %27, align 2, !dbg !619
STORE [*p=q]:   store i16 %29, i16* %27, align 2, !dbg !619
LOAD [p=*q]:   %31 = load i32* %i, align 4, !dbg !620
STORE [*p=q]:   store i32 %32, i32* %i, align 4, !dbg !620
LOAD [p=*q]:   %31 = load i32* %i, align 4, !dbg !620
STORE [*p=q]:   store i32 %32, i32* %i, align 4, !dbg !620
LOAD [p=*q]:   %17 = load i32* %i, align 4, !dbg !617
LOAD [p=*q]:   %18 = load i32* %1, align 4, !dbg !617
STORE [*p=q]:   store i16 0, i16* %34, align 2, !dbg !621
STORE [*p=q]:   store i32 1, i32* %i, align 4, !dbg !622
LOAD [p=*q]:   %36 = load i32* %i, align 4, !dbg !622
LOAD [p=*q]:   %36 = load i32* %i, align 4, !dbg !622
LOAD [p=*q]:   %39 = load i32* %i, align 4, !dbg !624
LOAD [p=*q]:   %42 = load i16* %41, align 2, !dbg !624
LOAD [p=*q]:   %44 = load i32* %i, align 4, !dbg !624
LOAD [p=*q]:   %47 = load i16* %46, align 2, !dbg !624
LOAD [p=*q]:   %49 = load i32* %i, align 4, !dbg !624
LOAD [p=*q]:   %54 = load i32* %i, align 4, !dbg !624
STORE [*p=q]:   store i16 %53, i16* %57, align 2, !dbg !624
LOAD [p=*q]:   %63 = load i16* %62, align 2, !dbg !626
LOAD [p=*q]:   %39 = load i32* %i, align 4, !dbg !624
LOAD [p=*q]:   %42 = load i16* %41, align 2, !dbg !624
LOAD [p=*q]:   %44 = load i32* %i, align 4, !dbg !624
LOAD [p=*q]:   %47 = load i16* %46, align 2, !dbg !624
LOAD [p=*q]:   %49 = load i32* %i, align 4, !dbg !624
LOAD [p=*q]:   %54 = load i32* %i, align 4, !dbg !624
STORE [*p=q]:   store i16 %53, i16* %57, align 2, !dbg !624
LOAD [p=*q]:   %59 = load i32* %i, align 4, !dbg !625
STORE [*p=q]:   store i32 %60, i32* %i, align 4, !dbg !625
LOAD [p=*q]:   %59 = load i32* %i, align 4, !dbg !625
STORE [*p=q]:   store i32 %60, i32* %i, align 4, !dbg !625
LOAD [p=*q]:   %36 = load i32* %i, align 4, !dbg !622
LOAD [p=*q]:   %63 = load i16* %62, align 2, !dbg !626
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([11 x i8]* @.str149, i32 0, i32 0)) #7, !dbg !627
LOAD [p=*q]:   %69 = load i32* %3, align 4, !dbg !628
STORE [*p=q]:   store i32 %70, i32* %jutbits, align 4, !dbg !628
STORE [*p=q]:   store i32 1, i32* %i, align 4, !dbg !629
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([11 x i8]* @.str149, i32 0, i32 0)) #7, !dbg !627
LOAD [p=*q]:   %69 = load i32* %3, align 4, !dbg !628
STORE [*p=q]:   store i32 %70, i32* %jutbits, align 4, !dbg !628
STORE [*p=q]:   store i32 1, i32* %i, align 4, !dbg !629
LOAD [p=*q]:   %72 = load i32* %i, align 4, !dbg !629
LOAD [p=*q]:   %73 = load i32* %3, align 4, !dbg !629
LOAD [p=*q]:   %72 = load i32* %i, align 4, !dbg !629
LOAD [p=*q]:   %73 = load i32* %3, align 4, !dbg !629
LOAD [p=*q]:   %76 = load i32* %jutbits, align 4, !dbg !631
LOAD [p=*q]:   %77 = load i32* %i, align 4, !dbg !631
LOAD [p=*q]:   %80 = load i16* %79, align 2, !dbg !631
STORE [*p=q]:   store i16 %83, i16* %79, align 2, !dbg !631
LOAD [p=*q]:   %84 = load i32* %3, align 4, !dbg !633
LOAD [p=*q]:   %85 = load i32* %i, align 4, !dbg !633
LOAD [p=*q]:   %89 = load i32* %i, align 4, !dbg !633
STORE [*p=q]:   store i16 %88, i16* %91, align 2, !dbg !633
LOAD [p=*q]:   %76 = load i32* %jutbits, align 4, !dbg !631
LOAD [p=*q]:   %77 = load i32* %i, align 4, !dbg !631
LOAD [p=*q]:   %80 = load i16* %79, align 2, !dbg !631
STORE [*p=q]:   store i16 %83, i16* %79, align 2, !dbg !631
LOAD [p=*q]:   %84 = load i32* %3, align 4, !dbg !633
LOAD [p=*q]:   %85 = load i32* %i, align 4, !dbg !633
LOAD [p=*q]:   %89 = load i32* %i, align 4, !dbg !633
STORE [*p=q]:   store i16 %88, i16* %91, align 2, !dbg !633
LOAD [p=*q]:   %93 = load i32* %i, align 4, !dbg !635
STORE [*p=q]:   store i32 %94, i32* %i, align 4, !dbg !635
LOAD [p=*q]:   %93 = load i32* %i, align 4, !dbg !635
STORE [*p=q]:   store i32 %94, i32* %i, align 4, !dbg !635
LOAD [p=*q]:   %72 = load i32* %i, align 4, !dbg !629
LOAD [p=*q]:   %73 = load i32* %3, align 4, !dbg !629
LOAD [p=*q]:   %97 = load i32* %i, align 4, !dbg !636
LOAD [p=*q]:   %97 = load i32* %i, align 4, !dbg !636
LOAD [p=*q]:   %100 = load i32* %i, align 4, !dbg !637
LOAD [p=*q]:   %104 = load i32* %i, align 4, !dbg !637
STORE [*p=q]:   store i16 %103, i16* %106, align 2, !dbg !637
LOAD [p=*q]:   %107 = load i32* %i, align 4, !dbg !639
STORE [*p=q]:   store i32 %108, i32* %i, align 4, !dbg !639
LOAD [p=*q]:   %110 = load i32* %3, align 4, !dbg !641
LOAD [p=*q]:   %114 = load i16* %113, align 2, !dbg !641
LOAD [p=*q]:   %116 = load i32* %jutbits, align 4, !dbg !641
STORE [*p=q]:   store i32 %117, i32* %i, align 4, !dbg !641
LOAD [p=*q]:   %118 = load i32* %i, align 4, !dbg !642
LOAD [p=*q]:   %100 = load i32* %i, align 4, !dbg !637
LOAD [p=*q]:   %104 = load i32* %i, align 4, !dbg !637
STORE [*p=q]:   store i16 %103, i16* %106, align 2, !dbg !637
LOAD [p=*q]:   %107 = load i32* %i, align 4, !dbg !639
STORE [*p=q]:   store i32 %108, i32* %i, align 4, !dbg !639
LOAD [p=*q]:   %97 = load i32* %i, align 4, !dbg !636
LOAD [p=*q]:   %110 = load i32* %3, align 4, !dbg !641
LOAD [p=*q]:   %114 = load i16* %113, align 2, !dbg !641
LOAD [p=*q]:   %116 = load i32* %jutbits, align 4, !dbg !641
STORE [*p=q]:   store i32 %117, i32* %i, align 4, !dbg !641
LOAD [p=*q]:   %118 = load i32* %i, align 4, !dbg !642
LOAD [p=*q]:   %121 = load i32* %3, align 4, !dbg !643
STORE [*p=q]:   store i32 %122, i32* %k, align 4, !dbg !643
LOAD [p=*q]:   %135 = load i32* %1, align 4, !dbg !648
STORE [*p=q]:   store i32 %135, i32* %avail, align 4, !dbg !648
LOAD [p=*q]:   %136 = load i32* %3, align 4, !dbg !649
STORE [*p=q]:   store i32 %138, i32* %mask, align 4, !dbg !649
STORE [*p=q]:   store i32 0, i32* %ch, align 4, !dbg !650
LOAD [p=*q]:   %121 = load i32* %3, align 4, !dbg !643
STORE [*p=q]:   store i32 %122, i32* %k, align 4, !dbg !643
LOAD [p=*q]:   %124 = load i32* %i, align 4, !dbg !645
LOAD [p=*q]:   %125 = load i32* %k, align 4, !dbg !645
LOAD [p=*q]:   %124 = load i32* %i, align 4, !dbg !645
LOAD [p=*q]:   %125 = load i32* %k, align 4, !dbg !645
LOAD [p=*q]:   %128 = load i32* %i, align 4, !dbg !646
STORE [*p=q]:   store i32 %129, i32* %i, align 4, !dbg !646
LOAD [p=*q]:   %131 = load i16** %4, align 8, !dbg !646
STORE [*p=q]:   store i16 0, i16* %132, !dbg !646
LOAD [p=*q]:   %128 = load i32* %i, align 4, !dbg !646
STORE [*p=q]:   store i32 %129, i32* %i, align 4, !dbg !646
LOAD [p=*q]:   %131 = load i16** %4, align 8, !dbg !646
STORE [*p=q]:   store i16 0, i16* %132, !dbg !646
LOAD [p=*q]:   %124 = load i32* %i, align 4, !dbg !645
LOAD [p=*q]:   %125 = load i32* %k, align 4, !dbg !645
LOAD [p=*q]:   %135 = load i32* %1, align 4, !dbg !648
STORE [*p=q]:   store i32 %135, i32* %avail, align 4, !dbg !648
LOAD [p=*q]:   %136 = load i32* %3, align 4, !dbg !649
STORE [*p=q]:   store i32 %138, i32* %mask, align 4, !dbg !649
STORE [*p=q]:   store i32 0, i32* %ch, align 4, !dbg !650
LOAD [p=*q]:   %135 = load i32* %1, align 4, !dbg !648
STORE [*p=q]:   store i32 %135, i32* %avail, align 4, !dbg !648
LOAD [p=*q]:   %136 = load i32* %3, align 4, !dbg !649
STORE [*p=q]:   store i32 %138, i32* %mask, align 4, !dbg !649
STORE [*p=q]:   store i32 0, i32* %ch, align 4, !dbg !650
LOAD [p=*q]:   %140 = load i32* %ch, align 4, !dbg !650
LOAD [p=*q]:   %141 = load i32* %1, align 4, !dbg !650
LOAD [p=*q]:   %140 = load i32* %ch, align 4, !dbg !650
LOAD [p=*q]:   %141 = load i32* %1, align 4, !dbg !650
LOAD [p=*q]:   %144 = load i32* %ch, align 4, !dbg !652
LOAD [p=*q]:   %146 = load i8** %2, align 8, !dbg !652
LOAD [p=*q]:   %148 = load i8* %147, !dbg !652
STORE [*p=q]:   store i32 %149, i32* %len, align 4, !dbg !652
Analyzing return instruction for make_table
No return value for: make_table
LOAD [p=*q]:   %144 = load i32* %ch, align 4, !dbg !652
LOAD [p=*q]:   %146 = load i8** %2, align 8, !dbg !652
LOAD [p=*q]:   %148 = load i8* %147, !dbg !652
STORE [*p=q]:   store i32 %149, i32* %len, align 4, !dbg !652
LOAD [p=*q]:   %153 = load i32* %len, align 4, !dbg !655
LOAD [p=*q]:   %156 = load i16* %155, align 2, !dbg !655
LOAD [p=*q]:   %158 = load i32* %len, align 4, !dbg !655
LOAD [p=*q]:   %161 = load i16* %160, align 2, !dbg !655
STORE [*p=q]:   store i32 %163, i32* %nextcode, align 4, !dbg !655
LOAD [p=*q]:   %164 = load i32* %len, align 4, !dbg !656
LOAD [p=*q]:   %165 = load i32* %3, align 4, !dbg !656
LOAD [p=*q]:   %259 = load i32* %ch, align 4, !dbg !685
STORE [*p=q]:   store i32 %260, i32* %ch, align 4, !dbg !685
LOAD [p=*q]:   %153 = load i32* %len, align 4, !dbg !655
LOAD [p=*q]:   %156 = load i16* %155, align 2, !dbg !655
LOAD [p=*q]:   %158 = load i32* %len, align 4, !dbg !655
LOAD [p=*q]:   %161 = load i16* %160, align 2, !dbg !655
STORE [*p=q]:   store i32 %163, i32* %nextcode, align 4, !dbg !655
LOAD [p=*q]:   %164 = load i32* %len, align 4, !dbg !656
LOAD [p=*q]:   %165 = load i32* %3, align 4, !dbg !656
LOAD [p=*q]:   %168 = load i32* %3, align 4, !dbg !657
LOAD [p=*q]:   %170 = load i32* %nextcode, align 4, !dbg !657
LOAD [p=*q]:   %195 = load i32* %len, align 4, !dbg !665
LOAD [p=*q]:   %198 = load i16* %197, align 2, !dbg !665
STORE [*p=q]:   store i32 %199, i32* %k, align 4, !dbg !665
LOAD [p=*q]:   %200 = load i32* %k, align 4, !dbg !667
LOAD [p=*q]:   %201 = load i32* %jutbits, align 4, !dbg !667
LOAD [p=*q]:   %204 = load i16** %4, align 8, !dbg !667
STORE [*p=q]:   store i16* %205, i16** %p, align 8, !dbg !667
LOAD [p=*q]:   %206 = load i32* %len, align 4, !dbg !668
LOAD [p=*q]:   %207 = load i32* %3, align 4, !dbg !668
STORE [*p=q]:   store i32 %208, i32* %i, align 4, !dbg !668
LOAD [p=*q]:   %168 = load i32* %3, align 4, !dbg !657
LOAD [p=*q]:   %170 = load i32* %nextcode, align 4, !dbg !657
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([11 x i8]* @.str149, i32 0, i32 0)) #7, !dbg !659
LOAD [p=*q]:   %174 = load i32* %len, align 4, !dbg !660
LOAD [p=*q]:   %177 = load i16* %176, align 2, !dbg !660
STORE [*p=q]:   store i32 %178, i32* %i, align 4, !dbg !660
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([11 x i8]* @.str149, i32 0, i32 0)) #7, !dbg !659
LOAD [p=*q]:   %174 = load i32* %len, align 4, !dbg !660
LOAD [p=*q]:   %177 = load i16* %176, align 2, !dbg !660
STORE [*p=q]:   store i32 %178, i32* %i, align 4, !dbg !660
LOAD [p=*q]:   %180 = load i32* %i, align 4, !dbg !660
LOAD [p=*q]:   %181 = load i32* %nextcode, align 4, !dbg !660
LOAD [p=*q]:   %180 = load i32* %i, align 4, !dbg !660
LOAD [p=*q]:   %181 = load i32* %nextcode, align 4, !dbg !660
LOAD [p=*q]:   %184 = load i32* %ch, align 4, !dbg !662
LOAD [p=*q]:   %186 = load i32* %i, align 4, !dbg !662
LOAD [p=*q]:   %188 = load i16** %4, align 8, !dbg !662
STORE [*p=q]:   store i16 %185, i16* %189, !dbg !662
LOAD [p=*q]:   %184 = load i32* %ch, align 4, !dbg !662
LOAD [p=*q]:   %186 = load i32* %i, align 4, !dbg !662
LOAD [p=*q]:   %188 = load i16** %4, align 8, !dbg !662
STORE [*p=q]:   store i16 %185, i16* %189, !dbg !662
LOAD [p=*q]:   %191 = load i32* %i, align 4, !dbg !663
STORE [*p=q]:   store i32 %192, i32* %i, align 4, !dbg !663
LOAD [p=*q]:   %191 = load i32* %i, align 4, !dbg !663
STORE [*p=q]:   store i32 %192, i32* %i, align 4, !dbg !663
LOAD [p=*q]:   %180 = load i32* %i, align 4, !dbg !660
LOAD [p=*q]:   %181 = load i32* %nextcode, align 4, !dbg !660
LOAD [p=*q]:   %253 = load i32* %nextcode, align 4, !dbg !683
LOAD [p=*q]:   %255 = load i32* %len, align 4, !dbg !683
STORE [*p=q]:   store i16 %254, i16* %257, align 2, !dbg !683
LOAD [p=*q]:   %195 = load i32* %len, align 4, !dbg !665
LOAD [p=*q]:   %198 = load i16* %197, align 2, !dbg !665
STORE [*p=q]:   store i32 %199, i32* %k, align 4, !dbg !665
LOAD [p=*q]:   %200 = load i32* %k, align 4, !dbg !667
LOAD [p=*q]:   %201 = load i32* %jutbits, align 4, !dbg !667
LOAD [p=*q]:   %204 = load i16** %4, align 8, !dbg !667
STORE [*p=q]:   store i16* %205, i16** %p, align 8, !dbg !667
LOAD [p=*q]:   %206 = load i32* %len, align 4, !dbg !668
LOAD [p=*q]:   %207 = load i32* %3, align 4, !dbg !668
STORE [*p=q]:   store i32 %208, i32* %i, align 4, !dbg !668
LOAD [p=*q]:   %210 = load i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %210 = load i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %213 = load i16** %p, align 8, !dbg !670
LOAD [p=*q]:   %214 = load i16* %213, !dbg !670
LOAD [p=*q]:   %249 = load i32* %ch, align 4, !dbg !682
LOAD [p=*q]:   %251 = load i16** %p, align 8, !dbg !682
STORE [*p=q]:   store i16 %250, i16* %251, !dbg !682
LOAD [p=*q]:   %213 = load i16** %p, align 8, !dbg !670
LOAD [p=*q]:   %214 = load i16* %213, !dbg !670
LOAD [p=*q]:   %218 = load i32* %avail, align 4, !dbg !672
STORE [*p=q]:   store i16 0, i16* %220, align 1, !dbg !672
LOAD [p=*q]:   %221 = load i32* %avail, align 4, !dbg !672
STORE [*p=q]:   store i16 0, i16* %223, !dbg !672
LOAD [p=*q]:   %224 = load i32* %avail, align 4, !dbg !674
STORE [*p=q]:   store i32 %225, i32* %avail, align 4, !dbg !674
LOAD [p=*q]:   %227 = load i16** %p, align 8, !dbg !674
STORE [*p=q]:   store i16 %226, i16* %227, !dbg !674
LOAD [p=*q]:   %229 = load i32* %k, align 4, !dbg !676
LOAD [p=*q]:   %230 = load i32* %mask, align 4, !dbg !676
LOAD [p=*q]:   %218 = load i32* %avail, align 4, !dbg !672
STORE [*p=q]:   store i16 0, i16* %220, align 1, !dbg !672
LOAD [p=*q]:   %221 = load i32* %avail, align 4, !dbg !672
STORE [*p=q]:   store i16 0, i16* %223, !dbg !672
LOAD [p=*q]:   %224 = load i32* %avail, align 4, !dbg !674
STORE [*p=q]:   store i32 %225, i32* %avail, align 4, !dbg !674
LOAD [p=*q]:   %227 = load i16** %p, align 8, !dbg !674
STORE [*p=q]:   store i16 %226, i16* %227, !dbg !674
LOAD [p=*q]:   %229 = load i32* %k, align 4, !dbg !676
LOAD [p=*q]:   %230 = load i32* %mask, align 4, !dbg !676
LOAD [p=*q]:   %229 = load i32* %k, align 4, !dbg !676
LOAD [p=*q]:   %230 = load i32* %mask, align 4, !dbg !676
LOAD [p=*q]:   %234 = load i16** %p, align 8, !dbg !677
LOAD [p=*q]:   %235 = load i16* %234, !dbg !677
STORE [*p=q]:   store i16* %237, i16** %p, align 8, !dbg !677
LOAD [p=*q]:   %239 = load i16** %p, align 8, !dbg !678
LOAD [p=*q]:   %240 = load i16* %239, !dbg !678
STORE [*p=q]:   store i16* %242, i16** %p, align 8, !dbg !678
LOAD [p=*q]:   %234 = load i16** %p, align 8, !dbg !677
LOAD [p=*q]:   %235 = load i16* %234, !dbg !677
STORE [*p=q]:   store i16* %237, i16** %p, align 8, !dbg !677
LOAD [p=*q]:   %244 = load i32* %k, align 4, !dbg !679
STORE [*p=q]:   store i32 %245, i32* %k, align 4, !dbg !679
LOAD [p=*q]:   %246 = load i32* %i, align 4, !dbg !680
STORE [*p=q]:   store i32 %247, i32* %i, align 4, !dbg !680
LOAD [p=*q]:   %239 = load i16** %p, align 8, !dbg !678
LOAD [p=*q]:   %240 = load i16* %239, !dbg !678
STORE [*p=q]:   store i16* %242, i16** %p, align 8, !dbg !678
LOAD [p=*q]:   %244 = load i32* %k, align 4, !dbg !679
STORE [*p=q]:   store i32 %245, i32* %k, align 4, !dbg !679
LOAD [p=*q]:   %246 = load i32* %i, align 4, !dbg !680
STORE [*p=q]:   store i32 %247, i32* %i, align 4, !dbg !680
LOAD [p=*q]:   %244 = load i32* %k, align 4, !dbg !679
STORE [*p=q]:   store i32 %245, i32* %k, align 4, !dbg !679
LOAD [p=*q]:   %246 = load i32* %i, align 4, !dbg !680
STORE [*p=q]:   store i32 %247, i32* %i, align 4, !dbg !680
LOAD [p=*q]:   %210 = load i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %249 = load i32* %ch, align 4, !dbg !682
LOAD [p=*q]:   %251 = load i16** %p, align 8, !dbg !682
STORE [*p=q]:   store i16 %250, i16* %251, !dbg !682
LOAD [p=*q]:   %253 = load i32* %nextcode, align 4, !dbg !683
LOAD [p=*q]:   %255 = load i32* %len, align 4, !dbg !683
STORE [*p=q]:   store i16 %254, i16* %257, align 2, !dbg !683
LOAD [p=*q]:   %253 = load i32* %nextcode, align 4, !dbg !683
LOAD [p=*q]:   %255 = load i32* %len, align 4, !dbg !683
STORE [*p=q]:   store i16 %254, i16* %257, align 2, !dbg !683
LOAD [p=*q]:   %259 = load i32* %ch, align 4, !dbg !685
STORE [*p=q]:   store i32 %260, i32* %ch, align 4, !dbg !685
LOAD [p=*q]:   %259 = load i32* %ch, align 4, !dbg !685
STORE [*p=q]:   store i32 %260, i32* %ch, align 4, !dbg !685
LOAD [p=*q]:   %140 = load i32* %ch, align 4, !dbg !650
LOAD [p=*q]:   %141 = load i32* %1, align 4, !dbg !650
Analyzing return instruction for make_table
No return value for: make_table
[Processing][Function][fillbuf]
STORE [*p=q]:   store i32 %n, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load i32* %1, align 4, !dbg !576
LOAD [p=*q]:   %3 = load i16* @bitbuf, align 2, !dbg !576
STORE [*p=q]:   store i16 %6, i16* @bitbuf, align 2, !dbg !576
LOAD [p=*q]:   %8 = load i32* %1, align 4, !dbg !578
LOAD [p=*q]:   %9 = load i32* @bitcount, align 4, !dbg !578
LOAD [p=*q]:   %8 = load i32* %1, align 4, !dbg !578
LOAD [p=*q]:   %9 = load i32* @bitcount, align 4, !dbg !578
LOAD [p=*q]:   %12 = load i32* @subbitbuf, align 4, !dbg !579
LOAD [p=*q]:   %13 = load i32* @bitcount, align 4, !dbg !579
LOAD [p=*q]:   %14 = load i32* %1, align 4, !dbg !579
STORE [*p=q]:   store i32 %15, i32* %1, align 4, !dbg !579
LOAD [p=*q]:   %17 = load i16* @bitbuf, align 2, !dbg !579
STORE [*p=q]:   store i16 %20, i16* @bitbuf, align 2, !dbg !579
LOAD [p=*q]:   %21 = load i32* @inptr, align 4, !dbg !581
LOAD [p=*q]:   %22 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %40 = load i32* @subbitbuf, align 4, !dbg !587
LOAD [p=*q]:   %41 = load i32* %1, align 4, !dbg !587
LOAD [p=*q]:   %42 = load i32* @bitcount, align 4, !dbg !587
STORE [*p=q]:   store i32 %43, i32* @bitcount, align 4, !dbg !587
LOAD [p=*q]:   %45 = load i16* @bitbuf, align 2, !dbg !587
STORE [*p=q]:   store i16 %48, i16* @bitbuf, align 2, !dbg !587
Analyzing return instruction for fillbuf
No return value for: fillbuf
LOAD [p=*q]:   %12 = load i32* @subbitbuf, align 4, !dbg !579
LOAD [p=*q]:   %13 = load i32* @bitcount, align 4, !dbg !579
LOAD [p=*q]:   %14 = load i32* %1, align 4, !dbg !579
STORE [*p=q]:   store i32 %15, i32* %1, align 4, !dbg !579
LOAD [p=*q]:   %17 = load i16* @bitbuf, align 2, !dbg !579
STORE [*p=q]:   store i16 %20, i16* @bitbuf, align 2, !dbg !579
LOAD [p=*q]:   %21 = load i32* @inptr, align 4, !dbg !581
LOAD [p=*q]:   %22 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %25 = load i32* @inptr, align 4, !dbg !581
STORE [*p=q]:   store i32 %26, i32* @inptr, align 4, !dbg !581
LOAD [p=*q]:   %29 = load i8* %28, align 1, !dbg !581
CALL [call func]:   %32 = call i32 @fill_inbuf(i32 1), !dbg !582
LOAD [p=*q]:   %25 = load i32* @inptr, align 4, !dbg !581
STORE [*p=q]:   store i32 %26, i32* @inptr, align 4, !dbg !581
LOAD [p=*q]:   %29 = load i8* %28, align 1, !dbg !581
STORE [*p=q]:   store i32 %34, i32* @subbitbuf, align 4, !dbg !582
LOAD [p=*q]:   %35 = load i32* @subbitbuf, align 4, !dbg !583
CALL [call func]:   %32 = call i32 @fill_inbuf(i32 1), !dbg !582
STORE [*p=q]:   store i32 %34, i32* @subbitbuf, align 4, !dbg !582
LOAD [p=*q]:   %35 = load i32* @subbitbuf, align 4, !dbg !583
STORE [*p=q]:   store i32 %34, i32* @subbitbuf, align 4, !dbg !582
LOAD [p=*q]:   %35 = load i32* @subbitbuf, align 4, !dbg !583
STORE [*p=q]:   store i32 0, i32* @subbitbuf, align 4, !dbg !584
STORE [*p=q]:   store i32 8, i32* @bitcount, align 4, !dbg !585
STORE [*p=q]:   store i32 0, i32* @subbitbuf, align 4, !dbg !584
STORE [*p=q]:   store i32 8, i32* @bitcount, align 4, !dbg !585
STORE [*p=q]:   store i32 8, i32* @bitcount, align 4, !dbg !585
LOAD [p=*q]:   %8 = load i32* %1, align 4, !dbg !578
LOAD [p=*q]:   %9 = load i32* @bitcount, align 4, !dbg !578
LOAD [p=*q]:   %40 = load i32* @subbitbuf, align 4, !dbg !587
LOAD [p=*q]:   %41 = load i32* %1, align 4, !dbg !587
LOAD [p=*q]:   %42 = load i32* @bitcount, align 4, !dbg !587
STORE [*p=q]:   store i32 %43, i32* @bitcount, align 4, !dbg !587
LOAD [p=*q]:   %45 = load i16* @bitbuf, align 2, !dbg !587
STORE [*p=q]:   store i16 %48, i16* @bitbuf, align 2, !dbg !587
Analyzing return instruction for fillbuf
No return value for: fillbuf
[Processing][Function][decode_p]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %j}, metadata !574), !dbg !576
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %mask}, metadata !577), !dbg !578
LOAD [p=*q]:   %1 = load i16* @bitbuf, align 2, !dbg !579
LOAD [p=*q]:   %6 = load i16* %5, align 2, !dbg !579
STORE [*p=q]:   store i32 %7, i32* %j, align 4, !dbg !579
LOAD [p=*q]:   %8 = load i32* %j, align 4, !dbg !580
STORE [*p=q]:   store i32 128, i32* %mask, align 4, !dbg !581
LOAD [p=*q]:   %37 = load i32* %j, align 4, !dbg !591
LOAD [p=*q]:   %40 = load i8* %39, align 1, !dbg !591
CALL [call func]:   call void (...)* bitcast (void (i32)* @fillbuf to void (...)*)(i32 %41), !dbg !591
LOAD [p=*q]:   %42 = load i32* %j, align 4, !dbg !592
STORE [*p=q]:   store i32 128, i32* %mask, align 4, !dbg !581
LOAD [p=*q]:   %12 = load i16* @bitbuf, align 2, !dbg !584
LOAD [p=*q]:   %14 = load i32* %mask, align 4, !dbg !584
LOAD [p=*q]:   %12 = load i16* @bitbuf, align 2, !dbg !584
LOAD [p=*q]:   %14 = load i32* %mask, align 4, !dbg !584
LOAD [p=*q]:   %18 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %21 = load i16* %20, !dbg !586
STORE [*p=q]:   store i32 %22, i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %24 = load i32* %j, align 4, !dbg !587
LOAD [p=*q]:   %27 = load i16* %26, align 1, !dbg !587
STORE [*p=q]:   store i32 %28, i32* %j, align 4, !dbg !587
LOAD [p=*q]:   %18 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %21 = load i16* %20, !dbg !586
STORE [*p=q]:   store i32 %22, i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %30 = load i32* %mask, align 4, !dbg !588
STORE [*p=q]:   store i32 %31, i32* %mask, align 4, !dbg !588
LOAD [p=*q]:   %24 = load i32* %j, align 4, !dbg !587
LOAD [p=*q]:   %27 = load i16* %26, align 1, !dbg !587
STORE [*p=q]:   store i32 %28, i32* %j, align 4, !dbg !587
LOAD [p=*q]:   %30 = load i32* %mask, align 4, !dbg !588
STORE [*p=q]:   store i32 %31, i32* %mask, align 4, !dbg !588
LOAD [p=*q]:   %30 = load i32* %mask, align 4, !dbg !588
STORE [*p=q]:   store i32 %31, i32* %mask, align 4, !dbg !588
LOAD [p=*q]:   %33 = load i32* %j, align 4, !dbg !589
LOAD [p=*q]:   %33 = load i32* %j, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i16* @bitbuf, align 2, !dbg !584
LOAD [p=*q]:   %14 = load i32* %mask, align 4, !dbg !584
LOAD [p=*q]:   %37 = load i32* %j, align 4, !dbg !591
LOAD [p=*q]:   %40 = load i8* %39, align 1, !dbg !591
CALL [call func]:   call void (...)* bitcast (void (i32)* @fillbuf to void (...)*)(i32 %41), !dbg !591
LOAD [p=*q]:   %42 = load i32* %j, align 4, !dbg !592
LOAD [p=*q]:   %37 = load i32* %j, align 4, !dbg !591
LOAD [p=*q]:   %40 = load i8* %39, align 1, !dbg !591
CALL [call func]:   call void (...)* bitcast (void (i32)* @fillbuf to void (...)*)(i32 %41), !dbg !591
LOAD [p=*q]:   %42 = load i32* %j, align 4, !dbg !592
LOAD [p=*q]:   %45 = load i32* %j, align 4, !dbg !593
LOAD [p=*q]:   %48 = load i32* %j, align 4, !dbg !594
CALL [call func]:   %50 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 %49), !dbg !594
STORE [*p=q]:   store i32 %51, i32* %j, align 4, !dbg !594
LOAD [p=*q]:   %53 = load i32* %j, align 4, !dbg !595
Analyzing return instruction for decode_p
	  %53 = load i32* %j, align 4, !dbg !595
LOAD [p=*q]:   %45 = load i32* %j, align 4, !dbg !593
LOAD [p=*q]:   %48 = load i32* %j, align 4, !dbg !594
CALL [call func]:   %50 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 %49), !dbg !594
STORE [*p=q]:   store i32 %51, i32* %j, align 4, !dbg !594
LOAD [p=*q]:   %53 = load i32* %j, align 4, !dbg !595
Analyzing return instruction for decode_p
	  %53 = load i32* %j, align 4, !dbg !595
LOAD [p=*q]:   %53 = load i32* %j, align 4, !dbg !595
Analyzing return instruction for decode_p
	  %53 = load i32* %j, align 4, !dbg !595
[Processing][Function][decode_c]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %j}, metadata !574), !dbg !576
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %mask}, metadata !577), !dbg !578
LOAD [p=*q]:   %2 = load i32* @blocksize, align 4, !dbg !579
CALL [call func]:   %5 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 16), !dbg !580
STORE [*p=q]:   store i32 %5, i32* @blocksize, align 4, !dbg !580
LOAD [p=*q]:   %6 = load i32* @blocksize, align 4, !dbg !582
LOAD [p=*q]:   %11 = load i32* @blocksize, align 4, !dbg !589
STORE [*p=q]:   store i32 %12, i32* @blocksize, align 4, !dbg !589
LOAD [p=*q]:   %13 = load i16* @bitbuf, align 2, !dbg !590
LOAD [p=*q]:   %18 = load i16* %17, align 1, !dbg !590
STORE [*p=q]:   store i32 %19, i32* %j, align 4, !dbg !590
LOAD [p=*q]:   %20 = load i32* %j, align 4, !dbg !591
CALL [call func]:   %5 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 16), !dbg !580
STORE [*p=q]:   store i32 %5, i32* @blocksize, align 4, !dbg !580
LOAD [p=*q]:   %6 = load i32* @blocksize, align 4, !dbg !582
STORE [*p=q]:   store i32 510, i32* %1, !dbg !583
CALL [call func]:   call void (...)* bitcast (void (i32, i32, i32)* @read_pt_len to void (...)*)(i32 19, i32 5, i32 3), !dbg !585
CALL [call func]:   call void @read_c_len(), !dbg !586
CALL [call func]:   call void (...)* bitcast (void (i32, i32, i32)* @read_pt_len to void (...)*)(i32 14, i32 4, i32 -1), !dbg !587
STORE [*p=q]:   store i32 510, i32* %1, !dbg !583
LOAD [p=*q]:   %56 = load i32* %1, !dbg !604
Analyzing return instruction for decode_c
	  %56 = load i32* %1, !dbg !604
CALL [call func]:   call void (...)* bitcast (void (i32, i32, i32)* @read_pt_len to void (...)*)(i32 19, i32 5, i32 3), !dbg !585
CALL [call func]:   call void @read_c_len(), !dbg !586
CALL [call func]:   call void (...)* bitcast (void (i32, i32, i32)* @read_pt_len to void (...)*)(i32 14, i32 4, i32 -1), !dbg !587
LOAD [p=*q]:   %11 = load i32* @blocksize, align 4, !dbg !589
STORE [*p=q]:   store i32 %12, i32* @blocksize, align 4, !dbg !589
LOAD [p=*q]:   %13 = load i16* @bitbuf, align 2, !dbg !590
LOAD [p=*q]:   %18 = load i16* %17, align 1, !dbg !590
STORE [*p=q]:   store i32 %19, i32* %j, align 4, !dbg !590
LOAD [p=*q]:   %20 = load i32* %j, align 4, !dbg !591
LOAD [p=*q]:   %11 = load i32* @blocksize, align 4, !dbg !589
STORE [*p=q]:   store i32 %12, i32* @blocksize, align 4, !dbg !589
LOAD [p=*q]:   %13 = load i16* @bitbuf, align 2, !dbg !590
LOAD [p=*q]:   %18 = load i16* %17, align 1, !dbg !590
STORE [*p=q]:   store i32 %19, i32* %j, align 4, !dbg !590
LOAD [p=*q]:   %20 = load i32* %j, align 4, !dbg !591
STORE [*p=q]:   store i32 8, i32* %mask, align 4, !dbg !592
LOAD [p=*q]:   %49 = load i32* %j, align 4, !dbg !602
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !602
CALL [call func]:   call void (...)* bitcast (void (i32)* @fillbuf to void (...)*)(i32 %53), !dbg !602
LOAD [p=*q]:   %54 = load i32* %j, align 4, !dbg !603
STORE [*p=q]:   store i32 %54, i32* %1, !dbg !603
STORE [*p=q]:   store i32 8, i32* %mask, align 4, !dbg !592
LOAD [p=*q]:   %24 = load i16* @bitbuf, align 2, !dbg !595
LOAD [p=*q]:   %26 = load i32* %mask, align 4, !dbg !595
LOAD [p=*q]:   %24 = load i16* @bitbuf, align 2, !dbg !595
LOAD [p=*q]:   %26 = load i32* %mask, align 4, !dbg !595
LOAD [p=*q]:   %30 = load i32* %j, align 4, !dbg !597
LOAD [p=*q]:   %33 = load i16* %32, !dbg !597
STORE [*p=q]:   store i32 %34, i32* %j, align 4, !dbg !597
LOAD [p=*q]:   %36 = load i32* %j, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i16* %38, align 1, !dbg !598
STORE [*p=q]:   store i32 %40, i32* %j, align 4, !dbg !598
LOAD [p=*q]:   %30 = load i32* %j, align 4, !dbg !597
LOAD [p=*q]:   %33 = load i16* %32, !dbg !597
STORE [*p=q]:   store i32 %34, i32* %j, align 4, !dbg !597
LOAD [p=*q]:   %42 = load i32* %mask, align 4, !dbg !599
STORE [*p=q]:   store i32 %43, i32* %mask, align 4, !dbg !599
LOAD [p=*q]:   %36 = load i32* %j, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i16* %38, align 1, !dbg !598
STORE [*p=q]:   store i32 %40, i32* %j, align 4, !dbg !598
LOAD [p=*q]:   %42 = load i32* %mask, align 4, !dbg !599
STORE [*p=q]:   store i32 %43, i32* %mask, align 4, !dbg !599
LOAD [p=*q]:   %42 = load i32* %mask, align 4, !dbg !599
STORE [*p=q]:   store i32 %43, i32* %mask, align 4, !dbg !599
LOAD [p=*q]:   %45 = load i32* %j, align 4, !dbg !600
LOAD [p=*q]:   %45 = load i32* %j, align 4, !dbg !600
LOAD [p=*q]:   %24 = load i16* @bitbuf, align 2, !dbg !595
LOAD [p=*q]:   %26 = load i32* %mask, align 4, !dbg !595
LOAD [p=*q]:   %49 = load i32* %j, align 4, !dbg !602
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !602
CALL [call func]:   call void (...)* bitcast (void (i32)* @fillbuf to void (...)*)(i32 %53), !dbg !602
LOAD [p=*q]:   %54 = load i32* %j, align 4, !dbg !603
STORE [*p=q]:   store i32 %54, i32* %1, !dbg !603
LOAD [p=*q]:   %49 = load i32* %j, align 4, !dbg !602
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !602
CALL [call func]:   call void (...)* bitcast (void (i32)* @fillbuf to void (...)*)(i32 %53), !dbg !602
LOAD [p=*q]:   %54 = load i32* %j, align 4, !dbg !603
STORE [*p=q]:   store i32 %54, i32* %1, !dbg !603
LOAD [p=*q]:   %56 = load i32* %1, !dbg !604
Analyzing return instruction for decode_c
	  %56 = load i32* %1, !dbg !604
LOAD [p=*q]:   %56 = load i32* %1, !dbg !604
Analyzing return instruction for decode_c
	  %56 = load i32* %1, !dbg !604
[Processing][Function][decode]
STORE [*p=q]:   store i32 %count, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
STORE [*p=q]:   store i8* %buffer, i8** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %3}, metadata !576), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !579), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %c}, metadata !582), !dbg !583
STORE [*p=q]:   store i32 0, i32* %r, align 4, !dbg !584
LOAD [p=*q]:   %5 = load i32* @j, align 4, !dbg !585
STORE [*p=q]:   store i32 %6, i32* @j, align 4, !dbg !585
LOAD [p=*q]:   %5 = load i32* @j, align 4, !dbg !585
STORE [*p=q]:   store i32 %6, i32* @j, align 4, !dbg !585
LOAD [p=*q]:   %9 = load i32* @decode.i, align 4, !dbg !586
LOAD [p=*q]:   %11 = load i8** %3, align 8, !dbg !586
LOAD [p=*q]:   %13 = load i8* %12, !dbg !586
LOAD [p=*q]:   %14 = load i32* %r, align 4, !dbg !586
LOAD [p=*q]:   %16 = load i8** %3, align 8, !dbg !586
STORE [*p=q]:   store i8 %13, i8* %17, !dbg !586
LOAD [p=*q]:   %18 = load i32* @decode.i, align 4, !dbg !588
STORE [*p=q]:   store i32 %20, i32* @decode.i, align 4, !dbg !588
LOAD [p=*q]:   %21 = load i32* %r, align 4, !dbg !589
STORE [*p=q]:   store i32 %22, i32* %r, align 4, !dbg !589
LOAD [p=*q]:   %23 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %9 = load i32* @decode.i, align 4, !dbg !586
LOAD [p=*q]:   %11 = load i8** %3, align 8, !dbg !586
LOAD [p=*q]:   %13 = load i8* %12, !dbg !586
LOAD [p=*q]:   %14 = load i32* %r, align 4, !dbg !586
LOAD [p=*q]:   %16 = load i8** %3, align 8, !dbg !586
STORE [*p=q]:   store i8 %13, i8* %17, !dbg !586
LOAD [p=*q]:   %18 = load i32* @decode.i, align 4, !dbg !588
STORE [*p=q]:   store i32 %20, i32* @decode.i, align 4, !dbg !588
LOAD [p=*q]:   %21 = load i32* %r, align 4, !dbg !589
STORE [*p=q]:   store i32 %22, i32* %r, align 4, !dbg !589
LOAD [p=*q]:   %23 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* %r, align 4, !dbg !590
STORE [*p=q]:   store i32 %26, i32* %1, !dbg !590
LOAD [p=*q]:   %26 = load i32* %r, align 4, !dbg !590
STORE [*p=q]:   store i32 %26, i32* %1, !dbg !590
LOAD [p=*q]:   %87 = load i32* %1, !dbg !618
Analyzing return instruction for decode
	  %87 = load i32* %1, !dbg !618
LOAD [p=*q]:   %5 = load i32* @j, align 4, !dbg !585
STORE [*p=q]:   store i32 %6, i32* @j, align 4, !dbg !585
CALL [call func]:   %30 = call i32 @decode_c(), !dbg !594
STORE [*p=q]:   store i32 %30, i32* %c, align 4, !dbg !594
LOAD [p=*q]:   %31 = load i32* %c, align 4, !dbg !596
CALL [call func]:   %30 = call i32 @decode_c(), !dbg !594
STORE [*p=q]:   store i32 %30, i32* %c, align 4, !dbg !594
LOAD [p=*q]:   %31 = load i32* %c, align 4, !dbg !596
STORE [*p=q]:   store i32 1, i32* @done, align 4, !dbg !597
LOAD [p=*q]:   %34 = load i32* %r, align 4, !dbg !599
STORE [*p=q]:   store i32 %34, i32* %1, !dbg !599
LOAD [p=*q]:   %36 = load i32* %c, align 4, !dbg !600
STORE [*p=q]:   store i32 1, i32* @done, align 4, !dbg !597
LOAD [p=*q]:   %34 = load i32* %r, align 4, !dbg !599
STORE [*p=q]:   store i32 %34, i32* %1, !dbg !599
LOAD [p=*q]:   %87 = load i32* %1, !dbg !618
Analyzing return instruction for decode
	  %87 = load i32* %1, !dbg !618
LOAD [p=*q]:   %36 = load i32* %c, align 4, !dbg !600
LOAD [p=*q]:   %39 = load i32* %c, align 4, !dbg !601
LOAD [p=*q]:   %41 = load i32* %r, align 4, !dbg !601
LOAD [p=*q]:   %43 = load i8** %3, align 8, !dbg !601
STORE [*p=q]:   store i8 %40, i8* %44, !dbg !601
LOAD [p=*q]:   %45 = load i32* %r, align 4, !dbg !603
STORE [*p=q]:   store i32 %46, i32* %r, align 4, !dbg !603
LOAD [p=*q]:   %47 = load i32* %2, align 4, !dbg !603
LOAD [p=*q]:   %53 = load i32* %c, align 4, !dbg !606
STORE [*p=q]:   store i32 %54, i32* @j, align 4, !dbg !606
LOAD [p=*q]:   %55 = load i32* %r, align 4, !dbg !608
CALL [call func]:   %56 = call i32 @decode_p(), !dbg !609
STORE [*p=q]:   store i32 %59, i32* @decode.i, align 4, !dbg !609
LOAD [p=*q]:   %39 = load i32* %c, align 4, !dbg !601
LOAD [p=*q]:   %41 = load i32* %r, align 4, !dbg !601
LOAD [p=*q]:   %43 = load i8** %3, align 8, !dbg !601
STORE [*p=q]:   store i8 %40, i8* %44, !dbg !601
LOAD [p=*q]:   %45 = load i32* %r, align 4, !dbg !603
STORE [*p=q]:   store i32 %46, i32* %r, align 4, !dbg !603
LOAD [p=*q]:   %47 = load i32* %2, align 4, !dbg !603
LOAD [p=*q]:   %50 = load i32* %r, align 4, !dbg !604
STORE [*p=q]:   store i32 %50, i32* %1, !dbg !604
LOAD [p=*q]:   %50 = load i32* %r, align 4, !dbg !604
STORE [*p=q]:   store i32 %50, i32* %1, !dbg !604
LOAD [p=*q]:   %87 = load i32* %1, !dbg !618
Analyzing return instruction for decode
	  %87 = load i32* %1, !dbg !618
LOAD [p=*q]:   %53 = load i32* %c, align 4, !dbg !606
STORE [*p=q]:   store i32 %54, i32* @j, align 4, !dbg !606
LOAD [p=*q]:   %55 = load i32* %r, align 4, !dbg !608
CALL [call func]:   %56 = call i32 @decode_p(), !dbg !609
STORE [*p=q]:   store i32 %59, i32* @decode.i, align 4, !dbg !609
LOAD [p=*q]:   %61 = load i32* @j, align 4, !dbg !610
STORE [*p=q]:   store i32 %62, i32* @j, align 4, !dbg !610
LOAD [p=*q]:   %61 = load i32* @j, align 4, !dbg !610
STORE [*p=q]:   store i32 %62, i32* @j, align 4, !dbg !610
LOAD [p=*q]:   %65 = load i32* @decode.i, align 4, !dbg !611
LOAD [p=*q]:   %67 = load i8** %3, align 8, !dbg !611
LOAD [p=*q]:   %69 = load i8* %68, !dbg !611
LOAD [p=*q]:   %70 = load i32* %r, align 4, !dbg !611
LOAD [p=*q]:   %72 = load i8** %3, align 8, !dbg !611
STORE [*p=q]:   store i8 %69, i8* %73, !dbg !611
LOAD [p=*q]:   %74 = load i32* @decode.i, align 4, !dbg !613
STORE [*p=q]:   store i32 %76, i32* @decode.i, align 4, !dbg !613
LOAD [p=*q]:   %77 = load i32* %r, align 4, !dbg !614
STORE [*p=q]:   store i32 %78, i32* %r, align 4, !dbg !614
LOAD [p=*q]:   %79 = load i32* %2, align 4, !dbg !614
LOAD [p=*q]:   %65 = load i32* @decode.i, align 4, !dbg !611
LOAD [p=*q]:   %67 = load i8** %3, align 8, !dbg !611
LOAD [p=*q]:   %69 = load i8* %68, !dbg !611
LOAD [p=*q]:   %70 = load i32* %r, align 4, !dbg !611
LOAD [p=*q]:   %72 = load i8** %3, align 8, !dbg !611
STORE [*p=q]:   store i8 %69, i8* %73, !dbg !611
LOAD [p=*q]:   %74 = load i32* @decode.i, align 4, !dbg !613
STORE [*p=q]:   store i32 %76, i32* @decode.i, align 4, !dbg !613
LOAD [p=*q]:   %77 = load i32* %r, align 4, !dbg !614
STORE [*p=q]:   store i32 %78, i32* %r, align 4, !dbg !614
LOAD [p=*q]:   %79 = load i32* %2, align 4, !dbg !614
LOAD [p=*q]:   %82 = load i32* %r, align 4, !dbg !615
STORE [*p=q]:   store i32 %82, i32* %1, !dbg !615
LOAD [p=*q]:   %82 = load i32* %r, align 4, !dbg !615
STORE [*p=q]:   store i32 %82, i32* %1, !dbg !615
LOAD [p=*q]:   %87 = load i32* %1, !dbg !618
Analyzing return instruction for decode
	  %87 = load i32* %1, !dbg !618
LOAD [p=*q]:   %61 = load i32* @j, align 4, !dbg !610
STORE [*p=q]:   store i32 %62, i32* @j, align 4, !dbg !610
CALL [call func]:   %30 = call i32 @decode_c(), !dbg !594
STORE [*p=q]:   store i32 %30, i32* %c, align 4, !dbg !594
LOAD [p=*q]:   %31 = load i32* %c, align 4, !dbg !596
LOAD [p=*q]:   %87 = load i32* %1, !dbg !618
Analyzing return instruction for decode
	  %87 = load i32* %1, !dbg !618
[Processing][Function][decode_start]
CALL [call func]:   call void @huf_decode_start(), !dbg !574
STORE [*p=q]:   store i32 0, i32* @j, align 4, !dbg !576
STORE [*p=q]:   store i32 0, i32* @done, align 4, !dbg !577
Analyzing return instruction for decode_start
No return value for: decode_start
[Processing][Function][unlzh]
STORE [*p=q]:   store i32 %in, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %out, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !578), !dbg !580
LOAD [p=*q]:   %3 = load i32* %1, align 4, !dbg !581
STORE [*p=q]:   store i32 %3, i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %4 = load i32* %2, align 4, !dbg !582
STORE [*p=q]:   store i32 %4, i32* @ofd, align 4, !dbg !582
CALL [call func]:   call void @decode_start(), !dbg !583
LOAD [p=*q]:   %6 = load i32* @done, align 4, !dbg !584
LOAD [p=*q]:   %6 = load i32* @done, align 4, !dbg !584
CALL [call func]:   %10 = call i32 (...)* bitcast (i32 (i32, i8*)* @decode to i32 (...)*)(i32 8192, i8* getelementptr inbounds ([65536 x i8]* @window, i32 0, i32 0)), !dbg !585
STORE [*p=q]:   store i32 %10, i32* %n, align 4, !dbg !585
LOAD [p=*q]:   %11 = load i32* @test, align 4, !dbg !587
Analyzing return instruction for unlzh
	i32 0
CALL [call func]:   %10 = call i32 (...)* bitcast (i32 (i32, i8*)* @decode to i32 (...)*)(i32 8192, i8* getelementptr inbounds ([65536 x i8]* @window, i32 0, i32 0)), !dbg !585
STORE [*p=q]:   store i32 %10, i32* %n, align 4, !dbg !585
LOAD [p=*q]:   %11 = load i32* @test, align 4, !dbg !587
LOAD [p=*q]:   %14 = load i32* %n, align 4, !dbg !587
LOAD [p=*q]:   %14 = load i32* %n, align 4, !dbg !587
LOAD [p=*q]:   %17 = load i32* %2, align 4, !dbg !588
LOAD [p=*q]:   %18 = load i32* %n, align 4, !dbg !588
CALL [call func]:   call void @write_buf(i32 %17, i8* getelementptr inbounds ([65536 x i8]* @window, i32 0, i32 0), i32 %18), !dbg !588
LOAD [p=*q]:   %17 = load i32* %2, align 4, !dbg !588
LOAD [p=*q]:   %18 = load i32* %n, align 4, !dbg !588
CALL [call func]:   call void @write_buf(i32 %17, i8* getelementptr inbounds ([65536 x i8]* @window, i32 0, i32 0), i32 %18), !dbg !588
LOAD [p=*q]:   %6 = load i32* @done, align 4, !dbg !584
Analyzing return instruction for unlzh
	i32 0
[Processing][Function][gen_bitlen]
STORE [*p=q]:   store %struct.tree_desc* %desc, %struct.tree_desc** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.tree_desc** %1}, metadata !574), !dbg !576
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.ct_data** %tree}, metadata !577), !dbg !579
LOAD [p=*q]:   %2 = load %struct.tree_desc** %1, align 8, !dbg !580
LOAD [p=*q]:   %4 = load %struct.ct_data** %3, align 8, !dbg !580
STORE [*p=q]:   store %struct.ct_data* %4, %struct.ct_data** %tree, align 8, !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32** %extra}, metadata !581), !dbg !582
LOAD [p=*q]:   %5 = load %struct.tree_desc** %1, align 8, !dbg !583
LOAD [p=*q]:   %7 = load i32** %6, align 8, !dbg !583
STORE [*p=q]:   store i32* %7, i32** %extra, align 8, !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %base}, metadata !584), !dbg !585
LOAD [p=*q]:   %8 = load %struct.tree_desc** %1, align 8, !dbg !586
LOAD [p=*q]:   %10 = load i32* %9, align 4, !dbg !586
STORE [*p=q]:   store i32 %10, i32* %base, align 4, !dbg !586
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %max_code}, metadata !587), !dbg !588
LOAD [p=*q]:   %11 = load %struct.tree_desc** %1, align 8, !dbg !589
LOAD [p=*q]:   %13 = load i32* %12, align 4, !dbg !589
STORE [*p=q]:   store i32 %13, i32* %max_code, align 4, !dbg !589
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %max_length}, metadata !590), !dbg !591
LOAD [p=*q]:   %14 = load %struct.tree_desc** %1, align 8, !dbg !592
LOAD [p=*q]:   %16 = load i32* %15, align 4, !dbg !592
STORE [*p=q]:   store i32 %16, i32* %max_length, align 4, !dbg !592
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.ct_data** %stree}, metadata !593), !dbg !594
LOAD [p=*q]:   %17 = load %struct.tree_desc** %1, align 8, !dbg !595
LOAD [p=*q]:   %19 = load %struct.ct_data** %18, align 8, !dbg !595
STORE [*p=q]:   store %struct.ct_data* %19, %struct.ct_data** %stree, align 8, !dbg !595
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %h}, metadata !596), !dbg !597
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !598), !dbg !599
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %m}, metadata !600), !dbg !601
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %bits}, metadata !602), !dbg !603
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %xbits}, metadata !604), !dbg !605
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i16* %f}, metadata !606), !dbg !607
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %overflow}, metadata !608), !dbg !609
STORE [*p=q]:   store i32 0, i32* %overflow, align 4, !dbg !610
STORE [*p=q]:   store i32 0, i32* %bits, align 4, !dbg !611
LOAD [p=*q]:   %21 = load i32* %bits, align 4, !dbg !611
LOAD [p=*q]:   %21 = load i32* %bits, align 4, !dbg !611
LOAD [p=*q]:   %24 = load i32* %bits, align 4, !dbg !613
STORE [*p=q]:   store i16 0, i16* %26, align 2, !dbg !613
LOAD [p=*q]:   %31 = load i32* @heap_max, align 4, !dbg !615
LOAD [p=*q]:   %34 = load i32* %33, align 4, !dbg !615
LOAD [p=*q]:   %36 = load %struct.ct_data** %tree, align 8, !dbg !615
STORE [*p=q]:   store i16 0, i16* %39, align 2, !dbg !615
LOAD [p=*q]:   %40 = load i32* @heap_max, align 4, !dbg !616
STORE [*p=q]:   store i32 %41, i32* %h, align 4, !dbg !616
LOAD [p=*q]:   %24 = load i32* %bits, align 4, !dbg !613
STORE [*p=q]:   store i16 0, i16* %26, align 2, !dbg !613
LOAD [p=*q]:   %28 = load i32* %bits, align 4, !dbg !614
STORE [*p=q]:   store i32 %29, i32* %bits, align 4, !dbg !614
LOAD [p=*q]:   %28 = load i32* %bits, align 4, !dbg !614
STORE [*p=q]:   store i32 %29, i32* %bits, align 4, !dbg !614
LOAD [p=*q]:   %21 = load i32* %bits, align 4, !dbg !611
LOAD [p=*q]:   %31 = load i32* @heap_max, align 4, !dbg !615
LOAD [p=*q]:   %34 = load i32* %33, align 4, !dbg !615
LOAD [p=*q]:   %36 = load %struct.ct_data** %tree, align 8, !dbg !615
STORE [*p=q]:   store i16 0, i16* %39, align 2, !dbg !615
LOAD [p=*q]:   %40 = load i32* @heap_max, align 4, !dbg !616
STORE [*p=q]:   store i32 %41, i32* %h, align 4, !dbg !616
LOAD [p=*q]:   %43 = load i32* %h, align 4, !dbg !616
LOAD [p=*q]:   %43 = load i32* %h, align 4, !dbg !616
LOAD [p=*q]:   %46 = load i32* %h, align 4, !dbg !618
LOAD [p=*q]:   %49 = load i32* %48, align 4, !dbg !618
STORE [*p=q]:   store i32 %49, i32* %n, align 4, !dbg !618
LOAD [p=*q]:   %50 = load i32* %n, align 4, !dbg !620
LOAD [p=*q]:   %52 = load %struct.ct_data** %tree, align 8, !dbg !620
LOAD [p=*q]:   %56 = load i16* %55, align 2, !dbg !620
LOAD [p=*q]:   %58 = load %struct.ct_data** %tree, align 8, !dbg !620
LOAD [p=*q]:   %62 = load i16* %61, align 2, !dbg !620
STORE [*p=q]:   store i32 %64, i32* %bits, align 4, !dbg !620
LOAD [p=*q]:   %65 = load i32* %bits, align 4, !dbg !621
LOAD [p=*q]:   %66 = load i32* %max_length, align 4, !dbg !621
LOAD [p=*q]:   %143 = load i32* %overflow, align 4, !dbg !636
LOAD [p=*q]:   %46 = load i32* %h, align 4, !dbg !618
LOAD [p=*q]:   %49 = load i32* %48, align 4, !dbg !618
STORE [*p=q]:   store i32 %49, i32* %n, align 4, !dbg !618
LOAD [p=*q]:   %50 = load i32* %n, align 4, !dbg !620
LOAD [p=*q]:   %52 = load %struct.ct_data** %tree, align 8, !dbg !620
LOAD [p=*q]:   %56 = load i16* %55, align 2, !dbg !620
LOAD [p=*q]:   %58 = load %struct.ct_data** %tree, align 8, !dbg !620
LOAD [p=*q]:   %62 = load i16* %61, align 2, !dbg !620
STORE [*p=q]:   store i32 %64, i32* %bits, align 4, !dbg !620
LOAD [p=*q]:   %65 = load i32* %bits, align 4, !dbg !621
LOAD [p=*q]:   %66 = load i32* %max_length, align 4, !dbg !621
LOAD [p=*q]:   %69 = load i32* %max_length, align 4, !dbg !622
STORE [*p=q]:   store i32 %69, i32* %bits, align 4, !dbg !622
LOAD [p=*q]:   %70 = load i32* %overflow, align 4, !dbg !622
STORE [*p=q]:   store i32 %71, i32* %overflow, align 4, !dbg !622
LOAD [p=*q]:   %73 = load i32* %bits, align 4, !dbg !623
LOAD [p=*q]:   %75 = load i32* %n, align 4, !dbg !623
LOAD [p=*q]:   %77 = load %struct.ct_data** %tree, align 8, !dbg !623
STORE [*p=q]:   store i16 %74, i16* %80, align 2, !dbg !623
LOAD [p=*q]:   %81 = load i32* %n, align 4, !dbg !624
LOAD [p=*q]:   %82 = load i32* %max_code, align 4, !dbg !624
LOAD [p=*q]:   %69 = load i32* %max_length, align 4, !dbg !622
STORE [*p=q]:   store i32 %69, i32* %bits, align 4, !dbg !622
LOAD [p=*q]:   %70 = load i32* %overflow, align 4, !dbg !622
STORE [*p=q]:   store i32 %71, i32* %overflow, align 4, !dbg !622
LOAD [p=*q]:   %73 = load i32* %bits, align 4, !dbg !623
LOAD [p=*q]:   %75 = load i32* %n, align 4, !dbg !623
LOAD [p=*q]:   %77 = load %struct.ct_data** %tree, align 8, !dbg !623
STORE [*p=q]:   store i16 %74, i16* %80, align 2, !dbg !623
LOAD [p=*q]:   %81 = load i32* %n, align 4, !dbg !624
LOAD [p=*q]:   %82 = load i32* %max_code, align 4, !dbg !624
LOAD [p=*q]:   %73 = load i32* %bits, align 4, !dbg !623
LOAD [p=*q]:   %75 = load i32* %n, align 4, !dbg !623
LOAD [p=*q]:   %77 = load %struct.ct_data** %tree, align 8, !dbg !623
STORE [*p=q]:   store i16 %74, i16* %80, align 2, !dbg !623
LOAD [p=*q]:   %81 = load i32* %n, align 4, !dbg !624
LOAD [p=*q]:   %82 = load i32* %max_code, align 4, !dbg !624
LOAD [p=*q]:   %86 = load i32* %bits, align 4, !dbg !626
LOAD [p=*q]:   %89 = load i16* %88, align 2, !dbg !626
STORE [*p=q]:   store i16 %90, i16* %88, align 2, !dbg !626
STORE [*p=q]:   store i32 0, i32* %xbits, align 4, !dbg !627
LOAD [p=*q]:   %91 = load i32* %n, align 4, !dbg !628
LOAD [p=*q]:   %92 = load i32* %base, align 4, !dbg !628
LOAD [p=*q]:   %140 = load i32* %h, align 4, !dbg !635
STORE [*p=q]:   store i32 %141, i32* %h, align 4, !dbg !635
LOAD [p=*q]:   %86 = load i32* %bits, align 4, !dbg !626
LOAD [p=*q]:   %89 = load i16* %88, align 2, !dbg !626
STORE [*p=q]:   store i16 %90, i16* %88, align 2, !dbg !626
STORE [*p=q]:   store i32 0, i32* %xbits, align 4, !dbg !627
LOAD [p=*q]:   %91 = load i32* %n, align 4, !dbg !628
LOAD [p=*q]:   %92 = load i32* %base, align 4, !dbg !628
LOAD [p=*q]:   %95 = load i32* %n, align 4, !dbg !629
LOAD [p=*q]:   %96 = load i32* %base, align 4, !dbg !629
LOAD [p=*q]:   %99 = load i32** %extra, align 8, !dbg !629
LOAD [p=*q]:   %101 = load i32* %100, !dbg !629
STORE [*p=q]:   store i32 %101, i32* %xbits, align 4, !dbg !629
LOAD [p=*q]:   %103 = load i32* %n, align 4, !dbg !630
LOAD [p=*q]:   %105 = load %struct.ct_data** %tree, align 8, !dbg !630
LOAD [p=*q]:   %109 = load i16* %108, align 2, !dbg !630
STORE [*p=q]:   store i16 %109, i16* %f, align 2, !dbg !630
LOAD [p=*q]:   %110 = load i16* %f, align 2, !dbg !631
LOAD [p=*q]:   %112 = load i32* %bits, align 4, !dbg !631
LOAD [p=*q]:   %113 = load i32* %xbits, align 4, !dbg !631
LOAD [p=*q]:   %117 = load i64* @opt_len, align 8, !dbg !631
STORE [*p=q]:   store i64 %118, i64* @opt_len, align 8, !dbg !631
LOAD [p=*q]:   %119 = load %struct.ct_data** %stree, align 8, !dbg !632
LOAD [p=*q]:   %95 = load i32* %n, align 4, !dbg !629
LOAD [p=*q]:   %96 = load i32* %base, align 4, !dbg !629
LOAD [p=*q]:   %99 = load i32** %extra, align 8, !dbg !629
LOAD [p=*q]:   %101 = load i32* %100, !dbg !629
STORE [*p=q]:   store i32 %101, i32* %xbits, align 4, !dbg !629
LOAD [p=*q]:   %103 = load i32* %n, align 4, !dbg !630
LOAD [p=*q]:   %105 = load %struct.ct_data** %tree, align 8, !dbg !630
LOAD [p=*q]:   %109 = load i16* %108, align 2, !dbg !630
STORE [*p=q]:   store i16 %109, i16* %f, align 2, !dbg !630
LOAD [p=*q]:   %110 = load i16* %f, align 2, !dbg !631
LOAD [p=*q]:   %112 = load i32* %bits, align 4, !dbg !631
LOAD [p=*q]:   %113 = load i32* %xbits, align 4, !dbg !631
LOAD [p=*q]:   %117 = load i64* @opt_len, align 8, !dbg !631
STORE [*p=q]:   store i64 %118, i64* @opt_len, align 8, !dbg !631
LOAD [p=*q]:   %119 = load %struct.ct_data** %stree, align 8, !dbg !632
LOAD [p=*q]:   %103 = load i32* %n, align 4, !dbg !630
LOAD [p=*q]:   %105 = load %struct.ct_data** %tree, align 8, !dbg !630
LOAD [p=*q]:   %109 = load i16* %108, align 2, !dbg !630
STORE [*p=q]:   store i16 %109, i16* %f, align 2, !dbg !630
LOAD [p=*q]:   %110 = load i16* %f, align 2, !dbg !631
LOAD [p=*q]:   %112 = load i32* %bits, align 4, !dbg !631
LOAD [p=*q]:   %113 = load i32* %xbits, align 4, !dbg !631
LOAD [p=*q]:   %117 = load i64* @opt_len, align 8, !dbg !631
STORE [*p=q]:   store i64 %118, i64* @opt_len, align 8, !dbg !631
LOAD [p=*q]:   %119 = load %struct.ct_data** %stree, align 8, !dbg !632
LOAD [p=*q]:   %122 = load i16* %f, align 2, !dbg !633
LOAD [p=*q]:   %124 = load i32* %n, align 4, !dbg !633
LOAD [p=*q]:   %126 = load %struct.ct_data** %stree, align 8, !dbg !633
LOAD [p=*q]:   %130 = load i16* %129, align 2, !dbg !633
LOAD [p=*q]:   %132 = load i32* %xbits, align 4, !dbg !633
LOAD [p=*q]:   %136 = load i64* @static_len, align 8, !dbg !633
STORE [*p=q]:   store i64 %137, i64* @static_len, align 8, !dbg !633
LOAD [p=*q]:   %122 = load i16* %f, align 2, !dbg !633
LOAD [p=*q]:   %124 = load i32* %n, align 4, !dbg !633
LOAD [p=*q]:   %126 = load %struct.ct_data** %stree, align 8, !dbg !633
LOAD [p=*q]:   %130 = load i16* %129, align 2, !dbg !633
LOAD [p=*q]:   %132 = load i32* %xbits, align 4, !dbg !633
LOAD [p=*q]:   %136 = load i64* @static_len, align 8, !dbg !633
STORE [*p=q]:   store i64 %137, i64* @static_len, align 8, !dbg !633
LOAD [p=*q]:   %140 = load i32* %h, align 4, !dbg !635
STORE [*p=q]:   store i32 %141, i32* %h, align 4, !dbg !635
LOAD [p=*q]:   %140 = load i32* %h, align 4, !dbg !635
STORE [*p=q]:   store i32 %141, i32* %h, align 4, !dbg !635
LOAD [p=*q]:   %43 = load i32* %h, align 4, !dbg !616
LOAD [p=*q]:   %143 = load i32* %overflow, align 4, !dbg !636
Analyzing return instruction for gen_bitlen
No return value for: gen_bitlen
LOAD [p=*q]:   %148 = load i32* %max_length, align 4, !dbg !639
STORE [*p=q]:   store i32 %149, i32* %bits, align 4, !dbg !639
LOAD [p=*q]:   %148 = load i32* %max_length, align 4, !dbg !639
STORE [*p=q]:   store i32 %149, i32* %bits, align 4, !dbg !639
LOAD [p=*q]:   %151 = load i32* %bits, align 4, !dbg !641
LOAD [p=*q]:   %154 = load i16* %153, align 2, !dbg !641
LOAD [p=*q]:   %151 = load i32* %bits, align 4, !dbg !641
LOAD [p=*q]:   %154 = load i16* %153, align 2, !dbg !641
LOAD [p=*q]:   %158 = load i32* %bits, align 4, !dbg !642
STORE [*p=q]:   store i32 %159, i32* %bits, align 4, !dbg !642
LOAD [p=*q]:   %161 = load i32* %bits, align 4, !dbg !643
LOAD [p=*q]:   %164 = load i16* %163, align 2, !dbg !643
STORE [*p=q]:   store i16 %165, i16* %163, align 2, !dbg !643
LOAD [p=*q]:   %166 = load i32* %bits, align 4, !dbg !644
LOAD [p=*q]:   %170 = load i16* %169, align 2, !dbg !644
STORE [*p=q]:   store i16 %173, i16* %169, align 2, !dbg !644
LOAD [p=*q]:   %174 = load i32* %max_length, align 4, !dbg !645
LOAD [p=*q]:   %177 = load i16* %176, align 2, !dbg !645
STORE [*p=q]:   store i16 %178, i16* %176, align 2, !dbg !645
LOAD [p=*q]:   %179 = load i32* %overflow, align 4, !dbg !646
STORE [*p=q]:   store i32 %180, i32* %overflow, align 4, !dbg !646
LOAD [p=*q]:   %158 = load i32* %bits, align 4, !dbg !642
STORE [*p=q]:   store i32 %159, i32* %bits, align 4, !dbg !642
LOAD [p=*q]:   %151 = load i32* %bits, align 4, !dbg !641
LOAD [p=*q]:   %154 = load i16* %153, align 2, !dbg !641
LOAD [p=*q]:   %161 = load i32* %bits, align 4, !dbg !643
LOAD [p=*q]:   %164 = load i16* %163, align 2, !dbg !643
STORE [*p=q]:   store i16 %165, i16* %163, align 2, !dbg !643
LOAD [p=*q]:   %166 = load i32* %bits, align 4, !dbg !644
LOAD [p=*q]:   %170 = load i16* %169, align 2, !dbg !644
STORE [*p=q]:   store i16 %173, i16* %169, align 2, !dbg !644
LOAD [p=*q]:   %174 = load i32* %max_length, align 4, !dbg !645
LOAD [p=*q]:   %177 = load i16* %176, align 2, !dbg !645
STORE [*p=q]:   store i16 %178, i16* %176, align 2, !dbg !645
LOAD [p=*q]:   %179 = load i32* %overflow, align 4, !dbg !646
STORE [*p=q]:   store i32 %180, i32* %overflow, align 4, !dbg !646
LOAD [p=*q]:   %182 = load i32* %overflow, align 4, !dbg !647
LOAD [p=*q]:   %182 = load i32* %overflow, align 4, !dbg !647
LOAD [p=*q]:   %148 = load i32* %max_length, align 4, !dbg !639
STORE [*p=q]:   store i32 %149, i32* %bits, align 4, !dbg !639
LOAD [p=*q]:   %185 = load i32* %max_length, align 4, !dbg !648
STORE [*p=q]:   store i32 %185, i32* %bits, align 4, !dbg !648
LOAD [p=*q]:   %185 = load i32* %max_length, align 4, !dbg !648
STORE [*p=q]:   store i32 %185, i32* %bits, align 4, !dbg !648
LOAD [p=*q]:   %187 = load i32* %bits, align 4, !dbg !648
LOAD [p=*q]:   %187 = load i32* %bits, align 4, !dbg !648
LOAD [p=*q]:   %190 = load i32* %bits, align 4, !dbg !650
LOAD [p=*q]:   %193 = load i16* %192, align 2, !dbg !650
STORE [*p=q]:   store i32 %194, i32* %n, align 4, !dbg !650
Analyzing return instruction for gen_bitlen
No return value for: gen_bitlen
LOAD [p=*q]:   %190 = load i32* %bits, align 4, !dbg !650
LOAD [p=*q]:   %193 = load i16* %192, align 2, !dbg !650
STORE [*p=q]:   store i32 %194, i32* %n, align 4, !dbg !650
LOAD [p=*q]:   %196 = load i32* %n, align 4, !dbg !652
LOAD [p=*q]:   %196 = load i32* %n, align 4, !dbg !652
LOAD [p=*q]:   %199 = load i32* %h, align 4, !dbg !653
STORE [*p=q]:   store i32 %200, i32* %h, align 4, !dbg !653
LOAD [p=*q]:   %203 = load i32* %202, align 4, !dbg !653
STORE [*p=q]:   store i32 %203, i32* %m, align 4, !dbg !653
LOAD [p=*q]:   %204 = load i32* %m, align 4, !dbg !655
LOAD [p=*q]:   %205 = load i32* %max_code, align 4, !dbg !655
LOAD [p=*q]:   %199 = load i32* %h, align 4, !dbg !653
STORE [*p=q]:   store i32 %200, i32* %h, align 4, !dbg !653
LOAD [p=*q]:   %203 = load i32* %202, align 4, !dbg !653
STORE [*p=q]:   store i32 %203, i32* %m, align 4, !dbg !653
LOAD [p=*q]:   %204 = load i32* %m, align 4, !dbg !655
LOAD [p=*q]:   %205 = load i32* %max_code, align 4, !dbg !655
LOAD [p=*q]:   %209 = load i32* %m, align 4, !dbg !657
LOAD [p=*q]:   %211 = load %struct.ct_data** %tree, align 8, !dbg !657
LOAD [p=*q]:   %215 = load i16* %214, align 2, !dbg !657
LOAD [p=*q]:   %217 = load i32* %bits, align 4, !dbg !657
LOAD [p=*q]:   %196 = load i32* %n, align 4, !dbg !652
LOAD [p=*q]:   %209 = load i32* %m, align 4, !dbg !657
LOAD [p=*q]:   %211 = load %struct.ct_data** %tree, align 8, !dbg !657
LOAD [p=*q]:   %215 = load i16* %214, align 2, !dbg !657
LOAD [p=*q]:   %217 = load i32* %bits, align 4, !dbg !657
LOAD [p=*q]:   %220 = load i32* %bits, align 4, !dbg !658
LOAD [p=*q]:   %222 = load i32* %m, align 4, !dbg !658
LOAD [p=*q]:   %224 = load %struct.ct_data** %tree, align 8, !dbg !658
LOAD [p=*q]:   %228 = load i16* %227, align 2, !dbg !658
LOAD [p=*q]:   %231 = load i32* %m, align 4, !dbg !658
LOAD [p=*q]:   %233 = load %struct.ct_data** %tree, align 8, !dbg !658
LOAD [p=*q]:   %237 = load i16* %236, align 2, !dbg !658
LOAD [p=*q]:   %240 = load i64* @opt_len, align 8, !dbg !658
STORE [*p=q]:   store i64 %241, i64* @opt_len, align 8, !dbg !658
LOAD [p=*q]:   %242 = load i32* %bits, align 4, !dbg !660
LOAD [p=*q]:   %244 = load i32* %m, align 4, !dbg !660
LOAD [p=*q]:   %246 = load %struct.ct_data** %tree, align 8, !dbg !660
STORE [*p=q]:   store i16 %243, i16* %249, align 2, !dbg !660
LOAD [p=*q]:   %251 = load i32* %n, align 4, !dbg !662
STORE [*p=q]:   store i32 %252, i32* %n, align 4, !dbg !662
LOAD [p=*q]:   %220 = load i32* %bits, align 4, !dbg !658
LOAD [p=*q]:   %222 = load i32* %m, align 4, !dbg !658
LOAD [p=*q]:   %224 = load %struct.ct_data** %tree, align 8, !dbg !658
LOAD [p=*q]:   %228 = load i16* %227, align 2, !dbg !658
LOAD [p=*q]:   %231 = load i32* %m, align 4, !dbg !658
LOAD [p=*q]:   %233 = load %struct.ct_data** %tree, align 8, !dbg !658
LOAD [p=*q]:   %237 = load i16* %236, align 2, !dbg !658
LOAD [p=*q]:   %240 = load i64* @opt_len, align 8, !dbg !658
STORE [*p=q]:   store i64 %241, i64* @opt_len, align 8, !dbg !658
LOAD [p=*q]:   %242 = load i32* %bits, align 4, !dbg !660
LOAD [p=*q]:   %244 = load i32* %m, align 4, !dbg !660
LOAD [p=*q]:   %246 = load %struct.ct_data** %tree, align 8, !dbg !660
STORE [*p=q]:   store i16 %243, i16* %249, align 2, !dbg !660
LOAD [p=*q]:   %251 = load i32* %n, align 4, !dbg !662
STORE [*p=q]:   store i32 %252, i32* %n, align 4, !dbg !662
LOAD [p=*q]:   %251 = load i32* %n, align 4, !dbg !662
STORE [*p=q]:   store i32 %252, i32* %n, align 4, !dbg !662
LOAD [p=*q]:   %196 = load i32* %n, align 4, !dbg !652
LOAD [p=*q]:   %255 = load i32* %bits, align 4, !dbg !665
STORE [*p=q]:   store i32 %256, i32* %bits, align 4, !dbg !665
LOAD [p=*q]:   %255 = load i32* %bits, align 4, !dbg !665
STORE [*p=q]:   store i32 %256, i32* %bits, align 4, !dbg !665
LOAD [p=*q]:   %187 = load i32* %bits, align 4, !dbg !648
Analyzing return instruction for gen_bitlen
No return value for: gen_bitlen
[Processing][Function][pqdownheap]
STORE [*p=q]:   store %struct.ct_data* %tree, %struct.ct_data** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.ct_data** %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %k, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %v}, metadata !578), !dbg !580
LOAD [p=*q]:   %3 = load i32* %2, align 4, !dbg !581
LOAD [p=*q]:   %6 = load i32* %5, align 4, !dbg !581
STORE [*p=q]:   store i32 %6, i32* %v, align 4, !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %j}, metadata !582), !dbg !583
LOAD [p=*q]:   %7 = load i32* %2, align 4, !dbg !584
STORE [*p=q]:   store i32 %8, i32* %j, align 4, !dbg !584
LOAD [p=*q]:   %10 = load i32* %j, align 4, !dbg !585
LOAD [p=*q]:   %11 = load i32* @heap_len, align 4, !dbg !585
LOAD [p=*q]:   %10 = load i32* %j, align 4, !dbg !585
LOAD [p=*q]:   %11 = load i32* @heap_len, align 4, !dbg !585
LOAD [p=*q]:   %14 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %15 = load i32* @heap_len, align 4, !dbg !586
LOAD [p=*q]:   %159 = load i32* %v, align 4, !dbg !595
LOAD [p=*q]:   %160 = load i32* %2, align 4, !dbg !595
STORE [*p=q]:   store i32 %159, i32* %162, align 4, !dbg !595
Analyzing return instruction for pqdownheap
No return value for: pqdownheap
LOAD [p=*q]:   %14 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %15 = load i32* @heap_len, align 4, !dbg !586
LOAD [p=*q]:   %18 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %22 = load i32* %21, align 4, !dbg !586
LOAD [p=*q]:   %24 = load %struct.ct_data** %1, align 8, !dbg !586
LOAD [p=*q]:   %28 = load i16* %27, align 2, !dbg !586
LOAD [p=*q]:   %30 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %33 = load i32* %32, align 4, !dbg !586
LOAD [p=*q]:   %35 = load %struct.ct_data** %1, align 8, !dbg !586
LOAD [p=*q]:   %39 = load i16* %38, align 2, !dbg !586
LOAD [p=*q]:   %90 = load i32* %v, align 4, !dbg !589
LOAD [p=*q]:   %92 = load %struct.ct_data** %1, align 8, !dbg !589
LOAD [p=*q]:   %96 = load i16* %95, align 2, !dbg !589
LOAD [p=*q]:   %98 = load i32* %j, align 4, !dbg !589
LOAD [p=*q]:   %101 = load i32* %100, align 4, !dbg !589
LOAD [p=*q]:   %103 = load %struct.ct_data** %1, align 8, !dbg !589
LOAD [p=*q]:   %107 = load i16* %106, align 2, !dbg !589
LOAD [p=*q]:   %18 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %22 = load i32* %21, align 4, !dbg !586
LOAD [p=*q]:   %24 = load %struct.ct_data** %1, align 8, !dbg !586
LOAD [p=*q]:   %28 = load i16* %27, align 2, !dbg !586
LOAD [p=*q]:   %30 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %33 = load i32* %32, align 4, !dbg !586
LOAD [p=*q]:   %35 = load %struct.ct_data** %1, align 8, !dbg !586
LOAD [p=*q]:   %39 = load i16* %38, align 2, !dbg !586
LOAD [p=*q]:   %87 = load i32* %j, align 4, !dbg !588
STORE [*p=q]:   store i32 %88, i32* %j, align 4, !dbg !588
LOAD [p=*q]:   %43 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %47 = load i32* %46, align 4, !dbg !586
LOAD [p=*q]:   %49 = load %struct.ct_data** %1, align 8, !dbg !586
LOAD [p=*q]:   %53 = load i16* %52, align 2, !dbg !586
LOAD [p=*q]:   %55 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %58 = load i32* %57, align 4, !dbg !586
LOAD [p=*q]:   %60 = load %struct.ct_data** %1, align 8, !dbg !586
LOAD [p=*q]:   %64 = load i16* %63, align 2, !dbg !586
LOAD [p=*q]:   %43 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %47 = load i32* %46, align 4, !dbg !586
LOAD [p=*q]:   %49 = load %struct.ct_data** %1, align 8, !dbg !586
LOAD [p=*q]:   %53 = load i16* %52, align 2, !dbg !586
LOAD [p=*q]:   %55 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %58 = load i32* %57, align 4, !dbg !586
LOAD [p=*q]:   %60 = load %struct.ct_data** %1, align 8, !dbg !586
LOAD [p=*q]:   %64 = load i16* %63, align 2, !dbg !586
LOAD [p=*q]:   %68 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %72 = load i32* %71, align 4, !dbg !586
LOAD [p=*q]:   %75 = load i8* %74, align 1, !dbg !586
LOAD [p=*q]:   %77 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %80 = load i32* %79, align 4, !dbg !586
LOAD [p=*q]:   %83 = load i8* %82, align 1, !dbg !586
LOAD [p=*q]:   %90 = load i32* %v, align 4, !dbg !589
LOAD [p=*q]:   %92 = load %struct.ct_data** %1, align 8, !dbg !589
LOAD [p=*q]:   %96 = load i16* %95, align 2, !dbg !589
LOAD [p=*q]:   %98 = load i32* %j, align 4, !dbg !589
LOAD [p=*q]:   %101 = load i32* %100, align 4, !dbg !589
LOAD [p=*q]:   %103 = load %struct.ct_data** %1, align 8, !dbg !589
LOAD [p=*q]:   %107 = load i16* %106, align 2, !dbg !589
LOAD [p=*q]:   %68 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %72 = load i32* %71, align 4, !dbg !586
LOAD [p=*q]:   %75 = load i8* %74, align 1, !dbg !586
LOAD [p=*q]:   %77 = load i32* %j, align 4, !dbg !586
LOAD [p=*q]:   %80 = load i32* %79, align 4, !dbg !586
LOAD [p=*q]:   %83 = load i8* %82, align 1, !dbg !586
LOAD [p=*q]:   %87 = load i32* %j, align 4, !dbg !588
STORE [*p=q]:   store i32 %88, i32* %j, align 4, !dbg !588
LOAD [p=*q]:   %90 = load i32* %v, align 4, !dbg !589
LOAD [p=*q]:   %92 = load %struct.ct_data** %1, align 8, !dbg !589
LOAD [p=*q]:   %96 = load i16* %95, align 2, !dbg !589
LOAD [p=*q]:   %98 = load i32* %j, align 4, !dbg !589
LOAD [p=*q]:   %101 = load i32* %100, align 4, !dbg !589
LOAD [p=*q]:   %103 = load %struct.ct_data** %1, align 8, !dbg !589
LOAD [p=*q]:   %107 = load i16* %106, align 2, !dbg !589
LOAD [p=*q]:   %87 = load i32* %j, align 4, !dbg !588
STORE [*p=q]:   store i32 %88, i32* %j, align 4, !dbg !588
LOAD [p=*q]:   %90 = load i32* %v, align 4, !dbg !589
LOAD [p=*q]:   %92 = load %struct.ct_data** %1, align 8, !dbg !589
LOAD [p=*q]:   %96 = load i16* %95, align 2, !dbg !589
LOAD [p=*q]:   %98 = load i32* %j, align 4, !dbg !589
LOAD [p=*q]:   %101 = load i32* %100, align 4, !dbg !589
LOAD [p=*q]:   %103 = load %struct.ct_data** %1, align 8, !dbg !589
LOAD [p=*q]:   %107 = load i16* %106, align 2, !dbg !589
LOAD [p=*q]:   %90 = load i32* %v, align 4, !dbg !589
LOAD [p=*q]:   %92 = load %struct.ct_data** %1, align 8, !dbg !589
LOAD [p=*q]:   %96 = load i16* %95, align 2, !dbg !589
LOAD [p=*q]:   %98 = load i32* %j, align 4, !dbg !589
LOAD [p=*q]:   %101 = load i32* %100, align 4, !dbg !589
LOAD [p=*q]:   %103 = load %struct.ct_data** %1, align 8, !dbg !589
LOAD [p=*q]:   %107 = load i16* %106, align 2, !dbg !589
LOAD [p=*q]:   %111 = load i32* %v, align 4, !dbg !589
LOAD [p=*q]:   %113 = load %struct.ct_data** %1, align 8, !dbg !589
LOAD [p=*q]:   %117 = load i16* %116, align 2, !dbg !589
LOAD [p=*q]:   %119 = load i32* %j, align 4, !dbg !589
LOAD [p=*q]:   %122 = load i32* %121, align 4, !dbg !589
LOAD [p=*q]:   %124 = load %struct.ct_data** %1, align 8, !dbg !589
LOAD [p=*q]:   %128 = load i16* %127, align 2, !dbg !589
LOAD [p=*q]:   %111 = load i32* %v, align 4, !dbg !589
LOAD [p=*q]:   %113 = load %struct.ct_data** %1, align 8, !dbg !589
LOAD [p=*q]:   %117 = load i16* %116, align 2, !dbg !589
LOAD [p=*q]:   %119 = load i32* %j, align 4, !dbg !589
LOAD [p=*q]:   %122 = load i32* %121, align 4, !dbg !589
LOAD [p=*q]:   %124 = load %struct.ct_data** %1, align 8, !dbg !589
LOAD [p=*q]:   %128 = load i16* %127, align 2, !dbg !589
LOAD [p=*q]:   %132 = load i32* %v, align 4, !dbg !589
LOAD [p=*q]:   %135 = load i8* %134, align 1, !dbg !589
LOAD [p=*q]:   %137 = load i32* %j, align 4, !dbg !589
LOAD [p=*q]:   %140 = load i32* %139, align 4, !dbg !589
LOAD [p=*q]:   %143 = load i8* %142, align 1, !dbg !589
LOAD [p=*q]:   %148 = load i32* %j, align 4, !dbg !591
LOAD [p=*q]:   %151 = load i32* %150, align 4, !dbg !591
LOAD [p=*q]:   %152 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 %151, i32* %154, align 4, !dbg !591
LOAD [p=*q]:   %155 = load i32* %j, align 4, !dbg !592
STORE [*p=q]:   store i32 %155, i32* %2, align 4, !dbg !592
LOAD [p=*q]:   %156 = load i32* %j, align 4, !dbg !593
STORE [*p=q]:   store i32 %157, i32* %j, align 4, !dbg !593
LOAD [p=*q]:   %132 = load i32* %v, align 4, !dbg !589
LOAD [p=*q]:   %135 = load i8* %134, align 1, !dbg !589
LOAD [p=*q]:   %137 = load i32* %j, align 4, !dbg !589
LOAD [p=*q]:   %140 = load i32* %139, align 4, !dbg !589
LOAD [p=*q]:   %143 = load i8* %142, align 1, !dbg !589
LOAD [p=*q]:   %148 = load i32* %j, align 4, !dbg !591
LOAD [p=*q]:   %151 = load i32* %150, align 4, !dbg !591
LOAD [p=*q]:   %152 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 %151, i32* %154, align 4, !dbg !591
LOAD [p=*q]:   %155 = load i32* %j, align 4, !dbg !592
STORE [*p=q]:   store i32 %155, i32* %2, align 4, !dbg !592
LOAD [p=*q]:   %156 = load i32* %j, align 4, !dbg !593
STORE [*p=q]:   store i32 %157, i32* %j, align 4, !dbg !593
LOAD [p=*q]:   %159 = load i32* %v, align 4, !dbg !595
LOAD [p=*q]:   %160 = load i32* %2, align 4, !dbg !595
STORE [*p=q]:   store i32 %159, i32* %162, align 4, !dbg !595
Analyzing return instruction for pqdownheap
No return value for: pqdownheap
LOAD [p=*q]:   %148 = load i32* %j, align 4, !dbg !591
LOAD [p=*q]:   %151 = load i32* %150, align 4, !dbg !591
LOAD [p=*q]:   %152 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 %151, i32* %154, align 4, !dbg !591
LOAD [p=*q]:   %155 = load i32* %j, align 4, !dbg !592
STORE [*p=q]:   store i32 %155, i32* %2, align 4, !dbg !592
LOAD [p=*q]:   %156 = load i32* %j, align 4, !dbg !593
STORE [*p=q]:   store i32 %157, i32* %j, align 4, !dbg !593
LOAD [p=*q]:   %10 = load i32* %j, align 4, !dbg !585
LOAD [p=*q]:   %11 = load i32* @heap_len, align 4, !dbg !585
LOAD [p=*q]:   %159 = load i32* %v, align 4, !dbg !595
LOAD [p=*q]:   %160 = load i32* %2, align 4, !dbg !595
STORE [*p=q]:   store i32 %159, i32* %162, align 4, !dbg !595
Analyzing return instruction for pqdownheap
No return value for: pqdownheap
[Processing][Function][scan_tree]
STORE [*p=q]:   store %struct.ct_data* %tree, %struct.ct_data** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.ct_data** %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %max_code, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !578), !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %prevlen}, metadata !581), !dbg !582
STORE [*p=q]:   store i32 -1, i32* %prevlen, align 4, !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %curlen}, metadata !584), !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nextlen}, metadata !586), !dbg !587
LOAD [p=*q]:   %3 = load %struct.ct_data** %1, align 8, !dbg !588
LOAD [p=*q]:   %7 = load i16* %6, align 2, !dbg !588
STORE [*p=q]:   store i32 %8, i32* %nextlen, align 4, !dbg !588
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %count}, metadata !589), !dbg !590
STORE [*p=q]:   store i32 0, i32* %count, align 4, !dbg !591
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %max_count}, metadata !592), !dbg !593
STORE [*p=q]:   store i32 7, i32* %max_count, align 4, !dbg !594
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %min_count}, metadata !595), !dbg !596
STORE [*p=q]:   store i32 4, i32* %min_count, align 4, !dbg !597
LOAD [p=*q]:   %9 = load i32* %nextlen, align 4, !dbg !598
STORE [*p=q]:   store i32 138, i32* %max_count, align 4, !dbg !599
STORE [*p=q]:   store i32 3, i32* %min_count, align 4, !dbg !599
LOAD [p=*q]:   %13 = load i32* %2, align 4, !dbg !600
LOAD [p=*q]:   %16 = load %struct.ct_data** %1, align 8, !dbg !600
STORE [*p=q]:   store i16 -1, i16* %19, align 2, !dbg !600
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !601
STORE [*p=q]:   store i32 138, i32* %max_count, align 4, !dbg !599
STORE [*p=q]:   store i32 3, i32* %min_count, align 4, !dbg !599
LOAD [p=*q]:   %13 = load i32* %2, align 4, !dbg !600
LOAD [p=*q]:   %16 = load %struct.ct_data** %1, align 8, !dbg !600
STORE [*p=q]:   store i16 -1, i16* %19, align 2, !dbg !600
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !601
LOAD [p=*q]:   %13 = load i32* %2, align 4, !dbg !600
LOAD [p=*q]:   %16 = load %struct.ct_data** %1, align 8, !dbg !600
STORE [*p=q]:   store i16 -1, i16* %19, align 2, !dbg !600
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !601
LOAD [p=*q]:   %21 = load i32* %n, align 4, !dbg !601
LOAD [p=*q]:   %22 = load i32* %2, align 4, !dbg !601
LOAD [p=*q]:   %21 = load i32* %n, align 4, !dbg !601
LOAD [p=*q]:   %22 = load i32* %2, align 4, !dbg !601
LOAD [p=*q]:   %25 = load i32* %nextlen, align 4, !dbg !603
STORE [*p=q]:   store i32 %25, i32* %curlen, align 4, !dbg !603
LOAD [p=*q]:   %26 = load i32* %n, align 4, !dbg !605
LOAD [p=*q]:   %29 = load %struct.ct_data** %1, align 8, !dbg !605
LOAD [p=*q]:   %33 = load i16* %32, align 2, !dbg !605
STORE [*p=q]:   store i32 %34, i32* %nextlen, align 4, !dbg !605
LOAD [p=*q]:   %35 = load i32* %count, align 4, !dbg !606
STORE [*p=q]:   store i32 %36, i32* %count, align 4, !dbg !606
LOAD [p=*q]:   %37 = load i32* %max_count, align 4, !dbg !606
Analyzing return instruction for scan_tree
No return value for: scan_tree
LOAD [p=*q]:   %25 = load i32* %nextlen, align 4, !dbg !603
STORE [*p=q]:   store i32 %25, i32* %curlen, align 4, !dbg !603
LOAD [p=*q]:   %26 = load i32* %n, align 4, !dbg !605
LOAD [p=*q]:   %29 = load %struct.ct_data** %1, align 8, !dbg !605
LOAD [p=*q]:   %33 = load i16* %32, align 2, !dbg !605
STORE [*p=q]:   store i32 %34, i32* %nextlen, align 4, !dbg !605
LOAD [p=*q]:   %35 = load i32* %count, align 4, !dbg !606
STORE [*p=q]:   store i32 %36, i32* %count, align 4, !dbg !606
LOAD [p=*q]:   %37 = load i32* %max_count, align 4, !dbg !606
LOAD [p=*q]:   %40 = load i32* %curlen, align 4, !dbg !606
LOAD [p=*q]:   %41 = load i32* %nextlen, align 4, !dbg !606
LOAD [p=*q]:   %45 = load i32* %count, align 4, !dbg !609
LOAD [p=*q]:   %46 = load i32* %min_count, align 4, !dbg !609
LOAD [p=*q]:   %40 = load i32* %curlen, align 4, !dbg !606
LOAD [p=*q]:   %41 = load i32* %nextlen, align 4, !dbg !606
LOAD [p=*q]:   %45 = load i32* %count, align 4, !dbg !609
LOAD [p=*q]:   %46 = load i32* %min_count, align 4, !dbg !609
LOAD [p=*q]:   %103 = load i32* %n, align 4, !dbg !638
STORE [*p=q]:   store i32 %104, i32* %n, align 4, !dbg !638
LOAD [p=*q]:   %45 = load i32* %count, align 4, !dbg !609
LOAD [p=*q]:   %46 = load i32* %min_count, align 4, !dbg !609
LOAD [p=*q]:   %49 = load i32* %count, align 4, !dbg !610
LOAD [p=*q]:   %50 = load i32* %curlen, align 4, !dbg !610
LOAD [p=*q]:   %55 = load i16* %54, align 2, !dbg !610
STORE [*p=q]:   store i16 %58, i16* %54, align 2, !dbg !610
LOAD [p=*q]:   %60 = load i32* %curlen, align 4, !dbg !613
LOAD [p=*q]:   %49 = load i32* %count, align 4, !dbg !610
LOAD [p=*q]:   %50 = load i32* %curlen, align 4, !dbg !610
LOAD [p=*q]:   %55 = load i16* %54, align 2, !dbg !610
STORE [*p=q]:   store i16 %58, i16* %54, align 2, !dbg !610
LOAD [p=*q]:   %60 = load i32* %curlen, align 4, !dbg !613
LOAD [p=*q]:   %63 = load i32* %curlen, align 4, !dbg !614
LOAD [p=*q]:   %64 = load i32* %prevlen, align 4, !dbg !614
LOAD [p=*q]:   %78 = load i32* %count, align 4, !dbg !619
LOAD [p=*q]:   %63 = load i32* %curlen, align 4, !dbg !614
LOAD [p=*q]:   %64 = load i32* %prevlen, align 4, !dbg !614
LOAD [p=*q]:   %67 = load i32* %curlen, align 4, !dbg !616
LOAD [p=*q]:   %72 = load i16* %71, align 2, !dbg !616
STORE [*p=q]:   store i16 %73, i16* %71, align 2, !dbg !616
LOAD [p=*q]:   %75 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 16, i32 0, i32 0), align 2, !dbg !617
STORE [*p=q]:   store i16 %76, i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 16, i32 0, i32 0), align 2, !dbg !617
LOAD [p=*q]:   %67 = load i32* %curlen, align 4, !dbg !616
LOAD [p=*q]:   %72 = load i16* %71, align 2, !dbg !616
STORE [*p=q]:   store i16 %73, i16* %71, align 2, !dbg !616
LOAD [p=*q]:   %75 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 16, i32 0, i32 0), align 2, !dbg !617
STORE [*p=q]:   store i16 %76, i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 16, i32 0, i32 0), align 2, !dbg !617
LOAD [p=*q]:   %75 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 16, i32 0, i32 0), align 2, !dbg !617
STORE [*p=q]:   store i16 %76, i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 16, i32 0, i32 0), align 2, !dbg !617
LOAD [p=*q]:   %78 = load i32* %count, align 4, !dbg !619
LOAD [p=*q]:   %81 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 17, i32 0, i32 0), align 2, !dbg !620
STORE [*p=q]:   store i16 %82, i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 17, i32 0, i32 0), align 2, !dbg !620
LOAD [p=*q]:   %84 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 18, i32 0, i32 0), align 2, !dbg !623
STORE [*p=q]:   store i16 %85, i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 18, i32 0, i32 0), align 2, !dbg !623
LOAD [p=*q]:   %81 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 17, i32 0, i32 0), align 2, !dbg !620
STORE [*p=q]:   store i16 %82, i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 17, i32 0, i32 0), align 2, !dbg !620
LOAD [p=*q]:   %84 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 18, i32 0, i32 0), align 2, !dbg !623
STORE [*p=q]:   store i16 %85, i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 18, i32 0, i32 0), align 2, !dbg !623
STORE [*p=q]:   store i32 0, i32* %count, align 4, !dbg !625
LOAD [p=*q]:   %90 = load i32* %curlen, align 4, !dbg !626
STORE [*p=q]:   store i32 %90, i32* %prevlen, align 4, !dbg !626
LOAD [p=*q]:   %91 = load i32* %nextlen, align 4, !dbg !627
STORE [*p=q]:   store i32 0, i32* %count, align 4, !dbg !625
LOAD [p=*q]:   %90 = load i32* %curlen, align 4, !dbg !626
STORE [*p=q]:   store i32 %90, i32* %prevlen, align 4, !dbg !626
LOAD [p=*q]:   %91 = load i32* %nextlen, align 4, !dbg !627
STORE [*p=q]:   store i32 138, i32* %max_count, align 4, !dbg !628
STORE [*p=q]:   store i32 3, i32* %min_count, align 4, !dbg !628
LOAD [p=*q]:   %95 = load i32* %curlen, align 4, !dbg !631
LOAD [p=*q]:   %96 = load i32* %nextlen, align 4, !dbg !631
STORE [*p=q]:   store i32 138, i32* %max_count, align 4, !dbg !628
STORE [*p=q]:   store i32 3, i32* %min_count, align 4, !dbg !628
LOAD [p=*q]:   %95 = load i32* %curlen, align 4, !dbg !631
LOAD [p=*q]:   %96 = load i32* %nextlen, align 4, !dbg !631
STORE [*p=q]:   store i32 6, i32* %max_count, align 4, !dbg !632
STORE [*p=q]:   store i32 3, i32* %min_count, align 4, !dbg !632
STORE [*p=q]:   store i32 7, i32* %max_count, align 4, !dbg !635
STORE [*p=q]:   store i32 4, i32* %min_count, align 4, !dbg !635
STORE [*p=q]:   store i32 6, i32* %max_count, align 4, !dbg !632
STORE [*p=q]:   store i32 3, i32* %min_count, align 4, !dbg !632
STORE [*p=q]:   store i32 7, i32* %max_count, align 4, !dbg !635
STORE [*p=q]:   store i32 4, i32* %min_count, align 4, !dbg !635
LOAD [p=*q]:   %103 = load i32* %n, align 4, !dbg !638
STORE [*p=q]:   store i32 %104, i32* %n, align 4, !dbg !638
LOAD [p=*q]:   %103 = load i32* %n, align 4, !dbg !638
STORE [*p=q]:   store i32 %104, i32* %n, align 4, !dbg !638
LOAD [p=*q]:   %21 = load i32* %n, align 4, !dbg !601
LOAD [p=*q]:   %22 = load i32* %2, align 4, !dbg !601
Analyzing return instruction for scan_tree
No return value for: scan_tree
[Processing][Function][send_tree]
STORE [*p=q]:   store %struct.ct_data* %tree, %struct.ct_data** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.ct_data** %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %max_code, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !578), !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %prevlen}, metadata !581), !dbg !582
STORE [*p=q]:   store i32 -1, i32* %prevlen, align 4, !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %curlen}, metadata !584), !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nextlen}, metadata !586), !dbg !587
LOAD [p=*q]:   %3 = load %struct.ct_data** %1, align 8, !dbg !588
LOAD [p=*q]:   %7 = load i16* %6, align 2, !dbg !588
STORE [*p=q]:   store i32 %8, i32* %nextlen, align 4, !dbg !588
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %count}, metadata !589), !dbg !590
STORE [*p=q]:   store i32 0, i32* %count, align 4, !dbg !591
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %max_count}, metadata !592), !dbg !593
STORE [*p=q]:   store i32 7, i32* %max_count, align 4, !dbg !594
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %min_count}, metadata !595), !dbg !596
STORE [*p=q]:   store i32 4, i32* %min_count, align 4, !dbg !597
LOAD [p=*q]:   %9 = load i32* %nextlen, align 4, !dbg !598
STORE [*p=q]:   store i32 138, i32* %max_count, align 4, !dbg !599
STORE [*p=q]:   store i32 3, i32* %min_count, align 4, !dbg !599
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !600
STORE [*p=q]:   store i32 138, i32* %max_count, align 4, !dbg !599
STORE [*p=q]:   store i32 3, i32* %min_count, align 4, !dbg !599
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !600
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !600
LOAD [p=*q]:   %14 = load i32* %n, align 4, !dbg !600
LOAD [p=*q]:   %15 = load i32* %2, align 4, !dbg !600
LOAD [p=*q]:   %14 = load i32* %n, align 4, !dbg !600
LOAD [p=*q]:   %15 = load i32* %2, align 4, !dbg !600
LOAD [p=*q]:   %18 = load i32* %nextlen, align 4, !dbg !602
STORE [*p=q]:   store i32 %18, i32* %curlen, align 4, !dbg !602
LOAD [p=*q]:   %19 = load i32* %n, align 4, !dbg !604
LOAD [p=*q]:   %22 = load %struct.ct_data** %1, align 8, !dbg !604
LOAD [p=*q]:   %26 = load i16* %25, align 2, !dbg !604
STORE [*p=q]:   store i32 %27, i32* %nextlen, align 4, !dbg !604
LOAD [p=*q]:   %28 = load i32* %count, align 4, !dbg !605
STORE [*p=q]:   store i32 %29, i32* %count, align 4, !dbg !605
LOAD [p=*q]:   %30 = load i32* %max_count, align 4, !dbg !605
Analyzing return instruction for send_tree
No return value for: send_tree
LOAD [p=*q]:   %18 = load i32* %nextlen, align 4, !dbg !602
STORE [*p=q]:   store i32 %18, i32* %curlen, align 4, !dbg !602
LOAD [p=*q]:   %19 = load i32* %n, align 4, !dbg !604
LOAD [p=*q]:   %22 = load %struct.ct_data** %1, align 8, !dbg !604
LOAD [p=*q]:   %26 = load i16* %25, align 2, !dbg !604
STORE [*p=q]:   store i32 %27, i32* %nextlen, align 4, !dbg !604
LOAD [p=*q]:   %28 = load i32* %count, align 4, !dbg !605
STORE [*p=q]:   store i32 %29, i32* %count, align 4, !dbg !605
LOAD [p=*q]:   %30 = load i32* %max_count, align 4, !dbg !605
LOAD [p=*q]:   %33 = load i32* %curlen, align 4, !dbg !605
LOAD [p=*q]:   %34 = load i32* %nextlen, align 4, !dbg !605
LOAD [p=*q]:   %38 = load i32* %count, align 4, !dbg !608
LOAD [p=*q]:   %39 = load i32* %min_count, align 4, !dbg !608
LOAD [p=*q]:   %33 = load i32* %curlen, align 4, !dbg !605
LOAD [p=*q]:   %34 = load i32* %nextlen, align 4, !dbg !605
LOAD [p=*q]:   %38 = load i32* %count, align 4, !dbg !608
LOAD [p=*q]:   %39 = load i32* %min_count, align 4, !dbg !608
LOAD [p=*q]:   %127 = load i32* %n, align 4, !dbg !646
STORE [*p=q]:   store i32 %128, i32* %n, align 4, !dbg !646
LOAD [p=*q]:   %38 = load i32* %count, align 4, !dbg !608
LOAD [p=*q]:   %39 = load i32* %min_count, align 4, !dbg !608
LOAD [p=*q]:   %63 = load i32* %curlen, align 4, !dbg !615
LOAD [p=*q]:   %43 = load i32* %curlen, align 4, !dbg !611
LOAD [p=*q]:   %48 = load i16* %47, align 2, !dbg !611
LOAD [p=*q]:   %50 = load i32* %curlen, align 4, !dbg !611
LOAD [p=*q]:   %55 = load i16* %54, align 2, !dbg !611
CALL [call func]:   call void @send_bits(i32 %49, i32 %56), !dbg !611
LOAD [p=*q]:   %43 = load i32* %curlen, align 4, !dbg !611
LOAD [p=*q]:   %48 = load i16* %47, align 2, !dbg !611
LOAD [p=*q]:   %50 = load i32* %curlen, align 4, !dbg !611
LOAD [p=*q]:   %55 = load i16* %54, align 2, !dbg !611
CALL [call func]:   call void @send_bits(i32 %49, i32 %56), !dbg !611
LOAD [p=*q]:   %58 = load i32* %count, align 4, !dbg !613
STORE [*p=q]:   store i32 %59, i32* %count, align 4, !dbg !613
LOAD [p=*q]:   %58 = load i32* %count, align 4, !dbg !613
STORE [*p=q]:   store i32 %59, i32* %count, align 4, !dbg !613
LOAD [p=*q]:   %43 = load i32* %curlen, align 4, !dbg !611
LOAD [p=*q]:   %48 = load i16* %47, align 2, !dbg !611
LOAD [p=*q]:   %50 = load i32* %curlen, align 4, !dbg !611
LOAD [p=*q]:   %55 = load i16* %54, align 2, !dbg !611
CALL [call func]:   call void @send_bits(i32 %49, i32 %56), !dbg !611
LOAD [p=*q]:   %63 = load i32* %curlen, align 4, !dbg !615
LOAD [p=*q]:   %66 = load i32* %curlen, align 4, !dbg !616
LOAD [p=*q]:   %67 = load i32* %prevlen, align 4, !dbg !616
LOAD [p=*q]:   %94 = load i32* %count, align 4, !dbg !625
LOAD [p=*q]:   %66 = load i32* %curlen, align 4, !dbg !616
LOAD [p=*q]:   %67 = load i32* %prevlen, align 4, !dbg !616
LOAD [p=*q]:   %70 = load i32* %curlen, align 4, !dbg !618
LOAD [p=*q]:   %75 = load i16* %74, align 2, !dbg !618
LOAD [p=*q]:   %77 = load i32* %curlen, align 4, !dbg !618
LOAD [p=*q]:   %82 = load i16* %81, align 2, !dbg !618
CALL [call func]:   call void @send_bits(i32 %76, i32 %83), !dbg !618
LOAD [p=*q]:   %84 = load i32* %count, align 4, !dbg !620
STORE [*p=q]:   store i32 %85, i32* %count, align 4, !dbg !620
LOAD [p=*q]:   %87 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 16, i32 0, i32 0), align 2, !dbg !622
LOAD [p=*q]:   %89 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 16, i32 1, i32 0), align 2, !dbg !622
CALL [call func]:   call void @send_bits(i32 %88, i32 %90), !dbg !622
LOAD [p=*q]:   %91 = load i32* %count, align 4, !dbg !623
CALL [call func]:   call void @send_bits(i32 %92, i32 2), !dbg !623
LOAD [p=*q]:   %70 = load i32* %curlen, align 4, !dbg !618
LOAD [p=*q]:   %75 = load i16* %74, align 2, !dbg !618
LOAD [p=*q]:   %77 = load i32* %curlen, align 4, !dbg !618
LOAD [p=*q]:   %82 = load i16* %81, align 2, !dbg !618
CALL [call func]:   call void @send_bits(i32 %76, i32 %83), !dbg !618
LOAD [p=*q]:   %84 = load i32* %count, align 4, !dbg !620
STORE [*p=q]:   store i32 %85, i32* %count, align 4, !dbg !620
LOAD [p=*q]:   %87 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 16, i32 0, i32 0), align 2, !dbg !622
LOAD [p=*q]:   %89 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 16, i32 1, i32 0), align 2, !dbg !622
CALL [call func]:   call void @send_bits(i32 %88, i32 %90), !dbg !622
LOAD [p=*q]:   %91 = load i32* %count, align 4, !dbg !623
CALL [call func]:   call void @send_bits(i32 %92, i32 2), !dbg !623
LOAD [p=*q]:   %87 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 16, i32 0, i32 0), align 2, !dbg !622
LOAD [p=*q]:   %89 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 16, i32 1, i32 0), align 2, !dbg !622
CALL [call func]:   call void @send_bits(i32 %88, i32 %90), !dbg !622
LOAD [p=*q]:   %91 = load i32* %count, align 4, !dbg !623
CALL [call func]:   call void @send_bits(i32 %92, i32 2), !dbg !623
LOAD [p=*q]:   %94 = load i32* %count, align 4, !dbg !625
LOAD [p=*q]:   %97 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 17, i32 0, i32 0), align 2, !dbg !626
LOAD [p=*q]:   %99 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 17, i32 1, i32 0), align 2, !dbg !626
CALL [call func]:   call void @send_bits(i32 %98, i32 %100), !dbg !626
LOAD [p=*q]:   %101 = load i32* %count, align 4, !dbg !628
CALL [call func]:   call void @send_bits(i32 %102, i32 3), !dbg !628
LOAD [p=*q]:   %104 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 18, i32 0, i32 0), align 2, !dbg !630
LOAD [p=*q]:   %106 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 18, i32 1, i32 0), align 2, !dbg !630
CALL [call func]:   call void @send_bits(i32 %105, i32 %107), !dbg !630
LOAD [p=*q]:   %108 = load i32* %count, align 4, !dbg !632
CALL [call func]:   call void @send_bits(i32 %109, i32 7), !dbg !632
LOAD [p=*q]:   %97 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 17, i32 0, i32 0), align 2, !dbg !626
LOAD [p=*q]:   %99 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 17, i32 1, i32 0), align 2, !dbg !626
CALL [call func]:   call void @send_bits(i32 %98, i32 %100), !dbg !626
LOAD [p=*q]:   %101 = load i32* %count, align 4, !dbg !628
CALL [call func]:   call void @send_bits(i32 %102, i32 3), !dbg !628
LOAD [p=*q]:   %104 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 18, i32 0, i32 0), align 2, !dbg !630
LOAD [p=*q]:   %106 = load i16* getelementptr inbounds ([39 x %struct.ct_data]* @bl_tree, i32 0, i64 18, i32 1, i32 0), align 2, !dbg !630
CALL [call func]:   call void @send_bits(i32 %105, i32 %107), !dbg !630
LOAD [p=*q]:   %108 = load i32* %count, align 4, !dbg !632
CALL [call func]:   call void @send_bits(i32 %109, i32 7), !dbg !632
STORE [*p=q]:   store i32 0, i32* %count, align 4, !dbg !633
LOAD [p=*q]:   %114 = load i32* %curlen, align 4, !dbg !634
STORE [*p=q]:   store i32 %114, i32* %prevlen, align 4, !dbg !634
LOAD [p=*q]:   %115 = load i32* %nextlen, align 4, !dbg !635
STORE [*p=q]:   store i32 0, i32* %count, align 4, !dbg !633
LOAD [p=*q]:   %114 = load i32* %curlen, align 4, !dbg !634
STORE [*p=q]:   store i32 %114, i32* %prevlen, align 4, !dbg !634
LOAD [p=*q]:   %115 = load i32* %nextlen, align 4, !dbg !635
STORE [*p=q]:   store i32 138, i32* %max_count, align 4, !dbg !636
STORE [*p=q]:   store i32 3, i32* %min_count, align 4, !dbg !636
LOAD [p=*q]:   %119 = load i32* %curlen, align 4, !dbg !639
LOAD [p=*q]:   %120 = load i32* %nextlen, align 4, !dbg !639
STORE [*p=q]:   store i32 138, i32* %max_count, align 4, !dbg !636
STORE [*p=q]:   store i32 3, i32* %min_count, align 4, !dbg !636
LOAD [p=*q]:   %119 = load i32* %curlen, align 4, !dbg !639
LOAD [p=*q]:   %120 = load i32* %nextlen, align 4, !dbg !639
STORE [*p=q]:   store i32 6, i32* %max_count, align 4, !dbg !640
STORE [*p=q]:   store i32 3, i32* %min_count, align 4, !dbg !640
STORE [*p=q]:   store i32 7, i32* %max_count, align 4, !dbg !643
STORE [*p=q]:   store i32 4, i32* %min_count, align 4, !dbg !643
STORE [*p=q]:   store i32 6, i32* %max_count, align 4, !dbg !640
STORE [*p=q]:   store i32 3, i32* %min_count, align 4, !dbg !640
STORE [*p=q]:   store i32 7, i32* %max_count, align 4, !dbg !643
STORE [*p=q]:   store i32 4, i32* %min_count, align 4, !dbg !643
LOAD [p=*q]:   %127 = load i32* %n, align 4, !dbg !646
STORE [*p=q]:   store i32 %128, i32* %n, align 4, !dbg !646
LOAD [p=*q]:   %127 = load i32* %n, align 4, !dbg !646
STORE [*p=q]:   store i32 %128, i32* %n, align 4, !dbg !646
LOAD [p=*q]:   %14 = load i32* %n, align 4, !dbg !600
LOAD [p=*q]:   %15 = load i32* %2, align 4, !dbg !600
Analyzing return instruction for send_tree
No return value for: send_tree
[Processing][Function][ct_tally]
STORE [*p=q]:   store i32 %dist, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %lc, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !576), !dbg !577
LOAD [p=*q]:   %4 = load i32* %3, align 4, !dbg !578
LOAD [p=*q]:   %6 = load i32* @last_lit, align 4, !dbg !578
STORE [*p=q]:   store i32 %7, i32* @last_lit, align 4, !dbg !578
STORE [*p=q]:   store i8 %5, i8* %9, align 1, !dbg !578
LOAD [p=*q]:   %10 = load i32* %2, align 4, !dbg !580
LOAD [p=*q]:   %13 = load i32* %3, align 4, !dbg !581
LOAD [p=*q]:   %18 = load i16* %17, align 2, !dbg !581
STORE [*p=q]:   store i16 %19, i16* %17, align 2, !dbg !581
LOAD [p=*q]:   %21 = load i32* %2, align 4, !dbg !584
STORE [*p=q]:   store i32 %22, i32* %2, align 4, !dbg !584
LOAD [p=*q]:   %23 = load i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %26 = load i8* %25, align 1, !dbg !586
LOAD [p=*q]:   %34 = load i16* %33, align 2, !dbg !586
STORE [*p=q]:   store i16 %35, i16* %33, align 2, !dbg !586
LOAD [p=*q]:   %36 = load i32* %2, align 4, !dbg !587
LOAD [p=*q]:   %13 = load i32* %3, align 4, !dbg !581
LOAD [p=*q]:   %18 = load i16* %17, align 2, !dbg !581
STORE [*p=q]:   store i16 %19, i16* %17, align 2, !dbg !581
LOAD [p=*q]:   %73 = load i8* @flag_bit, align 1, !dbg !590
STORE [*p=q]:   store i8 %76, i8* @flag_bit, align 1, !dbg !590
LOAD [p=*q]:   %77 = load i32* @last_lit, align 4, !dbg !591
LOAD [p=*q]:   %21 = load i32* %2, align 4, !dbg !584
STORE [*p=q]:   store i32 %22, i32* %2, align 4, !dbg !584
LOAD [p=*q]:   %23 = load i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %26 = load i8* %25, align 1, !dbg !586
LOAD [p=*q]:   %34 = load i16* %33, align 2, !dbg !586
STORE [*p=q]:   store i16 %35, i16* %33, align 2, !dbg !586
LOAD [p=*q]:   %36 = load i32* %2, align 4, !dbg !587
LOAD [p=*q]:   %39 = load i32* %2, align 4, !dbg !587
LOAD [p=*q]:   %42 = load i8* %41, align 1, !dbg !587
LOAD [p=*q]:   %45 = load i32* %2, align 4, !dbg !587
LOAD [p=*q]:   %50 = load i8* %49, align 1, !dbg !587
LOAD [p=*q]:   %39 = load i32* %2, align 4, !dbg !587
LOAD [p=*q]:   %42 = load i8* %41, align 1, !dbg !587
LOAD [p=*q]:   %58 = load i16* %57, align 2, !dbg !587
STORE [*p=q]:   store i16 %59, i16* %57, align 2, !dbg !587
LOAD [p=*q]:   %60 = load i32* %2, align 4, !dbg !588
LOAD [p=*q]:   %62 = load i32* @last_dist, align 4, !dbg !588
STORE [*p=q]:   store i32 %63, i32* @last_dist, align 4, !dbg !588
STORE [*p=q]:   store i16 %61, i16* %65, align 1, !dbg !588
LOAD [p=*q]:   %66 = load i8* @flag_bit, align 1, !dbg !589
LOAD [p=*q]:   %68 = load i8* @flags, align 1, !dbg !589
STORE [*p=q]:   store i8 %71, i8* @flags, align 1, !dbg !589
LOAD [p=*q]:   %45 = load i32* %2, align 4, !dbg !587
LOAD [p=*q]:   %50 = load i8* %49, align 1, !dbg !587
LOAD [p=*q]:   %58 = load i16* %57, align 2, !dbg !587
STORE [*p=q]:   store i16 %59, i16* %57, align 2, !dbg !587
LOAD [p=*q]:   %60 = load i32* %2, align 4, !dbg !588
LOAD [p=*q]:   %62 = load i32* @last_dist, align 4, !dbg !588
STORE [*p=q]:   store i32 %63, i32* @last_dist, align 4, !dbg !588
STORE [*p=q]:   store i16 %61, i16* %65, align 1, !dbg !588
LOAD [p=*q]:   %66 = load i8* @flag_bit, align 1, !dbg !589
LOAD [p=*q]:   %68 = load i8* @flags, align 1, !dbg !589
STORE [*p=q]:   store i8 %71, i8* @flags, align 1, !dbg !589
LOAD [p=*q]:   %58 = load i16* %57, align 2, !dbg !587
STORE [*p=q]:   store i16 %59, i16* %57, align 2, !dbg !587
LOAD [p=*q]:   %60 = load i32* %2, align 4, !dbg !588
LOAD [p=*q]:   %62 = load i32* @last_dist, align 4, !dbg !588
STORE [*p=q]:   store i32 %63, i32* @last_dist, align 4, !dbg !588
STORE [*p=q]:   store i16 %61, i16* %65, align 1, !dbg !588
LOAD [p=*q]:   %66 = load i8* @flag_bit, align 1, !dbg !589
LOAD [p=*q]:   %68 = load i8* @flags, align 1, !dbg !589
STORE [*p=q]:   store i8 %71, i8* @flags, align 1, !dbg !589
LOAD [p=*q]:   %73 = load i8* @flag_bit, align 1, !dbg !590
STORE [*p=q]:   store i8 %76, i8* @flag_bit, align 1, !dbg !590
LOAD [p=*q]:   %77 = load i32* @last_lit, align 4, !dbg !591
LOAD [p=*q]:   %73 = load i8* @flag_bit, align 1, !dbg !590
STORE [*p=q]:   store i8 %76, i8* @flag_bit, align 1, !dbg !590
LOAD [p=*q]:   %77 = load i32* @last_lit, align 4, !dbg !591
LOAD [p=*q]:   %81 = load i8* @flags, align 1, !dbg !592
LOAD [p=*q]:   %82 = load i32* @last_flags, align 4, !dbg !592
STORE [*p=q]:   store i32 %83, i32* @last_flags, align 4, !dbg !592
STORE [*p=q]:   store i8 %81, i8* %85, align 1, !dbg !592
STORE [*p=q]:   store i8 0, i8* @flags, align 1, !dbg !594
STORE [*p=q]:   store i8 1, i8* @flag_bit, align 1, !dbg !594
LOAD [p=*q]:   %87 = load i32* @level, align 4, !dbg !596
LOAD [p=*q]:   %81 = load i8* @flags, align 1, !dbg !592
LOAD [p=*q]:   %82 = load i32* @last_flags, align 4, !dbg !592
STORE [*p=q]:   store i32 %83, i32* @last_flags, align 4, !dbg !592
STORE [*p=q]:   store i8 %81, i8* %85, align 1, !dbg !592
STORE [*p=q]:   store i8 0, i8* @flags, align 1, !dbg !594
STORE [*p=q]:   store i8 1, i8* @flag_bit, align 1, !dbg !594
LOAD [p=*q]:   %87 = load i32* @level, align 4, !dbg !596
LOAD [p=*q]:   %87 = load i32* @level, align 4, !dbg !596
LOAD [p=*q]:   %90 = load i32* @last_lit, align 4, !dbg !596
LOAD [p=*q]:   %139 = load i32* @last_lit, align 4, !dbg !616
LOAD [p=*q]:   %90 = load i32* @last_lit, align 4, !dbg !596
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %out_length}, metadata !597), !dbg !599
LOAD [p=*q]:   %94 = load i32* @last_lit, align 4, !dbg !600
STORE [*p=q]:   store i64 %96, i64* %out_length, align 8, !dbg !600
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %in_length}, metadata !601), !dbg !602
LOAD [p=*q]:   %97 = load i32* @strstart, align 4, !dbg !603
LOAD [p=*q]:   %99 = load i64* @block_start, align 8, !dbg !603
STORE [*p=q]:   store i64 %100, i64* %in_length, align 8, !dbg !603
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %dcode}, metadata !604), !dbg !605
STORE [*p=q]:   store i32 0, i32* %dcode, align 4, !dbg !606
LOAD [p=*q]:   %139 = load i32* @last_lit, align 4, !dbg !616
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %out_length}, metadata !597), !dbg !599
LOAD [p=*q]:   %94 = load i32* @last_lit, align 4, !dbg !600
STORE [*p=q]:   store i64 %96, i64* %out_length, align 8, !dbg !600
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %in_length}, metadata !601), !dbg !602
LOAD [p=*q]:   %97 = load i32* @strstart, align 4, !dbg !603
LOAD [p=*q]:   %99 = load i64* @block_start, align 8, !dbg !603
STORE [*p=q]:   store i64 %100, i64* %in_length, align 8, !dbg !603
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %dcode}, metadata !604), !dbg !605
STORE [*p=q]:   store i32 0, i32* %dcode, align 4, !dbg !606
LOAD [p=*q]:   %102 = load i32* %dcode, align 4, !dbg !606
LOAD [p=*q]:   %102 = load i32* %dcode, align 4, !dbg !606
LOAD [p=*q]:   %105 = load i32* %dcode, align 4, !dbg !608
LOAD [p=*q]:   %110 = load i16* %109, align 2, !dbg !608
LOAD [p=*q]:   %112 = load i32* %dcode, align 4, !dbg !608
LOAD [p=*q]:   %115 = load i32* %114, align 4, !dbg !608
LOAD [p=*q]:   %119 = load i64* %out_length, align 8, !dbg !608
STORE [*p=q]:   store i64 %120, i64* %out_length, align 8, !dbg !608
LOAD [p=*q]:   %125 = load i64* %out_length, align 8, !dbg !612
STORE [*p=q]:   store i64 %126, i64* %out_length, align 8, !dbg !612
LOAD [p=*q]:   %127 = load i32* @last_dist, align 4, !dbg !613
LOAD [p=*q]:   %128 = load i32* @last_lit, align 4, !dbg !613
LOAD [p=*q]:   %105 = load i32* %dcode, align 4, !dbg !608
LOAD [p=*q]:   %110 = load i16* %109, align 2, !dbg !608
LOAD [p=*q]:   %112 = load i32* %dcode, align 4, !dbg !608
LOAD [p=*q]:   %115 = load i32* %114, align 4, !dbg !608
LOAD [p=*q]:   %119 = load i64* %out_length, align 8, !dbg !608
STORE [*p=q]:   store i64 %120, i64* %out_length, align 8, !dbg !608
LOAD [p=*q]:   %122 = load i32* %dcode, align 4, !dbg !611
STORE [*p=q]:   store i32 %123, i32* %dcode, align 4, !dbg !611
LOAD [p=*q]:   %122 = load i32* %dcode, align 4, !dbg !611
STORE [*p=q]:   store i32 %123, i32* %dcode, align 4, !dbg !611
LOAD [p=*q]:   %102 = load i32* %dcode, align 4, !dbg !606
LOAD [p=*q]:   %125 = load i64* %out_length, align 8, !dbg !612
STORE [*p=q]:   store i64 %126, i64* %out_length, align 8, !dbg !612
LOAD [p=*q]:   %127 = load i32* @last_dist, align 4, !dbg !613
LOAD [p=*q]:   %128 = load i32* @last_lit, align 4, !dbg !613
LOAD [p=*q]:   %132 = load i64* %out_length, align 8, !dbg !613
LOAD [p=*q]:   %133 = load i64* %in_length, align 8, !dbg !613
LOAD [p=*q]:   %132 = load i64* %out_length, align 8, !dbg !613
LOAD [p=*q]:   %133 = load i64* %in_length, align 8, !dbg !613
STORE [*p=q]:   store i32 1, i32* %1, !dbg !614
STORE [*p=q]:   store i32 1, i32* %1, !dbg !614
LOAD [p=*q]:   %148 = load i32* %1, !dbg !617
Analyzing return instruction for ct_tally
	  %148 = load i32* %1, !dbg !617
LOAD [p=*q]:   %139 = load i32* @last_lit, align 4, !dbg !616
LOAD [p=*q]:   %139 = load i32* @last_lit, align 4, !dbg !616
STORE [*p=q]:   store i32 %146, i32* %1, !dbg !616
LOAD [p=*q]:   %142 = load i32* @last_dist, align 4, !dbg !616
LOAD [p=*q]:   %142 = load i32* @last_dist, align 4, !dbg !616
STORE [*p=q]:   store i32 %146, i32* %1, !dbg !616
STORE [*p=q]:   store i32 %146, i32* %1, !dbg !616
LOAD [p=*q]:   %148 = load i32* %1, !dbg !617
Analyzing return instruction for ct_tally
	  %148 = load i32* %1, !dbg !617
LOAD [p=*q]:   %148 = load i32* %1, !dbg !617
Analyzing return instruction for ct_tally
	  %148 = load i32* %1, !dbg !617
[Processing][Function][send_all_trees]
STORE [*p=q]:   store i32 %lcodes, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %dcodes, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
STORE [*p=q]:   store i32 %blcodes, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %rank}, metadata !580), !dbg !582
LOAD [p=*q]:   %4 = load i32* %1, align 4, !dbg !583
CALL [call func]:   call void @send_bits(i32 %5, i32 5), !dbg !583
LOAD [p=*q]:   %6 = load i32* %2, align 4, !dbg !584
CALL [call func]:   call void @send_bits(i32 %7, i32 5), !dbg !584
LOAD [p=*q]:   %8 = load i32* %3, align 4, !dbg !585
CALL [call func]:   call void @send_bits(i32 %9, i32 4), !dbg !585
STORE [*p=q]:   store i32 0, i32* %rank, align 4, !dbg !586
LOAD [p=*q]:   %11 = load i32* %rank, align 4, !dbg !586
LOAD [p=*q]:   %12 = load i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %11 = load i32* %rank, align 4, !dbg !586
LOAD [p=*q]:   %12 = load i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %15 = load i32* %rank, align 4, !dbg !588
LOAD [p=*q]:   %18 = load i8* %17, align 1, !dbg !588
LOAD [p=*q]:   %23 = load i16* %22, align 2, !dbg !588
CALL [call func]:   call void @send_bits(i32 %24, i32 3), !dbg !588
LOAD [p=*q]:   %29 = load i32* %1, align 4, !dbg !592
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @send_tree to void (...)*)(%struct.ct_data* getelementptr inbounds ([573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 0), i32 %30), !dbg !592
LOAD [p=*q]:   %31 = load i32* %2, align 4, !dbg !593
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @send_tree to void (...)*)(%struct.ct_data* getelementptr inbounds ([61 x %struct.ct_data]* @dyn_dtree, i32 0, i32 0), i32 %32), !dbg !593
Analyzing return instruction for send_all_trees
No return value for: send_all_trees
LOAD [p=*q]:   %15 = load i32* %rank, align 4, !dbg !588
LOAD [p=*q]:   %18 = load i8* %17, align 1, !dbg !588
LOAD [p=*q]:   %23 = load i16* %22, align 2, !dbg !588
CALL [call func]:   call void @send_bits(i32 %24, i32 3), !dbg !588
LOAD [p=*q]:   %26 = load i32* %rank, align 4, !dbg !591
STORE [*p=q]:   store i32 %27, i32* %rank, align 4, !dbg !591
LOAD [p=*q]:   %26 = load i32* %rank, align 4, !dbg !591
STORE [*p=q]:   store i32 %27, i32* %rank, align 4, !dbg !591
LOAD [p=*q]:   %11 = load i32* %rank, align 4, !dbg !586
LOAD [p=*q]:   %12 = load i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %29 = load i32* %1, align 4, !dbg !592
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @send_tree to void (...)*)(%struct.ct_data* getelementptr inbounds ([573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 0), i32 %30), !dbg !592
LOAD [p=*q]:   %31 = load i32* %2, align 4, !dbg !593
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @send_tree to void (...)*)(%struct.ct_data* getelementptr inbounds ([61 x %struct.ct_data]* @dyn_dtree, i32 0, i32 0), i32 %32), !dbg !593
Analyzing return instruction for send_all_trees
No return value for: send_all_trees
[Processing][Function][compress_block]
STORE [*p=q]:   store %struct.ct_data* %ltree, %struct.ct_data** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.ct_data** %1}, metadata !574), !dbg !575
STORE [*p=q]:   store %struct.ct_data* %dtree, %struct.ct_data** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.ct_data** %2}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %dist}, metadata !578), !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %lc}, metadata !581), !dbg !582
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %lx}, metadata !583), !dbg !584
STORE [*p=q]:   store i32 0, i32* %lx, align 4, !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %dx}, metadata !586), !dbg !587
STORE [*p=q]:   store i32 0, i32* %dx, align 4, !dbg !588
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %fx}, metadata !589), !dbg !590
STORE [*p=q]:   store i32 0, i32* %fx, align 4, !dbg !591
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %flag}, metadata !592), !dbg !593
STORE [*p=q]:   store i8 0, i8* %flag, align 1, !dbg !594
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %code}, metadata !595), !dbg !596
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %extra}, metadata !597), !dbg !598
LOAD [p=*q]:   %3 = load i32* @last_lit, align 4, !dbg !599
LOAD [p=*q]:   %153 = load %struct.ct_data** %1, align 8, !dbg !629
LOAD [p=*q]:   %157 = load i16* %156, align 2, !dbg !629
LOAD [p=*q]:   %159 = load %struct.ct_data** %1, align 8, !dbg !629
LOAD [p=*q]:   %163 = load i16* %162, align 2, !dbg !629
CALL [call func]:   call void @send_bits(i32 %158, i32 %164), !dbg !629
Analyzing return instruction for compress_block
No return value for: compress_block
LOAD [p=*q]:   %7 = load i32* %lx, align 4, !dbg !601
LOAD [p=*q]:   %7 = load i32* %lx, align 4, !dbg !601
LOAD [p=*q]:   %11 = load i32* %fx, align 4, !dbg !603
STORE [*p=q]:   store i32 %12, i32* %fx, align 4, !dbg !603
LOAD [p=*q]:   %15 = load i8* %14, align 1, !dbg !603
STORE [*p=q]:   store i8 %15, i8* %flag, align 1, !dbg !603
LOAD [p=*q]:   %17 = load i32* %lx, align 4, !dbg !604
STORE [*p=q]:   store i32 %18, i32* %lx, align 4, !dbg !604
LOAD [p=*q]:   %21 = load i8* %20, align 1, !dbg !604
STORE [*p=q]:   store i32 %22, i32* %lc, align 4, !dbg !604
LOAD [p=*q]:   %23 = load i8* %flag, align 1, !dbg !605
LOAD [p=*q]:   %11 = load i32* %fx, align 4, !dbg !603
STORE [*p=q]:   store i32 %12, i32* %fx, align 4, !dbg !603
LOAD [p=*q]:   %15 = load i8* %14, align 1, !dbg !603
STORE [*p=q]:   store i8 %15, i8* %flag, align 1, !dbg !603
LOAD [p=*q]:   %17 = load i32* %lx, align 4, !dbg !604
STORE [*p=q]:   store i32 %18, i32* %lx, align 4, !dbg !604
LOAD [p=*q]:   %21 = load i8* %20, align 1, !dbg !604
STORE [*p=q]:   store i32 %22, i32* %lc, align 4, !dbg !604
LOAD [p=*q]:   %23 = load i8* %flag, align 1, !dbg !605
LOAD [p=*q]:   %17 = load i32* %lx, align 4, !dbg !604
STORE [*p=q]:   store i32 %18, i32* %lx, align 4, !dbg !604
LOAD [p=*q]:   %21 = load i8* %20, align 1, !dbg !604
STORE [*p=q]:   store i32 %22, i32* %lc, align 4, !dbg !604
LOAD [p=*q]:   %23 = load i8* %flag, align 1, !dbg !605
LOAD [p=*q]:   %28 = load i32* %lc, align 4, !dbg !606
LOAD [p=*q]:   %30 = load %struct.ct_data** %1, align 8, !dbg !606
LOAD [p=*q]:   %34 = load i16* %33, align 2, !dbg !606
LOAD [p=*q]:   %36 = load i32* %lc, align 4, !dbg !606
LOAD [p=*q]:   %38 = load %struct.ct_data** %1, align 8, !dbg !606
LOAD [p=*q]:   %42 = load i16* %41, align 2, !dbg !606
CALL [call func]:   call void @send_bits(i32 %35, i32 %43), !dbg !606
LOAD [p=*q]:   %45 = load i32* %lc, align 4, !dbg !609
LOAD [p=*q]:   %48 = load i8* %47, align 1, !dbg !609
STORE [*p=q]:   store i32 %49, i32* %code, align 4, !dbg !609
LOAD [p=*q]:   %50 = load i32* %code, align 4, !dbg !611
LOAD [p=*q]:   %54 = load %struct.ct_data** %1, align 8, !dbg !611
LOAD [p=*q]:   %58 = load i16* %57, align 2, !dbg !611
LOAD [p=*q]:   %60 = load i32* %code, align 4, !dbg !611
LOAD [p=*q]:   %64 = load %struct.ct_data** %1, align 8, !dbg !611
LOAD [p=*q]:   %68 = load i16* %67, align 2, !dbg !611
CALL [call func]:   call void @send_bits(i32 %59, i32 %69), !dbg !611
LOAD [p=*q]:   %70 = load i32* %code, align 4, !dbg !612
LOAD [p=*q]:   %73 = load i32* %72, align 4, !dbg !612
STORE [*p=q]:   store i32 %73, i32* %extra, align 4, !dbg !612
LOAD [p=*q]:   %74 = load i32* %extra, align 4, !dbg !613
LOAD [p=*q]:   %28 = load i32* %lc, align 4, !dbg !606
LOAD [p=*q]:   %30 = load %struct.ct_data** %1, align 8, !dbg !606
LOAD [p=*q]:   %34 = load i16* %33, align 2, !dbg !606
LOAD [p=*q]:   %36 = load i32* %lc, align 4, !dbg !606
LOAD [p=*q]:   %38 = load %struct.ct_data** %1, align 8, !dbg !606
LOAD [p=*q]:   %42 = load i16* %41, align 2, !dbg !606
CALL [call func]:   call void @send_bits(i32 %35, i32 %43), !dbg !606
LOAD [p=*q]:   %143 = load i8* %flag, align 1, !dbg !627
STORE [*p=q]:   store i8 %146, i8* %flag, align 1, !dbg !627
LOAD [p=*q]:   %45 = load i32* %lc, align 4, !dbg !609
LOAD [p=*q]:   %48 = load i8* %47, align 1, !dbg !609
STORE [*p=q]:   store i32 %49, i32* %code, align 4, !dbg !609
LOAD [p=*q]:   %50 = load i32* %code, align 4, !dbg !611
LOAD [p=*q]:   %54 = load %struct.ct_data** %1, align 8, !dbg !611
LOAD [p=*q]:   %58 = load i16* %57, align 2, !dbg !611
LOAD [p=*q]:   %60 = load i32* %code, align 4, !dbg !611
LOAD [p=*q]:   %64 = load %struct.ct_data** %1, align 8, !dbg !611
LOAD [p=*q]:   %68 = load i16* %67, align 2, !dbg !611
CALL [call func]:   call void @send_bits(i32 %59, i32 %69), !dbg !611
LOAD [p=*q]:   %70 = load i32* %code, align 4, !dbg !612
LOAD [p=*q]:   %73 = load i32* %72, align 4, !dbg !612
STORE [*p=q]:   store i32 %73, i32* %extra, align 4, !dbg !612
LOAD [p=*q]:   %74 = load i32* %extra, align 4, !dbg !613
LOAD [p=*q]:   %77 = load i32* %code, align 4, !dbg !614
LOAD [p=*q]:   %80 = load i32* %79, align 4, !dbg !614
LOAD [p=*q]:   %81 = load i32* %lc, align 4, !dbg !614
STORE [*p=q]:   store i32 %82, i32* %lc, align 4, !dbg !614
LOAD [p=*q]:   %83 = load i32* %lc, align 4, !dbg !616
LOAD [p=*q]:   %84 = load i32* %extra, align 4, !dbg !616
CALL [call func]:   call void @send_bits(i32 %83, i32 %84), !dbg !616
LOAD [p=*q]:   %86 = load i32* %dx, align 4, !dbg !618
STORE [*p=q]:   store i32 %87, i32* %dx, align 4, !dbg !618
LOAD [p=*q]:   %90 = load i16* %89, align 1, !dbg !618
STORE [*p=q]:   store i32 %91, i32* %dist, align 4, !dbg !618
LOAD [p=*q]:   %92 = load i32* %dist, align 4, !dbg !619
LOAD [p=*q]:   %77 = load i32* %code, align 4, !dbg !614
LOAD [p=*q]:   %80 = load i32* %79, align 4, !dbg !614
LOAD [p=*q]:   %81 = load i32* %lc, align 4, !dbg !614
STORE [*p=q]:   store i32 %82, i32* %lc, align 4, !dbg !614
LOAD [p=*q]:   %83 = load i32* %lc, align 4, !dbg !616
LOAD [p=*q]:   %84 = load i32* %extra, align 4, !dbg !616
CALL [call func]:   call void @send_bits(i32 %83, i32 %84), !dbg !616
LOAD [p=*q]:   %86 = load i32* %dx, align 4, !dbg !618
STORE [*p=q]:   store i32 %87, i32* %dx, align 4, !dbg !618
LOAD [p=*q]:   %90 = load i16* %89, align 1, !dbg !618
STORE [*p=q]:   store i32 %91, i32* %dist, align 4, !dbg !618
LOAD [p=*q]:   %92 = load i32* %dist, align 4, !dbg !619
LOAD [p=*q]:   %86 = load i32* %dx, align 4, !dbg !618
STORE [*p=q]:   store i32 %87, i32* %dx, align 4, !dbg !618
LOAD [p=*q]:   %90 = load i16* %89, align 1, !dbg !618
STORE [*p=q]:   store i32 %91, i32* %dist, align 4, !dbg !618
LOAD [p=*q]:   %92 = load i32* %dist, align 4, !dbg !619
LOAD [p=*q]:   %95 = load i32* %dist, align 4, !dbg !619
LOAD [p=*q]:   %98 = load i8* %97, align 1, !dbg !619
LOAD [p=*q]:   %101 = load i32* %dist, align 4, !dbg !619
LOAD [p=*q]:   %106 = load i8* %105, align 1, !dbg !619
LOAD [p=*q]:   %95 = load i32* %dist, align 4, !dbg !619
LOAD [p=*q]:   %98 = load i8* %97, align 1, !dbg !619
STORE [*p=q]:   store i32 %109, i32* %code, align 4, !dbg !619
LOAD [p=*q]:   %110 = load i32* %code, align 4, !dbg !620
LOAD [p=*q]:   %112 = load %struct.ct_data** %2, align 8, !dbg !620
LOAD [p=*q]:   %116 = load i16* %115, align 2, !dbg !620
LOAD [p=*q]:   %118 = load i32* %code, align 4, !dbg !620
LOAD [p=*q]:   %120 = load %struct.ct_data** %2, align 8, !dbg !620
LOAD [p=*q]:   %124 = load i16* %123, align 2, !dbg !620
CALL [call func]:   call void @send_bits(i32 %117, i32 %125), !dbg !620
LOAD [p=*q]:   %126 = load i32* %code, align 4, !dbg !621
LOAD [p=*q]:   %129 = load i32* %128, align 4, !dbg !621
STORE [*p=q]:   store i32 %129, i32* %extra, align 4, !dbg !621
LOAD [p=*q]:   %130 = load i32* %extra, align 4, !dbg !622
LOAD [p=*q]:   %101 = load i32* %dist, align 4, !dbg !619
LOAD [p=*q]:   %106 = load i8* %105, align 1, !dbg !619
STORE [*p=q]:   store i32 %109, i32* %code, align 4, !dbg !619
LOAD [p=*q]:   %110 = load i32* %code, align 4, !dbg !620
LOAD [p=*q]:   %112 = load %struct.ct_data** %2, align 8, !dbg !620
LOAD [p=*q]:   %116 = load i16* %115, align 2, !dbg !620
LOAD [p=*q]:   %118 = load i32* %code, align 4, !dbg !620
LOAD [p=*q]:   %120 = load %struct.ct_data** %2, align 8, !dbg !620
LOAD [p=*q]:   %124 = load i16* %123, align 2, !dbg !620
CALL [call func]:   call void @send_bits(i32 %117, i32 %125), !dbg !620
LOAD [p=*q]:   %126 = load i32* %code, align 4, !dbg !621
LOAD [p=*q]:   %129 = load i32* %128, align 4, !dbg !621
STORE [*p=q]:   store i32 %129, i32* %extra, align 4, !dbg !621
LOAD [p=*q]:   %130 = load i32* %extra, align 4, !dbg !622
STORE [*p=q]:   store i32 %109, i32* %code, align 4, !dbg !619
LOAD [p=*q]:   %110 = load i32* %code, align 4, !dbg !620
LOAD [p=*q]:   %112 = load %struct.ct_data** %2, align 8, !dbg !620
LOAD [p=*q]:   %116 = load i16* %115, align 2, !dbg !620
LOAD [p=*q]:   %118 = load i32* %code, align 4, !dbg !620
LOAD [p=*q]:   %120 = load %struct.ct_data** %2, align 8, !dbg !620
LOAD [p=*q]:   %124 = load i16* %123, align 2, !dbg !620
CALL [call func]:   call void @send_bits(i32 %117, i32 %125), !dbg !620
LOAD [p=*q]:   %126 = load i32* %code, align 4, !dbg !621
LOAD [p=*q]:   %129 = load i32* %128, align 4, !dbg !621
STORE [*p=q]:   store i32 %129, i32* %extra, align 4, !dbg !621
LOAD [p=*q]:   %130 = load i32* %extra, align 4, !dbg !622
LOAD [p=*q]:   %133 = load i32* %code, align 4, !dbg !623
LOAD [p=*q]:   %136 = load i32* %135, align 4, !dbg !623
LOAD [p=*q]:   %137 = load i32* %dist, align 4, !dbg !623
STORE [*p=q]:   store i32 %138, i32* %dist, align 4, !dbg !623
LOAD [p=*q]:   %139 = load i32* %dist, align 4, !dbg !625
LOAD [p=*q]:   %140 = load i32* %extra, align 4, !dbg !625
CALL [call func]:   call void @send_bits(i32 %139, i32 %140), !dbg !625
LOAD [p=*q]:   %133 = load i32* %code, align 4, !dbg !623
LOAD [p=*q]:   %136 = load i32* %135, align 4, !dbg !623
LOAD [p=*q]:   %137 = load i32* %dist, align 4, !dbg !623
STORE [*p=q]:   store i32 %138, i32* %dist, align 4, !dbg !623
LOAD [p=*q]:   %139 = load i32* %dist, align 4, !dbg !625
LOAD [p=*q]:   %140 = load i32* %extra, align 4, !dbg !625
CALL [call func]:   call void @send_bits(i32 %139, i32 %140), !dbg !625
LOAD [p=*q]:   %143 = load i8* %flag, align 1, !dbg !627
STORE [*p=q]:   store i8 %146, i8* %flag, align 1, !dbg !627
LOAD [p=*q]:   %143 = load i8* %flag, align 1, !dbg !627
STORE [*p=q]:   store i8 %146, i8* %flag, align 1, !dbg !627
LOAD [p=*q]:   %148 = load i32* %lx, align 4, !dbg !628
LOAD [p=*q]:   %149 = load i32* @last_lit, align 4, !dbg !628
LOAD [p=*q]:   %148 = load i32* %lx, align 4, !dbg !628
LOAD [p=*q]:   %149 = load i32* @last_lit, align 4, !dbg !628
LOAD [p=*q]:   %7 = load i32* %lx, align 4, !dbg !601
LOAD [p=*q]:   %153 = load %struct.ct_data** %1, align 8, !dbg !629
LOAD [p=*q]:   %157 = load i16* %156, align 2, !dbg !629
LOAD [p=*q]:   %159 = load %struct.ct_data** %1, align 8, !dbg !629
LOAD [p=*q]:   %163 = load i16* %162, align 2, !dbg !629
CALL [call func]:   call void @send_bits(i32 %158, i32 %164), !dbg !629
Analyzing return instruction for compress_block
No return value for: compress_block
LOAD [p=*q]:   %153 = load %struct.ct_data** %1, align 8, !dbg !629
LOAD [p=*q]:   %157 = load i16* %156, align 2, !dbg !629
LOAD [p=*q]:   %159 = load %struct.ct_data** %1, align 8, !dbg !629
LOAD [p=*q]:   %163 = load i16* %162, align 2, !dbg !629
CALL [call func]:   call void @send_bits(i32 %158, i32 %164), !dbg !629
Analyzing return instruction for compress_block
No return value for: compress_block
[Processing][Function][build_bl_tree]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %max_blindex}, metadata !574), !dbg !576
LOAD [p=*q]:   %1 = load i32* getelementptr inbounds (%struct.tree_desc* @l_desc, i32 0, i32 6), align 4, !dbg !577
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @scan_tree to void (...)*)(%struct.ct_data* getelementptr inbounds ([573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 0), i32 %1), !dbg !577
LOAD [p=*q]:   %2 = load i32* getelementptr inbounds (%struct.tree_desc* @d_desc, i32 0, i32 6), align 4, !dbg !578
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @scan_tree to void (...)*)(%struct.ct_data* getelementptr inbounds ([61 x %struct.ct_data]* @dyn_dtree, i32 0, i32 0), i32 %2), !dbg !578
CALL [call func]:   call void (...)* bitcast (void (%struct.tree_desc*)* @build_tree to void (...)*)(%struct.tree_desc* @bl_desc), !dbg !579
STORE [*p=q]:   store i32 18, i32* %max_blindex, align 4, !dbg !580
LOAD [p=*q]:   %4 = load i32* %max_blindex, align 4, !dbg !580
LOAD [p=*q]:   %4 = load i32* %max_blindex, align 4, !dbg !580
LOAD [p=*q]:   %7 = load i32* %max_blindex, align 4, !dbg !582
LOAD [p=*q]:   %10 = load i8* %9, align 1, !dbg !582
LOAD [p=*q]:   %15 = load i16* %14, align 2, !dbg !582
LOAD [p=*q]:   %24 = load i32* %max_blindex, align 4, !dbg !587
LOAD [p=*q]:   %31 = load i64* @opt_len, align 8, !dbg !587
STORE [*p=q]:   store i64 %32, i64* @opt_len, align 8, !dbg !587
LOAD [p=*q]:   %33 = load i32* %max_blindex, align 4, !dbg !588
Analyzing return instruction for build_bl_tree
	  %33 = load i32* %max_blindex, align 4, !dbg !588
LOAD [p=*q]:   %7 = load i32* %max_blindex, align 4, !dbg !582
LOAD [p=*q]:   %10 = load i8* %9, align 1, !dbg !582
LOAD [p=*q]:   %15 = load i16* %14, align 2, !dbg !582
LOAD [p=*q]:   %24 = load i32* %max_blindex, align 4, !dbg !587
LOAD [p=*q]:   %31 = load i64* @opt_len, align 8, !dbg !587
STORE [*p=q]:   store i64 %32, i64* @opt_len, align 8, !dbg !587
LOAD [p=*q]:   %33 = load i32* %max_blindex, align 4, !dbg !588
Analyzing return instruction for build_bl_tree
	  %33 = load i32* %max_blindex, align 4, !dbg !588
LOAD [p=*q]:   %21 = load i32* %max_blindex, align 4, !dbg !586
STORE [*p=q]:   store i32 %22, i32* %max_blindex, align 4, !dbg !586
LOAD [p=*q]:   %21 = load i32* %max_blindex, align 4, !dbg !586
STORE [*p=q]:   store i32 %22, i32* %max_blindex, align 4, !dbg !586
LOAD [p=*q]:   %4 = load i32* %max_blindex, align 4, !dbg !580
LOAD [p=*q]:   %24 = load i32* %max_blindex, align 4, !dbg !587
LOAD [p=*q]:   %31 = load i64* @opt_len, align 8, !dbg !587
STORE [*p=q]:   store i64 %32, i64* @opt_len, align 8, !dbg !587
LOAD [p=*q]:   %33 = load i32* %max_blindex, align 4, !dbg !588
Analyzing return instruction for build_bl_tree
	  %33 = load i32* %max_blindex, align 4, !dbg !588
[Processing][Function][build_tree]
STORE [*p=q]:   store %struct.tree_desc* %desc, %struct.tree_desc** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.tree_desc** %1}, metadata !574), !dbg !576
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.ct_data** %tree}, metadata !577), !dbg !579
LOAD [p=*q]:   %2 = load %struct.tree_desc** %1, align 8, !dbg !580
LOAD [p=*q]:   %4 = load %struct.ct_data** %3, align 8, !dbg !580
STORE [*p=q]:   store %struct.ct_data* %4, %struct.ct_data** %tree, align 8, !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.ct_data** %stree}, metadata !581), !dbg !582
LOAD [p=*q]:   %5 = load %struct.tree_desc** %1, align 8, !dbg !583
LOAD [p=*q]:   %7 = load %struct.ct_data** %6, align 8, !dbg !583
STORE [*p=q]:   store %struct.ct_data* %7, %struct.ct_data** %stree, align 8, !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %elems}, metadata !584), !dbg !585
LOAD [p=*q]:   %8 = load %struct.tree_desc** %1, align 8, !dbg !586
LOAD [p=*q]:   %10 = load i32* %9, align 4, !dbg !586
STORE [*p=q]:   store i32 %10, i32* %elems, align 4, !dbg !586
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !587), !dbg !588
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %m}, metadata !589), !dbg !590
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %max_code}, metadata !591), !dbg !592
STORE [*p=q]:   store i32 -1, i32* %max_code, align 4, !dbg !593
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %node}, metadata !594), !dbg !595
LOAD [p=*q]:   %11 = load i32* %elems, align 4, !dbg !596
STORE [*p=q]:   store i32 %11, i32* %node, align 4, !dbg !596
STORE [*p=q]:   store i32 0, i32* @heap_len, align 4, !dbg !597
STORE [*p=q]:   store i32 573, i32* @heap_max, align 4, !dbg !597
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !598
LOAD [p=*q]:   %13 = load i32* %n, align 4, !dbg !598
LOAD [p=*q]:   %14 = load i32* %elems, align 4, !dbg !598
LOAD [p=*q]:   %13 = load i32* %n, align 4, !dbg !598
LOAD [p=*q]:   %14 = load i32* %elems, align 4, !dbg !598
LOAD [p=*q]:   %17 = load i32* %n, align 4, !dbg !600
LOAD [p=*q]:   %19 = load %struct.ct_data** %tree, align 8, !dbg !600
LOAD [p=*q]:   %23 = load i16* %22, align 2, !dbg !600
LOAD [p=*q]:   %17 = load i32* %n, align 4, !dbg !600
LOAD [p=*q]:   %19 = load %struct.ct_data** %tree, align 8, !dbg !600
LOAD [p=*q]:   %23 = load i16* %22, align 2, !dbg !600
LOAD [p=*q]:   %27 = load i32* %n, align 4, !dbg !602
STORE [*p=q]:   store i32 %27, i32* %max_code, align 4, !dbg !602
LOAD [p=*q]:   %28 = load i32* @heap_len, align 4, !dbg !602
STORE [*p=q]:   store i32 %29, i32* @heap_len, align 4, !dbg !602
STORE [*p=q]:   store i32 %27, i32* %31, align 4, !dbg !602
LOAD [p=*q]:   %32 = load i32* %n, align 4, !dbg !604
STORE [*p=q]:   store i8 0, i8* %34, align 1, !dbg !604
LOAD [p=*q]:   %36 = load i32* %n, align 4, !dbg !606
LOAD [p=*q]:   %38 = load %struct.ct_data** %tree, align 8, !dbg !606
STORE [*p=q]:   store i16 0, i16* %41, align 2, !dbg !606
LOAD [p=*q]:   %27 = load i32* %n, align 4, !dbg !602
STORE [*p=q]:   store i32 %27, i32* %max_code, align 4, !dbg !602
LOAD [p=*q]:   %28 = load i32* @heap_len, align 4, !dbg !602
STORE [*p=q]:   store i32 %29, i32* @heap_len, align 4, !dbg !602
STORE [*p=q]:   store i32 %27, i32* %31, align 4, !dbg !602
LOAD [p=*q]:   %32 = load i32* %n, align 4, !dbg !604
STORE [*p=q]:   store i8 0, i8* %34, align 1, !dbg !604
LOAD [p=*q]:   %36 = load i32* %n, align 4, !dbg !606
LOAD [p=*q]:   %38 = load %struct.ct_data** %tree, align 8, !dbg !606
STORE [*p=q]:   store i16 0, i16* %41, align 2, !dbg !606
LOAD [p=*q]:   %44 = load i32* %n, align 4, !dbg !609
STORE [*p=q]:   store i32 %45, i32* %n, align 4, !dbg !609
LOAD [p=*q]:   %44 = load i32* %n, align 4, !dbg !609
STORE [*p=q]:   store i32 %45, i32* %n, align 4, !dbg !609
LOAD [p=*q]:   %13 = load i32* %n, align 4, !dbg !598
LOAD [p=*q]:   %14 = load i32* %elems, align 4, !dbg !598
LOAD [p=*q]:   %48 = load i32* @heap_len, align 4, !dbg !610
LOAD [p=*q]:   %48 = load i32* @heap_len, align 4, !dbg !610
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %new}, metadata !611), !dbg !613
LOAD [p=*q]:   %51 = load i32* %max_code, align 4, !dbg !614
LOAD [p=*q]:   %89 = load i32* %max_code, align 4, !dbg !621
LOAD [p=*q]:   %90 = load %struct.tree_desc** %1, align 8, !dbg !621
STORE [*p=q]:   store i32 %89, i32* %91, align 4, !dbg !621
LOAD [p=*q]:   %92 = load i32* @heap_len, align 4, !dbg !622
STORE [*p=q]:   store i32 %93, i32* %n, align 4, !dbg !622
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %new}, metadata !611), !dbg !613
LOAD [p=*q]:   %51 = load i32* %max_code, align 4, !dbg !614
LOAD [p=*q]:   %54 = load i32* %max_code, align 4, !dbg !614
STORE [*p=q]:   store i32 %55, i32* %max_code, align 4, !dbg !614
LOAD [p=*q]:   %54 = load i32* %max_code, align 4, !dbg !614
STORE [*p=q]:   store i32 %55, i32* %max_code, align 4, !dbg !614
LOAD [p=*q]:   %59 = load i32* @heap_len, align 4, !dbg !614
STORE [*p=q]:   store i32 %60, i32* @heap_len, align 4, !dbg !614
STORE [*p=q]:   store i32 %58, i32* %62, align 4, !dbg !614
STORE [*p=q]:   store i32 %58, i32* %new, align 4, !dbg !614
LOAD [p=*q]:   %63 = load i32* %new, align 4, !dbg !615
LOAD [p=*q]:   %65 = load %struct.ct_data** %tree, align 8, !dbg !615
STORE [*p=q]:   store i16 1, i16* %68, align 2, !dbg !615
LOAD [p=*q]:   %69 = load i32* %new, align 4, !dbg !616
STORE [*p=q]:   store i8 0, i8* %71, align 1, !dbg !616
LOAD [p=*q]:   %72 = load i64* @opt_len, align 8, !dbg !617
STORE [*p=q]:   store i64 %73, i64* @opt_len, align 8, !dbg !617
LOAD [p=*q]:   %74 = load %struct.ct_data** %stree, align 8, !dbg !618
LOAD [p=*q]:   %59 = load i32* @heap_len, align 4, !dbg !614
STORE [*p=q]:   store i32 %60, i32* @heap_len, align 4, !dbg !614
STORE [*p=q]:   store i32 %58, i32* %62, align 4, !dbg !614
STORE [*p=q]:   store i32 %58, i32* %new, align 4, !dbg !614
LOAD [p=*q]:   %63 = load i32* %new, align 4, !dbg !615
LOAD [p=*q]:   %65 = load %struct.ct_data** %tree, align 8, !dbg !615
STORE [*p=q]:   store i16 1, i16* %68, align 2, !dbg !615
LOAD [p=*q]:   %69 = load i32* %new, align 4, !dbg !616
STORE [*p=q]:   store i8 0, i8* %71, align 1, !dbg !616
LOAD [p=*q]:   %72 = load i64* @opt_len, align 8, !dbg !617
STORE [*p=q]:   store i64 %73, i64* @opt_len, align 8, !dbg !617
LOAD [p=*q]:   %74 = load %struct.ct_data** %stree, align 8, !dbg !618
LOAD [p=*q]:   %59 = load i32* @heap_len, align 4, !dbg !614
STORE [*p=q]:   store i32 %60, i32* @heap_len, align 4, !dbg !614
STORE [*p=q]:   store i32 %58, i32* %62, align 4, !dbg !614
STORE [*p=q]:   store i32 %58, i32* %new, align 4, !dbg !614
LOAD [p=*q]:   %63 = load i32* %new, align 4, !dbg !615
LOAD [p=*q]:   %65 = load %struct.ct_data** %tree, align 8, !dbg !615
STORE [*p=q]:   store i16 1, i16* %68, align 2, !dbg !615
LOAD [p=*q]:   %69 = load i32* %new, align 4, !dbg !616
STORE [*p=q]:   store i8 0, i8* %71, align 1, !dbg !616
LOAD [p=*q]:   %72 = load i64* @opt_len, align 8, !dbg !617
STORE [*p=q]:   store i64 %73, i64* @opt_len, align 8, !dbg !617
LOAD [p=*q]:   %74 = load %struct.ct_data** %stree, align 8, !dbg !618
LOAD [p=*q]:   %77 = load i32* %new, align 4, !dbg !619
LOAD [p=*q]:   %79 = load %struct.ct_data** %stree, align 8, !dbg !619
LOAD [p=*q]:   %83 = load i16* %82, align 2, !dbg !619
LOAD [p=*q]:   %85 = load i64* @static_len, align 8, !dbg !619
STORE [*p=q]:   store i64 %86, i64* @static_len, align 8, !dbg !619
LOAD [p=*q]:   %77 = load i32* %new, align 4, !dbg !619
LOAD [p=*q]:   %79 = load %struct.ct_data** %stree, align 8, !dbg !619
LOAD [p=*q]:   %83 = load i16* %82, align 2, !dbg !619
LOAD [p=*q]:   %85 = load i64* @static_len, align 8, !dbg !619
STORE [*p=q]:   store i64 %86, i64* @static_len, align 8, !dbg !619
LOAD [p=*q]:   %48 = load i32* @heap_len, align 4, !dbg !610
LOAD [p=*q]:   %89 = load i32* %max_code, align 4, !dbg !621
LOAD [p=*q]:   %90 = load %struct.tree_desc** %1, align 8, !dbg !621
STORE [*p=q]:   store i32 %89, i32* %91, align 4, !dbg !621
LOAD [p=*q]:   %92 = load i32* @heap_len, align 4, !dbg !622
STORE [*p=q]:   store i32 %93, i32* %n, align 4, !dbg !622
LOAD [p=*q]:   %95 = load i32* %n, align 4, !dbg !622
LOAD [p=*q]:   %95 = load i32* %n, align 4, !dbg !622
LOAD [p=*q]:   %98 = load %struct.ct_data** %tree, align 8, !dbg !624
LOAD [p=*q]:   %99 = load i32* %n, align 4, !dbg !624
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @pqdownheap to void (...)*)(%struct.ct_data* %98, i32 %99), !dbg !624
LOAD [p=*q]:   %98 = load %struct.ct_data** %tree, align 8, !dbg !624
LOAD [p=*q]:   %99 = load i32* %n, align 4, !dbg !624
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @pqdownheap to void (...)*)(%struct.ct_data* %98, i32 %99), !dbg !624
LOAD [p=*q]:   %101 = load i32* %n, align 4, !dbg !625
STORE [*p=q]:   store i32 %102, i32* %n, align 4, !dbg !625
LOAD [p=*q]:   %101 = load i32* %n, align 4, !dbg !625
STORE [*p=q]:   store i32 %102, i32* %n, align 4, !dbg !625
LOAD [p=*q]:   %95 = load i32* %n, align 4, !dbg !622
LOAD [p=*q]:   %105 = load i32* getelementptr inbounds ([573 x i32]* @heap, i32 0, i64 1), align 4, !dbg !627
STORE [*p=q]:   store i32 %105, i32* %n, align 4, !dbg !627
LOAD [p=*q]:   %106 = load i32* @heap_len, align 4, !dbg !627
STORE [*p=q]:   store i32 %107, i32* @heap_len, align 4, !dbg !627
LOAD [p=*q]:   %110 = load i32* %109, align 4, !dbg !627
STORE [*p=q]:   store i32 %110, i32* getelementptr inbounds ([573 x i32]* @heap, i32 0, i64 1), align 4, !dbg !627
LOAD [p=*q]:   %111 = load %struct.ct_data** %tree, align 8, !dbg !627
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @pqdownheap to void (...)*)(%struct.ct_data* %111, i32 1), !dbg !627
LOAD [p=*q]:   %112 = load i32* getelementptr inbounds ([573 x i32]* @heap, i32 0, i64 1), align 4, !dbg !630
STORE [*p=q]:   store i32 %112, i32* %m, align 4, !dbg !630
LOAD [p=*q]:   %113 = load i32* %n, align 4, !dbg !631
LOAD [p=*q]:   %114 = load i32* @heap_max, align 4, !dbg !631
STORE [*p=q]:   store i32 %115, i32* @heap_max, align 4, !dbg !631
STORE [*p=q]:   store i32 %113, i32* %117, align 4, !dbg !631
LOAD [p=*q]:   %118 = load i32* %m, align 4, !dbg !632
LOAD [p=*q]:   %119 = load i32* @heap_max, align 4, !dbg !632
STORE [*p=q]:   store i32 %120, i32* @heap_max, align 4, !dbg !632
STORE [*p=q]:   store i32 %118, i32* %122, align 4, !dbg !632
LOAD [p=*q]:   %123 = load i32* %n, align 4, !dbg !633
LOAD [p=*q]:   %125 = load %struct.ct_data** %tree, align 8, !dbg !633
LOAD [p=*q]:   %129 = load i16* %128, align 2, !dbg !633
LOAD [p=*q]:   %131 = load i32* %m, align 4, !dbg !633
LOAD [p=*q]:   %133 = load %struct.ct_data** %tree, align 8, !dbg !633
LOAD [p=*q]:   %137 = load i16* %136, align 2, !dbg !633
LOAD [p=*q]:   %141 = load i32* %node, align 4, !dbg !633
LOAD [p=*q]:   %143 = load %struct.ct_data** %tree, align 8, !dbg !633
STORE [*p=q]:   store i16 %140, i16* %146, align 2, !dbg !633
LOAD [p=*q]:   %147 = load i32* %n, align 4, !dbg !634
LOAD [p=*q]:   %150 = load i8* %149, align 1, !dbg !634
LOAD [p=*q]:   %152 = load i32* %m, align 4, !dbg !634
LOAD [p=*q]:   %155 = load i8* %154, align 1, !dbg !634
LOAD [p=*q]:   %105 = load i32* getelementptr inbounds ([573 x i32]* @heap, i32 0, i64 1), align 4, !dbg !627
STORE [*p=q]:   store i32 %105, i32* %n, align 4, !dbg !627
LOAD [p=*q]:   %106 = load i32* @heap_len, align 4, !dbg !627
STORE [*p=q]:   store i32 %107, i32* @heap_len, align 4, !dbg !627
LOAD [p=*q]:   %110 = load i32* %109, align 4, !dbg !627
STORE [*p=q]:   store i32 %110, i32* getelementptr inbounds ([573 x i32]* @heap, i32 0, i64 1), align 4, !dbg !627
LOAD [p=*q]:   %111 = load %struct.ct_data** %tree, align 8, !dbg !627
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @pqdownheap to void (...)*)(%struct.ct_data* %111, i32 1), !dbg !627
LOAD [p=*q]:   %112 = load i32* getelementptr inbounds ([573 x i32]* @heap, i32 0, i64 1), align 4, !dbg !630
STORE [*p=q]:   store i32 %112, i32* %m, align 4, !dbg !630
LOAD [p=*q]:   %113 = load i32* %n, align 4, !dbg !631
LOAD [p=*q]:   %114 = load i32* @heap_max, align 4, !dbg !631
STORE [*p=q]:   store i32 %115, i32* @heap_max, align 4, !dbg !631
STORE [*p=q]:   store i32 %113, i32* %117, align 4, !dbg !631
LOAD [p=*q]:   %118 = load i32* %m, align 4, !dbg !632
LOAD [p=*q]:   %119 = load i32* @heap_max, align 4, !dbg !632
STORE [*p=q]:   store i32 %120, i32* @heap_max, align 4, !dbg !632
STORE [*p=q]:   store i32 %118, i32* %122, align 4, !dbg !632
LOAD [p=*q]:   %123 = load i32* %n, align 4, !dbg !633
LOAD [p=*q]:   %125 = load %struct.ct_data** %tree, align 8, !dbg !633
LOAD [p=*q]:   %129 = load i16* %128, align 2, !dbg !633
LOAD [p=*q]:   %131 = load i32* %m, align 4, !dbg !633
LOAD [p=*q]:   %133 = load %struct.ct_data** %tree, align 8, !dbg !633
LOAD [p=*q]:   %137 = load i16* %136, align 2, !dbg !633
LOAD [p=*q]:   %141 = load i32* %node, align 4, !dbg !633
LOAD [p=*q]:   %143 = load %struct.ct_data** %tree, align 8, !dbg !633
STORE [*p=q]:   store i16 %140, i16* %146, align 2, !dbg !633
LOAD [p=*q]:   %147 = load i32* %n, align 4, !dbg !634
LOAD [p=*q]:   %150 = load i8* %149, align 1, !dbg !634
LOAD [p=*q]:   %152 = load i32* %m, align 4, !dbg !634
LOAD [p=*q]:   %155 = load i8* %154, align 1, !dbg !634
LOAD [p=*q]:   %159 = load i32* %n, align 4, !dbg !634
LOAD [p=*q]:   %162 = load i8* %161, align 1, !dbg !634
LOAD [p=*q]:   %165 = load i32* %m, align 4, !dbg !634
LOAD [p=*q]:   %168 = load i8* %167, align 1, !dbg !634
LOAD [p=*q]:   %159 = load i32* %n, align 4, !dbg !634
LOAD [p=*q]:   %162 = load i8* %161, align 1, !dbg !634
LOAD [p=*q]:   %174 = load i32* %node, align 4, !dbg !634
STORE [*p=q]:   store i8 %173, i8* %176, align 1, !dbg !634
LOAD [p=*q]:   %177 = load i32* %node, align 4, !dbg !635
LOAD [p=*q]:   %179 = load i32* %m, align 4, !dbg !635
LOAD [p=*q]:   %181 = load %struct.ct_data** %tree, align 8, !dbg !635
STORE [*p=q]:   store i16 %178, i16* %184, align 2, !dbg !635
LOAD [p=*q]:   %185 = load i32* %n, align 4, !dbg !635
LOAD [p=*q]:   %187 = load %struct.ct_data** %tree, align 8, !dbg !635
STORE [*p=q]:   store i16 %178, i16* %190, align 2, !dbg !635
LOAD [p=*q]:   %191 = load i32* %node, align 4, !dbg !636
STORE [*p=q]:   store i32 %192, i32* %node, align 4, !dbg !636
STORE [*p=q]:   store i32 %191, i32* getelementptr inbounds ([573 x i32]* @heap, i32 0, i64 1), align 4, !dbg !636
LOAD [p=*q]:   %193 = load %struct.ct_data** %tree, align 8, !dbg !637
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @pqdownheap to void (...)*)(%struct.ct_data* %193, i32 1), !dbg !637
LOAD [p=*q]:   %165 = load i32* %m, align 4, !dbg !634
LOAD [p=*q]:   %168 = load i8* %167, align 1, !dbg !634
LOAD [p=*q]:   %174 = load i32* %node, align 4, !dbg !634
STORE [*p=q]:   store i8 %173, i8* %176, align 1, !dbg !634
LOAD [p=*q]:   %177 = load i32* %node, align 4, !dbg !635
LOAD [p=*q]:   %179 = load i32* %m, align 4, !dbg !635
LOAD [p=*q]:   %181 = load %struct.ct_data** %tree, align 8, !dbg !635
STORE [*p=q]:   store i16 %178, i16* %184, align 2, !dbg !635
LOAD [p=*q]:   %185 = load i32* %n, align 4, !dbg !635
LOAD [p=*q]:   %187 = load %struct.ct_data** %tree, align 8, !dbg !635
STORE [*p=q]:   store i16 %178, i16* %190, align 2, !dbg !635
LOAD [p=*q]:   %191 = load i32* %node, align 4, !dbg !636
STORE [*p=q]:   store i32 %192, i32* %node, align 4, !dbg !636
STORE [*p=q]:   store i32 %191, i32* getelementptr inbounds ([573 x i32]* @heap, i32 0, i64 1), align 4, !dbg !636
LOAD [p=*q]:   %193 = load %struct.ct_data** %tree, align 8, !dbg !637
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @pqdownheap to void (...)*)(%struct.ct_data* %193, i32 1), !dbg !637
LOAD [p=*q]:   %174 = load i32* %node, align 4, !dbg !634
STORE [*p=q]:   store i8 %173, i8* %176, align 1, !dbg !634
LOAD [p=*q]:   %177 = load i32* %node, align 4, !dbg !635
LOAD [p=*q]:   %179 = load i32* %m, align 4, !dbg !635
LOAD [p=*q]:   %181 = load %struct.ct_data** %tree, align 8, !dbg !635
STORE [*p=q]:   store i16 %178, i16* %184, align 2, !dbg !635
LOAD [p=*q]:   %185 = load i32* %n, align 4, !dbg !635
LOAD [p=*q]:   %187 = load %struct.ct_data** %tree, align 8, !dbg !635
STORE [*p=q]:   store i16 %178, i16* %190, align 2, !dbg !635
LOAD [p=*q]:   %191 = load i32* %node, align 4, !dbg !636
STORE [*p=q]:   store i32 %192, i32* %node, align 4, !dbg !636
STORE [*p=q]:   store i32 %191, i32* getelementptr inbounds ([573 x i32]* @heap, i32 0, i64 1), align 4, !dbg !636
LOAD [p=*q]:   %193 = load %struct.ct_data** %tree, align 8, !dbg !637
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @pqdownheap to void (...)*)(%struct.ct_data* %193, i32 1), !dbg !637
LOAD [p=*q]:   %195 = load i32* @heap_len, align 4, !dbg !638
LOAD [p=*q]:   %195 = load i32* @heap_len, align 4, !dbg !638
LOAD [p=*q]:   %105 = load i32* getelementptr inbounds ([573 x i32]* @heap, i32 0, i64 1), align 4, !dbg !627
STORE [*p=q]:   store i32 %105, i32* %n, align 4, !dbg !627
LOAD [p=*q]:   %106 = load i32* @heap_len, align 4, !dbg !627
STORE [*p=q]:   store i32 %107, i32* @heap_len, align 4, !dbg !627
LOAD [p=*q]:   %110 = load i32* %109, align 4, !dbg !627
STORE [*p=q]:   store i32 %110, i32* getelementptr inbounds ([573 x i32]* @heap, i32 0, i64 1), align 4, !dbg !627
LOAD [p=*q]:   %111 = load %struct.ct_data** %tree, align 8, !dbg !627
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @pqdownheap to void (...)*)(%struct.ct_data* %111, i32 1), !dbg !627
LOAD [p=*q]:   %112 = load i32* getelementptr inbounds ([573 x i32]* @heap, i32 0, i64 1), align 4, !dbg !630
STORE [*p=q]:   store i32 %112, i32* %m, align 4, !dbg !630
LOAD [p=*q]:   %113 = load i32* %n, align 4, !dbg !631
LOAD [p=*q]:   %114 = load i32* @heap_max, align 4, !dbg !631
STORE [*p=q]:   store i32 %115, i32* @heap_max, align 4, !dbg !631
STORE [*p=q]:   store i32 %113, i32* %117, align 4, !dbg !631
LOAD [p=*q]:   %118 = load i32* %m, align 4, !dbg !632
LOAD [p=*q]:   %119 = load i32* @heap_max, align 4, !dbg !632
STORE [*p=q]:   store i32 %120, i32* @heap_max, align 4, !dbg !632
STORE [*p=q]:   store i32 %118, i32* %122, align 4, !dbg !632
LOAD [p=*q]:   %123 = load i32* %n, align 4, !dbg !633
LOAD [p=*q]:   %125 = load %struct.ct_data** %tree, align 8, !dbg !633
LOAD [p=*q]:   %129 = load i16* %128, align 2, !dbg !633
LOAD [p=*q]:   %131 = load i32* %m, align 4, !dbg !633
LOAD [p=*q]:   %133 = load %struct.ct_data** %tree, align 8, !dbg !633
LOAD [p=*q]:   %137 = load i16* %136, align 2, !dbg !633
LOAD [p=*q]:   %141 = load i32* %node, align 4, !dbg !633
LOAD [p=*q]:   %143 = load %struct.ct_data** %tree, align 8, !dbg !633
STORE [*p=q]:   store i16 %140, i16* %146, align 2, !dbg !633
LOAD [p=*q]:   %147 = load i32* %n, align 4, !dbg !634
LOAD [p=*q]:   %150 = load i8* %149, align 1, !dbg !634
LOAD [p=*q]:   %152 = load i32* %m, align 4, !dbg !634
LOAD [p=*q]:   %155 = load i8* %154, align 1, !dbg !634
LOAD [p=*q]:   %198 = load i32* getelementptr inbounds ([573 x i32]* @heap, i32 0, i64 1), align 4, !dbg !639
LOAD [p=*q]:   %199 = load i32* @heap_max, align 4, !dbg !639
STORE [*p=q]:   store i32 %200, i32* @heap_max, align 4, !dbg !639
STORE [*p=q]:   store i32 %198, i32* %202, align 4, !dbg !639
LOAD [p=*q]:   %203 = load %struct.tree_desc** %1, align 8, !dbg !640
CALL [call func]:   call void (...)* bitcast (void (%struct.tree_desc*)* @gen_bitlen to void (...)*)(%struct.tree_desc* %203), !dbg !640
LOAD [p=*q]:   %204 = load %struct.ct_data** %tree, align 8, !dbg !641
LOAD [p=*q]:   %205 = load i32* %max_code, align 4, !dbg !641
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @gen_codes to void (...)*)(%struct.ct_data* %204, i32 %205), !dbg !641
Analyzing return instruction for build_tree
No return value for: build_tree
LOAD [p=*q]:   %198 = load i32* getelementptr inbounds ([573 x i32]* @heap, i32 0, i64 1), align 4, !dbg !639
LOAD [p=*q]:   %199 = load i32* @heap_max, align 4, !dbg !639
STORE [*p=q]:   store i32 %200, i32* @heap_max, align 4, !dbg !639
STORE [*p=q]:   store i32 %198, i32* %202, align 4, !dbg !639
LOAD [p=*q]:   %203 = load %struct.tree_desc** %1, align 8, !dbg !640
CALL [call func]:   call void (...)* bitcast (void (%struct.tree_desc*)* @gen_bitlen to void (...)*)(%struct.tree_desc* %203), !dbg !640
LOAD [p=*q]:   %204 = load %struct.ct_data** %tree, align 8, !dbg !641
LOAD [p=*q]:   %205 = load i32* %max_code, align 4, !dbg !641
CALL [call func]:   call void (...)* bitcast (void (%struct.ct_data*, i32)* @gen_codes to void (...)*)(%struct.ct_data* %204, i32 %205), !dbg !641
Analyzing return instruction for build_tree
No return value for: build_tree
[Processing][Function][set_file_type]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !574), !dbg !576
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %ascii_freq}, metadata !578), !dbg !579
STORE [*p=q]:   store i32 0, i32* %ascii_freq, align 4, !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %bin_freq}, metadata !581), !dbg !582
STORE [*p=q]:   store i32 0, i32* %bin_freq, align 4, !dbg !583
LOAD [p=*q]:   %2 = load i32* %n, align 4, !dbg !584
LOAD [p=*q]:   %2 = load i32* %n, align 4, !dbg !584
LOAD [p=*q]:   %5 = load i32* %n, align 4, !dbg !585
STORE [*p=q]:   store i32 %6, i32* %n, align 4, !dbg !585
LOAD [p=*q]:   %11 = load i16* %10, align 2, !dbg !585
LOAD [p=*q]:   %13 = load i32* %bin_freq, align 4, !dbg !585
STORE [*p=q]:   store i32 %14, i32* %bin_freq, align 4, !dbg !585
LOAD [p=*q]:   %5 = load i32* %n, align 4, !dbg !585
STORE [*p=q]:   store i32 %6, i32* %n, align 4, !dbg !585
LOAD [p=*q]:   %11 = load i16* %10, align 2, !dbg !585
LOAD [p=*q]:   %13 = load i32* %bin_freq, align 4, !dbg !585
STORE [*p=q]:   store i32 %14, i32* %bin_freq, align 4, !dbg !585
LOAD [p=*q]:   %2 = load i32* %n, align 4, !dbg !584
LOAD [p=*q]:   %17 = load i32* %n, align 4, !dbg !586
LOAD [p=*q]:   %17 = load i32* %n, align 4, !dbg !586
LOAD [p=*q]:   %20 = load i32* %n, align 4, !dbg !587
STORE [*p=q]:   store i32 %21, i32* %n, align 4, !dbg !587
LOAD [p=*q]:   %26 = load i16* %25, align 2, !dbg !587
LOAD [p=*q]:   %28 = load i32* %ascii_freq, align 4, !dbg !587
STORE [*p=q]:   store i32 %29, i32* %ascii_freq, align 4, !dbg !587
LOAD [p=*q]:   %20 = load i32* %n, align 4, !dbg !587
STORE [*p=q]:   store i32 %21, i32* %n, align 4, !dbg !587
LOAD [p=*q]:   %26 = load i16* %25, align 2, !dbg !587
LOAD [p=*q]:   %28 = load i32* %ascii_freq, align 4, !dbg !587
STORE [*p=q]:   store i32 %29, i32* %ascii_freq, align 4, !dbg !587
LOAD [p=*q]:   %17 = load i32* %n, align 4, !dbg !586
LOAD [p=*q]:   %32 = load i32* %n, align 4, !dbg !588
LOAD [p=*q]:   %32 = load i32* %n, align 4, !dbg !588
LOAD [p=*q]:   %35 = load i32* %n, align 4, !dbg !589
STORE [*p=q]:   store i32 %36, i32* %n, align 4, !dbg !589
LOAD [p=*q]:   %41 = load i16* %40, align 2, !dbg !589
LOAD [p=*q]:   %43 = load i32* %bin_freq, align 4, !dbg !589
STORE [*p=q]:   store i32 %44, i32* %bin_freq, align 4, !dbg !589
LOAD [p=*q]:   %46 = load i32* %bin_freq, align 4, !dbg !590
LOAD [p=*q]:   %47 = load i32* %ascii_freq, align 4, !dbg !590
LOAD [p=*q]:   %52 = load i16** @file_type, align 8, !dbg !590
STORE [*p=q]:   store i16 %51, i16* %52, !dbg !590
LOAD [p=*q]:   %53 = load i16** @file_type, align 8, !dbg !591
LOAD [p=*q]:   %54 = load i16* %53, !dbg !591
LOAD [p=*q]:   %35 = load i32* %n, align 4, !dbg !589
STORE [*p=q]:   store i32 %36, i32* %n, align 4, !dbg !589
LOAD [p=*q]:   %41 = load i16* %40, align 2, !dbg !589
LOAD [p=*q]:   %43 = load i32* %bin_freq, align 4, !dbg !589
STORE [*p=q]:   store i32 %44, i32* %bin_freq, align 4, !dbg !589
LOAD [p=*q]:   %32 = load i32* %n, align 4, !dbg !588
LOAD [p=*q]:   %46 = load i32* %bin_freq, align 4, !dbg !590
LOAD [p=*q]:   %47 = load i32* %ascii_freq, align 4, !dbg !590
LOAD [p=*q]:   %52 = load i16** @file_type, align 8, !dbg !590
STORE [*p=q]:   store i16 %51, i16* %52, !dbg !590
LOAD [p=*q]:   %53 = load i16** @file_type, align 8, !dbg !591
LOAD [p=*q]:   %54 = load i16* %53, !dbg !591
Analyzing return instruction for set_file_type
No return value for: set_file_type
CALL [call func]:   call void @warning(i8* getelementptr inbounds ([23 x i8]* @.str1144, i32 0, i32 0)), !dbg !592
Analyzing return instruction for set_file_type
No return value for: set_file_type
CALL [call func]:   call void @warning(i8* getelementptr inbounds ([23 x i8]* @.str1144, i32 0, i32 0)), !dbg !592
Analyzing return instruction for set_file_type
No return value for: set_file_type
Analyzing return instruction for set_file_type
No return value for: set_file_type
[Processing][Function][flush_block]
STORE [*p=q]:   store i8* %buf, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i64 %stored_len, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !576), !dbg !577
STORE [*p=q]:   store i32 %eof, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %opt_lenb}, metadata !580), !dbg !582
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %static_lenb}, metadata !583), !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %max_blindex}, metadata !585), !dbg !586
LOAD [p=*q]:   %4 = load i8* @flags, align 1, !dbg !587
LOAD [p=*q]:   %5 = load i32* @last_flags, align 4, !dbg !587
STORE [*p=q]:   store i8 %4, i8* %7, align 1, !dbg !587
LOAD [p=*q]:   %8 = load i16** @file_type, align 8, !dbg !588
LOAD [p=*q]:   %9 = load i16* %8, !dbg !588
CALL [call func]:   call void @set_file_type(), !dbg !589
CALL [call func]:   call void (...)* bitcast (void (%struct.tree_desc*)* @build_tree to void (...)*)(%struct.tree_desc* @l_desc), !dbg !590
CALL [call func]:   call void (...)* bitcast (void (%struct.tree_desc*)* @build_tree to void (...)*)(%struct.tree_desc* @d_desc), !dbg !591
CALL [call func]:   %14 = call i32 @build_bl_tree(), !dbg !592
STORE [*p=q]:   store i32 %14, i32* %max_blindex, align 4, !dbg !592
LOAD [p=*q]:   %15 = load i64* @opt_len, align 8, !dbg !593
STORE [*p=q]:   store i64 %18, i64* %opt_lenb, align 8, !dbg !593
LOAD [p=*q]:   %19 = load i64* @static_len, align 8, !dbg !594
STORE [*p=q]:   store i64 %22, i64* %static_lenb, align 8, !dbg !594
LOAD [p=*q]:   %23 = load i64* %2, align 8, !dbg !595
LOAD [p=*q]:   %24 = load i64* @input_len, align 8, !dbg !595
STORE [*p=q]:   store i64 %25, i64* @input_len, align 8, !dbg !595
LOAD [p=*q]:   %26 = load i64* %static_lenb, align 8, !dbg !596
LOAD [p=*q]:   %27 = load i64* %opt_lenb, align 8, !dbg !596
CALL [call func]:   call void @set_file_type(), !dbg !589
CALL [call func]:   call void (...)* bitcast (void (%struct.tree_desc*)* @build_tree to void (...)*)(%struct.tree_desc* @l_desc), !dbg !590
CALL [call func]:   call void (...)* bitcast (void (%struct.tree_desc*)* @build_tree to void (...)*)(%struct.tree_desc* @d_desc), !dbg !591
CALL [call func]:   %14 = call i32 @build_bl_tree(), !dbg !592
STORE [*p=q]:   store i32 %14, i32* %max_blindex, align 4, !dbg !592
LOAD [p=*q]:   %15 = load i64* @opt_len, align 8, !dbg !593
STORE [*p=q]:   store i64 %18, i64* %opt_lenb, align 8, !dbg !593
LOAD [p=*q]:   %19 = load i64* @static_len, align 8, !dbg !594
STORE [*p=q]:   store i64 %22, i64* %static_lenb, align 8, !dbg !594
LOAD [p=*q]:   %23 = load i64* %2, align 8, !dbg !595
LOAD [p=*q]:   %24 = load i64* @input_len, align 8, !dbg !595
STORE [*p=q]:   store i64 %25, i64* @input_len, align 8, !dbg !595
LOAD [p=*q]:   %26 = load i64* %static_lenb, align 8, !dbg !596
LOAD [p=*q]:   %27 = load i64* %opt_lenb, align 8, !dbg !596
CALL [call func]:   call void (...)* bitcast (void (%struct.tree_desc*)* @build_tree to void (...)*)(%struct.tree_desc* @l_desc), !dbg !590
CALL [call func]:   call void (...)* bitcast (void (%struct.tree_desc*)* @build_tree to void (...)*)(%struct.tree_desc* @d_desc), !dbg !591
CALL [call func]:   %14 = call i32 @build_bl_tree(), !dbg !592
STORE [*p=q]:   store i32 %14, i32* %max_blindex, align 4, !dbg !592
LOAD [p=*q]:   %15 = load i64* @opt_len, align 8, !dbg !593
STORE [*p=q]:   store i64 %18, i64* %opt_lenb, align 8, !dbg !593
LOAD [p=*q]:   %19 = load i64* @static_len, align 8, !dbg !594
STORE [*p=q]:   store i64 %22, i64* %static_lenb, align 8, !dbg !594
LOAD [p=*q]:   %23 = load i64* %2, align 8, !dbg !595
LOAD [p=*q]:   %24 = load i64* @input_len, align 8, !dbg !595
STORE [*p=q]:   store i64 %25, i64* @input_len, align 8, !dbg !595
LOAD [p=*q]:   %26 = load i64* %static_lenb, align 8, !dbg !596
LOAD [p=*q]:   %27 = load i64* %opt_lenb, align 8, !dbg !596
LOAD [p=*q]:   %30 = load i64* %static_lenb, align 8, !dbg !597
STORE [*p=q]:   store i64 %30, i64* %opt_lenb, align 8, !dbg !597
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !598
LOAD [p=*q]:   %33 = load i64* %opt_lenb, align 8, !dbg !598
LOAD [p=*q]:   %30 = load i64* %static_lenb, align 8, !dbg !597
STORE [*p=q]:   store i64 %30, i64* %opt_lenb, align 8, !dbg !597
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !598
LOAD [p=*q]:   %33 = load i64* %opt_lenb, align 8, !dbg !598
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !598
LOAD [p=*q]:   %33 = load i64* %opt_lenb, align 8, !dbg !598
LOAD [p=*q]:   %36 = load i32* %3, align 4, !dbg !598
LOAD [p=*q]:   %54 = load i64* %2, align 8, !dbg !606
LOAD [p=*q]:   %56 = load i64* %opt_lenb, align 8, !dbg !606
LOAD [p=*q]:   %36 = load i32* %3, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i64* @compressed_len, align 8, !dbg !598
LOAD [p=*q]:   %54 = load i64* %2, align 8, !dbg !606
LOAD [p=*q]:   %56 = load i64* %opt_lenb, align 8, !dbg !606
LOAD [p=*q]:   %39 = load i64* @compressed_len, align 8, !dbg !598
LOAD [p=*q]:   %54 = load i64* %2, align 8, !dbg !606
LOAD [p=*q]:   %56 = load i64* %opt_lenb, align 8, !dbg !606
LOAD [p=*q]:   %43 = load i8** %1, align 8, !dbg !599
LOAD [p=*q]:   %54 = load i64* %2, align 8, !dbg !606
LOAD [p=*q]:   %56 = load i64* %opt_lenb, align 8, !dbg !606
LOAD [p=*q]:   %43 = load i8** %1, align 8, !dbg !599
LOAD [p=*q]:   %47 = load i8** %1, align 8, !dbg !602
LOAD [p=*q]:   %48 = load i64* %2, align 8, !dbg !602
CALL [call func]:   call void @copy_block(i8* %47, i32 %49, i32 0), !dbg !602
LOAD [p=*q]:   %50 = load i64* %2, align 8, !dbg !603
STORE [*p=q]:   store i64 %51, i64* @compressed_len, align 8, !dbg !603
LOAD [p=*q]:   %52 = load i32** @file_method, align 8, !dbg !604
STORE [*p=q]:   store i32 0, i32* %52, !dbg !604
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([15 x i8]* @.str143, i32 0, i32 0)) #7, !dbg !601
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([15 x i8]* @.str143, i32 0, i32 0)) #7, !dbg !601
LOAD [p=*q]:   %47 = load i8** %1, align 8, !dbg !602
LOAD [p=*q]:   %48 = load i64* %2, align 8, !dbg !602
CALL [call func]:   call void @copy_block(i8* %47, i32 %49, i32 0), !dbg !602
LOAD [p=*q]:   %50 = load i64* %2, align 8, !dbg !603
STORE [*p=q]:   store i64 %51, i64* @compressed_len, align 8, !dbg !603
LOAD [p=*q]:   %52 = load i32** @file_method, align 8, !dbg !604
STORE [*p=q]:   store i32 0, i32* %52, !dbg !604
CALL [call func]:   call void @init_block(), !dbg !624
LOAD [p=*q]:   %103 = load i32* %3, align 4, !dbg !625
LOAD [p=*q]:   %54 = load i64* %2, align 8, !dbg !606
LOAD [p=*q]:   %56 = load i64* %opt_lenb, align 8, !dbg !606
LOAD [p=*q]:   %59 = load i8** %1, align 8, !dbg !606
LOAD [p=*q]:   %77 = load i64* %static_lenb, align 8, !dbg !613
LOAD [p=*q]:   %78 = load i64* %opt_lenb, align 8, !dbg !613
LOAD [p=*q]:   %59 = load i8** %1, align 8, !dbg !606
LOAD [p=*q]:   %62 = load i32* %3, align 4, !dbg !607
CALL [call func]:   call void @send_bits(i32 %63, i32 3), !dbg !607
LOAD [p=*q]:   %64 = load i64* @compressed_len, align 8, !dbg !609
STORE [*p=q]:   store i64 %67, i64* @compressed_len, align 8, !dbg !609
LOAD [p=*q]:   %68 = load i64* %2, align 8, !dbg !610
LOAD [p=*q]:   %71 = load i64* @compressed_len, align 8, !dbg !610
STORE [*p=q]:   store i64 %72, i64* @compressed_len, align 8, !dbg !610
LOAD [p=*q]:   %73 = load i8** %1, align 8, !dbg !611
LOAD [p=*q]:   %74 = load i64* %2, align 8, !dbg !611
CALL [call func]:   call void @copy_block(i8* %73, i32 %75, i32 1), !dbg !611
LOAD [p=*q]:   %77 = load i64* %static_lenb, align 8, !dbg !613
LOAD [p=*q]:   %78 = load i64* %opt_lenb, align 8, !dbg !613
LOAD [p=*q]:   %62 = load i32* %3, align 4, !dbg !607
CALL [call func]:   call void @send_bits(i32 %63, i32 3), !dbg !607
LOAD [p=*q]:   %64 = load i64* @compressed_len, align 8, !dbg !609
STORE [*p=q]:   store i64 %67, i64* @compressed_len, align 8, !dbg !609
LOAD [p=*q]:   %68 = load i64* %2, align 8, !dbg !610
LOAD [p=*q]:   %71 = load i64* @compressed_len, align 8, !dbg !610
STORE [*p=q]:   store i64 %72, i64* @compressed_len, align 8, !dbg !610
LOAD [p=*q]:   %73 = load i8** %1, align 8, !dbg !611
LOAD [p=*q]:   %74 = load i64* %2, align 8, !dbg !611
CALL [call func]:   call void @copy_block(i8* %73, i32 %75, i32 1), !dbg !611
LOAD [p=*q]:   %77 = load i64* %static_lenb, align 8, !dbg !613
LOAD [p=*q]:   %78 = load i64* %opt_lenb, align 8, !dbg !613
LOAD [p=*q]:   %81 = load i32* %3, align 4, !dbg !614
CALL [call func]:   call void @send_bits(i32 %82, i32 3), !dbg !614
CALL [call func]:   call void @compress_block(%struct.ct_data* getelementptr inbounds ([288 x %struct.ct_data]* @static_ltree, i32 0, i32 0), %struct.ct_data* getelementptr inbounds ([30 x %struct.ct_data]* @static_dtree, i32 0, i32 0)), !dbg !616
LOAD [p=*q]:   %83 = load i64* @static_len, align 8, !dbg !617
LOAD [p=*q]:   %85 = load i64* @compressed_len, align 8, !dbg !617
STORE [*p=q]:   store i64 %86, i64* @compressed_len, align 8, !dbg !617
LOAD [p=*q]:   %88 = load i32* %3, align 4, !dbg !619
CALL [call func]:   call void @send_bits(i32 %89, i32 3), !dbg !619
LOAD [p=*q]:   %90 = load i32* getelementptr inbounds (%struct.tree_desc* @l_desc, i32 0, i32 6), align 4, !dbg !621
LOAD [p=*q]:   %92 = load i32* getelementptr inbounds (%struct.tree_desc* @d_desc, i32 0, i32 6), align 4, !dbg !621
LOAD [p=*q]:   %94 = load i32* %max_blindex, align 4, !dbg !621
CALL [call func]:   call void (...)* bitcast (void (i32, i32, i32)* @send_all_trees to void (...)*)(i32 %91, i32 %93, i32 %95), !dbg !621
CALL [call func]:   call void @compress_block(%struct.ct_data* getelementptr inbounds ([573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 0), %struct.ct_data* getelementptr inbounds ([61 x %struct.ct_data]* @dyn_dtree, i32 0, i32 0)), !dbg !622
LOAD [p=*q]:   %96 = load i64* @opt_len, align 8, !dbg !623
LOAD [p=*q]:   %98 = load i64* @compressed_len, align 8, !dbg !623
STORE [*p=q]:   store i64 %99, i64* @compressed_len, align 8, !dbg !623
LOAD [p=*q]:   %81 = load i32* %3, align 4, !dbg !614
CALL [call func]:   call void @send_bits(i32 %82, i32 3), !dbg !614
CALL [call func]:   call void @compress_block(%struct.ct_data* getelementptr inbounds ([288 x %struct.ct_data]* @static_ltree, i32 0, i32 0), %struct.ct_data* getelementptr inbounds ([30 x %struct.ct_data]* @static_dtree, i32 0, i32 0)), !dbg !616
LOAD [p=*q]:   %83 = load i64* @static_len, align 8, !dbg !617
LOAD [p=*q]:   %85 = load i64* @compressed_len, align 8, !dbg !617
STORE [*p=q]:   store i64 %86, i64* @compressed_len, align 8, !dbg !617
LOAD [p=*q]:   %88 = load i32* %3, align 4, !dbg !619
CALL [call func]:   call void @send_bits(i32 %89, i32 3), !dbg !619
LOAD [p=*q]:   %90 = load i32* getelementptr inbounds (%struct.tree_desc* @l_desc, i32 0, i32 6), align 4, !dbg !621
LOAD [p=*q]:   %92 = load i32* getelementptr inbounds (%struct.tree_desc* @d_desc, i32 0, i32 6), align 4, !dbg !621
LOAD [p=*q]:   %94 = load i32* %max_blindex, align 4, !dbg !621
CALL [call func]:   call void (...)* bitcast (void (i32, i32, i32)* @send_all_trees to void (...)*)(i32 %91, i32 %93, i32 %95), !dbg !621
CALL [call func]:   call void @compress_block(%struct.ct_data* getelementptr inbounds ([573 x %struct.ct_data]* @dyn_ltree, i32 0, i32 0), %struct.ct_data* getelementptr inbounds ([61 x %struct.ct_data]* @dyn_dtree, i32 0, i32 0)), !dbg !622
LOAD [p=*q]:   %96 = load i64* @opt_len, align 8, !dbg !623
LOAD [p=*q]:   %98 = load i64* @compressed_len, align 8, !dbg !623
STORE [*p=q]:   store i64 %99, i64* @compressed_len, align 8, !dbg !623
CALL [call func]:   call void @init_block(), !dbg !624
LOAD [p=*q]:   %103 = load i32* %3, align 4, !dbg !625
CALL [call func]:   call void @init_block(), !dbg !624
LOAD [p=*q]:   %103 = load i32* %3, align 4, !dbg !625
CALL [call func]:   call void @bi_windup(), !dbg !626
LOAD [p=*q]:   %106 = load i64* @compressed_len, align 8, !dbg !628
STORE [*p=q]:   store i64 %107, i64* @compressed_len, align 8, !dbg !628
LOAD [p=*q]:   %109 = load i64* @compressed_len, align 8, !dbg !630
Analyzing return instruction for flush_block
	  %110 = ashr i64 %109, 3, !dbg !630
CALL [call func]:   call void @bi_windup(), !dbg !626
LOAD [p=*q]:   %106 = load i64* @compressed_len, align 8, !dbg !628
STORE [*p=q]:   store i64 %107, i64* @compressed_len, align 8, !dbg !628
LOAD [p=*q]:   %109 = load i64* @compressed_len, align 8, !dbg !630
Analyzing return instruction for flush_block
	  %110 = ashr i64 %109, 3, !dbg !630
LOAD [p=*q]:   %109 = load i64* @compressed_len, align 8, !dbg !630
Analyzing return instruction for flush_block
	  %110 = ashr i64 %109, 3, !dbg !630
[Processing][Function][init_block]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !574), !dbg !576
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !577
LOAD [p=*q]:   %2 = load i32* %n, align 4, !dbg !577
LOAD [p=*q]:   %2 = load i32* %n, align 4, !dbg !577
LOAD [p=*q]:   %5 = load i32* %n, align 4, !dbg !579
STORE [*p=q]:   store i16 0, i16* %9, align 2, !dbg !579
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* %n, align 4, !dbg !579
STORE [*p=q]:   store i16 0, i16* %9, align 2, !dbg !579
LOAD [p=*q]:   %11 = load i32* %n, align 4, !dbg !580
STORE [*p=q]:   store i32 %12, i32* %n, align 4, !dbg !580
LOAD [p=*q]:   %11 = load i32* %n, align 4, !dbg !580
STORE [*p=q]:   store i32 %12, i32* %n, align 4, !dbg !580
LOAD [p=*q]:   %2 = load i32* %n, align 4, !dbg !577
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !581
LOAD [p=*q]:   %15 = load i32* %n, align 4, !dbg !581
LOAD [p=*q]:   %15 = load i32* %n, align 4, !dbg !581
LOAD [p=*q]:   %18 = load i32* %n, align 4, !dbg !583
STORE [*p=q]:   store i16 0, i16* %22, align 2, !dbg !583
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !585
LOAD [p=*q]:   %18 = load i32* %n, align 4, !dbg !583
STORE [*p=q]:   store i16 0, i16* %22, align 2, !dbg !583
LOAD [p=*q]:   %24 = load i32* %n, align 4, !dbg !584
STORE [*p=q]:   store i32 %25, i32* %n, align 4, !dbg !584
LOAD [p=*q]:   %24 = load i32* %n, align 4, !dbg !584
STORE [*p=q]:   store i32 %25, i32* %n, align 4, !dbg !584
LOAD [p=*q]:   %15 = load i32* %n, align 4, !dbg !581
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !585
LOAD [p=*q]:   %28 = load i32* %n, align 4, !dbg !585
LOAD [p=*q]:   %28 = load i32* %n, align 4, !dbg !585
LOAD [p=*q]:   %31 = load i32* %n, align 4, !dbg !587
STORE [*p=q]:   store i16 0, i16* %35, align 2, !dbg !587
STORE [*p=q]:   store i16 1, i16* getelementptr inbounds ([573 x %struct.ct_data]* @dyn_ltree, i32 0, i64 256, i32 0, i32 0), align 2, !dbg !589
STORE [*p=q]:   store i64 0, i64* @static_len, align 8, !dbg !590
STORE [*p=q]:   store i64 0, i64* @opt_len, align 8, !dbg !590
STORE [*p=q]:   store i32 0, i32* @last_flags, align 4, !dbg !591
STORE [*p=q]:   store i32 0, i32* @last_dist, align 4, !dbg !591
STORE [*p=q]:   store i32 0, i32* @last_lit, align 4, !dbg !591
STORE [*p=q]:   store i8 0, i8* @flags, align 1, !dbg !592
STORE [*p=q]:   store i8 1, i8* @flag_bit, align 1, !dbg !593
Analyzing return instruction for init_block
No return value for: init_block
LOAD [p=*q]:   %31 = load i32* %n, align 4, !dbg !587
STORE [*p=q]:   store i16 0, i16* %35, align 2, !dbg !587
LOAD [p=*q]:   %37 = load i32* %n, align 4, !dbg !588
STORE [*p=q]:   store i32 %38, i32* %n, align 4, !dbg !588
LOAD [p=*q]:   %37 = load i32* %n, align 4, !dbg !588
STORE [*p=q]:   store i32 %38, i32* %n, align 4, !dbg !588
LOAD [p=*q]:   %28 = load i32* %n, align 4, !dbg !585
STORE [*p=q]:   store i16 1, i16* getelementptr inbounds ([573 x %struct.ct_data]* @dyn_ltree, i32 0, i64 256, i32 0, i32 0), align 2, !dbg !589
STORE [*p=q]:   store i64 0, i64* @static_len, align 8, !dbg !590
STORE [*p=q]:   store i64 0, i64* @opt_len, align 8, !dbg !590
STORE [*p=q]:   store i32 0, i32* @last_flags, align 4, !dbg !591
STORE [*p=q]:   store i32 0, i32* @last_dist, align 4, !dbg !591
STORE [*p=q]:   store i32 0, i32* @last_lit, align 4, !dbg !591
STORE [*p=q]:   store i8 0, i8* @flags, align 1, !dbg !592
STORE [*p=q]:   store i8 1, i8* @flag_bit, align 1, !dbg !593
Analyzing return instruction for init_block
No return value for: init_block
[Processing][Function][gen_codes]
STORE [*p=q]:   store %struct.ct_data* %tree, %struct.ct_data** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.ct_data** %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %max_code, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[16 x i16]* %next_code}, metadata !578), !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i16* %code}, metadata !581), !dbg !582
STORE [*p=q]:   store i16 0, i16* %code, align 2, !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %bits}, metadata !584), !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !586), !dbg !587
STORE [*p=q]:   store i32 1, i32* %bits, align 4, !dbg !588
LOAD [p=*q]:   %4 = load i32* %bits, align 4, !dbg !588
LOAD [p=*q]:   %4 = load i32* %bits, align 4, !dbg !588
LOAD [p=*q]:   %7 = load i16* %code, align 2, !dbg !590
LOAD [p=*q]:   %9 = load i32* %bits, align 4, !dbg !590
LOAD [p=*q]:   %13 = load i16* %12, align 2, !dbg !590
STORE [*p=q]:   store i16 %17, i16* %code, align 2, !dbg !590
LOAD [p=*q]:   %18 = load i32* %bits, align 4, !dbg !590
STORE [*p=q]:   store i16 %17, i16* %20, align 2, !dbg !590
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !594
LOAD [p=*q]:   %7 = load i16* %code, align 2, !dbg !590
LOAD [p=*q]:   %9 = load i32* %bits, align 4, !dbg !590
LOAD [p=*q]:   %13 = load i16* %12, align 2, !dbg !590
STORE [*p=q]:   store i16 %17, i16* %code, align 2, !dbg !590
LOAD [p=*q]:   %18 = load i32* %bits, align 4, !dbg !590
STORE [*p=q]:   store i16 %17, i16* %20, align 2, !dbg !590
LOAD [p=*q]:   %22 = load i32* %bits, align 4, !dbg !593
STORE [*p=q]:   store i32 %23, i32* %bits, align 4, !dbg !593
LOAD [p=*q]:   %22 = load i32* %bits, align 4, !dbg !593
STORE [*p=q]:   store i32 %23, i32* %bits, align 4, !dbg !593
LOAD [p=*q]:   %4 = load i32* %bits, align 4, !dbg !588
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !594
LOAD [p=*q]:   %26 = load i32* %n, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !594
LOAD [p=*q]:   %26 = load i32* %n, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !594
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !596), !dbg !598
LOAD [p=*q]:   %30 = load i32* %n, align 4, !dbg !599
LOAD [p=*q]:   %32 = load %struct.ct_data** %1, align 8, !dbg !599
LOAD [p=*q]:   %36 = load i16* %35, align 2, !dbg !599
STORE [*p=q]:   store i32 %37, i32* %len, align 4, !dbg !599
LOAD [p=*q]:   %38 = load i32* %len, align 4, !dbg !600
Analyzing return instruction for gen_codes
No return value for: gen_codes
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !596), !dbg !598
LOAD [p=*q]:   %30 = load i32* %n, align 4, !dbg !599
LOAD [p=*q]:   %32 = load %struct.ct_data** %1, align 8, !dbg !599
LOAD [p=*q]:   %36 = load i16* %35, align 2, !dbg !599
STORE [*p=q]:   store i32 %37, i32* %len, align 4, !dbg !599
LOAD [p=*q]:   %38 = load i32* %len, align 4, !dbg !600
LOAD [p=*q]:   %42 = load i32* %len, align 4, !dbg !602
LOAD [p=*q]:   %45 = load i16* %44, align 2, !dbg !602
STORE [*p=q]:   store i16 %46, i16* %44, align 2, !dbg !602
LOAD [p=*q]:   %48 = load i32* %len, align 4, !dbg !602
CALL [call func]:   %49 = call i32 @bi_reverse(i32 %47, i32 %48) #1, !dbg !602
LOAD [p=*q]:   %51 = load i32* %n, align 4, !dbg !602
LOAD [p=*q]:   %53 = load %struct.ct_data** %1, align 8, !dbg !602
STORE [*p=q]:   store i16 %50, i16* %56, align 2, !dbg !602
LOAD [p=*q]:   %58 = load i32* %n, align 4, !dbg !604
STORE [*p=q]:   store i32 %59, i32* %n, align 4, !dbg !604
LOAD [p=*q]:   %42 = load i32* %len, align 4, !dbg !602
LOAD [p=*q]:   %45 = load i16* %44, align 2, !dbg !602
STORE [*p=q]:   store i16 %46, i16* %44, align 2, !dbg !602
LOAD [p=*q]:   %48 = load i32* %len, align 4, !dbg !602
CALL [call func]:   %49 = call i32 @bi_reverse(i32 %47, i32 %48) #1, !dbg !602
LOAD [p=*q]:   %51 = load i32* %n, align 4, !dbg !602
LOAD [p=*q]:   %53 = load %struct.ct_data** %1, align 8, !dbg !602
STORE [*p=q]:   store i16 %50, i16* %56, align 2, !dbg !602
LOAD [p=*q]:   %58 = load i32* %n, align 4, !dbg !604
STORE [*p=q]:   store i32 %59, i32* %n, align 4, !dbg !604
LOAD [p=*q]:   %58 = load i32* %n, align 4, !dbg !604
STORE [*p=q]:   store i32 %59, i32* %n, align 4, !dbg !604
LOAD [p=*q]:   %26 = load i32* %n, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !594
Analyzing return instruction for gen_codes
No return value for: gen_codes
[Processing][Function][get_method]
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %flags}, metadata !576), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[10 x i8]* %magic}, metadata !579), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic0}, metadata !582), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic1}, metadata !584), !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %stamp}, metadata !586), !dbg !588
LOAD [p=*q]:   %3 = load i32* @force, align 4, !dbg !589
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !589
LOAD [p=*q]:   %44 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %45 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !589
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %44 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %45 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !590
CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !590
STORE [*p=q]:   store i32 %22, i32* %imagic0, align 4, !dbg !592
LOAD [p=*q]:   %23 = load i32* %imagic0, align 4, !dbg !593
STORE [*p=q]:   store i8 %24, i8* %25, align 1, !dbg !593
LOAD [p=*q]:   %26 = load i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* @insize, align 4, !dbg !594
CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
STORE [*p=q]:   store i32 %22, i32* %imagic0, align 4, !dbg !592
LOAD [p=*q]:   %23 = load i32* %imagic0, align 4, !dbg !593
STORE [*p=q]:   store i8 %24, i8* %25, align 1, !dbg !593
LOAD [p=*q]:   %26 = load i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* @insize, align 4, !dbg !594
STORE [*p=q]:   store i32 %22, i32* %imagic0, align 4, !dbg !592
LOAD [p=*q]:   %23 = load i32* %imagic0, align 4, !dbg !593
STORE [*p=q]:   store i8 %24, i8* %25, align 1, !dbg !593
LOAD [p=*q]:   %26 = load i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* @insize, align 4, !dbg !594
LOAD [p=*q]:   %30 = load i32* @inptr, align 4, !dbg !594
STORE [*p=q]:   store i32 %31, i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %34 = load i8* %33, align 1, !dbg !594
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
LOAD [p=*q]:   %30 = load i32* @inptr, align 4, !dbg !594
STORE [*p=q]:   store i32 %31, i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %34 = load i8* %33, align 1, !dbg !594
STORE [*p=q]:   store i32 %39, i32* %imagic1, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* %imagic1, align 4, !dbg !596
STORE [*p=q]:   store i8 %41, i8* %42, align 1, !dbg !596
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
STORE [*p=q]:   store i32 %39, i32* %imagic1, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* %imagic1, align 4, !dbg !596
STORE [*p=q]:   store i8 %41, i8* %42, align 1, !dbg !596
STORE [*p=q]:   store i32 %39, i32* %imagic1, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* %imagic1, align 4, !dbg !596
STORE [*p=q]:   store i8 %41, i8* %42, align 1, !dbg !596
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !612
LOAD [p=*q]:   %100 = load i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i32 %101, i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !614
STORE [*p=q]:   store i32 0, i32* @last_member, align 4, !dbg !615
CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
LOAD [p=*q]:   %44 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %45 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %48 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %49, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !598
CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
LOAD [p=*q]:   %48 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %49, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !598
STORE [*p=q]:   store i8 %58, i8* %59, align 1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %imagic0, align 4, !dbg !601
LOAD [p=*q]:   %61 = load i8* %60, align 1, !dbg !602
CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
STORE [*p=q]:   store i8 %58, i8* %59, align 1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %imagic0, align 4, !dbg !601
LOAD [p=*q]:   %61 = load i8* %60, align 1, !dbg !602
STORE [*p=q]:   store i8 %58, i8* %59, align 1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %imagic0, align 4, !dbg !601
LOAD [p=*q]:   %61 = load i8* %60, align 1, !dbg !602
LOAD [p=*q]:   %64 = load i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %65 = load i32* @insize, align 4, !dbg !603
LOAD [p=*q]:   %81 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %82 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %64 = load i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %65 = load i32* @insize, align 4, !dbg !603
LOAD [p=*q]:   %68 = load i32* @inptr, align 4, !dbg !603
STORE [*p=q]:   store i32 %69, i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %72 = load i8* %71, align 1, !dbg !603
CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
LOAD [p=*q]:   %68 = load i32* @inptr, align 4, !dbg !603
STORE [*p=q]:   store i32 %69, i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %72 = load i8* %71, align 1, !dbg !603
STORE [*p=q]:   store i8 %78, i8* %79, align 1, !dbg !605
STORE [*p=q]:   store i32 0, i32* %imagic1, align 4, !dbg !606
CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
STORE [*p=q]:   store i8 %78, i8* %79, align 1, !dbg !605
STORE [*p=q]:   store i32 0, i32* %imagic1, align 4, !dbg !606
STORE [*p=q]:   store i8 %78, i8* %79, align 1, !dbg !605
STORE [*p=q]:   store i32 0, i32* %imagic1, align 4, !dbg !606
LOAD [p=*q]:   %81 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %82 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %85 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %86, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %89 = load i8* %88, align 1, !dbg !608
CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
LOAD [p=*q]:   %85 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %86, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %89 = load i8* %88, align 1, !dbg !608
STORE [*p=q]:   store i32 %94, i32* %imagic1, align 4, !dbg !610
LOAD [p=*q]:   %95 = load i32* %imagic1, align 4, !dbg !611
STORE [*p=q]:   store i8 %96, i8* %97, align 1, !dbg !611
CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
STORE [*p=q]:   store i32 %94, i32* %imagic1, align 4, !dbg !610
LOAD [p=*q]:   %95 = load i32* %imagic1, align 4, !dbg !611
STORE [*p=q]:   store i8 %96, i8* %97, align 1, !dbg !611
STORE [*p=q]:   store i32 %94, i32* %imagic1, align 4, !dbg !610
LOAD [p=*q]:   %95 = load i32* %imagic1, align 4, !dbg !611
STORE [*p=q]:   store i8 %96, i8* %97, align 1, !dbg !611
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !612
LOAD [p=*q]:   %100 = load i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i32 %101, i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !614
STORE [*p=q]:   store i32 0, i32* @last_member, align 4, !dbg !615
CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !612
LOAD [p=*q]:   %100 = load i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i32 %101, i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !614
STORE [*p=q]:   store i32 0, i32* @last_member, align 4, !dbg !615
CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
LOAD [p=*q]:   %110 = load i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %111 = load i32* @insize, align 4, !dbg !618
CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
LOAD [p=*q]:   %110 = load i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %111 = load i32* @insize, align 4, !dbg !618
CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
LOAD [p=*q]:   %110 = load i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %111 = load i32* @insize, align 4, !dbg !618
LOAD [p=*q]:   %114 = load i32* @inptr, align 4, !dbg !618
STORE [*p=q]:   store i32 %115, i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %118 = load i8* %117, align 1, !dbg !618
CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
LOAD [p=*q]:   %114 = load i32* @inptr, align 4, !dbg !618
STORE [*p=q]:   store i32 %115, i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %118 = load i8* %117, align 1, !dbg !618
STORE [*p=q]:   store i32 %123, i32* @method, align 4, !dbg !620
LOAD [p=*q]:   %124 = load i32* @method, align 4, !dbg !621
CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
STORE [*p=q]:   store i32 %123, i32* @method, align 4, !dbg !620
LOAD [p=*q]:   %124 = load i32* @method, align 4, !dbg !621
STORE [*p=q]:   store i32 %123, i32* @method, align 4, !dbg !620
LOAD [p=*q]:   %124 = load i32* @method, align 4, !dbg !621
LOAD [p=*q]:   %127 = load %struct._IO_FILE** @stderr, align 8, !dbg !622
LOAD [p=*q]:   %128 = load i8** @program_name, align 8, !dbg !622
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !622
CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !624
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !625
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !626
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !627
LOAD [p=*q]:   %127 = load %struct._IO_FILE** @stderr, align 8, !dbg !622
LOAD [p=*q]:   %128 = load i8** @program_name, align 8, !dbg !622
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !622
CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !624
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !625
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
Analyzing return instruction for get_method
	  %657 = load i32* %1, !dbg !819
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !626
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !627
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !627
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !627
CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !627
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !627
STORE [*p=q]:   store i8 %146, i8* %flags, align 1, !dbg !628
LOAD [p=*q]:   %147 = load i8* %flags, align 1, !dbg !629
CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
STORE [*p=q]:   store i8 %146, i8* %flags, align 1, !dbg !628
LOAD [p=*q]:   %147 = load i8* %flags, align 1, !dbg !629
STORE [*p=q]:   store i8 %146, i8* %flags, align 1, !dbg !628
LOAD [p=*q]:   %147 = load i8* %flags, align 1, !dbg !629
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !630
LOAD [p=*q]:   %153 = load i8** @program_name, align 8, !dbg !630
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !632
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !633
LOAD [p=*q]:   %156 = load i8* %flags, align 1, !dbg !634
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !630
LOAD [p=*q]:   %153 = load i8** @program_name, align 8, !dbg !630
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !632
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !633
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
Analyzing return instruction for get_method
	  %657 = load i32* %1, !dbg !819
LOAD [p=*q]:   %156 = load i8* %flags, align 1, !dbg !634
LOAD [p=*q]:   %161 = load %struct._IO_FILE** @stderr, align 8, !dbg !635
LOAD [p=*q]:   %162 = load i8** @program_name, align 8, !dbg !635
LOAD [p=*q]:   %163 = load i8* %flags, align 1, !dbg !635
CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !637
LOAD [p=*q]:   %166 = load i32* @force, align 4, !dbg !638
LOAD [p=*q]:   %171 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %172 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %161 = load %struct._IO_FILE** @stderr, align 8, !dbg !635
LOAD [p=*q]:   %162 = load i8** @program_name, align 8, !dbg !635
LOAD [p=*q]:   %163 = load i8* %flags, align 1, !dbg !635
CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !637
LOAD [p=*q]:   %166 = load i32* @force, align 4, !dbg !638
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !639
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !639
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
Analyzing return instruction for get_method
	  %657 = load i32* %1, !dbg !819
LOAD [p=*q]:   %171 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %172 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %171 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %172 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %175 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %176, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %179 = load i8* %178, align 1, !dbg !641
CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
LOAD [p=*q]:   %175 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %176, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %179 = load i8* %178, align 1, !dbg !641
STORE [*p=q]:   store i64 %185, i64* %stamp, align 8, !dbg !642
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !643
CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
STORE [*p=q]:   store i64 %185, i64* %stamp, align 8, !dbg !642
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !643
STORE [*p=q]:   store i64 %185, i64* %stamp, align 8, !dbg !642
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !643
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !643
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !643
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !643
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !643
LOAD [p=*q]:   %202 = load i64* %stamp, align 8, !dbg !644
STORE [*p=q]:   store i64 %203, i64* %stamp, align 8, !dbg !644
LOAD [p=*q]:   %204 = load i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* @insize, align 4, !dbg !645
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
LOAD [p=*q]:   %202 = load i64* %stamp, align 8, !dbg !644
STORE [*p=q]:   store i64 %203, i64* %stamp, align 8, !dbg !644
LOAD [p=*q]:   %204 = load i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* @insize, align 4, !dbg !645
LOAD [p=*q]:   %202 = load i64* %stamp, align 8, !dbg !644
STORE [*p=q]:   store i64 %203, i64* %stamp, align 8, !dbg !644
LOAD [p=*q]:   %204 = load i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* @insize, align 4, !dbg !645
LOAD [p=*q]:   %208 = load i32* @inptr, align 4, !dbg !645
STORE [*p=q]:   store i32 %209, i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %212 = load i8* %211, align 1, !dbg !645
CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
LOAD [p=*q]:   %208 = load i32* @inptr, align 4, !dbg !645
STORE [*p=q]:   store i32 %209, i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %212 = load i8* %211, align 1, !dbg !645
LOAD [p=*q]:   %220 = load i64* %stamp, align 8, !dbg !646
STORE [*p=q]:   store i64 %221, i64* %stamp, align 8, !dbg !646
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !647
CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
LOAD [p=*q]:   %220 = load i64* %stamp, align 8, !dbg !646
STORE [*p=q]:   store i64 %221, i64* %stamp, align 8, !dbg !646
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !647
LOAD [p=*q]:   %220 = load i64* %stamp, align 8, !dbg !646
STORE [*p=q]:   store i64 %221, i64* %stamp, align 8, !dbg !646
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !647
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !647
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !647
CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !647
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !647
LOAD [p=*q]:   %238 = load i64* %stamp, align 8, !dbg !648
STORE [*p=q]:   store i64 %239, i64* %stamp, align 8, !dbg !648
LOAD [p=*q]:   %240 = load i64* %stamp, align 8, !dbg !649
CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
LOAD [p=*q]:   %238 = load i64* %stamp, align 8, !dbg !648
STORE [*p=q]:   store i64 %239, i64* %stamp, align 8, !dbg !648
LOAD [p=*q]:   %240 = load i64* %stamp, align 8, !dbg !649
LOAD [p=*q]:   %238 = load i64* %stamp, align 8, !dbg !648
STORE [*p=q]:   store i64 %239, i64* %stamp, align 8, !dbg !648
LOAD [p=*q]:   %240 = load i64* %stamp, align 8, !dbg !649
LOAD [p=*q]:   %243 = load i32* @no_time, align 4, !dbg !649
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %243 = load i32* @no_time, align 4, !dbg !649
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %246 = load i64* %stamp, align 8, !dbg !650
STORE [*p=q]:   store i64 %246, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !650
STORE [*p=q]:   store i64 0, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !652
LOAD [p=*q]:   %246 = load i64* %stamp, align 8, !dbg !650
STORE [*p=q]:   store i64 %246, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !650
STORE [*p=q]:   store i64 0, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !652
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %252 = load i32* @inptr, align 4, !dbg !654
STORE [*p=q]:   store i32 %253, i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %256 = load i8* %255, align 1, !dbg !654
CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
LOAD [p=*q]:   %252 = load i32* @inptr, align 4, !dbg !654
STORE [*p=q]:   store i32 %253, i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %256 = load i8* %255, align 1, !dbg !654
STORE [*p=q]:   store i8 %262, i8* %263, align 1, !dbg !655
LOAD [p=*q]:   %264 = load i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %265 = load i32* @insize, align 4, !dbg !656
CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
STORE [*p=q]:   store i8 %262, i8* %263, align 1, !dbg !655
LOAD [p=*q]:   %264 = load i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %265 = load i32* @insize, align 4, !dbg !656
STORE [*p=q]:   store i8 %262, i8* %263, align 1, !dbg !655
LOAD [p=*q]:   %264 = load i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %265 = load i32* @insize, align 4, !dbg !656
LOAD [p=*q]:   %268 = load i32* @inptr, align 4, !dbg !656
STORE [*p=q]:   store i32 %269, i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %272 = load i8* %271, align 1, !dbg !656
CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
LOAD [p=*q]:   %268 = load i32* @inptr, align 4, !dbg !656
STORE [*p=q]:   store i32 %269, i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %272 = load i8* %271, align 1, !dbg !656
STORE [*p=q]:   store i8 %278, i8* %279, align 1, !dbg !657
LOAD [p=*q]:   %280 = load i8* %flags, align 1, !dbg !658
CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
STORE [*p=q]:   store i8 %278, i8* %279, align 1, !dbg !657
LOAD [p=*q]:   %280 = load i8* %flags, align 1, !dbg !658
STORE [*p=q]:   store i8 %278, i8* %279, align 1, !dbg !657
LOAD [p=*q]:   %280 = load i8* %flags, align 1, !dbg !658
STORE [*p=q]:   store i8 8, i8* %285, align 1, !dbg !659
LOAD [p=*q]:   %286 = load i8* %flags, align 1, !dbg !661
STORE [*p=q]:   store i8 %286, i8* %287, align 1, !dbg !661
LOAD [p=*q]:   %288 = load i64* %stamp, align 8, !dbg !662
STORE [*p=q]:   store i8 %290, i8* %291, align 1, !dbg !662
LOAD [p=*q]:   %292 = load i64* %stamp, align 8, !dbg !663
STORE [*p=q]:   store i8 %295, i8* %296, align 1, !dbg !663
LOAD [p=*q]:   %297 = load i64* %stamp, align 8, !dbg !664
STORE [*p=q]:   store i8 %300, i8* %301, align 1, !dbg !664
LOAD [p=*q]:   %302 = load i64* %stamp, align 8, !dbg !665
STORE [*p=q]:   store i8 %304, i8* %305, align 1, !dbg !665
CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
LOAD [p=*q]:   %310 = load i8* %flags, align 1, !dbg !669
STORE [*p=q]:   store i8 8, i8* %285, align 1, !dbg !659
LOAD [p=*q]:   %286 = load i8* %flags, align 1, !dbg !661
STORE [*p=q]:   store i8 %286, i8* %287, align 1, !dbg !661
LOAD [p=*q]:   %288 = load i64* %stamp, align 8, !dbg !662
STORE [*p=q]:   store i8 %290, i8* %291, align 1, !dbg !662
LOAD [p=*q]:   %292 = load i64* %stamp, align 8, !dbg !663
STORE [*p=q]:   store i8 %295, i8* %296, align 1, !dbg !663
LOAD [p=*q]:   %297 = load i64* %stamp, align 8, !dbg !664
STORE [*p=q]:   store i8 %300, i8* %301, align 1, !dbg !664
LOAD [p=*q]:   %302 = load i64* %stamp, align 8, !dbg !665
STORE [*p=q]:   store i8 %304, i8* %305, align 1, !dbg !665
CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
LOAD [p=*q]:   %310 = load i8* %flags, align 1, !dbg !669
LOAD [p=*q]:   %310 = load i8* %flags, align 1, !dbg !669
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x i8]* %lenbuf}, metadata !670), !dbg !675
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !676), !dbg !677
LOAD [p=*q]:   %315 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %316 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %373 = load i8* %flags, align 1, !dbg !690
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x i8]* %lenbuf}, metadata !670), !dbg !675
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !676), !dbg !677
LOAD [p=*q]:   %315 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %316 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %319 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %320, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %323 = load i8* %322, align 1, !dbg !678
CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
LOAD [p=*q]:   %319 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %320, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %323 = load i8* %322, align 1, !dbg !678
STORE [*p=q]:   store i8 %329, i8* %330, align 1, !dbg !679
STORE [*p=q]:   store i32 %331, i32* %len, align 4, !dbg !679
LOAD [p=*q]:   %332 = load i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %333 = load i32* @insize, align 4, !dbg !680
CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
STORE [*p=q]:   store i8 %329, i8* %330, align 1, !dbg !679
STORE [*p=q]:   store i32 %331, i32* %len, align 4, !dbg !679
LOAD [p=*q]:   %332 = load i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %333 = load i32* @insize, align 4, !dbg !680
STORE [*p=q]:   store i8 %329, i8* %330, align 1, !dbg !679
STORE [*p=q]:   store i32 %331, i32* %len, align 4, !dbg !679
LOAD [p=*q]:   %332 = load i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %333 = load i32* @insize, align 4, !dbg !680
LOAD [p=*q]:   %336 = load i32* @inptr, align 4, !dbg !680
STORE [*p=q]:   store i32 %337, i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %340 = load i8* %339, align 1, !dbg !680
CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
LOAD [p=*q]:   %336 = load i32* @inptr, align 4, !dbg !680
STORE [*p=q]:   store i32 %337, i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %340 = load i8* %339, align 1, !dbg !680
STORE [*p=q]:   store i8 %346, i8* %347, align 1, !dbg !681
LOAD [p=*q]:   %350 = load i32* %len, align 4, !dbg !681
STORE [*p=q]:   store i32 %351, i32* %len, align 4, !dbg !681
LOAD [p=*q]:   %352 = load i32* @verbose, align 4, !dbg !682
CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
STORE [*p=q]:   store i8 %346, i8* %347, align 1, !dbg !681
LOAD [p=*q]:   %350 = load i32* %len, align 4, !dbg !681
STORE [*p=q]:   store i32 %351, i32* %len, align 4, !dbg !681
LOAD [p=*q]:   %352 = load i32* @verbose, align 4, !dbg !682
STORE [*p=q]:   store i8 %346, i8* %347, align 1, !dbg !681
LOAD [p=*q]:   %350 = load i32* %len, align 4, !dbg !681
STORE [*p=q]:   store i32 %351, i32* %len, align 4, !dbg !681
LOAD [p=*q]:   %352 = load i32* @verbose, align 4, !dbg !682
LOAD [p=*q]:   %355 = load %struct._IO_FILE** @stderr, align 8, !dbg !683
LOAD [p=*q]:   %356 = load i8** @program_name, align 8, !dbg !683
LOAD [p=*q]:   %357 = load i32* %len, align 4, !dbg !683
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
LOAD [p=*q]:   %360 = load i8* %flags, align 1, !dbg !686
LOAD [p=*q]:   %355 = load %struct._IO_FILE** @stderr, align 8, !dbg !683
LOAD [p=*q]:   %356 = load i8** @program_name, align 8, !dbg !683
LOAD [p=*q]:   %357 = load i32* %len, align 4, !dbg !683
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
LOAD [p=*q]:   %360 = load i8* %flags, align 1, !dbg !686
LOAD [p=*q]:   %360 = load i8* %flags, align 1, !dbg !686
CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
LOAD [p=*q]:   %368 = load i32* %len, align 4, !dbg !688
LOAD [p=*q]:   %370 = load i8* %flags, align 1, !dbg !688
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 %369, i32 %371), !dbg !688
CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
LOAD [p=*q]:   %368 = load i32* %len, align 4, !dbg !688
LOAD [p=*q]:   %370 = load i8* %flags, align 1, !dbg !688
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 %369, i32 %371), !dbg !688
LOAD [p=*q]:   %368 = load i32* %len, align 4, !dbg !688
LOAD [p=*q]:   %370 = load i8* %flags, align 1, !dbg !688
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 %369, i32 %371), !dbg !688
LOAD [p=*q]:   %373 = load i8* %flags, align 1, !dbg !690
LOAD [p=*q]:   %373 = load i8* %flags, align 1, !dbg !690
LOAD [p=*q]:   %378 = load i32* @no_name, align 4, !dbg !691
LOAD [p=*q]:   %455 = load i8* %flags, align 1, !dbg !725
LOAD [p=*q]:   %378 = load i32* @no_name, align 4, !dbg !691
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
LOAD [p=*q]:   %381 = load i32* @to_stdout, align 4, !dbg !691
LOAD [p=*q]:   %381 = load i32* @to_stdout, align 4, !dbg !691
LOAD [p=*q]:   %384 = load i32* @list, align 4, !dbg !691
LOAD [p=*q]:   %387 = load i32* @part_nb, align 4, !dbg !691
LOAD [p=*q]:   %384 = load i32* @list, align 4, !dbg !691
LOAD [p=*q]:   %387 = load i32* @part_nb, align 4, !dbg !691
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
LOAD [p=*q]:   %387 = load i32* @part_nb, align 4, !dbg !691
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !696), !dbg !698
CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
STORE [*p=q]:   store i8* %393, i8** %p, align 8, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %base}, metadata !700), !dbg !701
LOAD [p=*q]:   %394 = load i8** %p, align 8, !dbg !702
STORE [*p=q]:   store i8* %394, i8** %base, align 8, !dbg !702
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !696), !dbg !698
CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
STORE [*p=q]:   store i8* %393, i8** %p, align 8, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %base}, metadata !700), !dbg !701
LOAD [p=*q]:   %394 = load i8** %p, align 8, !dbg !702
STORE [*p=q]:   store i8* %394, i8** %base, align 8, !dbg !702
LOAD [p=*q]:   %396 = load i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %397 = load i32* @insize, align 4, !dbg !705
LOAD [p=*q]:   %396 = load i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %397 = load i32* @insize, align 4, !dbg !705
LOAD [p=*q]:   %400 = load i32* @inptr, align 4, !dbg !705
STORE [*p=q]:   store i32 %401, i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %404 = load i8* %403, align 1, !dbg !705
CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
LOAD [p=*q]:   %400 = load i32* @inptr, align 4, !dbg !705
STORE [*p=q]:   store i32 %401, i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %404 = load i8* %403, align 1, !dbg !705
LOAD [p=*q]:   %411 = load i8** %p, align 8, !dbg !707
STORE [*p=q]:   store i8 %410, i8* %411, !dbg !707
LOAD [p=*q]:   %412 = load i8** %p, align 8, !dbg !708
STORE [*p=q]:   store i8* %413, i8** %p, align 8, !dbg !708
LOAD [p=*q]:   %414 = load i8* %412, !dbg !708
CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
LOAD [p=*q]:   %411 = load i8** %p, align 8, !dbg !707
STORE [*p=q]:   store i8 %410, i8* %411, !dbg !707
LOAD [p=*q]:   %412 = load i8** %p, align 8, !dbg !708
STORE [*p=q]:   store i8* %413, i8** %p, align 8, !dbg !708
LOAD [p=*q]:   %414 = load i8* %412, !dbg !708
LOAD [p=*q]:   %411 = load i8** %p, align 8, !dbg !707
STORE [*p=q]:   store i8 %410, i8* %411, !dbg !707
LOAD [p=*q]:   %412 = load i8** %p, align 8, !dbg !708
STORE [*p=q]:   store i8* %413, i8** %p, align 8, !dbg !708
LOAD [p=*q]:   %414 = load i8* %412, !dbg !708
LOAD [p=*q]:   %419 = load i8** %p, align 8, !dbg !710
LOAD [p=*q]:   %424 = load i8* %flags, align 1, !dbg !714
LOAD [p=*q]:   %419 = load i8** %p, align 8, !dbg !710
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
LOAD [p=*q]:   %396 = load i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %397 = load i32* @insize, align 4, !dbg !705
LOAD [p=*q]:   %424 = load i8* %flags, align 1, !dbg !714
LOAD [p=*q]:   %429 = load i8** %base, align 8, !dbg !715
LOAD [p=*q]:   %430 = load i8** %p, align 8, !dbg !715
LOAD [p=*q]:   %431 = load i8** %base, align 8, !dbg !715
CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
LOAD [p=*q]:   %438 = load i8** %base, align 8, !dbg !716
CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
STORE [*p=q]:   store i8* %439, i8** %p, align 8, !dbg !716
LOAD [p=*q]:   %440 = load i8** %base, align 8, !dbg !717
LOAD [p=*q]:   %441 = load i8** %p, align 8, !dbg !717
LOAD [p=*q]:   %442 = load i8** %p, align 8, !dbg !718
CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
CALL [call func]:   call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %441, i64 %444, i32 1, i1 false), !dbg !718
LOAD [p=*q]:   %445 = load i32* @list, align 4, !dbg !719
LOAD [p=*q]:   %429 = load i8** %base, align 8, !dbg !715
LOAD [p=*q]:   %430 = load i8** %p, align 8, !dbg !715
LOAD [p=*q]:   %431 = load i8** %base, align 8, !dbg !715
CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
LOAD [p=*q]:   %438 = load i8** %base, align 8, !dbg !716
CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
STORE [*p=q]:   store i8* %439, i8** %p, align 8, !dbg !716
LOAD [p=*q]:   %440 = load i8** %base, align 8, !dbg !717
LOAD [p=*q]:   %441 = load i8** %p, align 8, !dbg !717
LOAD [p=*q]:   %442 = load i8** %p, align 8, !dbg !718
CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
CALL [call func]:   call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %441, i64 %444, i32 1, i1 false), !dbg !718
LOAD [p=*q]:   %445 = load i32* @list, align 4, !dbg !719
LOAD [p=*q]:   %438 = load i8** %base, align 8, !dbg !716
CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
STORE [*p=q]:   store i8* %439, i8** %p, align 8, !dbg !716
LOAD [p=*q]:   %440 = load i8** %base, align 8, !dbg !717
LOAD [p=*q]:   %441 = load i8** %p, align 8, !dbg !717
LOAD [p=*q]:   %442 = load i8** %p, align 8, !dbg !718
CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
CALL [call func]:   call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %441, i64 %444, i32 1, i1 false), !dbg !718
LOAD [p=*q]:   %445 = load i32* @list, align 4, !dbg !719
LOAD [p=*q]:   %448 = load i8** %base, align 8, !dbg !720
LOAD [p=*q]:   %448 = load i8** %base, align 8, !dbg !720
STORE [*p=q]:   store i32 0, i32* @list, align 4, !dbg !722
STORE [*p=q]:   store i32 0, i32* @list, align 4, !dbg !722
LOAD [p=*q]:   %455 = load i8* %flags, align 1, !dbg !725
LOAD [p=*q]:   %455 = load i8* %flags, align 1, !dbg !725
LOAD [p=*q]:   %460 = load i8* %flags, align 1, !dbg !726
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %461), !dbg !726
LOAD [p=*q]:   %463 = load i8* %flags, align 1, !dbg !729
LOAD [p=*q]:   %460 = load i8* %flags, align 1, !dbg !726
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %461), !dbg !726
LOAD [p=*q]:   %463 = load i8* %flags, align 1, !dbg !729
LOAD [p=*q]:   %463 = load i8* %flags, align 1, !dbg !729
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %crc16}, metadata !730), !dbg !732
CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
STORE [*p=q]:   store i32 %471, i32* %crc16, align 4, !dbg !733
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %header16}, metadata !734), !dbg !735
LOAD [p=*q]:   %472 = load i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %473 = load i32* @insize, align 4, !dbg !736
LOAD [p=*q]:   %518 = load i32* @part_nb, align 4, !dbg !748
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %crc16}, metadata !730), !dbg !732
CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
STORE [*p=q]:   store i32 %471, i32* %crc16, align 4, !dbg !733
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %header16}, metadata !734), !dbg !735
LOAD [p=*q]:   %472 = load i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %473 = load i32* @insize, align 4, !dbg !736
LOAD [p=*q]:   %476 = load i32* @inptr, align 4, !dbg !736
STORE [*p=q]:   store i32 %477, i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %480 = load i8* %479, align 1, !dbg !736
CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
LOAD [p=*q]:   %476 = load i32* @inptr, align 4, !dbg !736
STORE [*p=q]:   store i32 %477, i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %480 = load i8* %479, align 1, !dbg !736
STORE [*p=q]:   store i32 %485, i32* %header16, align 4, !dbg !737
LOAD [p=*q]:   %486 = load i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %487 = load i32* @insize, align 4, !dbg !738
CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
STORE [*p=q]:   store i32 %485, i32* %header16, align 4, !dbg !737
LOAD [p=*q]:   %486 = load i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %487 = load i32* @insize, align 4, !dbg !738
STORE [*p=q]:   store i32 %485, i32* %header16, align 4, !dbg !737
LOAD [p=*q]:   %486 = load i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %487 = load i32* @insize, align 4, !dbg !738
LOAD [p=*q]:   %490 = load i32* @inptr, align 4, !dbg !738
STORE [*p=q]:   store i32 %491, i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %494 = load i8* %493, align 1, !dbg !738
CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
LOAD [p=*q]:   %490 = load i32* @inptr, align 4, !dbg !738
STORE [*p=q]:   store i32 %491, i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %494 = load i8* %493, align 1, !dbg !738
LOAD [p=*q]:   %501 = load i32* %header16, align 4, !dbg !739
STORE [*p=q]:   store i32 %502, i32* %header16, align 4, !dbg !739
LOAD [p=*q]:   %503 = load i32* %header16, align 4, !dbg !740
LOAD [p=*q]:   %504 = load i32* %crc16, align 4, !dbg !740
CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
LOAD [p=*q]:   %501 = load i32* %header16, align 4, !dbg !739
STORE [*p=q]:   store i32 %502, i32* %header16, align 4, !dbg !739
LOAD [p=*q]:   %503 = load i32* %header16, align 4, !dbg !740
LOAD [p=*q]:   %504 = load i32* %crc16, align 4, !dbg !740
LOAD [p=*q]:   %501 = load i32* %header16, align 4, !dbg !739
STORE [*p=q]:   store i32 %502, i32* %header16, align 4, !dbg !739
LOAD [p=*q]:   %503 = load i32* %header16, align 4, !dbg !740
LOAD [p=*q]:   %504 = load i32* %crc16, align 4, !dbg !740
LOAD [p=*q]:   %507 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
LOAD [p=*q]:   %508 = load i8** @program_name, align 8, !dbg !741
LOAD [p=*q]:   %509 = load i32* %header16, align 4, !dbg !741
LOAD [p=*q]:   %510 = load i32* %crc16, align 4, !dbg !741
CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !743
LOAD [p=*q]:   %512 = load i32* @force, align 4, !dbg !744
LOAD [p=*q]:   %507 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
LOAD [p=*q]:   %508 = load i8** @program_name, align 8, !dbg !741
LOAD [p=*q]:   %509 = load i32* %header16, align 4, !dbg !741
LOAD [p=*q]:   %510 = load i32* %crc16, align 4, !dbg !741
CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !743
LOAD [p=*q]:   %512 = load i32* @force, align 4, !dbg !744
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !745
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !745
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
Analyzing return instruction for get_method
	  %657 = load i32* %1, !dbg !819
LOAD [p=*q]:   %518 = load i32* @part_nb, align 4, !dbg !748
LOAD [p=*q]:   %518 = load i32* @part_nb, align 4, !dbg !748
LOAD [p=*q]:   %521 = load i32* @inptr, align 4, !dbg !749
STORE [*p=q]:   store i64 %523, i64* @header_bytes, align 8, !dbg !749
LOAD [p=*q]:   %521 = load i32* @inptr, align 4, !dbg !749
STORE [*p=q]:   store i64 %523, i64* @header_bytes, align 8, !dbg !749
LOAD [p=*q]:   %587 = load i32* @method, align 4, !dbg !792
CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
LOAD [p=*q]:   %530 = load i32* @inptr, align 4, !dbg !753
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
LOAD [p=*q]:   %530 = load i32* @inptr, align 4, !dbg !753
CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !755
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !757
LOAD [p=*q]:   %536 = load i32* %2, align 4, !dbg !758
CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !755
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !757
LOAD [p=*q]:   %536 = load i32* %2, align 4, !dbg !758
CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !759
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !760
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !759
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
Analyzing return instruction for get_method
	  %657 = load i32* %1, !dbg !819
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !760
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
STORE [*p=q]:   store i32 (i32, i32)* @unpack, i32 (i32, i32)** @work, align 8, !dbg !763
STORE [*p=q]:   store i32 2, i32* @method, align 4, !dbg !765
CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
STORE [*p=q]:   store i32 (i32, i32)* @unpack, i32 (i32, i32)** @work, align 8, !dbg !763
STORE [*p=q]:   store i32 2, i32* @method, align 4, !dbg !765
CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
STORE [*p=q]:   store i32 (i32, i32)* @unlzw, i32 (i32, i32)** @work, align 8, !dbg !768
STORE [*p=q]:   store i32 1, i32* @method, align 4, !dbg !770
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !771
CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
STORE [*p=q]:   store i32 (i32, i32)* @unlzw, i32 (i32, i32)** @work, align 8, !dbg !768
STORE [*p=q]:   store i32 1, i32* @method, align 4, !dbg !770
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !771
CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
STORE [*p=q]:   store i32 (i32, i32)* @unlzh, i32 (i32, i32)** @work, align 8, !dbg !774
STORE [*p=q]:   store i32 3, i32* @method, align 4, !dbg !776
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !777
LOAD [p=*q]:   %557 = load i32* @force, align 4, !dbg !779
STORE [*p=q]:   store i32 (i32, i32)* @unlzh, i32 (i32, i32)** @work, align 8, !dbg !774
STORE [*p=q]:   store i32 3, i32* @method, align 4, !dbg !776
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !777
LOAD [p=*q]:   %557 = load i32* @force, align 4, !dbg !779
LOAD [p=*q]:   %560 = load i32* @to_stdout, align 4, !dbg !779
LOAD [p=*q]:   %560 = load i32* @to_stdout, align 4, !dbg !779
LOAD [p=*q]:   %563 = load i32* @list, align 4, !dbg !779
LOAD [p=*q]:   %563 = load i32* @list, align 4, !dbg !779
STORE [*p=q]:   store i32 0, i32* @method, align 4, !dbg !780
STORE [*p=q]:   store i32 (i32, i32)* @copy, i32 (i32, i32)** @work, align 8, !dbg !782
LOAD [p=*q]:   %566 = load i32* %imagic1, align 4, !dbg !783
STORE [*p=q]:   store i32 0, i32* @method, align 4, !dbg !780
STORE [*p=q]:   store i32 (i32, i32)* @copy, i32 (i32, i32)** @work, align 8, !dbg !782
LOAD [p=*q]:   %566 = load i32* %imagic1, align 4, !dbg !783
LOAD [p=*q]:   %569 = load i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 %570, i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !785
LOAD [p=*q]:   %572 = load i32* %imagic0, align 4, !dbg !786
LOAD [p=*q]:   %569 = load i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 %570, i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !785
LOAD [p=*q]:   %572 = load i32* %imagic0, align 4, !dbg !786
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !785
LOAD [p=*q]:   %572 = load i32* %imagic0, align 4, !dbg !786
LOAD [p=*q]:   %575 = load %struct._IO_FILE** @stdout, align 8, !dbg !787
CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
LOAD [p=*q]:   %578 = load i64* @bytes_out, align 8, !dbg !789
STORE [*p=q]:   store i64 %579, i64* @bytes_out, align 8, !dbg !789
LOAD [p=*q]:   %575 = load %struct._IO_FILE** @stdout, align 8, !dbg !787
CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
LOAD [p=*q]:   %578 = load i64* @bytes_out, align 8, !dbg !789
STORE [*p=q]:   store i64 %579, i64* @bytes_out, align 8, !dbg !789
LOAD [p=*q]:   %587 = load i32* @method, align 4, !dbg !792
LOAD [p=*q]:   %587 = load i32* @method, align 4, !dbg !792
LOAD [p=*q]:   %590 = load i32* @method, align 4, !dbg !793
STORE [*p=q]:   store i32 %590, i32* %1, !dbg !793
LOAD [p=*q]:   %592 = load i32* @part_nb, align 4, !dbg !794
LOAD [p=*q]:   %590 = load i32* @method, align 4, !dbg !793
STORE [*p=q]:   store i32 %590, i32* %1, !dbg !793
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
Analyzing return instruction for get_method
	  %657 = load i32* %1, !dbg !819
LOAD [p=*q]:   %592 = load i32* @part_nb, align 4, !dbg !794
LOAD [p=*q]:   %595 = load %struct._IO_FILE** @stderr, align 8, !dbg !795
LOAD [p=*q]:   %596 = load i8** @program_name, align 8, !dbg !795
CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !797
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !798
LOAD [p=*q]:   %600 = load i8* %599, align 1, !dbg !799
LOAD [p=*q]:   %595 = load %struct._IO_FILE** @stderr, align 8, !dbg !795
LOAD [p=*q]:   %596 = load i8** @program_name, align 8, !dbg !795
CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !797
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !798
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
Analyzing return instruction for get_method
	  %657 = load i32* %1, !dbg !819
LOAD [p=*q]:   %600 = load i8* %599, align 1, !dbg !799
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %inbyte}, metadata !801), !dbg !803
LOAD [p=*q]:   %604 = load i32* %imagic1, align 4, !dbg !804
STORE [*p=q]:   store i32 %604, i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %645 = load i32* @quiet, align 4, !dbg !816
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %inbyte}, metadata !801), !dbg !803
LOAD [p=*q]:   %604 = load i32* %imagic1, align 4, !dbg !804
STORE [*p=q]:   store i32 %604, i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %606 = load i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %606 = load i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %625 = load i32* %inbyte, align 4, !dbg !809
LOAD [p=*q]:   %610 = load i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %611 = load i32* @insize, align 4, !dbg !807
LOAD [p=*q]:   %610 = load i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %611 = load i32* @insize, align 4, !dbg !807
LOAD [p=*q]:   %614 = load i32* @inptr, align 4, !dbg !807
STORE [*p=q]:   store i32 %615, i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %618 = load i8* %617, align 1, !dbg !807
CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
LOAD [p=*q]:   %614 = load i32* @inptr, align 4, !dbg !807
STORE [*p=q]:   store i32 %615, i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %618 = load i8* %617, align 1, !dbg !807
STORE [*p=q]:   store i32 %623, i32* %inbyte, align 4, !dbg !808
CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
STORE [*p=q]:   store i32 %623, i32* %inbyte, align 4, !dbg !808
STORE [*p=q]:   store i32 %623, i32* %inbyte, align 4, !dbg !808
LOAD [p=*q]:   %606 = load i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %625 = load i32* %inbyte, align 4, !dbg !809
LOAD [p=*q]:   %628 = load i32* @verbose, align 4, !dbg !810
LOAD [p=*q]:   %628 = load i32* @verbose, align 4, !dbg !810
LOAD [p=*q]:   %631 = load i32* @quiet, align 4, !dbg !812
STORE [*p=q]:   store i32 -3, i32* %1, !dbg !814
LOAD [p=*q]:   %631 = load i32* @quiet, align 4, !dbg !812
LOAD [p=*q]:   %638 = load i32* @exit_code, align 4, !dbg !812
LOAD [p=*q]:   %634 = load %struct._IO_FILE** @stderr, align 8, !dbg !812
LOAD [p=*q]:   %635 = load i8** @program_name, align 8, !dbg !812
CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
LOAD [p=*q]:   %634 = load %struct._IO_FILE** @stderr, align 8, !dbg !812
LOAD [p=*q]:   %635 = load i8** @program_name, align 8, !dbg !812
CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
LOAD [p=*q]:   %638 = load i32* @exit_code, align 4, !dbg !812
LOAD [p=*q]:   %638 = load i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 -3, i32* %1, !dbg !814
STORE [*p=q]:   store i32 -3, i32* %1, !dbg !814
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
Analyzing return instruction for get_method
	  %657 = load i32* %1, !dbg !819
LOAD [p=*q]:   %645 = load i32* @quiet, align 4, !dbg !816
LOAD [p=*q]:   %645 = load i32* @quiet, align 4, !dbg !816
LOAD [p=*q]:   %652 = load i32* @exit_code, align 4, !dbg !816
LOAD [p=*q]:   %648 = load %struct._IO_FILE** @stderr, align 8, !dbg !816
LOAD [p=*q]:   %649 = load i8** @program_name, align 8, !dbg !816
CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
LOAD [p=*q]:   %648 = load %struct._IO_FILE** @stderr, align 8, !dbg !816
LOAD [p=*q]:   %649 = load i8** @program_name, align 8, !dbg !816
CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
LOAD [p=*q]:   %652 = load i32* @exit_code, align 4, !dbg !816
LOAD [p=*q]:   %652 = load i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 -2, i32* %1, !dbg !818
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 -2, i32* %1, !dbg !818
STORE [*p=q]:   store i32 -2, i32* %1, !dbg !818
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
Analyzing return instruction for get_method
	  %657 = load i32* %1, !dbg !819
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
Analyzing return instruction for get_method
	  %657 = load i32* %1, !dbg !819
[Processing][Function][make_ofname]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %suff}, metadata !574), !dbg !576
CALL [call func]:   %2 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)) #3, !dbg !577
CALL [call func]:   %3 = call i8* (...)* bitcast (i8* (i8*)* @get_suffix to i8* (...)*)(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !578
STORE [*p=q]:   store i8* %3, i8** %suff, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i32* @decompress, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** %suff, align 8, !dbg !580
LOAD [p=*q]:   %58 = load i8** %suff, align 8, !dbg !600
LOAD [p=*q]:   %7 = load i8** %suff, align 8, !dbg !580
LOAD [p=*q]:   %10 = load i32* @recursive, align 4, !dbg !582
LOAD [p=*q]:   %42 = load i8** %suff, align 8, !dbg !591
CALL [call func]:   %43 = call i8* @strlwr(i8* %42), !dbg !591
LOAD [p=*q]:   %44 = load i8** %suff, align 8, !dbg !592
CALL [call func]:   %45 = call i32 @strcmp(i8* %44, i8* getelementptr inbounds ([5 x i8]* @.str48, i32 0, i32 0)) #4, !dbg !592
LOAD [p=*q]:   %10 = load i32* @recursive, align 4, !dbg !582
LOAD [p=*q]:   %20 = load i32* @verbose, align 4, !dbg !585
LOAD [p=*q]:   %13 = load i32* @list, align 4, !dbg !582
LOAD [p=*q]:   %13 = load i32* @list, align 4, !dbg !582
STORE [*p=q]:   store i32 0, i32* %1, !dbg !584
LOAD [p=*q]:   %16 = load i32* @test, align 4, !dbg !582
LOAD [p=*q]:   %16 = load i32* @test, align 4, !dbg !582
STORE [*p=q]:   store i32 0, i32* %1, !dbg !584
LOAD [p=*q]:   %20 = load i32* @verbose, align 4, !dbg !585
STORE [*p=q]:   store i32 0, i32* %1, !dbg !584
LOAD [p=*q]:   %102 = load i32* %1, !dbg !616
Analyzing return instruction for make_ofname
	  %102 = load i32* %1, !dbg !616
LOAD [p=*q]:   %20 = load i32* @verbose, align 4, !dbg !585
LOAD [p=*q]:   %29 = load i32* @quiet, align 4, !dbg !586
LOAD [p=*q]:   %23 = load i32* @recursive, align 4, !dbg !585
LOAD [p=*q]:   %23 = load i32* @recursive, align 4, !dbg !585
STORE [*p=q]:   store i32 2, i32* %1, !dbg !590
LOAD [p=*q]:   %26 = load i32* @quiet, align 4, !dbg !585
LOAD [p=*q]:   %26 = load i32* @quiet, align 4, !dbg !585
STORE [*p=q]:   store i32 2, i32* %1, !dbg !590
LOAD [p=*q]:   %29 = load i32* @quiet, align 4, !dbg !586
LOAD [p=*q]:   %29 = load i32* @quiet, align 4, !dbg !586
LOAD [p=*q]:   %36 = load i32* @exit_code, align 4, !dbg !586
LOAD [p=*q]:   %32 = load %struct._IO_FILE** @stderr, align 8, !dbg !586
LOAD [p=*q]:   %33 = load i8** @program_name, align 8, !dbg !586
CALL [call func]:   %34 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([35 x i8]* @.str72, i32 0, i32 0), i8* %33, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !586
LOAD [p=*q]:   %32 = load %struct._IO_FILE** @stderr, align 8, !dbg !586
LOAD [p=*q]:   %33 = load i8** @program_name, align 8, !dbg !586
CALL [call func]:   %34 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([35 x i8]* @.str72, i32 0, i32 0), i8* %33, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !586
LOAD [p=*q]:   %36 = load i32* @exit_code, align 4, !dbg !586
LOAD [p=*q]:   %36 = load i32* @exit_code, align 4, !dbg !586
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !586
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !586
STORE [*p=q]:   store i32 2, i32* %1, !dbg !590
STORE [*p=q]:   store i32 2, i32* %1, !dbg !590
LOAD [p=*q]:   %102 = load i32* %1, !dbg !616
Analyzing return instruction for make_ofname
	  %102 = load i32* %1, !dbg !616
LOAD [p=*q]:   %42 = load i8** %suff, align 8, !dbg !591
CALL [call func]:   %43 = call i8* @strlwr(i8* %42), !dbg !591
LOAD [p=*q]:   %44 = load i8** %suff, align 8, !dbg !592
CALL [call func]:   %45 = call i32 @strcmp(i8* %44, i8* getelementptr inbounds ([5 x i8]* @.str48, i32 0, i32 0)) #4, !dbg !592
LOAD [p=*q]:   %52 = load i8** %suff, align 8, !dbg !594
CALL [call func]:   %53 = call i8* @strcpy(i8* %52, i8* getelementptr inbounds ([5 x i8]* @.str47, i32 0, i32 0)) #3, !dbg !594
LOAD [p=*q]:   %48 = load i8** %suff, align 8, !dbg !593
CALL [call func]:   %49 = call i32 @strcmp(i8* %48, i8* getelementptr inbounds ([5 x i8]* @.str52, i32 0, i32 0)) #4, !dbg !593
LOAD [p=*q]:   %48 = load i8** %suff, align 8, !dbg !593
CALL [call func]:   %49 = call i32 @strcmp(i8* %48, i8* getelementptr inbounds ([5 x i8]* @.str52, i32 0, i32 0)) #4, !dbg !593
LOAD [p=*q]:   %52 = load i8** %suff, align 8, !dbg !594
CALL [call func]:   %53 = call i8* @strcpy(i8* %52, i8* getelementptr inbounds ([5 x i8]* @.str47, i32 0, i32 0)) #3, !dbg !594
LOAD [p=*q]:   %55 = load i8** %suff, align 8, !dbg !597
STORE [*p=q]:   store i8 0, i8* %55, !dbg !597
LOAD [p=*q]:   %52 = load i8** %suff, align 8, !dbg !594
CALL [call func]:   %53 = call i8* @strcpy(i8* %52, i8* getelementptr inbounds ([5 x i8]* @.str47, i32 0, i32 0)) #3, !dbg !594
LOAD [p=*q]:   %55 = load i8** %suff, align 8, !dbg !597
STORE [*p=q]:   store i8 0, i8* %55, !dbg !597
STORE [*p=q]:   store i32 0, i32* %1, !dbg !612
LOAD [p=*q]:   %58 = load i8** %suff, align 8, !dbg !600
LOAD [p=*q]:   %61 = load i32* @force, align 4, !dbg !600
STORE [*p=q]:   store i32 0, i32* @save_orig_name, align 4, !dbg !607
CALL [call func]:   %79 = call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !609
LOAD [p=*q]:   %80 = load i64* @z_len, align 8, !dbg !609
LOAD [p=*q]:   %61 = load i32* @force, align 4, !dbg !600
STORE [*p=q]:   store i32 0, i32* @save_orig_name, align 4, !dbg !607
CALL [call func]:   %79 = call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !609
LOAD [p=*q]:   %80 = load i64* @z_len, align 8, !dbg !609
LOAD [p=*q]:   %64 = load i32* @verbose, align 4, !dbg !601
LOAD [p=*q]:   %64 = load i32* @verbose, align 4, !dbg !601
LOAD [p=*q]:   %73 = load %struct._IO_FILE** @stderr, align 8, !dbg !603
LOAD [p=*q]:   %74 = load i8** @program_name, align 8, !dbg !603
LOAD [p=*q]:   %75 = load i8** %suff, align 8, !dbg !603
CALL [call func]:   %76 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([43 x i8]* @.str73, i32 0, i32 0), i8* %74, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %75), !dbg !603
LOAD [p=*q]:   %67 = load i32* @recursive, align 4, !dbg !601
LOAD [p=*q]:   %67 = load i32* @recursive, align 4, !dbg !601
STORE [*p=q]:   store i32 2, i32* %1, !dbg !606
LOAD [p=*q]:   %70 = load i32* @quiet, align 4, !dbg !601
LOAD [p=*q]:   %70 = load i32* @quiet, align 4, !dbg !601
STORE [*p=q]:   store i32 2, i32* %1, !dbg !606
LOAD [p=*q]:   %73 = load %struct._IO_FILE** @stderr, align 8, !dbg !603
LOAD [p=*q]:   %74 = load i8** @program_name, align 8, !dbg !603
LOAD [p=*q]:   %75 = load i8** %suff, align 8, !dbg !603
CALL [call func]:   %76 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([43 x i8]* @.str73, i32 0, i32 0), i8* %74, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %75), !dbg !603
LOAD [p=*q]:   %73 = load %struct._IO_FILE** @stderr, align 8, !dbg !603
LOAD [p=*q]:   %74 = load i8** @program_name, align 8, !dbg !603
LOAD [p=*q]:   %75 = load i8** %suff, align 8, !dbg !603
CALL [call func]:   %76 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([43 x i8]* @.str73, i32 0, i32 0), i8* %74, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %75), !dbg !603
STORE [*p=q]:   store i32 2, i32* %1, !dbg !606
STORE [*p=q]:   store i32 2, i32* %1, !dbg !606
LOAD [p=*q]:   %102 = load i32* %1, !dbg !616
Analyzing return instruction for make_ofname
	  %102 = load i32* %1, !dbg !616
STORE [*p=q]:   store i32 0, i32* @save_orig_name, align 4, !dbg !607
CALL [call func]:   %79 = call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !609
LOAD [p=*q]:   %80 = load i64* @z_len, align 8, !dbg !609
LOAD [p=*q]:   %85 = load i8** @z_suffix, align 8, !dbg !611
CALL [call func]:   %86 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* %85) #3, !dbg !611
LOAD [p=*q]:   %90 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %85 = load i8** @z_suffix, align 8, !dbg !611
CALL [call func]:   %86 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* %85) #3, !dbg !611
STORE [*p=q]:   store i32 0, i32* %1, !dbg !612
STORE [*p=q]:   store i32 0, i32* %1, !dbg !612
LOAD [p=*q]:   %102 = load i32* %1, !dbg !616
Analyzing return instruction for make_ofname
	  %102 = load i32* %1, !dbg !616
LOAD [p=*q]:   %90 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %97 = load i32* @exit_code, align 4, !dbg !613
LOAD [p=*q]:   %93 = load %struct._IO_FILE** @stderr, align 8, !dbg !613
LOAD [p=*q]:   %94 = load i8** @program_name, align 8, !dbg !613
CALL [call func]:   %95 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %93, i8* getelementptr inbounds ([28 x i8]* @.str74, i32 0, i32 0), i8* %94, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !613
LOAD [p=*q]:   %93 = load %struct._IO_FILE** @stderr, align 8, !dbg !613
LOAD [p=*q]:   %94 = load i8** @program_name, align 8, !dbg !613
CALL [call func]:   %95 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %93, i8* getelementptr inbounds ([28 x i8]* @.str74, i32 0, i32 0), i8* %94, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !613
LOAD [p=*q]:   %97 = load i32* @exit_code, align 4, !dbg !613
LOAD [p=*q]:   %97 = load i32* @exit_code, align 4, !dbg !613
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !613
STORE [*p=q]:   store i32 2, i32* %1, !dbg !615
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !613
STORE [*p=q]:   store i32 2, i32* %1, !dbg !615
STORE [*p=q]:   store i32 2, i32* %1, !dbg !615
LOAD [p=*q]:   %102 = load i32* %1, !dbg !616
Analyzing return instruction for make_ofname
	  %102 = load i32* %1, !dbg !616
LOAD [p=*q]:   %102 = load i32* %1, !dbg !616
Analyzing return instruction for make_ofname
	  %102 = load i32* %1, !dbg !616
[Processing][Function][treat_dir]
STORE [*p=q]:   store i32 %fd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i8* %dir, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.__dirstream** %dirp}, metadata !578), !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[1024 x i8]* %nbuf}, metadata !585), !dbg !586
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %entries}, metadata !587), !dbg !588
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %entry}, metadata !589), !dbg !590
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %entrylen}, metadata !591), !dbg !592
LOAD [p=*q]:   %3 = load i32* %1, align 4, !dbg !593
CALL [call func]:   %4 = call %struct.__dirstream* @fdopendir(i32 %3), !dbg !593
STORE [*p=q]:   store %struct.__dirstream* %4, %struct.__dirstream** %dirp, align 8, !dbg !593
LOAD [p=*q]:   %5 = load %struct.__dirstream** %dirp, align 8, !dbg !594
LOAD [p=*q]:   %8 = load i8** %2, align 8, !dbg !595
CALL [call func]:   call void @progerror(i8* %8), !dbg !595
LOAD [p=*q]:   %9 = load i32* %1, align 4, !dbg !597
CALL [call func]:   %10 = call i32 @close(i32 %9), !dbg !597
LOAD [p=*q]:   %12 = load %struct.__dirstream** %dirp, align 8, !dbg !599
CALL [call func]:   %13 = call i8* @streamsavedir(%struct.__dirstream* %12), !dbg !599
STORE [*p=q]:   store i8* %13, i8** %entries, align 8, !dbg !599
LOAD [p=*q]:   %14 = load i8** %entries, align 8, !dbg !600
LOAD [p=*q]:   %8 = load i8** %2, align 8, !dbg !595
CALL [call func]:   call void @progerror(i8* %8), !dbg !595
LOAD [p=*q]:   %9 = load i32* %1, align 4, !dbg !597
CALL [call func]:   %10 = call i32 @close(i32 %9), !dbg !597
Analyzing return instruction for treat_dir
No return value for: treat_dir
LOAD [p=*q]:   %12 = load %struct.__dirstream** %dirp, align 8, !dbg !599
CALL [call func]:   %13 = call i8* @streamsavedir(%struct.__dirstream* %12), !dbg !599
STORE [*p=q]:   store i8* %13, i8** %entries, align 8, !dbg !599
LOAD [p=*q]:   %14 = load i8** %entries, align 8, !dbg !600
LOAD [p=*q]:   %19 = load %struct.__dirstream** %dirp, align 8, !dbg !602
CALL [call func]:   %20 = call i32 @closedir(%struct.__dirstream* %19), !dbg !602
LOAD [p=*q]:   %17 = load i8** %2, align 8, !dbg !601
CALL [call func]:   call void @progerror(i8* %17), !dbg !601
LOAD [p=*q]:   %17 = load i8** %2, align 8, !dbg !601
CALL [call func]:   call void @progerror(i8* %17), !dbg !601
LOAD [p=*q]:   %19 = load %struct.__dirstream** %dirp, align 8, !dbg !602
CALL [call func]:   %20 = call i32 @closedir(%struct.__dirstream* %19), !dbg !602
LOAD [p=*q]:   %19 = load %struct.__dirstream** %dirp, align 8, !dbg !602
CALL [call func]:   %20 = call i32 @closedir(%struct.__dirstream* %19), !dbg !602
LOAD [p=*q]:   %23 = load i8** %2, align 8, !dbg !603
CALL [call func]:   call void @progerror(i8* %23), !dbg !603
LOAD [p=*q]:   %25 = load i8** %entries, align 8, !dbg !604
LOAD [p=*q]:   %23 = load i8** %2, align 8, !dbg !603
CALL [call func]:   call void @progerror(i8* %23), !dbg !603
LOAD [p=*q]:   %25 = load i8** %entries, align 8, !dbg !604
LOAD [p=*q]:   %25 = load i8** %entries, align 8, !dbg !604
LOAD [p=*q]:   %29 = load i8** %entries, align 8, !dbg !606
STORE [*p=q]:   store i8* %29, i8** %entry, align 8, !dbg !606
Analyzing return instruction for treat_dir
No return value for: treat_dir
LOAD [p=*q]:   %29 = load i8** %entries, align 8, !dbg !606
STORE [*p=q]:   store i8* %29, i8** %entry, align 8, !dbg !606
LOAD [p=*q]:   %31 = load i8** %entry, align 8, !dbg !606
LOAD [p=*q]:   %32 = load i8* %31, !dbg !606
LOAD [p=*q]:   %31 = load i8** %entry, align 8, !dbg !606
LOAD [p=*q]:   %32 = load i8* %31, !dbg !606
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %len}, metadata !608), !dbg !610
LOAD [p=*q]:   %35 = load i8** %2, align 8, !dbg !611
CALL [call func]:   %36 = call i64 @strlen(i8* %35) #4, !dbg !611
STORE [*p=q]:   store i64 %36, i64* %len, align 8, !dbg !611
LOAD [p=*q]:   %37 = load i8** %entry, align 8, !dbg !612
CALL [call func]:   %38 = call i64 @strlen(i8* %37) #4, !dbg !612
STORE [*p=q]:   store i64 %38, i64* %entrylen, align 8, !dbg !612
LOAD [p=*q]:   %39 = load i8** %entry, align 8, !dbg !613
CALL [call func]:   %40 = call i32 @strcmp(i8* %39, i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i32 0)) #4, !dbg !613
LOAD [p=*q]:   %82 = load i8** %entries, align 8, !dbg !631
CALL [call func]:   call void @free(i8* %82) #3, !dbg !631
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %len}, metadata !608), !dbg !610
LOAD [p=*q]:   %35 = load i8** %2, align 8, !dbg !611
CALL [call func]:   %36 = call i64 @strlen(i8* %35) #4, !dbg !611
STORE [*p=q]:   store i64 %36, i64* %len, align 8, !dbg !611
LOAD [p=*q]:   %37 = load i8** %entry, align 8, !dbg !612
CALL [call func]:   %38 = call i64 @strlen(i8* %37) #4, !dbg !612
STORE [*p=q]:   store i64 %38, i64* %entrylen, align 8, !dbg !612
LOAD [p=*q]:   %39 = load i8** %entry, align 8, !dbg !613
CALL [call func]:   %40 = call i32 @strcmp(i8* %39, i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i32 0)) #4, !dbg !613
LOAD [p=*q]:   %43 = load i8** %entry, align 8, !dbg !614
CALL [call func]:   %44 = call i32 @strcmp(i8* %43, i8* getelementptr inbounds ([3 x i8]* @.str75, i32 0, i32 0)) #4, !dbg !614
LOAD [p=*q]:   %43 = load i8** %entry, align 8, !dbg !614
CALL [call func]:   %44 = call i32 @strcmp(i8* %43, i8* getelementptr inbounds ([3 x i8]* @.str75, i32 0, i32 0)) #4, !dbg !614
LOAD [p=*q]:   %48 = load i64* %len, align 8, !dbg !616
LOAD [p=*q]:   %49 = load i64* %entrylen, align 8, !dbg !616
LOAD [p=*q]:   %77 = load i64* %entrylen, align 8, !dbg !630
LOAD [p=*q]:   %79 = load i8** %entry, align 8, !dbg !630
STORE [*p=q]:   store i8* %80, i8** %entry, align 8, !dbg !630
LOAD [p=*q]:   %48 = load i64* %len, align 8, !dbg !616
LOAD [p=*q]:   %49 = load i64* %entrylen, align 8, !dbg !616
LOAD [p=*q]:   %54 = load i8** %2, align 8, !dbg !617
CALL [call func]:   %55 = call i8* @strcpy(i8* %53, i8* %54) #3, !dbg !617
LOAD [p=*q]:   %56 = load i64* %len, align 8, !dbg !619
LOAD [p=*q]:   %70 = load %struct._IO_FILE** @stderr, align 8, !dbg !626
LOAD [p=*q]:   %71 = load i8** @program_name, align 8, !dbg !626
LOAD [p=*q]:   %72 = load i8** %2, align 8, !dbg !626
LOAD [p=*q]:   %73 = load i8** %entry, align 8, !dbg !626
CALL [call func]:   %74 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([30 x i8]* @.str76, i32 0, i32 0), i8* %71, i8* %72, i8* %73), !dbg !626
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !628
LOAD [p=*q]:   %54 = load i8** %2, align 8, !dbg !617
CALL [call func]:   %55 = call i8* @strcpy(i8* %53, i8* %54) #3, !dbg !617
LOAD [p=*q]:   %56 = load i64* %len, align 8, !dbg !619
LOAD [p=*q]:   %59 = load i64* %len, align 8, !dbg !620
STORE [*p=q]:   store i64 %60, i64* %len, align 8, !dbg !620
STORE [*p=q]:   store i8 47, i8* %61, align 1, !dbg !620
LOAD [p=*q]:   %64 = load i64* %len, align 8, !dbg !623
LOAD [p=*q]:   %66 = load i8** %entry, align 8, !dbg !623
CALL [call func]:   %67 = call i8* @strcpy(i8* %65, i8* %66) #3, !dbg !623
CALL [call func]:   call void (...)* bitcast (void (i8*)* @treat_file to void (...)*)(i8* %68), !dbg !624
LOAD [p=*q]:   %59 = load i64* %len, align 8, !dbg !620
STORE [*p=q]:   store i64 %60, i64* %len, align 8, !dbg !620
STORE [*p=q]:   store i8 47, i8* %61, align 1, !dbg !620
LOAD [p=*q]:   %64 = load i64* %len, align 8, !dbg !623
LOAD [p=*q]:   %66 = load i8** %entry, align 8, !dbg !623
CALL [call func]:   %67 = call i8* @strcpy(i8* %65, i8* %66) #3, !dbg !623
CALL [call func]:   call void (...)* bitcast (void (i8*)* @treat_file to void (...)*)(i8* %68), !dbg !624
LOAD [p=*q]:   %64 = load i64* %len, align 8, !dbg !623
LOAD [p=*q]:   %66 = load i8** %entry, align 8, !dbg !623
CALL [call func]:   %67 = call i8* @strcpy(i8* %65, i8* %66) #3, !dbg !623
CALL [call func]:   call void (...)* bitcast (void (i8*)* @treat_file to void (...)*)(i8* %68), !dbg !624
LOAD [p=*q]:   %70 = load %struct._IO_FILE** @stderr, align 8, !dbg !626
LOAD [p=*q]:   %71 = load i8** @program_name, align 8, !dbg !626
LOAD [p=*q]:   %72 = load i8** %2, align 8, !dbg !626
LOAD [p=*q]:   %73 = load i8** %entry, align 8, !dbg !626
CALL [call func]:   %74 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([30 x i8]* @.str76, i32 0, i32 0), i8* %71, i8* %72, i8* %73), !dbg !626
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !628
LOAD [p=*q]:   %77 = load i64* %entrylen, align 8, !dbg !630
LOAD [p=*q]:   %79 = load i8** %entry, align 8, !dbg !630
STORE [*p=q]:   store i8* %80, i8** %entry, align 8, !dbg !630
LOAD [p=*q]:   %77 = load i64* %entrylen, align 8, !dbg !630
LOAD [p=*q]:   %79 = load i8** %entry, align 8, !dbg !630
STORE [*p=q]:   store i8* %80, i8** %entry, align 8, !dbg !630
LOAD [p=*q]:   %31 = load i8** %entry, align 8, !dbg !606
LOAD [p=*q]:   %32 = load i8* %31, !dbg !606
LOAD [p=*q]:   %82 = load i8** %entries, align 8, !dbg !631
CALL [call func]:   call void @free(i8* %82) #3, !dbg !631
Analyzing return instruction for treat_dir
No return value for: treat_dir
Analyzing return instruction for treat_dir
No return value for: treat_dir
[Processing][Function][open_input_file]
STORE [*p=q]:   store i8* %iname, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !574), !dbg !575
STORE [*p=q]:   store %struct.stat* %sbuf, %struct.stat** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.stat** %3}, metadata !576), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %ilen}, metadata !579), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %z_suffix_errno}, metadata !582), !dbg !583
STORE [*p=q]:   store i32 0, i32* %z_suffix_errno, align 4, !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %suf}, metadata !585), !dbg !587
STORE [*p=q]:   store i8** getelementptr inbounds ([6 x i8*]* @open_input_file.suffixes, i32 0, i32 0), i8*** %suf, align 8, !dbg !588
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %s}, metadata !589), !dbg !590
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %fd}, metadata !591), !dbg !592
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %open_flags}, metadata !593), !dbg !594
LOAD [p=*q]:   %4 = load i32* @ascii, align 4, !dbg !595
LOAD [p=*q]:   %7 = load i32* @decompress, align 4, !dbg !595
STORE [*p=q]:   store i32 %13, i32* %open_flags, align 4
LOAD [p=*q]:   %14 = load i8** @z_suffix, align 8, !dbg !596
LOAD [p=*q]:   %15 = load i8*** %suf, align 8, !dbg !596
STORE [*p=q]:   store i8* %14, i8** %15, !dbg !596
LOAD [p=*q]:   %16 = load i8** %2, align 8, !dbg !597
CALL [call func]:   %17 = call i64 @strlen(i8* %16) #4, !dbg !597
LOAD [p=*q]:   %7 = load i32* @decompress, align 4, !dbg !595
STORE [*p=q]:   store i32 %13, i32* %open_flags, align 4
LOAD [p=*q]:   %14 = load i8** @z_suffix, align 8, !dbg !596
LOAD [p=*q]:   %15 = load i8*** %suf, align 8, !dbg !596
STORE [*p=q]:   store i8* %14, i8** %15, !dbg !596
LOAD [p=*q]:   %16 = load i8** %2, align 8, !dbg !597
CALL [call func]:   %17 = call i64 @strlen(i8* %16) #4, !dbg !597
STORE [*p=q]:   store i32 %13, i32* %open_flags, align 4
LOAD [p=*q]:   %14 = load i8** @z_suffix, align 8, !dbg !596
LOAD [p=*q]:   %15 = load i8*** %suf, align 8, !dbg !596
STORE [*p=q]:   store i8* %14, i8** %15, !dbg !596
LOAD [p=*q]:   %16 = load i8** %2, align 8, !dbg !597
CALL [call func]:   %17 = call i64 @strlen(i8* %16) #4, !dbg !597
LOAD [p=*q]:   %21 = load i8** %2, align 8, !dbg !599
CALL [call func]:   %22 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %21) #3, !dbg !599
LOAD [p=*q]:   %23 = load i32* %open_flags, align 4, !dbg !600
LOAD [p=*q]:   %24 = load %struct.stat** %3, align 8, !dbg !600
CALL [call func]:   %25 = call i32 @open_and_stat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %23, i32 384, %struct.stat* %24), !dbg !600
STORE [*p=q]:   store i32 %25, i32* %fd, align 4, !dbg !600
LOAD [p=*q]:   %26 = load i32* %fd, align 4, !dbg !601
LOAD [p=*q]:   %102 = load %struct._IO_FILE** @stderr, align 8, !dbg !641
LOAD [p=*q]:   %103 = load i8** @program_name, align 8, !dbg !641
LOAD [p=*q]:   %104 = load i8** %2, align 8, !dbg !641
CALL [call func]:   %105 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %102, i8* getelementptr inbounds ([28 x i8]* @.str74, i32 0, i32 0), i8* %103, i8* %104), !dbg !641
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !642
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !643
LOAD [p=*q]:   %21 = load i8** %2, align 8, !dbg !599
CALL [call func]:   %22 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %21) #3, !dbg !599
LOAD [p=*q]:   %23 = load i32* %open_flags, align 4, !dbg !600
LOAD [p=*q]:   %24 = load %struct.stat** %3, align 8, !dbg !600
CALL [call func]:   %25 = call i32 @open_and_stat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %23, i32 384, %struct.stat* %24), !dbg !600
STORE [*p=q]:   store i32 %25, i32* %fd, align 4, !dbg !600
LOAD [p=*q]:   %26 = load i32* %fd, align 4, !dbg !601
LOAD [p=*q]:   %29 = load i32* %fd, align 4, !dbg !602
STORE [*p=q]:   store i32 %29, i32* %1, !dbg !602
LOAD [p=*q]:   %31 = load i32* @decompress, align 4, !dbg !603
LOAD [p=*q]:   %29 = load i32* %fd, align 4, !dbg !602
STORE [*p=q]:   store i32 %29, i32* %1, !dbg !602
LOAD [p=*q]:   %107 = load i32* %1, !dbg !644
Analyzing return instruction for open_input_file
	  %107 = load i32* %1, !dbg !644
LOAD [p=*q]:   %31 = load i32* @decompress, align 4, !dbg !603
CALL [call func]:   %34 = call i32* @__errno_location() #1, !dbg !604
LOAD [p=*q]:   %35 = load i32* %34, !dbg !604
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !605
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !607
CALL [call func]:   %34 = call i32* @__errno_location() #1, !dbg !604
LOAD [p=*q]:   %35 = load i32* %34, !dbg !604
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !605
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !607
CALL [call func]:   %39 = call i8* (...)* bitcast (i8* (i8*)* @get_suffix to i8* (...)*)(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !608
STORE [*p=q]:   store i8* %39, i8** %s, align 8, !dbg !608
LOAD [p=*q]:   %40 = load i8** %s, align 8, !dbg !609
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !605
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !607
LOAD [p=*q]:   %107 = load i32* %1, !dbg !644
Analyzing return instruction for open_input_file
	  %107 = load i32* %1, !dbg !644
CALL [call func]:   %39 = call i8* (...)* bitcast (i8* (i8*)* @get_suffix to i8* (...)*)(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !608
STORE [*p=q]:   store i8* %39, i8** %s, align 8, !dbg !608
LOAD [p=*q]:   %40 = load i8** %s, align 8, !dbg !609
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !610
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !612
CALL [call func]:   %44 = call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)) #4, !dbg !613
STORE [*p=q]:   store i32 %45, i32* %ilen, align 4, !dbg !613
LOAD [p=*q]:   %46 = load i8** @z_suffix, align 8, !dbg !614
CALL [call func]:   %47 = call i32 @strcmp(i8* %46, i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0)) #4, !dbg !614
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !610
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !612
LOAD [p=*q]:   %107 = load i32* %1, !dbg !644
Analyzing return instruction for open_input_file
	  %107 = load i32* %1, !dbg !644
CALL [call func]:   %44 = call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)) #4, !dbg !613
STORE [*p=q]:   store i32 %45, i32* %ilen, align 4, !dbg !613
LOAD [p=*q]:   %46 = load i8** @z_suffix, align 8, !dbg !614
CALL [call func]:   %47 = call i32 @strcmp(i8* %46, i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0)) #4, !dbg !614
LOAD [p=*q]:   %50 = load i8*** %suf, align 8, !dbg !615
STORE [*p=q]:   store i8** %51, i8*** %suf, align 8, !dbg !615
LOAD [p=*q]:   %50 = load i8*** %suf, align 8, !dbg !615
STORE [*p=q]:   store i8** %51, i8*** %suf, align 8, !dbg !615
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %s0}, metadata !617), !dbg !619
LOAD [p=*q]:   %54 = load i8*** %suf, align 8, !dbg !620
LOAD [p=*q]:   %55 = load i8** %54, !dbg !620
STORE [*p=q]:   store i8* %55, i8** %s, align 8, !dbg !620
STORE [*p=q]:   store i8* %55, i8** %s0, align 8, !dbg !620
LOAD [p=*q]:   %56 = load i8** %2, align 8, !dbg !621
CALL [call func]:   %57 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %56) #3, !dbg !621
LOAD [p=*q]:   %58 = load i32* %ilen, align 4, !dbg !622
LOAD [p=*q]:   %60 = load i8** %s, align 8, !dbg !623
CALL [call func]:   %61 = call i64 @strlen(i8* %60) #4, !dbg !623
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %s0}, metadata !617), !dbg !619
LOAD [p=*q]:   %54 = load i8*** %suf, align 8, !dbg !620
LOAD [p=*q]:   %55 = load i8** %54, !dbg !620
STORE [*p=q]:   store i8* %55, i8** %s, align 8, !dbg !620
STORE [*p=q]:   store i8* %55, i8** %s0, align 8, !dbg !620
LOAD [p=*q]:   %56 = load i8** %2, align 8, !dbg !621
CALL [call func]:   %57 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %56) #3, !dbg !621
LOAD [p=*q]:   %58 = load i32* %ilen, align 4, !dbg !622
LOAD [p=*q]:   %60 = load i8** %s, align 8, !dbg !623
CALL [call func]:   %61 = call i64 @strlen(i8* %60) #4, !dbg !623
LOAD [p=*q]:   %66 = load i8** %s, align 8, !dbg !625
CALL [call func]:   %67 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %66) #3, !dbg !625
LOAD [p=*q]:   %68 = load i32* %open_flags, align 4, !dbg !626
LOAD [p=*q]:   %69 = load %struct.stat** %3, align 8, !dbg !626
CALL [call func]:   %70 = call i32 @open_and_stat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %68, i32 384, %struct.stat* %69), !dbg !626
STORE [*p=q]:   store i32 %70, i32* %fd, align 4, !dbg !626
LOAD [p=*q]:   %71 = load i32* %fd, align 4, !dbg !627
LOAD [p=*q]:   %102 = load %struct._IO_FILE** @stderr, align 8, !dbg !641
LOAD [p=*q]:   %103 = load i8** @program_name, align 8, !dbg !641
LOAD [p=*q]:   %104 = load i8** %2, align 8, !dbg !641
CALL [call func]:   %105 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %102, i8* getelementptr inbounds ([28 x i8]* @.str74, i32 0, i32 0), i8* %103, i8* %104), !dbg !641
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !642
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !643
LOAD [p=*q]:   %66 = load i8** %s, align 8, !dbg !625
CALL [call func]:   %67 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %66) #3, !dbg !625
LOAD [p=*q]:   %68 = load i32* %open_flags, align 4, !dbg !626
LOAD [p=*q]:   %69 = load %struct.stat** %3, align 8, !dbg !626
CALL [call func]:   %70 = call i32 @open_and_stat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %68, i32 384, %struct.stat* %69), !dbg !626
STORE [*p=q]:   store i32 %70, i32* %fd, align 4, !dbg !626
LOAD [p=*q]:   %71 = load i32* %fd, align 4, !dbg !627
LOAD [p=*q]:   %74 = load i32* %fd, align 4, !dbg !628
STORE [*p=q]:   store i32 %74, i32* %1, !dbg !628
CALL [call func]:   %76 = call i32* @__errno_location() #1, !dbg !629
LOAD [p=*q]:   %77 = load i32* %76, !dbg !629
LOAD [p=*q]:   %74 = load i32* %fd, align 4, !dbg !628
STORE [*p=q]:   store i32 %74, i32* %1, !dbg !628
LOAD [p=*q]:   %107 = load i32* %1, !dbg !644
Analyzing return instruction for open_input_file
	  %107 = load i32* %1, !dbg !644
CALL [call func]:   %76 = call i32* @__errno_location() #1, !dbg !629
LOAD [p=*q]:   %77 = load i32* %76, !dbg !629
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !632
LOAD [p=*q]:   %81 = load i8** %s0, align 8, !dbg !633
LOAD [p=*q]:   %82 = load i8** @z_suffix, align 8, !dbg !633
CALL [call func]:   %83 = call i32 @strcmp(i8* %81, i8* %82) #4, !dbg !633
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !632
LOAD [p=*q]:   %107 = load i32* %1, !dbg !644
Analyzing return instruction for open_input_file
	  %107 = load i32* %1, !dbg !644
LOAD [p=*q]:   %81 = load i8** %s0, align 8, !dbg !633
LOAD [p=*q]:   %82 = load i8** @z_suffix, align 8, !dbg !633
CALL [call func]:   %83 = call i32 @strcmp(i8* %81, i8* %82) #4, !dbg !633
CALL [call func]:   %86 = call i32* @__errno_location() #1, !dbg !634
LOAD [p=*q]:   %87 = load i32* %86, !dbg !634
STORE [*p=q]:   store i32 %87, i32* %z_suffix_errno, align 4, !dbg !634
CALL [call func]:   %86 = call i32* @__errno_location() #1, !dbg !634
LOAD [p=*q]:   %87 = load i32* %86, !dbg !634
STORE [*p=q]:   store i32 %87, i32* %z_suffix_errno, align 4, !dbg !634
LOAD [p=*q]:   %90 = load i8*** %suf, align 8, !dbg !635
STORE [*p=q]:   store i8** %91, i8*** %suf, align 8, !dbg !635
LOAD [p=*q]:   %92 = load i8** %91, !dbg !635
LOAD [p=*q]:   %90 = load i8*** %suf, align 8, !dbg !635
STORE [*p=q]:   store i8** %91, i8*** %suf, align 8, !dbg !635
LOAD [p=*q]:   %92 = load i8** %91, !dbg !635
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %s0}, metadata !617), !dbg !619
LOAD [p=*q]:   %54 = load i8*** %suf, align 8, !dbg !620
LOAD [p=*q]:   %55 = load i8** %54, !dbg !620
STORE [*p=q]:   store i8* %55, i8** %s, align 8, !dbg !620
STORE [*p=q]:   store i8* %55, i8** %s0, align 8, !dbg !620
LOAD [p=*q]:   %56 = load i8** %2, align 8, !dbg !621
CALL [call func]:   %57 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %56) #3, !dbg !621
LOAD [p=*q]:   %58 = load i32* %ilen, align 4, !dbg !622
LOAD [p=*q]:   %60 = load i8** %s, align 8, !dbg !623
CALL [call func]:   %61 = call i64 @strlen(i8* %60) #4, !dbg !623
LOAD [p=*q]:   %95 = load i8** %2, align 8, !dbg !636
CALL [call func]:   %96 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %95) #3, !dbg !636
LOAD [p=*q]:   %97 = load i8** @z_suffix, align 8, !dbg !637
CALL [call func]:   %98 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %97) #3, !dbg !637
LOAD [p=*q]:   %99 = load i32* %z_suffix_errno, align 4, !dbg !638
CALL [call func]:   %100 = call i32* @__errno_location() #1, !dbg !638
STORE [*p=q]:   store i32 %99, i32* %100, !dbg !638
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !639
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !640
LOAD [p=*q]:   %95 = load i8** %2, align 8, !dbg !636
CALL [call func]:   %96 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %95) #3, !dbg !636
LOAD [p=*q]:   %97 = load i8** @z_suffix, align 8, !dbg !637
CALL [call func]:   %98 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %97) #3, !dbg !637
LOAD [p=*q]:   %99 = load i32* %z_suffix_errno, align 4, !dbg !638
CALL [call func]:   %100 = call i32* @__errno_location() #1, !dbg !638
STORE [*p=q]:   store i32 %99, i32* %100, !dbg !638
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !639
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !640
LOAD [p=*q]:   %107 = load i32* %1, !dbg !644
Analyzing return instruction for open_input_file
	  %107 = load i32* %1, !dbg !644
LOAD [p=*q]:   %102 = load %struct._IO_FILE** @stderr, align 8, !dbg !641
LOAD [p=*q]:   %103 = load i8** @program_name, align 8, !dbg !641
LOAD [p=*q]:   %104 = load i8** %2, align 8, !dbg !641
CALL [call func]:   %105 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %102, i8* getelementptr inbounds ([28 x i8]* @.str74, i32 0, i32 0), i8* %103, i8* %104), !dbg !641
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !642
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !643
LOAD [p=*q]:   %107 = load i32* %1, !dbg !644
Analyzing return instruction for open_input_file
	  %107 = load i32* %1, !dbg !644
LOAD [p=*q]:   %107 = load i32* %1, !dbg !644
Analyzing return instruction for open_input_file
	  %107 = load i32* %1, !dbg !644
[Processing][Function][abort_gzip_signal]
STORE [*p=q]:   store i32 %sig, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
CALL [call func]:   call void @remove_output_file(), !dbg !576
LOAD [p=*q]:   %2 = load i32* %1, align 4, !dbg !578
LOAD [p=*q]:   %3 = load volatile i32* @exiting_signal, align 4, !dbg !578
CALL [call func]:   call void @_exit(i32 2) #7, !dbg !579
LOAD [p=*q]:   %7 = load i32* %1, align 4, !dbg !580
CALL [call func]:   %8 = call void (i32)* (i32, void (i32)*)* @signal(i32 %7, void (i32)* null) #3, !dbg !580
LOAD [p=*q]:   %9 = load i32* %1, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @raise(i32 %9) #3, !dbg !581
Analyzing return instruction for abort_gzip_signal
No return value for: abort_gzip_signal
CALL [call func]:   call void @_exit(i32 2) #7, !dbg !579
LOAD [p=*q]:   %7 = load i32* %1, align 4, !dbg !580
CALL [call func]:   %8 = call void (i32)* (i32, void (i32)*)* @signal(i32 %7, void (i32)* null) #3, !dbg !580
LOAD [p=*q]:   %9 = load i32* %1, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @raise(i32 %9) #3, !dbg !581
Analyzing return instruction for abort_gzip_signal
No return value for: abort_gzip_signal
[Processing][Function][remove_output_file]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %fd}, metadata !574), !dbg !576
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.__sigset_t* %oldset}, metadata !577), !dbg !578
CALL [call func]:   %1 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !579
LOAD [p=*q]:   %2 = load volatile i32* @remove_ofname_fd, align 4, !dbg !580
STORE [*p=q]:   store i32 %2, i32* %fd, align 4, !dbg !580
LOAD [p=*q]:   %3 = load i32* %fd, align 4, !dbg !581
STORE [*p=q]:   store volatile i32 -1, i32* @remove_ofname_fd, align 4, !dbg !582
LOAD [p=*q]:   %6 = load i32* %fd, align 4, !dbg !584
CALL [call func]:   %7 = call i32 @close(i32 %6), !dbg !584
CALL [call func]:   %8 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !585
CALL [call func]:   %10 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !587
Analyzing return instruction for remove_output_file
No return value for: remove_output_file
STORE [*p=q]:   store volatile i32 -1, i32* @remove_ofname_fd, align 4, !dbg !582
LOAD [p=*q]:   %6 = load i32* %fd, align 4, !dbg !584
CALL [call func]:   %7 = call i32 @close(i32 %6), !dbg !584
CALL [call func]:   %8 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !585
CALL [call func]:   %10 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !587
Analyzing return instruction for remove_output_file
No return value for: remove_output_file
CALL [call func]:   %10 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !587
Analyzing return instruction for remove_output_file
No return value for: remove_output_file
[Processing][Function][abort_gzip]
CALL [call func]:   call void @remove_output_file(), !dbg !574
CALL [call func]:   call void (...)* bitcast (void (i32)* @do_exit to void (...)*)(i32 1) #7, !dbg !576
Analyzing return instruction for abort_gzip
No return value for: abort_gzip
[Processing][Function][do_list]
STORE [*p=q]:   store i32 %ifd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %method, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %crc}, metadata !578), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %positive_off_t_width}, metadata !582), !dbg !583
STORE [*p=q]:   store i32 1, i32* %positive_off_t_width, align 4, !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %o}, metadata !585), !dbg !586
STORE [*p=q]:   store i64 9223372036854775807, i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %4 = load i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %4 = load i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %7 = load i32* %positive_off_t_width, align 4, !dbg !589
STORE [*p=q]:   store i32 %8, i32* %positive_off_t_width, align 4, !dbg !589
LOAD [p=*q]:   %13 = load i32* @do_list.first_time, align 4, !dbg !593
LOAD [p=*q]:   %7 = load i32* %positive_off_t_width, align 4, !dbg !589
STORE [*p=q]:   store i32 %8, i32* %positive_off_t_width, align 4, !dbg !589
LOAD [p=*q]:   %10 = load i64* %o, align 8, !dbg !592
STORE [*p=q]:   store i64 %11, i64* %o, align 8, !dbg !592
LOAD [p=*q]:   %10 = load i64* %o, align 8, !dbg !592
STORE [*p=q]:   store i64 %11, i64* %o, align 8, !dbg !592
LOAD [p=*q]:   %4 = load i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %13 = load i32* @do_list.first_time, align 4, !dbg !593
LOAD [p=*q]:   %16 = load i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %34 = load i32* %2, align 4, !dbg !605
LOAD [p=*q]:   %16 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 0, i32* @do_list.first_time, align 4, !dbg !594
LOAD [p=*q]:   %19 = load i32* @verbose, align 4, !dbg !596
LOAD [p=*q]:   %34 = load i32* %2, align 4, !dbg !605
STORE [*p=q]:   store i32 0, i32* @do_list.first_time, align 4, !dbg !594
LOAD [p=*q]:   %19 = load i32* @verbose, align 4, !dbg !596
CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
LOAD [p=*q]:   %24 = load i32* @quiet, align 4, !dbg !600
CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
LOAD [p=*q]:   %24 = load i32* @quiet, align 4, !dbg !600
LOAD [p=*q]:   %24 = load i32* @quiet, align 4, !dbg !600
LOAD [p=*q]:   %27 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %28 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %29 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %30 = load i32* %positive_off_t_width, align 4, !dbg !601
CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
LOAD [p=*q]:   %27 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %28 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %29 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %30 = load i32* %positive_off_t_width, align 4, !dbg !601
CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
STORE [*p=q]:   store i64 -1, i64* %crc, align 8, !dbg !623
STORE [*p=q]:   store i64 -1, i64* @bytes_out, align 8, !dbg !624
LOAD [p=*q]:   %74 = load i64* @ifile_size, align 8, !dbg !625
STORE [*p=q]:   store i64 %74, i64* @bytes_in, align 8, !dbg !625
LOAD [p=*q]:   %75 = load i32* %2, align 4, !dbg !626
LOAD [p=*q]:   %34 = load i32* %2, align 4, !dbg !605
LOAD [p=*q]:   %37 = load i64* @total_in, align 8, !dbg !606
LOAD [p=*q]:   %37 = load i64* @total_in, align 8, !dbg !606
LOAD [p=*q]:   %40 = load i64* @total_out, align 8, !dbg !606
LOAD [p=*q]:   %40 = load i64* @total_out, align 8, !dbg !606
LOAD [p=*q]:   %44 = load i32* @verbose, align 4, !dbg !609
Analyzing return instruction for do_list
No return value for: do_list
LOAD [p=*q]:   %44 = load i32* @verbose, align 4, !dbg !609
CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
LOAD [p=*q]:   %49 = load i32* @verbose, align 4, !dbg !613
CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
LOAD [p=*q]:   %49 = load i32* @verbose, align 4, !dbg !613
LOAD [p=*q]:   %49 = load i32* @verbose, align 4, !dbg !613
LOAD [p=*q]:   %55 = load %struct._IO_FILE** @stdout, align 8, !dbg !614
LOAD [p=*q]:   %56 = load i64* @total_in, align 8, !dbg !614
LOAD [p=*q]:   %57 = load i32* %positive_off_t_width, align 4, !dbg !614
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
LOAD [p=*q]:   %59 = load %struct._IO_FILE** @stdout, align 8, !dbg !617
LOAD [p=*q]:   %60 = load i64* @total_out, align 8, !dbg !617
LOAD [p=*q]:   %61 = load i32* %positive_off_t_width, align 4, !dbg !617
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
LOAD [p=*q]:   %52 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %52 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %64 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %65 = load i64* @total_in, align 8, !dbg !620
LOAD [p=*q]:   %66 = load i64* @header_bytes, align 8, !dbg !620
LOAD [p=*q]:   %69 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %70 = load %struct._IO_FILE** @stdout, align 8, !dbg !620
CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
LOAD [p=*q]:   %55 = load %struct._IO_FILE** @stdout, align 8, !dbg !614
LOAD [p=*q]:   %56 = load i64* @total_in, align 8, !dbg !614
LOAD [p=*q]:   %57 = load i32* %positive_off_t_width, align 4, !dbg !614
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
LOAD [p=*q]:   %59 = load %struct._IO_FILE** @stdout, align 8, !dbg !617
LOAD [p=*q]:   %60 = load i64* @total_out, align 8, !dbg !617
LOAD [p=*q]:   %61 = load i32* %positive_off_t_width, align 4, !dbg !617
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
LOAD [p=*q]:   %55 = load %struct._IO_FILE** @stdout, align 8, !dbg !614
LOAD [p=*q]:   %56 = load i64* @total_in, align 8, !dbg !614
LOAD [p=*q]:   %57 = load i32* %positive_off_t_width, align 4, !dbg !614
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
LOAD [p=*q]:   %59 = load %struct._IO_FILE** @stdout, align 8, !dbg !617
LOAD [p=*q]:   %60 = load i64* @total_out, align 8, !dbg !617
LOAD [p=*q]:   %61 = load i32* %positive_off_t_width, align 4, !dbg !617
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
LOAD [p=*q]:   %64 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %65 = load i64* @total_in, align 8, !dbg !620
LOAD [p=*q]:   %66 = load i64* @header_bytes, align 8, !dbg !620
LOAD [p=*q]:   %69 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %70 = load %struct._IO_FILE** @stdout, align 8, !dbg !620
CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
LOAD [p=*q]:   %64 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %65 = load i64* @total_in, align 8, !dbg !620
LOAD [p=*q]:   %66 = load i64* @header_bytes, align 8, !dbg !620
LOAD [p=*q]:   %69 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %70 = load %struct._IO_FILE** @stdout, align 8, !dbg !620
CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
Analyzing return instruction for do_list
No return value for: do_list
STORE [*p=q]:   store i64 -1, i64* %crc, align 8, !dbg !623
STORE [*p=q]:   store i64 -1, i64* @bytes_out, align 8, !dbg !624
LOAD [p=*q]:   %74 = load i64* @ifile_size, align 8, !dbg !625
STORE [*p=q]:   store i64 %74, i64* @bytes_in, align 8, !dbg !625
LOAD [p=*q]:   %75 = load i32* %2, align 4, !dbg !626
STORE [*p=q]:   store i64 -1, i64* %crc, align 8, !dbg !623
STORE [*p=q]:   store i64 -1, i64* @bytes_out, align 8, !dbg !624
LOAD [p=*q]:   %74 = load i64* @ifile_size, align 8, !dbg !625
STORE [*p=q]:   store i64 %74, i64* @bytes_in, align 8, !dbg !625
LOAD [p=*q]:   %75 = load i32* %2, align 4, !dbg !626
LOAD [p=*q]:   %78 = load i32* @last_member, align 4, !dbg !626
LOAD [p=*q]:   %158 = load i32* @verbose, align 4, !dbg !644
LOAD [p=*q]:   %78 = load i32* @last_member, align 4, !dbg !626
LOAD [p=*q]:   %158 = load i32* @verbose, align 4, !dbg !644
LOAD [p=*q]:   %81 = load i32* %1, align 4, !dbg !627
CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
STORE [*p=q]:   store i64 %82, i64* @bytes_in, align 8, !dbg !627
LOAD [p=*q]:   %83 = load i64* @bytes_in, align 8, !dbg !629
LOAD [p=*q]:   %81 = load i32* %1, align 4, !dbg !627
CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
STORE [*p=q]:   store i64 %82, i64* @bytes_in, align 8, !dbg !627
LOAD [p=*q]:   %83 = load i64* @bytes_in, align 8, !dbg !629
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[8 x i8]* %buf}, metadata !630), !dbg !635
LOAD [p=*q]:   %86 = load i64* @bytes_in, align 8, !dbg !636
STORE [*p=q]:   store i64 %87, i64* @bytes_in, align 8, !dbg !636
LOAD [p=*q]:   %88 = load i32* %1, align 4, !dbg !637
CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
  %89 = getelementptr inbounds [8 x i8]* %buf, i32 0, i32 0, !dbg !637 gets tainted
  %buf = alloca [8 x i8], align 1 	 also gets tainted
  %94 = getelementptr inbounds [8 x i8]* %buf, i32 0, i64 0, !dbg !640 	 also gets tainted
  %98 = getelementptr inbounds [8 x i8]* %buf, i32 0, i64 1, !dbg !640 	 also gets tainted
  %105 = getelementptr inbounds [8 x i8]* %buf, i32 0, i32 0, !dbg !640 	 also gets tainted
  %106 = getelementptr inbounds i8* %105, i64 2, !dbg !640 	 also gets tainted
  %107 = getelementptr inbounds i8* %106, i64 0, !dbg !640 	 also gets tainted
  %111 = getelementptr inbounds [8 x i8]* %buf, i32 0, i32 0, !dbg !640 	 also gets tainted
  %112 = getelementptr inbounds i8* %111, i64 2, !dbg !640 	 also gets tainted
  %113 = getelementptr inbounds i8* %112, i64 1, !dbg !640 	 also gets tainted
  %122 = getelementptr inbounds [8 x i8]* %buf, i32 0, i32 0, !dbg !641 	 also gets tainted
  %123 = getelementptr inbounds i8* %122, i64 4, !dbg !641 	 also gets tainted
  %124 = getelementptr inbounds i8* %123, i64 0, !dbg !641 	 also gets tainted
  %128 = getelementptr inbounds [8 x i8]* %buf, i32 0, i32 0, !dbg !641 	 also gets tainted
  %129 = getelementptr inbounds i8* %128, i64 4, !dbg !641 	 also gets tainted
  %130 = getelementptr inbounds i8* %129, i64 1, !dbg !641 	 also gets tainted
  %137 = getelementptr inbounds [8 x i8]* %buf, i32 0, i32 0, !dbg !641 	 also gets tainted
  %138 = getelementptr inbounds i8* %137, i64 4, !dbg !641 	 also gets tainted
  %139 = getelementptr inbounds i8* %138, i64 2, !dbg !641 	 also gets tainted
  %140 = getelementptr inbounds i8* %139, i64 0, !dbg !641 	 also gets tainted
  %144 = getelementptr inbounds [8 x i8]* %buf, i32 0, i32 0, !dbg !641 	 also gets tainted
  %145 = getelementptr inbounds i8* %144, i64 4, !dbg !641 	 also gets tainted
  %146 = getelementptr inbounds i8* %145, i64 2, !dbg !641 	 also gets tainted
  %147 = getelementptr inbounds i8* %146, i64 1, !dbg !641 	 also gets tainted
Found a source read with arg_pos 1
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[8 x i8]* %buf}, metadata !630), !dbg !635
LOAD [p=*q]:   %86 = load i64* @bytes_in, align 8, !dbg !636
STORE [*p=q]:   store i64 %87, i64* @bytes_in, align 8, !dbg !636
LOAD [p=*q]:   %88 = load i32* %1, align 4, !dbg !637
CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
Found a source read with arg_pos 1
CALL [call func]:   call void @read_error() #7, !dbg !638
LOAD [p=*q]:   %95 = load i8* %94, align 1, !dbg !640
  %95 = load i8* %94, align 1, !dbg !640 gets tainted
LOAD [p=*q]:   %99 = load i8* %98, align 1, !dbg !640
  %99 = load i8* %98, align 1, !dbg !640 gets tainted
LOAD [p=*q]:   %108 = load i8* %107, !dbg !640
  %108 = load i8* %107, !dbg !640 gets tainted
LOAD [p=*q]:   %114 = load i8* %113, !dbg !640
  %114 = load i8* %113, !dbg !640 gets tainted
STORE [*p=q]:   store i64 %121, i64* %crc, align 8, !dbg !640
LOAD [p=*q]:   %125 = load i8* %124, !dbg !641
  %125 = load i8* %124, !dbg !641 gets tainted
LOAD [p=*q]:   %131 = load i8* %130, !dbg !641
  %131 = load i8* %130, !dbg !641 gets tainted
LOAD [p=*q]:   %141 = load i8* %140, !dbg !641
  %141 = load i8* %140, !dbg !641 gets tainted
LOAD [p=*q]:   %148 = load i8* %147, !dbg !641
  %148 = load i8* %147, !dbg !641 gets tainted
STORE [*p=q]:   store i64 %155, i64* @bytes_out, align 8, !dbg !641
CALL [call func]:   call void @read_error() #7, !dbg !638
LOAD [p=*q]:   %95 = load i8* %94, align 1, !dbg !640
LOAD [p=*q]:   %99 = load i8* %98, align 1, !dbg !640
LOAD [p=*q]:   %108 = load i8* %107, !dbg !640
LOAD [p=*q]:   %114 = load i8* %113, !dbg !640
STORE [*p=q]:   store i64 %121, i64* %crc, align 8, !dbg !640
LOAD [p=*q]:   %125 = load i8* %124, !dbg !641
LOAD [p=*q]:   %131 = load i8* %130, !dbg !641
LOAD [p=*q]:   %141 = load i8* %140, !dbg !641
LOAD [p=*q]:   %148 = load i8* %147, !dbg !641
STORE [*p=q]:   store i64 %155, i64* @bytes_out, align 8, !dbg !641
LOAD [p=*q]:   %158 = load i32* @verbose, align 4, !dbg !644
LOAD [p=*q]:   %158 = load i32* @verbose, align 4, !dbg !644
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.tm** %tm}, metadata !645), !dbg !661
CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
STORE [*p=q]:   store %struct.tm* %161, %struct.tm** %tm, align 8, !dbg !662
LOAD [p=*q]:   %162 = load i32* %2, align 4, !dbg !663
LOAD [p=*q]:   %165 = load i8** %164, align 8, !dbg !663
LOAD [p=*q]:   %166 = load i64* %crc, align 8, !dbg !663
CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
LOAD [p=*q]:   %168 = load %struct.tm** %tm, align 8, !dbg !664
LOAD [p=*q]:   %191 = load %struct._IO_FILE** @stdout, align 8, !dbg !668
LOAD [p=*q]:   %192 = load i64* @bytes_in, align 8, !dbg !668
LOAD [p=*q]:   %193 = load i32* %positive_off_t_width, align 4, !dbg !668
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
LOAD [p=*q]:   %195 = load %struct._IO_FILE** @stdout, align 8, !dbg !670
LOAD [p=*q]:   %196 = load i64* @bytes_out, align 8, !dbg !670
LOAD [p=*q]:   %197 = load i32* %positive_off_t_width, align 4, !dbg !670
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
LOAD [p=*q]:   %199 = load i64* @bytes_in, align 8, !dbg !672
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.tm** %tm}, metadata !645), !dbg !661
CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
STORE [*p=q]:   store %struct.tm* %161, %struct.tm** %tm, align 8, !dbg !662
LOAD [p=*q]:   %162 = load i32* %2, align 4, !dbg !663
LOAD [p=*q]:   %165 = load i8** %164, align 8, !dbg !663
LOAD [p=*q]:   %166 = load i64* %crc, align 8, !dbg !663
CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
LOAD [p=*q]:   %168 = load %struct.tm** %tm, align 8, !dbg !664
LOAD [p=*q]:   %171 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %173 = load i32* %172, align 4, !dbg !665
LOAD [p=*q]:   %177 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %179 = load i32* %178, align 4, !dbg !665
LOAD [p=*q]:   %180 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %182 = load i32* %181, align 4, !dbg !665
LOAD [p=*q]:   %183 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %185 = load i32* %184, align 4, !dbg !665
CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
LOAD [p=*q]:   %171 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %173 = load i32* %172, align 4, !dbg !665
LOAD [p=*q]:   %177 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %179 = load i32* %178, align 4, !dbg !665
LOAD [p=*q]:   %180 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %182 = load i32* %181, align 4, !dbg !665
LOAD [p=*q]:   %183 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %185 = load i32* %184, align 4, !dbg !665
CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
LOAD [p=*q]:   %191 = load %struct._IO_FILE** @stdout, align 8, !dbg !668
LOAD [p=*q]:   %192 = load i64* @bytes_in, align 8, !dbg !668
LOAD [p=*q]:   %193 = load i32* %positive_off_t_width, align 4, !dbg !668
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
LOAD [p=*q]:   %195 = load %struct._IO_FILE** @stdout, align 8, !dbg !670
LOAD [p=*q]:   %196 = load i64* @bytes_out, align 8, !dbg !670
LOAD [p=*q]:   %197 = load i32* %positive_off_t_width, align 4, !dbg !670
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
LOAD [p=*q]:   %199 = load i64* @bytes_in, align 8, !dbg !672
LOAD [p=*q]:   %191 = load %struct._IO_FILE** @stdout, align 8, !dbg !668
LOAD [p=*q]:   %192 = load i64* @bytes_in, align 8, !dbg !668
LOAD [p=*q]:   %193 = load i32* %positive_off_t_width, align 4, !dbg !668
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
LOAD [p=*q]:   %195 = load %struct._IO_FILE** @stdout, align 8, !dbg !670
LOAD [p=*q]:   %196 = load i64* @bytes_out, align 8, !dbg !670
LOAD [p=*q]:   %197 = load i32* %positive_off_t_width, align 4, !dbg !670
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
LOAD [p=*q]:   %199 = load i64* @bytes_in, align 8, !dbg !672
STORE [*p=q]:   store i64 -1, i64* @total_in, align 8, !dbg !673
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !675
LOAD [p=*q]:   %203 = load i64* @total_in, align 8, !dbg !677
STORE [*p=q]:   store i64 -1, i64* @total_in, align 8, !dbg !673
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !675
LOAD [p=*q]:   %211 = load i64* @bytes_out, align 8, !dbg !681
LOAD [p=*q]:   %203 = load i64* @total_in, align 8, !dbg !677
LOAD [p=*q]:   %206 = load i64* @bytes_in, align 8, !dbg !678
LOAD [p=*q]:   %207 = load i64* @total_in, align 8, !dbg !678
STORE [*p=q]:   store i64 %208, i64* @total_in, align 8, !dbg !678
LOAD [p=*q]:   %206 = load i64* @bytes_in, align 8, !dbg !678
LOAD [p=*q]:   %207 = load i64* @total_in, align 8, !dbg !678
STORE [*p=q]:   store i64 %208, i64* @total_in, align 8, !dbg !678
LOAD [p=*q]:   %211 = load i64* @bytes_out, align 8, !dbg !681
LOAD [p=*q]:   %211 = load i64* @bytes_out, align 8, !dbg !681
STORE [*p=q]:   store i64 -1, i64* @total_out, align 8, !dbg !682
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !684
LOAD [p=*q]:   %215 = load i64* @total_out, align 8, !dbg !686
STORE [*p=q]:   store i64 -1, i64* @total_out, align 8, !dbg !682
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !684
LOAD [p=*q]:   %223 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %224 = load i64* @bytes_in, align 8, !dbg !690
LOAD [p=*q]:   %225 = load i64* @header_bytes, align 8, !dbg !690
LOAD [p=*q]:   %228 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %229 = load %struct._IO_FILE** @stdout, align 8, !dbg !690
CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
LOAD [p=*q]:   %215 = load i64* @total_out, align 8, !dbg !686
LOAD [p=*q]:   %218 = load i64* @bytes_out, align 8, !dbg !687
LOAD [p=*q]:   %219 = load i64* @total_out, align 8, !dbg !687
STORE [*p=q]:   store i64 %220, i64* @total_out, align 8, !dbg !687
LOAD [p=*q]:   %218 = load i64* @bytes_out, align 8, !dbg !687
LOAD [p=*q]:   %219 = load i64* @total_out, align 8, !dbg !687
STORE [*p=q]:   store i64 %220, i64* @total_out, align 8, !dbg !687
LOAD [p=*q]:   %223 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %224 = load i64* @bytes_in, align 8, !dbg !690
LOAD [p=*q]:   %225 = load i64* @header_bytes, align 8, !dbg !690
LOAD [p=*q]:   %228 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %229 = load %struct._IO_FILE** @stdout, align 8, !dbg !690
CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
LOAD [p=*q]:   %223 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %224 = load i64* @bytes_in, align 8, !dbg !690
LOAD [p=*q]:   %225 = load i64* @header_bytes, align 8, !dbg !690
LOAD [p=*q]:   %228 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %229 = load %struct._IO_FILE** @stdout, align 8, !dbg !690
CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
Analyzing return instruction for do_list
No return value for: do_list
Analyzing return instruction for do_list
No return value for: do_list
[Processing][Function][treat_stdin]
LOAD [p=*q]:   %2 = load i32* @force, align 4, !dbg !574
LOAD [p=*q]:   %38 = load i32* @decompress, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @list, align 4, !dbg !574
LOAD [p=*q]:   %5 = load i32* @list, align 4, !dbg !574
LOAD [p=*q]:   %38 = load i32* @decompress, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i8* @presume_input_tty, align 1, !dbg !574
LOAD [p=*q]:   %8 = load i8* @presume_input_tty, align 1, !dbg !574
LOAD [p=*q]:   %23 = load i32* @quiet, align 4, !dbg !577
LOAD [p=*q]:   %11 = load i32* @decompress, align 4, !dbg !576
LOAD [p=*q]:   %11 = load i32* @decompress, align 4, !dbg !576
LOAD [p=*q]:   %14 = load %struct._IO_FILE** @stdin, align 8, !dbg !576
LOAD [p=*q]:   %16 = load %struct._IO_FILE** @stdout, align 8, !dbg !576
LOAD [p=*q]:   %14 = load %struct._IO_FILE** @stdin, align 8, !dbg !576
CALL [call func]:   %19 = call i32 @fileno(%struct._IO_FILE* %18) #3, !dbg !576
CALL [call func]:   %20 = call i32 @isatty(i32 %19) #3, !dbg !576
LOAD [p=*q]:   %16 = load %struct._IO_FILE** @stdout, align 8, !dbg !576
CALL [call func]:   %19 = call i32 @fileno(%struct._IO_FILE* %18) #3, !dbg !576
CALL [call func]:   %20 = call i32 @isatty(i32 %19) #3, !dbg !576
CALL [call func]:   %19 = call i32 @fileno(%struct._IO_FILE* %18) #3, !dbg !576
CALL [call func]:   %20 = call i32 @isatty(i32 %19) #3, !dbg !576
LOAD [p=*q]:   %23 = load i32* @quiet, align 4, !dbg !577
LOAD [p=*q]:   %38 = load i32* @decompress, align 4, !dbg !581
LOAD [p=*q]:   %23 = load i32* @quiet, align 4, !dbg !577
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !580
LOAD [p=*q]:   %26 = load %struct._IO_FILE** @stderr, align 8, !dbg !579
LOAD [p=*q]:   %27 = load i8** @program_name, align 8, !dbg !579
LOAD [p=*q]:   %28 = load i32* @decompress, align 4, !dbg !579
LOAD [p=*q]:   %31 = load i32* @decompress, align 4, !dbg !579
LOAD [p=*q]:   %34 = load i8** @program_name, align 8, !dbg !579
CALL [call func]:   %35 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([93 x i8]* @.str78, i32 0, i32 0), i8* %27, i8* %30, i8* %33, i8* %34), !dbg !579
LOAD [p=*q]:   %26 = load %struct._IO_FILE** @stderr, align 8, !dbg !579
LOAD [p=*q]:   %27 = load i8** @program_name, align 8, !dbg !579
LOAD [p=*q]:   %28 = load i32* @decompress, align 4, !dbg !579
LOAD [p=*q]:   %31 = load i32* @decompress, align 4, !dbg !579
LOAD [p=*q]:   %34 = load i8** @program_name, align 8, !dbg !579
CALL [call func]:   %35 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([93 x i8]* @.str78, i32 0, i32 0), i8* %27, i8* %30, i8* %33, i8* %34), !dbg !579
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !580
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !580
LOAD [p=*q]:   %38 = load i32* @decompress, align 4, !dbg !581
LOAD [p=*q]:   %41 = load i32* @ascii, align 4, !dbg !581
LOAD [p=*q]:   %41 = load i32* @ascii, align 4, !dbg !581
LOAD [p=*q]:   %45 = load i32* @test, align 4, !dbg !584
LOAD [p=*q]:   %45 = load i32* @test, align 4, !dbg !584
LOAD [p=*q]:   %45 = load i32* @test, align 4, !dbg !584
CALL [call func]:   %58 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str82, i32 0, i32 0)) #3, !dbg !587
CALL [call func]:   %59 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !588
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stdin, align 8, !dbg !589
CALL [call func]:   %61 = call i32 @fileno(%struct._IO_FILE* %60) #3, !dbg !589
CALL [call func]:   %62 = call i32 @fstat(i32 %61, %struct.stat* @istat) #3, !dbg !589
LOAD [p=*q]:   %48 = load i32* @list, align 4, !dbg !584
LOAD [p=*q]:   %48 = load i32* @list, align 4, !dbg !584
CALL [call func]:   %58 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str82, i32 0, i32 0)) #3, !dbg !587
CALL [call func]:   %59 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !588
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stdin, align 8, !dbg !589
CALL [call func]:   %61 = call i32 @fileno(%struct._IO_FILE* %60) #3, !dbg !589
CALL [call func]:   %62 = call i32 @fstat(i32 %61, %struct.stat* @istat) #3, !dbg !589
LOAD [p=*q]:   %51 = load i32* @decompress, align 4, !dbg !584
LOAD [p=*q]:   %51 = load i32* @decompress, align 4, !dbg !584
LOAD [p=*q]:   %54 = load i32* @ascii, align 4, !dbg !584
LOAD [p=*q]:   %54 = load i32* @ascii, align 4, !dbg !584
CALL [call func]:   %58 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str82, i32 0, i32 0)) #3, !dbg !587
CALL [call func]:   %59 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !588
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stdin, align 8, !dbg !589
CALL [call func]:   %61 = call i32 @fileno(%struct._IO_FILE* %60) #3, !dbg !589
CALL [call func]:   %62 = call i32 @fstat(i32 %61, %struct.stat* @istat) #3, !dbg !589
CALL [call func]:   %58 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str82, i32 0, i32 0)) #3, !dbg !587
CALL [call func]:   %59 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !588
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stdin, align 8, !dbg !589
CALL [call func]:   %61 = call i32 @fileno(%struct._IO_FILE* %60) #3, !dbg !589
CALL [call func]:   %62 = call i32 @fstat(i32 %61, %struct.stat* @istat) #3, !dbg !589
CALL [call func]:   %58 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str82, i32 0, i32 0)) #3, !dbg !587
CALL [call func]:   %59 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !588
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stdin, align 8, !dbg !589
CALL [call func]:   %61 = call i32 @fileno(%struct._IO_FILE* %60) #3, !dbg !589
CALL [call func]:   %62 = call i32 @fstat(i32 %61, %struct.stat* @istat) #3, !dbg !589
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([15 x i8]* @.str83, i32 0, i32 0)), !dbg !590
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !592
LOAD [p=*q]:   %66 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !593
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([15 x i8]* @.str83, i32 0, i32 0)), !dbg !590
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !592
LOAD [p=*q]:   %66 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !593
LOAD [p=*q]:   %70 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 8), align 8, !dbg !593
LOAD [p=*q]:   %70 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 8), align 8, !dbg !593
STORE [*p=q]:   store i64 %73, i64* @ifile_size, align 8, !dbg !593
STORE [*p=q]:   store i64 -1, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !594
LOAD [p=*q]:   %74 = load i32* @no_time, align 4, !dbg !595
STORE [*p=q]:   store i64 %73, i64* @ifile_size, align 8, !dbg !593
STORE [*p=q]:   store i64 -1, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !594
LOAD [p=*q]:   %74 = load i32* @no_time, align 4, !dbg !595
STORE [*p=q]:   store i64 %73, i64* @ifile_size, align 8, !dbg !593
STORE [*p=q]:   store i64 -1, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !594
LOAD [p=*q]:   %74 = load i32* @no_time, align 4, !dbg !595
LOAD [p=*q]:   %77 = load i32* @list, align 4, !dbg !595
LOAD [p=*q]:   %80 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !596
LOAD [p=*q]:   %77 = load i32* @list, align 4, !dbg !595
LOAD [p=*q]:   %80 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !596
CALL [call func]:   call void @clear_bufs(), !dbg !601
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !602
STORE [*p=q]:   store i32 0, i32* @part_nb, align 4, !dbg !603
LOAD [p=*q]:   %94 = load %struct._IO_FILE** @stdin, align 8, !dbg !604
CALL [call func]:   %95 = call i32 @fileno(%struct._IO_FILE* %94) #3, !dbg !604
STORE [*p=q]:   store i32 %95, i32* @ifd, align 4, !dbg !604
LOAD [p=*q]:   %96 = load i32* @decompress, align 4, !dbg !605
LOAD [p=*q]:   %80 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !596
CALL [call func]:   %84 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !598
STORE [*p=q]:   store i64 %87, i64* %86, align 1, !dbg !598
STORE [*p=q]:   store i64 %89, i64* %88, align 1, !dbg !598
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.timespec* @time_stamp to i8*), i8* %90, i64 16, i32 8, i1 false), !dbg !598
CALL [call func]:   call void @gettime(%struct.timespec* @time_stamp), !dbg !599
CALL [call func]:   %84 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !598
STORE [*p=q]:   store i64 %87, i64* %86, align 1, !dbg !598
STORE [*p=q]:   store i64 %89, i64* %88, align 1, !dbg !598
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.timespec* @time_stamp to i8*), i8* %90, i64 16, i32 8, i1 false), !dbg !598
CALL [call func]:   call void @gettime(%struct.timespec* @time_stamp), !dbg !599
CALL [call func]:   call void @clear_bufs(), !dbg !601
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !602
STORE [*p=q]:   store i32 0, i32* @part_nb, align 4, !dbg !603
LOAD [p=*q]:   %94 = load %struct._IO_FILE** @stdin, align 8, !dbg !604
CALL [call func]:   %95 = call i32 @fileno(%struct._IO_FILE* %94) #3, !dbg !604
STORE [*p=q]:   store i32 %95, i32* @ifd, align 4, !dbg !604
LOAD [p=*q]:   %96 = load i32* @decompress, align 4, !dbg !605
CALL [call func]:   call void @clear_bufs(), !dbg !601
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !602
STORE [*p=q]:   store i32 0, i32* @part_nb, align 4, !dbg !603
LOAD [p=*q]:   %94 = load %struct._IO_FILE** @stdin, align 8, !dbg !604
CALL [call func]:   %95 = call i32 @fileno(%struct._IO_FILE* %94) #3, !dbg !604
STORE [*p=q]:   store i32 %95, i32* @ifd, align 4, !dbg !604
LOAD [p=*q]:   %96 = load i32* @decompress, align 4, !dbg !605
LOAD [p=*q]:   %99 = load i32* @ifd, align 4, !dbg !606
CALL [call func]:   %100 = call i32 @get_method(i32 %99), !dbg !606
STORE [*p=q]:   store i32 %100, i32* @method, align 4, !dbg !606
LOAD [p=*q]:   %101 = load i32* @method, align 4, !dbg !608
LOAD [p=*q]:   %107 = load i32* @list, align 4, !dbg !612
LOAD [p=*q]:   %99 = load i32* @ifd, align 4, !dbg !606
CALL [call func]:   %100 = call i32 @get_method(i32 %99), !dbg !606
STORE [*p=q]:   store i32 %100, i32* @method, align 4, !dbg !606
LOAD [p=*q]:   %101 = load i32* @method, align 4, !dbg !608
LOAD [p=*q]:   %104 = load i32* @exit_code, align 4, !dbg !609
CALL [call func]:   call void @do_exit(i32 %104) #7, !dbg !609
LOAD [p=*q]:   %104 = load i32* @exit_code, align 4, !dbg !609
CALL [call func]:   call void @do_exit(i32 %104) #7, !dbg !609
LOAD [p=*q]:   %107 = load i32* @list, align 4, !dbg !612
LOAD [p=*q]:   %107 = load i32* @list, align 4, !dbg !612
LOAD [p=*q]:   %110 = load i32* @ifd, align 4, !dbg !613
LOAD [p=*q]:   %111 = load i32* @method, align 4, !dbg !613
CALL [call func]:   call void @do_list(i32 %110, i32 %111), !dbg !613
LOAD [p=*q]:   %110 = load i32* @ifd, align 4, !dbg !613
LOAD [p=*q]:   %111 = load i32* @method, align 4, !dbg !613
CALL [call func]:   call void @do_list(i32 %110, i32 %111), !dbg !613
Analyzing return instruction for treat_stdin
No return value for: treat_stdin
LOAD [p=*q]:   %114 = load i32 (i32, i32)** @work, align 8, !dbg !618
LOAD [p=*q]:   %115 = load %struct._IO_FILE** @stdin, align 8, !dbg !620
CALL [call func]:   %116 = call i32 @fileno(%struct._IO_FILE* %115) #3, !dbg !620
LOAD [p=*q]:   %117 = load %struct._IO_FILE** @stdout, align 8, !dbg !621
CALL [call func]:   %118 = call i32 @fileno(%struct._IO_FILE* %117) #3, !dbg !621
CALL [call func]:   %119 = call i32 %114(i32 %116, i32 %118), !dbg !621
LOAD [p=*q]:   %114 = load i32 (i32, i32)** @work, align 8, !dbg !618
LOAD [p=*q]:   %115 = load %struct._IO_FILE** @stdin, align 8, !dbg !620
CALL [call func]:   %116 = call i32 @fileno(%struct._IO_FILE* %115) #3, !dbg !620
LOAD [p=*q]:   %117 = load %struct._IO_FILE** @stdout, align 8, !dbg !621
CALL [call func]:   %118 = call i32 @fileno(%struct._IO_FILE* %117) #3, !dbg !621
CALL [call func]:   %119 = call i32 %114(i32 %116, i32 %118), !dbg !621
CALL [call func]:   %123 = call i32 @input_eof(), !dbg !623
Analyzing return instruction for treat_stdin
No return value for: treat_stdin
CALL [call func]:   %123 = call i32 @input_eof(), !dbg !623
LOAD [p=*q]:   %127 = load i32* @ifd, align 4, !dbg !625
CALL [call func]:   %128 = call i32 @get_method(i32 %127), !dbg !625
STORE [*p=q]:   store i32 %128, i32* @method, align 4, !dbg !625
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !626
LOAD [p=*q]:   %134 = load i32* @verbose, align 4, !dbg !630
LOAD [p=*q]:   %127 = load i32* @ifd, align 4, !dbg !625
CALL [call func]:   %128 = call i32 @get_method(i32 %127), !dbg !625
STORE [*p=q]:   store i32 %128, i32* @method, align 4, !dbg !625
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !626
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !628
Analyzing return instruction for treat_stdin
No return value for: treat_stdin
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !628
LOAD [p=*q]:   %114 = load i32 (i32, i32)** @work, align 8, !dbg !618
LOAD [p=*q]:   %115 = load %struct._IO_FILE** @stdin, align 8, !dbg !620
CALL [call func]:   %116 = call i32 @fileno(%struct._IO_FILE* %115) #3, !dbg !620
LOAD [p=*q]:   %117 = load %struct._IO_FILE** @stdout, align 8, !dbg !621
CALL [call func]:   %118 = call i32 @fileno(%struct._IO_FILE* %117) #3, !dbg !621
CALL [call func]:   %119 = call i32 %114(i32 %116, i32 %118), !dbg !621
LOAD [p=*q]:   %134 = load i32* @verbose, align 4, !dbg !630
LOAD [p=*q]:   %137 = load i32* @test, align 4, !dbg !631
Analyzing return instruction for treat_stdin
No return value for: treat_stdin
LOAD [p=*q]:   %137 = load i32* @test, align 4, !dbg !631
LOAD [p=*q]:   %140 = load %struct._IO_FILE** @stderr, align 8, !dbg !633
CALL [call func]:   %141 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %140, i8* getelementptr inbounds ([5 x i8]* @.str84, i32 0, i32 0)), !dbg !633
LOAD [p=*q]:   %143 = load i32* @decompress, align 4, !dbg !636
LOAD [p=*q]:   %140 = load %struct._IO_FILE** @stderr, align 8, !dbg !633
CALL [call func]:   %141 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %140, i8* getelementptr inbounds ([5 x i8]* @.str84, i32 0, i32 0)), !dbg !633
LOAD [p=*q]:   %143 = load i32* @decompress, align 4, !dbg !636
LOAD [p=*q]:   %146 = load i64* @bytes_in, align 8, !dbg !637
LOAD [p=*q]:   %147 = load i64* @bytes_out, align 8, !dbg !637
LOAD [p=*q]:   %148 = load i64* @header_bytes, align 8, !dbg !637
LOAD [p=*q]:   %151 = load i64* @bytes_in, align 8, !dbg !637
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !637
CALL [call func]:   call void @display_ratio(i64 %150, i64 %151, %struct._IO_FILE* %152), !dbg !637
LOAD [p=*q]:   %153 = load %struct._IO_FILE** @stderr, align 8, !dbg !639
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !639
LOAD [p=*q]:   %146 = load i64* @bytes_in, align 8, !dbg !637
LOAD [p=*q]:   %147 = load i64* @bytes_out, align 8, !dbg !637
LOAD [p=*q]:   %148 = load i64* @header_bytes, align 8, !dbg !637
LOAD [p=*q]:   %151 = load i64* @bytes_in, align 8, !dbg !637
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !637
CALL [call func]:   call void @display_ratio(i64 %150, i64 %151, %struct._IO_FILE* %152), !dbg !637
LOAD [p=*q]:   %153 = load %struct._IO_FILE** @stderr, align 8, !dbg !639
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !639
Analyzing return instruction for treat_stdin
No return value for: treat_stdin
Analyzing return instruction for treat_stdin
No return value for: treat_stdin
[Processing][Function][install_signal_handlers]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nsigs}, metadata !574), !dbg !576
STORE [*p=q]:   store i32 6, i32* %nsigs, align 4, !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.sigaction* %act}, metadata !580), !dbg !656
CALL [call func]:   %1 = call i32 @sigemptyset(%struct.__sigset_t* @caught_signals) #3, !dbg !657
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !658
LOAD [p=*q]:   %3 = load i32* %i, align 4, !dbg !658
LOAD [p=*q]:   %4 = load i32* %nsigs, align 4, !dbg !658
LOAD [p=*q]:   %3 = load i32* %i, align 4, !dbg !658
LOAD [p=*q]:   %4 = load i32* %nsigs, align 4, !dbg !658
LOAD [p=*q]:   %7 = load i32* %i, align 4, !dbg !660
LOAD [p=*q]:   %10 = load i32* %9, align 4, !dbg !660
CALL [call func]:   %11 = call i32 @sigaction(i32 %10, %struct.sigaction* null, %struct.sigaction* %act) #3, !dbg !660
LOAD [p=*q]:   %14 = load void (i32)** %13, align 8, !dbg !662
STORE [*p=q]:   store void (i32)* @abort_gzip_signal, void (i32)** %28, align 8, !dbg !666
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* bitcast (%struct.__sigset_t* @caught_signals to i8*), i64 128, i32 8, i1 false), !dbg !667
STORE [*p=q]:   store i32 0, i32* %31, align 4, !dbg !668
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %7 = load i32* %i, align 4, !dbg !660
LOAD [p=*q]:   %10 = load i32* %9, align 4, !dbg !660
CALL [call func]:   %11 = call i32 @sigaction(i32 %10, %struct.sigaction* null, %struct.sigaction* %act) #3, !dbg !660
LOAD [p=*q]:   %14 = load void (i32)** %13, align 8, !dbg !662
LOAD [p=*q]:   %17 = load i32* %i, align 4, !dbg !663
LOAD [p=*q]:   %20 = load i32* %19, align 4, !dbg !663
CALL [call func]:   %21 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %20) #3, !dbg !663
LOAD [p=*q]:   %17 = load i32* %i, align 4, !dbg !663
LOAD [p=*q]:   %20 = load i32* %19, align 4, !dbg !663
CALL [call func]:   %21 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %20) #3, !dbg !663
LOAD [p=*q]:   %24 = load i32* %i, align 4, !dbg !665
STORE [*p=q]:   store i32 %25, i32* %i, align 4, !dbg !665
LOAD [p=*q]:   %24 = load i32* %i, align 4, !dbg !665
STORE [*p=q]:   store i32 %25, i32* %i, align 4, !dbg !665
LOAD [p=*q]:   %3 = load i32* %i, align 4, !dbg !658
LOAD [p=*q]:   %4 = load i32* %nsigs, align 4, !dbg !658
STORE [*p=q]:   store void (i32)* @abort_gzip_signal, void (i32)** %28, align 8, !dbg !666
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* bitcast (%struct.__sigset_t* @caught_signals to i8*), i64 128, i32 8, i1 false), !dbg !667
STORE [*p=q]:   store i32 0, i32* %31, align 4, !dbg !668
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %33 = load i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %34 = load i32* %nsigs, align 4, !dbg !669
LOAD [p=*q]:   %33 = load i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %34 = load i32* %nsigs, align 4, !dbg !669
LOAD [p=*q]:   %37 = load i32* %i, align 4, !dbg !671
LOAD [p=*q]:   %40 = load i32* %39, align 4, !dbg !671
CALL [call func]:   %41 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %40) #3, !dbg !671
Analyzing return instruction for install_signal_handlers
No return value for: install_signal_handlers
LOAD [p=*q]:   %37 = load i32* %i, align 4, !dbg !671
LOAD [p=*q]:   %40 = load i32* %39, align 4, !dbg !671
CALL [call func]:   %41 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %40) #3, !dbg !671
LOAD [p=*q]:   %44 = load i32* %i, align 4, !dbg !672
LOAD [p=*q]:   %44 = load i32* %i, align 4, !dbg !672
STORE [*p=q]:   store i32 1, i32* @foreground, align 4, !dbg !674
LOAD [p=*q]:   %48 = load i32* %i, align 4, !dbg !675
LOAD [p=*q]:   %51 = load i32* %50, align 4, !dbg !675
CALL [call func]:   %52 = call i32 @sigaction(i32 %51, %struct.sigaction* %act, %struct.sigaction* null) #3, !dbg !675
STORE [*p=q]:   store i32 1, i32* @foreground, align 4, !dbg !674
LOAD [p=*q]:   %48 = load i32* %i, align 4, !dbg !675
LOAD [p=*q]:   %51 = load i32* %50, align 4, !dbg !675
CALL [call func]:   %52 = call i32 @sigaction(i32 %51, %struct.sigaction* %act, %struct.sigaction* null) #3, !dbg !675
LOAD [p=*q]:   %48 = load i32* %i, align 4, !dbg !675
LOAD [p=*q]:   %51 = load i32* %50, align 4, !dbg !675
CALL [call func]:   %52 = call i32 @sigaction(i32 %51, %struct.sigaction* %act, %struct.sigaction* null) #3, !dbg !675
LOAD [p=*q]:   %55 = load i32* %i, align 4, !dbg !677
STORE [*p=q]:   store i32 %56, i32* %i, align 4, !dbg !677
LOAD [p=*q]:   %55 = load i32* %i, align 4, !dbg !677
STORE [*p=q]:   store i32 %56, i32* %i, align 4, !dbg !677
LOAD [p=*q]:   %33 = load i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %34 = load i32* %nsigs, align 4, !dbg !669
Analyzing return instruction for install_signal_handlers
No return value for: install_signal_handlers
[Processing][Function][version]
CALL [call func]:   call void @license(), !dbg !574
CALL [call func]:   %1 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !576
CALL [call func]:   %2 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([30 x i8]* @.str85, i32 0, i32 0)), !dbg !577
Analyzing return instruction for version
No return value for: version
[Processing][Function][license]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %p}, metadata !574), !dbg !577
STORE [*p=q]:   store i8** getelementptr inbounds ([6 x i8*]* @license_msg, i32 0, i32 0), i8*** %p, align 8, !dbg !578
LOAD [p=*q]:   %1 = load i8** @program_name, align 8, !dbg !579
LOAD [p=*q]:   %2 = load i8** @Version, align 8, !dbg !579
CALL [call func]:   %3 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([7 x i8]* @.str86, i32 0, i32 0), i8* %1, i8* %2), !dbg !579
LOAD [p=*q]:   %5 = load i8*** %p, align 8, !dbg !580
LOAD [p=*q]:   %6 = load i8** %5, !dbg !580
LOAD [p=*q]:   %5 = load i8*** %p, align 8, !dbg !580
LOAD [p=*q]:   %6 = load i8** %5, !dbg !580
LOAD [p=*q]:   %9 = load i8*** %p, align 8, !dbg !581
STORE [*p=q]:   store i8** %10, i8*** %p, align 8, !dbg !581
LOAD [p=*q]:   %11 = load i8** %9, !dbg !581
CALL [call func]:   %12 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %11), !dbg !581
Analyzing return instruction for license
No return value for: license
LOAD [p=*q]:   %9 = load i8*** %p, align 8, !dbg !581
STORE [*p=q]:   store i8** %10, i8*** %p, align 8, !dbg !581
LOAD [p=*q]:   %11 = load i8** %9, !dbg !581
CALL [call func]:   %12 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %11), !dbg !581
LOAD [p=*q]:   %5 = load i8*** %p, align 8, !dbg !580
LOAD [p=*q]:   %6 = load i8** %5, !dbg !580
Analyzing return instruction for license
No return value for: license
[Processing][Function][do_exit]
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
Analyzing return instruction for do_exit
No return value for: do_exit
[Processing][Function][help]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %p}, metadata !574), !dbg !577
STORE [*p=q]:   store i8** getelementptr inbounds ([26 x i8*]* @help.help_msg, i32 0, i32 0), i8*** %p, align 8, !dbg !578
LOAD [p=*q]:   %1 = load i8** @program_name, align 8, !dbg !579
CALL [call func]:   %2 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([33 x i8]* @.str114, i32 0, i32 0), i8* %1), !dbg !579
LOAD [p=*q]:   %4 = load i8*** %p, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** %4, !dbg !580
LOAD [p=*q]:   %4 = load i8*** %p, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** %4, !dbg !580
LOAD [p=*q]:   %8 = load i8*** %p, align 8, !dbg !581
STORE [*p=q]:   store i8** %9, i8*** %p, align 8, !dbg !581
LOAD [p=*q]:   %10 = load i8** %8, !dbg !581
CALL [call func]:   %11 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %10), !dbg !581
Analyzing return instruction for help
No return value for: help
LOAD [p=*q]:   %8 = load i8*** %p, align 8, !dbg !581
STORE [*p=q]:   store i8** %9, i8*** %p, align 8, !dbg !581
LOAD [p=*q]:   %10 = load i8** %8, !dbg !581
CALL [call func]:   %11 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %10), !dbg !581
LOAD [p=*q]:   %4 = load i8*** %p, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** %4, !dbg !580
Analyzing return instruction for help
No return value for: help
[Processing][Function][try_help]
LOAD [p=*q]:   %1 = load %struct._IO_FILE** @stderr, align 8, !dbg !574
LOAD [p=*q]:   %2 = load i8** @program_name, align 8, !dbg !574
CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str115, i32 0, i32 0), i8* %2), !dbg !574
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !576
Analyzing return instruction for try_help
No return value for: try_help
[Processing][Function][main]
STORE [*p=q]:   store i32 0, i32* %1
STORE [*p=q]:   store i32 %argc, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
STORE [*p=q]:   store i8** %argv, i8*** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %3}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %file_count}, metadata !578), !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %proglen}, metadata !581), !dbg !582
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %optc}, metadata !583), !dbg !584
LOAD [p=*q]:   %4 = load i8*** %3, align 8, !dbg !585
LOAD [p=*q]:   %6 = load i8** %5, !dbg !585
CALL [call func]:   %7 = call i8* @gzip_base_name(i8* %6) #4, !dbg !585
STORE [*p=q]:   store i8* %7, i8** @program_name, align 8, !dbg !585
LOAD [p=*q]:   %8 = load i8** @program_name, align 8, !dbg !586
CALL [call func]:   %9 = call i64 @strlen(i8* %8) #4, !dbg !586
STORE [*p=q]:   store i64 %9, i64* %proglen, align 8, !dbg !586
CALL [call func]:   %10 = call i32 @atexit(void ()* @close_stdin) #3, !dbg !587
LOAD [p=*q]:   %11 = load i64* %proglen, align 8, !dbg !588
LOAD [p=*q]:   %14 = load i8** @program_name, align 8, !dbg !589
LOAD [p=*q]:   %15 = load i64* %proglen, align 8, !dbg !589
CALL [call func]:   %18 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([5 x i8]* @.str1, i32 0, i32 0)) #4, !dbg !589
CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i8* %26, i8** @env, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i8** @env, align 8, !dbg !592
LOAD [p=*q]:   %14 = load i8** @program_name, align 8, !dbg !589
LOAD [p=*q]:   %15 = load i64* %proglen, align 8, !dbg !589
CALL [call func]:   %18 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([5 x i8]* @.str1, i32 0, i32 0)) #4, !dbg !589
LOAD [p=*q]:   %21 = load i64* %proglen, align 8, !dbg !590
LOAD [p=*q]:   %23 = load i8** @program_name, align 8, !dbg !590
STORE [*p=q]:   store i8 0, i8* %24, !dbg !590
CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i8* %26, i8** @env, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i8** @env, align 8, !dbg !592
LOAD [p=*q]:   %21 = load i64* %proglen, align 8, !dbg !590
LOAD [p=*q]:   %23 = load i8** @program_name, align 8, !dbg !590
STORE [*p=q]:   store i8 0, i8* %24, !dbg !590
CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i8* %26, i8** @env, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i8** @env, align 8, !dbg !592
CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i8* %26, i8** @env, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i8** @env, align 8, !dbg !592
LOAD [p=*q]:   %30 = load i8*** %3, align 8, !dbg !593
STORE [*p=q]:   store i8** %30, i8*** @args, align 8, !dbg !593
STORE [*p=q]:   store i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i8** @z_suffix, align 8, !dbg !594
LOAD [p=*q]:   %32 = load i8** @z_suffix, align 8, !dbg !595
CALL [call func]:   %33 = call i64 @strlen(i8* %32) #4, !dbg !595
STORE [*p=q]:   store i64 %33, i64* @z_len, align 8, !dbg !595
LOAD [p=*q]:   %30 = load i8*** %3, align 8, !dbg !593
STORE [*p=q]:   store i8** %30, i8*** @args, align 8, !dbg !593
STORE [*p=q]:   store i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i8** @z_suffix, align 8, !dbg !594
LOAD [p=*q]:   %32 = load i8** @z_suffix, align 8, !dbg !595
CALL [call func]:   %33 = call i64 @strlen(i8* %32) #4, !dbg !595
STORE [*p=q]:   store i64 %33, i64* @z_len, align 8, !dbg !595
STORE [*p=q]:   store i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i8** @z_suffix, align 8, !dbg !594
LOAD [p=*q]:   %32 = load i8** @z_suffix, align 8, !dbg !595
CALL [call func]:   %33 = call i64 @strlen(i8* %32) #4, !dbg !595
STORE [*p=q]:   store i64 %33, i64* @z_len, align 8, !dbg !595
LOAD [p=*q]:   %35 = load i32* %2, align 4, !dbg !597
LOAD [p=*q]:   %36 = load i8*** %3, align 8, !dbg !597
CALL [call func]:   %37 = call i32 @rpl_getopt_long(i32 %35, i8** %36, i8* getelementptr inbounds ([34 x i8]* @.str3, i32 0, i32 0), %struct.rpl_option* getelementptr inbounds ([26 x %struct.rpl_option]* bitcast (<{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] } }>* @longopts to [26 x %struct.rpl_option]*), i32 0, i32 0), i32* null) #3, !dbg !597
STORE [*p=q]:   store i32 %37, i32* %optc, align 4, !dbg !597
LOAD [p=*q]:   %35 = load i32* %2, align 4, !dbg !597
LOAD [p=*q]:   %36 = load i8*** %3, align 8, !dbg !597
CALL [call func]:   %37 = call i32 @rpl_getopt_long(i32 %35, i8** %36, i8* getelementptr inbounds ([34 x i8]* @.str3, i32 0, i32 0), %struct.rpl_option* getelementptr inbounds ([26 x %struct.rpl_option]* bitcast (<{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] } }>* @longopts to [26 x %struct.rpl_option]*), i32 0, i32 0), i32* null) #3, !dbg !597
STORE [*p=q]:   store i32 %37, i32* %optc, align 4, !dbg !597
LOAD [p=*q]:   %40 = load i32* %optc, align 4, !dbg !598
LOAD [p=*q]:   %103 = load i32* @no_time, align 4, !dbg !658
LOAD [p=*q]:   %40 = load i32* %optc, align 4, !dbg !598
CALL [call func]:   call void @try_help() #7, !dbg !656
STORE [*p=q]:   store i32 1, i32* @ascii, align 4, !dbg !600
LOAD [p=*q]:   %43 = load i8** @rpl_optarg, align 8, !dbg !603
CALL [call func]:   %44 = call i32 @atoi(i8* %43) #4, !dbg !603
STORE [*p=q]:   store i32 %44, i32* @maxbits, align 4, !dbg !603
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !613
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !615
LOAD [p=*q]:   %71 = load i32* @force, align 4, !dbg !617
STORE [*p=q]:   store i32 %72, i32* @force, align 4, !dbg !617
CALL [call func]:   call void @help(), !dbg !619
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !620
CALL [call func]:   call void @help(), !dbg !619
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !620
STORE [*p=q]:   store i32 1, i32* @keep, align 4, !dbg !621
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !623
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !623
STORE [*p=q]:   store i32 1, i32* @list, align 4, !dbg !623
CALL [call func]:   call void @license(), !dbg !625
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !626
STORE [*p=q]:   store i32 1, i32* @no_time, align 4, !dbg !627
STORE [*p=q]:   store i32 0, i32* @no_time, align 4, !dbg !629
STORE [*p=q]:   store i32 1, i32* @no_time, align 4, !dbg !631
STORE [*p=q]:   store i32 1, i32* @no_name, align 4, !dbg !631
STORE [*p=q]:   store i32 0, i32* @no_time, align 4, !dbg !633
STORE [*p=q]:   store i32 0, i32* @no_name, align 4, !dbg !633
STORE [*p=q]:   store i8 1, i8* @presume_input_tty, align 1, !dbg !635
STORE [*p=q]:   store i32 1, i32* @quiet, align 4, !dbg !637
STORE [*p=q]:   store i32 0, i32* @verbose, align 4, !dbg !638
STORE [*p=q]:   store i32 1, i32* @recursive, align 4, !dbg !640
LOAD [p=*q]:   %85 = load i8** @rpl_optarg, align 8, !dbg !642
CALL [call func]:   %86 = call i64 @strlen(i8* %85) #4, !dbg !642
STORE [*p=q]:   store i64 %86, i64* @z_len, align 8, !dbg !642
LOAD [p=*q]:   %87 = load i8** @rpl_optarg, align 8, !dbg !643
STORE [*p=q]:   store i8* %87, i8** @z_suffix, align 8, !dbg !643
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !645
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !645
STORE [*p=q]:   store i32 1, i32* @test, align 4, !dbg !645
LOAD [p=*q]:   %90 = load i32* @verbose, align 4, !dbg !647
STORE [*p=q]:   store i32 %91, i32* @verbose, align 4, !dbg !647
STORE [*p=q]:   store i32 0, i32* @quiet, align 4, !dbg !648
CALL [call func]:   call void @version(), !dbg !650
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !651
LOAD [p=*q]:   %94 = load %struct._IO_FILE** @stderr, align 8, !dbg !652
LOAD [p=*q]:   %95 = load i8** @program_name, align 8, !dbg !652
CALL [call func]:   %96 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([38 x i8]* @.str5, i32 0, i32 0), i8* %95), !dbg !652
CALL [call func]:   call void @try_help() #7, !dbg !653
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
STORE [*p=q]:   store i32 1, i32* @ascii, align 4, !dbg !600
LOAD [p=*q]:   %43 = load i8** @rpl_optarg, align 8, !dbg !603
CALL [call func]:   %44 = call i32 @atoi(i8* %43) #4, !dbg !603
STORE [*p=q]:   store i32 %44, i32* @maxbits, align 4, !dbg !603
LOAD [p=*q]:   %46 = load i8** @rpl_optarg, align 8, !dbg !604
LOAD [p=*q]:   %47 = load i8* %46, !dbg !604
LOAD [p=*q]:   %46 = load i8** @rpl_optarg, align 8, !dbg !604
LOAD [p=*q]:   %47 = load i8* %46, !dbg !604
LOAD [p=*q]:   %50 = load i8** @rpl_optarg, align 8, !dbg !606
LOAD [p=*q]:   %51 = load i8* %50, !dbg !606
LOAD [p=*q]:   %50 = load i8** @rpl_optarg, align 8, !dbg !606
LOAD [p=*q]:   %51 = load i8* %50, !dbg !606
LOAD [p=*q]:   %55 = load i8** @rpl_optarg, align 8, !dbg !606
LOAD [p=*q]:   %56 = load i8* %55, !dbg !606
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stderr, align 8, !dbg !607
LOAD [p=*q]:   %61 = load i8** @program_name, align 8, !dbg !607
CALL [call func]:   %62 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([34 x i8]* @.str4, i32 0, i32 0), i8* %61), !dbg !607
CALL [call func]:   call void @try_help() #7, !dbg !609
LOAD [p=*q]:   %55 = load i8** @rpl_optarg, align 8, !dbg !606
LOAD [p=*q]:   %56 = load i8* %55, !dbg !606
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stderr, align 8, !dbg !607
LOAD [p=*q]:   %61 = load i8** @program_name, align 8, !dbg !607
CALL [call func]:   %62 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([34 x i8]* @.str4, i32 0, i32 0), i8* %61), !dbg !607
CALL [call func]:   call void @try_help() #7, !dbg !609
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stderr, align 8, !dbg !607
LOAD [p=*q]:   %61 = load i8** @program_name, align 8, !dbg !607
CALL [call func]:   %62 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([34 x i8]* @.str4, i32 0, i32 0), i8* %61), !dbg !607
CALL [call func]:   call void @try_help() #7, !dbg !609
LOAD [p=*q]:   %65 = load i8** @rpl_optarg, align 8, !dbg !611
STORE [*p=q]:   store i8* %66, i8** @rpl_optarg, align 8, !dbg !611
LOAD [p=*q]:   %65 = load i8** @rpl_optarg, align 8, !dbg !611
STORE [*p=q]:   store i8* %66, i8** @rpl_optarg, align 8, !dbg !611
LOAD [p=*q]:   %46 = load i8** @rpl_optarg, align 8, !dbg !604
LOAD [p=*q]:   %47 = load i8* %46, !dbg !604
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !613
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !615
LOAD [p=*q]:   %71 = load i32* @force, align 4, !dbg !617
STORE [*p=q]:   store i32 %72, i32* @force, align 4, !dbg !617
CALL [call func]:   call void @help(), !dbg !619
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !620
STORE [*p=q]:   store i32 1, i32* @keep, align 4, !dbg !621
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !623
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !623
STORE [*p=q]:   store i32 1, i32* @list, align 4, !dbg !623
CALL [call func]:   call void @license(), !dbg !625
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !626
STORE [*p=q]:   store i32 1, i32* @no_time, align 4, !dbg !627
STORE [*p=q]:   store i32 0, i32* @no_time, align 4, !dbg !629
STORE [*p=q]:   store i32 1, i32* @no_time, align 4, !dbg !631
STORE [*p=q]:   store i32 1, i32* @no_name, align 4, !dbg !631
STORE [*p=q]:   store i32 0, i32* @no_time, align 4, !dbg !633
STORE [*p=q]:   store i32 0, i32* @no_name, align 4, !dbg !633
STORE [*p=q]:   store i8 1, i8* @presume_input_tty, align 1, !dbg !635
STORE [*p=q]:   store i32 1, i32* @quiet, align 4, !dbg !637
STORE [*p=q]:   store i32 0, i32* @verbose, align 4, !dbg !638
STORE [*p=q]:   store i32 1, i32* @recursive, align 4, !dbg !640
LOAD [p=*q]:   %85 = load i8** @rpl_optarg, align 8, !dbg !642
CALL [call func]:   %86 = call i64 @strlen(i8* %85) #4, !dbg !642
STORE [*p=q]:   store i64 %86, i64* @z_len, align 8, !dbg !642
LOAD [p=*q]:   %87 = load i8** @rpl_optarg, align 8, !dbg !643
STORE [*p=q]:   store i8* %87, i8** @z_suffix, align 8, !dbg !643
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !645
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !645
STORE [*p=q]:   store i32 1, i32* @test, align 4, !dbg !645
LOAD [p=*q]:   %90 = load i32* @verbose, align 4, !dbg !647
STORE [*p=q]:   store i32 %91, i32* @verbose, align 4, !dbg !647
STORE [*p=q]:   store i32 0, i32* @quiet, align 4, !dbg !648
CALL [call func]:   call void @version(), !dbg !650
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !651
LOAD [p=*q]:   %94 = load %struct._IO_FILE** @stderr, align 8, !dbg !652
LOAD [p=*q]:   %95 = load i8** @program_name, align 8, !dbg !652
CALL [call func]:   %96 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([38 x i8]* @.str5, i32 0, i32 0), i8* %95), !dbg !652
CALL [call func]:   call void @try_help() #7, !dbg !653
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
CALL [call func]:   call void @try_help() #7, !dbg !656
LOAD [p=*q]:   %35 = load i32* %2, align 4, !dbg !597
LOAD [p=*q]:   %36 = load i8*** %3, align 8, !dbg !597
CALL [call func]:   %37 = call i32 @rpl_getopt_long(i32 %35, i8** %36, i8* getelementptr inbounds ([34 x i8]* @.str3, i32 0, i32 0), %struct.rpl_option* getelementptr inbounds ([26 x %struct.rpl_option]* bitcast (<{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] } }>* @longopts to [26 x %struct.rpl_option]*), i32 0, i32 0), i32* null) #3, !dbg !597
STORE [*p=q]:   store i32 %37, i32* %optc, align 4, !dbg !597
LOAD [p=*q]:   %103 = load i32* @no_time, align 4, !dbg !658
LOAD [p=*q]:   %106 = load i32* @decompress, align 4, !dbg !659
STORE [*p=q]:   store i32 %106, i32* @no_time, align 4, !dbg !659
LOAD [p=*q]:   %108 = load i32* @no_name, align 4, !dbg !660
LOAD [p=*q]:   %106 = load i32* @decompress, align 4, !dbg !659
STORE [*p=q]:   store i32 %106, i32* @no_time, align 4, !dbg !659
LOAD [p=*q]:   %108 = load i32* @no_name, align 4, !dbg !660
LOAD [p=*q]:   %108 = load i32* @no_name, align 4, !dbg !660
LOAD [p=*q]:   %111 = load i32* @decompress, align 4, !dbg !661
STORE [*p=q]:   store i32 %111, i32* @no_name, align 4, !dbg !661
LOAD [p=*q]:   %113 = load i32* %2, align 4, !dbg !662
LOAD [p=*q]:   %114 = load i32* @rpl_optind, align 4, !dbg !662
STORE [*p=q]:   store i32 %115, i32* %file_count, align 4, !dbg !662
LOAD [p=*q]:   %116 = load i32* @ascii, align 4, !dbg !663
LOAD [p=*q]:   %111 = load i32* @decompress, align 4, !dbg !661
STORE [*p=q]:   store i32 %111, i32* @no_name, align 4, !dbg !661
LOAD [p=*q]:   %113 = load i32* %2, align 4, !dbg !662
LOAD [p=*q]:   %114 = load i32* @rpl_optind, align 4, !dbg !662
STORE [*p=q]:   store i32 %115, i32* %file_count, align 4, !dbg !662
LOAD [p=*q]:   %116 = load i32* @ascii, align 4, !dbg !663
LOAD [p=*q]:   %113 = load i32* %2, align 4, !dbg !662
LOAD [p=*q]:   %114 = load i32* @rpl_optind, align 4, !dbg !662
STORE [*p=q]:   store i32 %115, i32* %file_count, align 4, !dbg !662
LOAD [p=*q]:   %116 = load i32* @ascii, align 4, !dbg !663
LOAD [p=*q]:   %119 = load i32* @quiet, align 4, !dbg !663
LOAD [p=*q]:   %126 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %119 = load i32* @quiet, align 4, !dbg !663
LOAD [p=*q]:   %126 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %122 = load %struct._IO_FILE** @stderr, align 8, !dbg !664
LOAD [p=*q]:   %123 = load i8** @program_name, align 8, !dbg !664
CALL [call func]:   %124 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %122, i8* getelementptr inbounds ([43 x i8]* @.str6, i32 0, i32 0), i8* %123), !dbg !664
LOAD [p=*q]:   %122 = load %struct._IO_FILE** @stderr, align 8, !dbg !664
LOAD [p=*q]:   %123 = load i8** @program_name, align 8, !dbg !664
CALL [call func]:   %124 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %122, i8* getelementptr inbounds ([43 x i8]* @.str6, i32 0, i32 0), i8* %123), !dbg !664
LOAD [p=*q]:   %126 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %126 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %132 = load %struct._IO_FILE** @stderr, align 8, !dbg !668
LOAD [p=*q]:   %133 = load i8** @program_name, align 8, !dbg !668
LOAD [p=*q]:   %134 = load i8** @z_suffix, align 8, !dbg !668
CALL [call func]:   %135 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([25 x i8]* @.str7, i32 0, i32 0), i8* %133, i8* %134), !dbg !668
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !670
LOAD [p=*q]:   %129 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %129 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %132 = load %struct._IO_FILE** @stderr, align 8, !dbg !668
LOAD [p=*q]:   %133 = load i8** @program_name, align 8, !dbg !668
LOAD [p=*q]:   %134 = load i8** @z_suffix, align 8, !dbg !668
CALL [call func]:   %135 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([25 x i8]* @.str7, i32 0, i32 0), i8* %133, i8* %134), !dbg !668
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !670
LOAD [p=*q]:   %137 = load i32* @do_lzw, align 4, !dbg !671
LOAD [p=*q]:   %132 = load %struct._IO_FILE** @stderr, align 8, !dbg !668
LOAD [p=*q]:   %133 = load i8** @program_name, align 8, !dbg !668
LOAD [p=*q]:   %134 = load i8** @z_suffix, align 8, !dbg !668
CALL [call func]:   %135 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([25 x i8]* @.str7, i32 0, i32 0), i8* %133, i8* %134), !dbg !668
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !670
LOAD [p=*q]:   %137 = load i32* @do_lzw, align 4, !dbg !671
LOAD [p=*q]:   %140 = load i32* @decompress, align 4, !dbg !671
LOAD [p=*q]:   %144 = load i32* @quiet, align 4, !dbg !673
STORE [*p=q]:   store volatile i32 %146, i32* @exiting_signal, align 4, !dbg !673
CALL [call func]:   call void @install_signal_handlers(), !dbg !674
LOAD [p=*q]:   %147 = load i32* %file_count, align 4, !dbg !675
LOAD [p=*q]:   %140 = load i32* @decompress, align 4, !dbg !671
LOAD [p=*q]:   %144 = load i32* @quiet, align 4, !dbg !673
STORE [*p=q]:   store volatile i32 %146, i32* @exiting_signal, align 4, !dbg !673
CALL [call func]:   call void @install_signal_handlers(), !dbg !674
LOAD [p=*q]:   %147 = load i32* %file_count, align 4, !dbg !675
STORE [*p=q]:   store i32 (i32, i32)* @lzw, i32 (i32, i32)** @work, align 8, !dbg !672
STORE [*p=q]:   store i32 (i32, i32)* @lzw, i32 (i32, i32)** @work, align 8, !dbg !672
LOAD [p=*q]:   %144 = load i32* @quiet, align 4, !dbg !673
STORE [*p=q]:   store volatile i32 %146, i32* @exiting_signal, align 4, !dbg !673
CALL [call func]:   call void @install_signal_handlers(), !dbg !674
LOAD [p=*q]:   %147 = load i32* %file_count, align 4, !dbg !675
LOAD [p=*q]:   %144 = load i32* @quiet, align 4, !dbg !673
STORE [*p=q]:   store volatile i32 %146, i32* @exiting_signal, align 4, !dbg !673
CALL [call func]:   call void @install_signal_handlers(), !dbg !674
LOAD [p=*q]:   %147 = load i32* %file_count, align 4, !dbg !675
LOAD [p=*q]:   %150 = load i32* @to_stdout, align 4, !dbg !676
CALL [call func]:   call void @treat_stdin(), !dbg !685
LOAD [p=*q]:   %150 = load i32* @to_stdout, align 4, !dbg !676
LOAD [p=*q]:   %153 = load i32* @test, align 4, !dbg !676
LOAD [p=*q]:   %153 = load i32* @test, align 4, !dbg !676
LOAD [p=*q]:   %156 = load i32* @list, align 4, !dbg !676
LOAD [p=*q]:   %156 = load i32* @list, align 4, !dbg !676
LOAD [p=*q]:   %159 = load i32* @decompress, align 4, !dbg !676
LOAD [p=*q]:   %159 = load i32* @decompress, align 4, !dbg !676
LOAD [p=*q]:   %162 = load i32* @ascii, align 4, !dbg !676
LOAD [p=*q]:   %162 = load i32* @ascii, align 4, !dbg !676
LOAD [p=*q]:   %167 = load i32* @rpl_optind, align 4, !dbg !680
LOAD [p=*q]:   %168 = load i32* %2, align 4, !dbg !680
LOAD [p=*q]:   %167 = load i32* @rpl_optind, align 4, !dbg !680
LOAD [p=*q]:   %168 = load i32* %2, align 4, !dbg !680
LOAD [p=*q]:   %171 = load i32* @rpl_optind, align 4, !dbg !681
STORE [*p=q]:   store i32 %172, i32* @rpl_optind, align 4, !dbg !681
LOAD [p=*q]:   %174 = load i8*** %3, align 8, !dbg !681
LOAD [p=*q]:   %176 = load i8** %175, !dbg !681
CALL [call func]:   call void @treat_file(i8* %176), !dbg !681
LOAD [p=*q]:   %171 = load i32* @rpl_optind, align 4, !dbg !681
STORE [*p=q]:   store i32 %172, i32* @rpl_optind, align 4, !dbg !681
LOAD [p=*q]:   %174 = load i8*** %3, align 8, !dbg !681
LOAD [p=*q]:   %176 = load i8** %175, !dbg !681
CALL [call func]:   call void @treat_file(i8* %176), !dbg !681
LOAD [p=*q]:   %167 = load i32* @rpl_optind, align 4, !dbg !680
LOAD [p=*q]:   %168 = load i32* %2, align 4, !dbg !680
LOAD [p=*q]:   %180 = load i32* @list, align 4, !dbg !687
CALL [call func]:   call void @treat_stdin(), !dbg !685
LOAD [p=*q]:   %180 = load i32* @list, align 4, !dbg !687
LOAD [p=*q]:   %180 = load i32* @list, align 4, !dbg !687
LOAD [p=*q]:   %183 = load i32* @quiet, align 4, !dbg !687
LOAD [p=*q]:   %190 = load i32* @exit_code, align 4, !dbg !691
CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
LOAD [p=*q]:   %183 = load i32* @quiet, align 4, !dbg !687
LOAD [p=*q]:   %190 = load i32* @exit_code, align 4, !dbg !691
CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
LOAD [p=*q]:   %186 = load i32* %file_count, align 4, !dbg !687
LOAD [p=*q]:   %186 = load i32* %file_count, align 4, !dbg !687
CALL [call func]:   call void @do_list(i32 -1, i32 -1), !dbg !688
LOAD [p=*q]:   %190 = load i32* @exit_code, align 4, !dbg !691
CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
CALL [call func]:   call void @do_list(i32 -1, i32 -1), !dbg !688
LOAD [p=*q]:   %190 = load i32* @exit_code, align 4, !dbg !691
CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
LOAD [p=*q]:   %190 = load i32* @exit_code, align 4, !dbg !691
CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
LOAD [p=*q]:   %192 = load i32* %1, !dbg !692
Analyzing return instruction for main
	  %192 = load i32* %1, !dbg !692
[Processing][Function][longest_match]
STORE [*p=q]:   store i32 %cur_match, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !576
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %chain_length}, metadata !577), !dbg !579
LOAD [p=*q]:   %2 = load i32* @max_chain_length, align 4, !dbg !580
STORE [*p=q]:   store i32 %2, i32* %chain_length, align 4, !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %scan}, metadata !581), !dbg !584
LOAD [p=*q]:   %3 = load i32* @strstart, align 4, !dbg !585
STORE [*p=q]:   store i8* %5, i8** %scan, align 8, !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %match}, metadata !586), !dbg !587
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !588), !dbg !589
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %best_len}, metadata !590), !dbg !591
LOAD [p=*q]:   %6 = load i32* @prev_length, align 4, !dbg !592
STORE [*p=q]:   store i32 %6, i32* %best_len, align 4, !dbg !592
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %limit}, metadata !593), !dbg !594
LOAD [p=*q]:   %7 = load i32* @strstart, align 4, !dbg !595
LOAD [p=*q]:   %10 = load i32* @strstart, align 4, !dbg !595
LOAD [p=*q]:   %10 = load i32* @strstart, align 4, !dbg !595
STORE [*p=q]:   store i32 %14, i32* %limit, align 4, !dbg !595
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %strend}, metadata !596), !dbg !597
LOAD [p=*q]:   %15 = load i32* @strstart, align 4, !dbg !598
STORE [*p=q]:   store i8* %18, i8** %strend, align 8, !dbg !598
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %scan_end1}, metadata !599), !dbg !600
LOAD [p=*q]:   %19 = load i32* %best_len, align 4, !dbg !601
LOAD [p=*q]:   %22 = load i8** %scan, align 8, !dbg !601
LOAD [p=*q]:   %24 = load i8* %23, !dbg !601
STORE [*p=q]:   store i8 %24, i8* %scan_end1, align 1, !dbg !601
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %scan_end}, metadata !602), !dbg !603
LOAD [p=*q]:   %25 = load i32* %best_len, align 4, !dbg !604
LOAD [p=*q]:   %27 = load i8** %scan, align 8, !dbg !604
LOAD [p=*q]:   %29 = load i8* %28, !dbg !604
STORE [*p=q]:   store i8 %29, i8* %scan_end, align 1, !dbg !604
LOAD [p=*q]:   %30 = load i32* @prev_length, align 4, !dbg !605
LOAD [p=*q]:   %31 = load i32* @good_match, align 4, !dbg !605
STORE [*p=q]:   store i32 %14, i32* %limit, align 4, !dbg !595
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %strend}, metadata !596), !dbg !597
LOAD [p=*q]:   %15 = load i32* @strstart, align 4, !dbg !598
STORE [*p=q]:   store i8* %18, i8** %strend, align 8, !dbg !598
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %scan_end1}, metadata !599), !dbg !600
LOAD [p=*q]:   %19 = load i32* %best_len, align 4, !dbg !601
LOAD [p=*q]:   %22 = load i8** %scan, align 8, !dbg !601
LOAD [p=*q]:   %24 = load i8* %23, !dbg !601
STORE [*p=q]:   store i8 %24, i8* %scan_end1, align 1, !dbg !601
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %scan_end}, metadata !602), !dbg !603
LOAD [p=*q]:   %25 = load i32* %best_len, align 4, !dbg !604
LOAD [p=*q]:   %27 = load i8** %scan, align 8, !dbg !604
LOAD [p=*q]:   %29 = load i8* %28, !dbg !604
STORE [*p=q]:   store i8 %29, i8* %scan_end, align 1, !dbg !604
LOAD [p=*q]:   %30 = load i32* @prev_length, align 4, !dbg !605
LOAD [p=*q]:   %31 = load i32* @good_match, align 4, !dbg !605
STORE [*p=q]:   store i32 %14, i32* %limit, align 4, !dbg !595
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %strend}, metadata !596), !dbg !597
LOAD [p=*q]:   %15 = load i32* @strstart, align 4, !dbg !598
STORE [*p=q]:   store i8* %18, i8** %strend, align 8, !dbg !598
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %scan_end1}, metadata !599), !dbg !600
LOAD [p=*q]:   %19 = load i32* %best_len, align 4, !dbg !601
LOAD [p=*q]:   %22 = load i8** %scan, align 8, !dbg !601
LOAD [p=*q]:   %24 = load i8* %23, !dbg !601
STORE [*p=q]:   store i8 %24, i8* %scan_end1, align 1, !dbg !601
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %scan_end}, metadata !602), !dbg !603
LOAD [p=*q]:   %25 = load i32* %best_len, align 4, !dbg !604
LOAD [p=*q]:   %27 = load i8** %scan, align 8, !dbg !604
LOAD [p=*q]:   %29 = load i8* %28, !dbg !604
STORE [*p=q]:   store i8 %29, i8* %scan_end, align 1, !dbg !604
LOAD [p=*q]:   %30 = load i32* @prev_length, align 4, !dbg !605
LOAD [p=*q]:   %31 = load i32* @good_match, align 4, !dbg !605
LOAD [p=*q]:   %34 = load i32* %chain_length, align 4, !dbg !606
STORE [*p=q]:   store i32 %35, i32* %chain_length, align 4, !dbg !606
LOAD [p=*q]:   %34 = load i32* %chain_length, align 4, !dbg !606
STORE [*p=q]:   store i32 %35, i32* %chain_length, align 4, !dbg !606
LOAD [p=*q]:   %38 = load i32* %1, align 4, !dbg !610
STORE [*p=q]:   store i8* %40, i8** %match, align 8, !dbg !610
LOAD [p=*q]:   %41 = load i32* %best_len, align 4, !dbg !612
LOAD [p=*q]:   %43 = load i8** %match, align 8, !dbg !612
LOAD [p=*q]:   %45 = load i8* %44, !dbg !612
LOAD [p=*q]:   %47 = load i8* %scan_end, align 1, !dbg !612
LOAD [p=*q]:   %38 = load i32* %1, align 4, !dbg !610
STORE [*p=q]:   store i8* %40, i8** %match, align 8, !dbg !610
LOAD [p=*q]:   %41 = load i32* %best_len, align 4, !dbg !612
LOAD [p=*q]:   %43 = load i8** %match, align 8, !dbg !612
LOAD [p=*q]:   %45 = load i8* %44, !dbg !612
LOAD [p=*q]:   %47 = load i8* %scan_end, align 1, !dbg !612
LOAD [p=*q]:   %51 = load i32* %best_len, align 4, !dbg !612
LOAD [p=*q]:   %54 = load i8** %match, align 8, !dbg !612
LOAD [p=*q]:   %56 = load i8* %55, !dbg !612
LOAD [p=*q]:   %58 = load i8* %scan_end1, align 1, !dbg !612
LOAD [p=*q]:   %51 = load i32* %best_len, align 4, !dbg !612
LOAD [p=*q]:   %54 = load i8** %match, align 8, !dbg !612
LOAD [p=*q]:   %56 = load i8* %55, !dbg !612
LOAD [p=*q]:   %58 = load i8* %scan_end1, align 1, !dbg !612
LOAD [p=*q]:   %62 = load i8** %match, align 8, !dbg !612
LOAD [p=*q]:   %63 = load i8* %62, !dbg !612
LOAD [p=*q]:   %65 = load i8** %scan, align 8, !dbg !612
LOAD [p=*q]:   %66 = load i8* %65, !dbg !612
LOAD [p=*q]:   %62 = load i8** %match, align 8, !dbg !612
LOAD [p=*q]:   %63 = load i8* %62, !dbg !612
LOAD [p=*q]:   %65 = load i8** %scan, align 8, !dbg !612
LOAD [p=*q]:   %66 = load i8* %65, !dbg !612
LOAD [p=*q]:   %70 = load i8** %match, align 8, !dbg !612
STORE [*p=q]:   store i8* %71, i8** %match, align 8, !dbg !612
LOAD [p=*q]:   %72 = load i8* %71, !dbg !612
LOAD [p=*q]:   %74 = load i8** %scan, align 8, !dbg !612
LOAD [p=*q]:   %76 = load i8* %75, !dbg !612
LOAD [p=*q]:   %70 = load i8** %match, align 8, !dbg !612
STORE [*p=q]:   store i8* %71, i8** %match, align 8, !dbg !612
LOAD [p=*q]:   %72 = load i8* %71, !dbg !612
LOAD [p=*q]:   %74 = load i8** %scan, align 8, !dbg !612
LOAD [p=*q]:   %76 = load i8* %75, !dbg !612
LOAD [p=*q]:   %81 = load i8** %scan, align 8, !dbg !614
STORE [*p=q]:   store i8* %82, i8** %scan, align 8, !dbg !614
LOAD [p=*q]:   %83 = load i8** %match, align 8, !dbg !614
STORE [*p=q]:   store i8* %84, i8** %match, align 8, !dbg !614
LOAD [p=*q]:   %206 = load i32* %1, align 4, !dbg !629
LOAD [p=*q]:   %210 = load i16* %209, align 1, !dbg !629
STORE [*p=q]:   store i32 %211, i32* %1, align 4, !dbg !629
LOAD [p=*q]:   %212 = load i32* %limit, align 4, !dbg !629
LOAD [p=*q]:   %81 = load i8** %scan, align 8, !dbg !614
STORE [*p=q]:   store i8* %82, i8** %scan, align 8, !dbg !614
LOAD [p=*q]:   %83 = load i8** %match, align 8, !dbg !614
STORE [*p=q]:   store i8* %84, i8** %match, align 8, !dbg !614
LOAD [p=*q]:   %87 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %88, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %89 = load i8* %88, !dbg !616
LOAD [p=*q]:   %91 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %92, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %93 = load i8* %92, !dbg !616
LOAD [p=*q]:   %87 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %88, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %89 = load i8* %88, !dbg !616
LOAD [p=*q]:   %91 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %92, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %93 = load i8* %92, !dbg !616
LOAD [p=*q]:   %97 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %98, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %99 = load i8* %98, !dbg !616
LOAD [p=*q]:   %101 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %102, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %103 = load i8* %102, !dbg !616
LOAD [p=*q]:   %97 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %98, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %99 = load i8* %98, !dbg !616
LOAD [p=*q]:   %101 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %102, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %103 = load i8* %102, !dbg !616
LOAD [p=*q]:   %107 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %108, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %109 = load i8* %108, !dbg !616
LOAD [p=*q]:   %111 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %112, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %113 = load i8* %112, !dbg !616
LOAD [p=*q]:   %107 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %108, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %109 = load i8* %108, !dbg !616
LOAD [p=*q]:   %111 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %112, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %113 = load i8* %112, !dbg !616
LOAD [p=*q]:   %117 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %118, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %119 = load i8* %118, !dbg !616
LOAD [p=*q]:   %121 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %122, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %123 = load i8* %122, !dbg !616
LOAD [p=*q]:   %117 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %118, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %119 = load i8* %118, !dbg !616
LOAD [p=*q]:   %121 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %122, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %123 = load i8* %122, !dbg !616
LOAD [p=*q]:   %127 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %128, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %129 = load i8* %128, !dbg !616
LOAD [p=*q]:   %131 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %132, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %133 = load i8* %132, !dbg !616
LOAD [p=*q]:   %127 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %128, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %129 = load i8* %128, !dbg !616
LOAD [p=*q]:   %131 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %132, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %133 = load i8* %132, !dbg !616
LOAD [p=*q]:   %137 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %138, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %139 = load i8* %138, !dbg !616
LOAD [p=*q]:   %141 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %142, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %143 = load i8* %142, !dbg !616
LOAD [p=*q]:   %137 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %138, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %139 = load i8* %138, !dbg !616
LOAD [p=*q]:   %141 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %142, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %143 = load i8* %142, !dbg !616
LOAD [p=*q]:   %147 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %148, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %149 = load i8* %148, !dbg !616
LOAD [p=*q]:   %151 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %152, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %153 = load i8* %152, !dbg !616
LOAD [p=*q]:   %147 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %148, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %149 = load i8* %148, !dbg !616
LOAD [p=*q]:   %151 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %152, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %153 = load i8* %152, !dbg !616
LOAD [p=*q]:   %157 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %158, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %159 = load i8* %158, !dbg !616
LOAD [p=*q]:   %161 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %162, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %163 = load i8* %162, !dbg !616
LOAD [p=*q]:   %157 = load i8** %scan, align 8, !dbg !616
STORE [*p=q]:   store i8* %158, i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %159 = load i8* %158, !dbg !616
LOAD [p=*q]:   %161 = load i8** %match, align 8, !dbg !616
STORE [*p=q]:   store i8* %162, i8** %match, align 8, !dbg !616
LOAD [p=*q]:   %163 = load i8* %162, !dbg !616
LOAD [p=*q]:   %167 = load i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %168 = load i8** %strend, align 8, !dbg !616
LOAD [p=*q]:   %167 = load i8** %scan, align 8, !dbg !616
LOAD [p=*q]:   %168 = load i8** %strend, align 8, !dbg !616
LOAD [p=*q]:   %173 = load i8** %strend, align 8, !dbg !618
LOAD [p=*q]:   %174 = load i8** %scan, align 8, !dbg !618
STORE [*p=q]:   store i32 %179, i32* %len, align 4, !dbg !618
LOAD [p=*q]:   %180 = load i8** %strend, align 8, !dbg !619
STORE [*p=q]:   store i8* %181, i8** %scan, align 8, !dbg !619
LOAD [p=*q]:   %182 = load i32* %len, align 4, !dbg !620
LOAD [p=*q]:   %183 = load i32* %best_len, align 4, !dbg !620
LOAD [p=*q]:   %173 = load i8** %strend, align 8, !dbg !618
LOAD [p=*q]:   %174 = load i8** %scan, align 8, !dbg !618
STORE [*p=q]:   store i32 %179, i32* %len, align 4, !dbg !618
LOAD [p=*q]:   %180 = load i8** %strend, align 8, !dbg !619
STORE [*p=q]:   store i8* %181, i8** %scan, align 8, !dbg !619
LOAD [p=*q]:   %182 = load i32* %len, align 4, !dbg !620
LOAD [p=*q]:   %183 = load i32* %best_len, align 4, !dbg !620
LOAD [p=*q]:   %186 = load i32* %1, align 4, !dbg !621
STORE [*p=q]:   store i32 %186, i32* @match_start, align 4, !dbg !621
LOAD [p=*q]:   %187 = load i32* %len, align 4, !dbg !623
STORE [*p=q]:   store i32 %187, i32* %best_len, align 4, !dbg !623
LOAD [p=*q]:   %188 = load i32* %len, align 4, !dbg !624
LOAD [p=*q]:   %189 = load i32* @nice_match, align 4, !dbg !624
LOAD [p=*q]:   %186 = load i32* %1, align 4, !dbg !621
STORE [*p=q]:   store i32 %186, i32* @match_start, align 4, !dbg !621
LOAD [p=*q]:   %187 = load i32* %len, align 4, !dbg !623
STORE [*p=q]:   store i32 %187, i32* %best_len, align 4, !dbg !623
LOAD [p=*q]:   %188 = load i32* %len, align 4, !dbg !624
LOAD [p=*q]:   %189 = load i32* @nice_match, align 4, !dbg !624
LOAD [p=*q]:   %193 = load i32* %best_len, align 4, !dbg !626
LOAD [p=*q]:   %196 = load i8** %scan, align 8, !dbg !626
LOAD [p=*q]:   %198 = load i8* %197, !dbg !626
STORE [*p=q]:   store i8 %198, i8* %scan_end1, align 1, !dbg !626
LOAD [p=*q]:   %199 = load i32* %best_len, align 4, !dbg !627
LOAD [p=*q]:   %201 = load i8** %scan, align 8, !dbg !627
LOAD [p=*q]:   %203 = load i8* %202, !dbg !627
STORE [*p=q]:   store i8 %203, i8* %scan_end, align 1, !dbg !627
LOAD [p=*q]:   %221 = load i32* %best_len, align 4, !dbg !630
Analyzing return instruction for longest_match
	  %221 = load i32* %best_len, align 4, !dbg !630
LOAD [p=*q]:   %193 = load i32* %best_len, align 4, !dbg !626
LOAD [p=*q]:   %196 = load i8** %scan, align 8, !dbg !626
LOAD [p=*q]:   %198 = load i8* %197, !dbg !626
STORE [*p=q]:   store i8 %198, i8* %scan_end1, align 1, !dbg !626
LOAD [p=*q]:   %199 = load i32* %best_len, align 4, !dbg !627
LOAD [p=*q]:   %201 = load i8** %scan, align 8, !dbg !627
LOAD [p=*q]:   %203 = load i8* %202, !dbg !627
STORE [*p=q]:   store i8 %203, i8* %scan_end, align 1, !dbg !627
LOAD [p=*q]:   %206 = load i32* %1, align 4, !dbg !629
LOAD [p=*q]:   %210 = load i16* %209, align 1, !dbg !629
STORE [*p=q]:   store i32 %211, i32* %1, align 4, !dbg !629
LOAD [p=*q]:   %212 = load i32* %limit, align 4, !dbg !629
LOAD [p=*q]:   %206 = load i32* %1, align 4, !dbg !629
LOAD [p=*q]:   %210 = load i16* %209, align 1, !dbg !629
STORE [*p=q]:   store i32 %211, i32* %1, align 4, !dbg !629
LOAD [p=*q]:   %212 = load i32* %limit, align 4, !dbg !629
LOAD [p=*q]:   %215 = load i32* %chain_length, align 4, !dbg !629
STORE [*p=q]:   store i32 %216, i32* %chain_length, align 4, !dbg !629
LOAD [p=*q]:   %215 = load i32* %chain_length, align 4, !dbg !629
STORE [*p=q]:   store i32 %216, i32* %chain_length, align 4, !dbg !629
LOAD [p=*q]:   %38 = load i32* %1, align 4, !dbg !610
STORE [*p=q]:   store i8* %40, i8** %match, align 8, !dbg !610
LOAD [p=*q]:   %41 = load i32* %best_len, align 4, !dbg !612
LOAD [p=*q]:   %43 = load i8** %match, align 8, !dbg !612
LOAD [p=*q]:   %45 = load i8* %44, !dbg !612
LOAD [p=*q]:   %47 = load i8* %scan_end, align 1, !dbg !612
LOAD [p=*q]:   %221 = load i32* %best_len, align 4, !dbg !630
Analyzing return instruction for longest_match
	  %221 = load i32* %best_len, align 4, !dbg !630
LOAD [p=*q]:   %221 = load i32* %best_len, align 4, !dbg !630
Analyzing return instruction for longest_match
	  %221 = load i32* %best_len, align 4, !dbg !630
[Processing][Function][treat_file]
STORE [*p=q]:   store i8* %iname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %4 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([2 x i8]* @.str26, i32 0, i32 0)) #4, !dbg !576
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %cflag}, metadata !578), !dbg !580
LOAD [p=*q]:   %7 = load i32* @to_stdout, align 4, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %cflag, align 4, !dbg !581
CALL [call func]:   call void @treat_stdin(), !dbg !582
LOAD [p=*q]:   %8 = load i32* %cflag, align 4, !dbg !583
STORE [*p=q]:   store i32 %8, i32* @to_stdout, align 4, !dbg !583
LOAD [p=*q]:   %10 = load i8** %1, align 8, !dbg !585
CALL [call func]:   %11 = call i32 @open_input_file(i8* %10, %struct.stat* @istat), !dbg !585
STORE [*p=q]:   store i32 %11, i32* @ifd, align 4, !dbg !585
LOAD [p=*q]:   %12 = load i32* @ifd, align 4, !dbg !586
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %cflag}, metadata !578), !dbg !580
LOAD [p=*q]:   %7 = load i32* @to_stdout, align 4, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %cflag, align 4, !dbg !581
CALL [call func]:   call void @treat_stdin(), !dbg !582
LOAD [p=*q]:   %8 = load i32* %cflag, align 4, !dbg !583
STORE [*p=q]:   store i32 %8, i32* @to_stdout, align 4, !dbg !583
Analyzing return instruction for treat_file
No return value for: treat_file
LOAD [p=*q]:   %10 = load i8** %1, align 8, !dbg !585
CALL [call func]:   %11 = call i32 @open_input_file(i8* %10, %struct.stat* @istat), !dbg !585
STORE [*p=q]:   store i32 %11, i32* @ifd, align 4, !dbg !585
LOAD [p=*q]:   %12 = load i32* @ifd, align 4, !dbg !586
LOAD [p=*q]:   %16 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !588
Analyzing return instruction for treat_file
No return value for: treat_file
LOAD [p=*q]:   %16 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @recursive, align 4, !dbg !589
LOAD [p=*q]:   %40 = load i32* @to_stdout, align 4, !dbg !598
LOAD [p=*q]:   %20 = load i32* @recursive, align 4, !dbg !589
LOAD [p=*q]:   %23 = load i32* @ifd, align 4, !dbg !591
LOAD [p=*q]:   %24 = load i8** %1, align 8, !dbg !591
CALL [call func]:   call void @treat_dir(i32 %23, i8* %24), !dbg !591
LOAD [p=*q]:   %26 = load i32* @ifd, align 4, !dbg !594
CALL [call func]:   %27 = call i32 @close(i32 %26), !dbg !594
LOAD [p=*q]:   %28 = load i32* @quiet, align 4, !dbg !595
LOAD [p=*q]:   %23 = load i32* @ifd, align 4, !dbg !591
LOAD [p=*q]:   %24 = load i8** %1, align 8, !dbg !591
CALL [call func]:   call void @treat_dir(i32 %23, i8* %24), !dbg !591
Analyzing return instruction for treat_file
No return value for: treat_file
LOAD [p=*q]:   %26 = load i32* @ifd, align 4, !dbg !594
CALL [call func]:   %27 = call i32 @close(i32 %26), !dbg !594
LOAD [p=*q]:   %28 = load i32* @quiet, align 4, !dbg !595
LOAD [p=*q]:   %35 = load i32* @exit_code, align 4, !dbg !595
LOAD [p=*q]:   %31 = load %struct._IO_FILE** @stderr, align 8, !dbg !595
LOAD [p=*q]:   %32 = load i8** @program_name, align 8, !dbg !595
CALL [call func]:   %33 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([34 x i8]* @.str27, i32 0, i32 0), i8* %32, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !595
LOAD [p=*q]:   %31 = load %struct._IO_FILE** @stderr, align 8, !dbg !595
LOAD [p=*q]:   %32 = load i8** @program_name, align 8, !dbg !595
CALL [call func]:   %33 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([34 x i8]* @.str27, i32 0, i32 0), i8* %32, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !595
LOAD [p=*q]:   %35 = load i32* @exit_code, align 4, !dbg !595
LOAD [p=*q]:   %35 = load i32* @exit_code, align 4, !dbg !595
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !595
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !595
Analyzing return instruction for treat_file
No return value for: treat_file
LOAD [p=*q]:   %40 = load i32* @to_stdout, align 4, !dbg !598
LOAD [p=*q]:   %142 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !634
LOAD [p=*q]:   %43 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !599
LOAD [p=*q]:   %43 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !599
LOAD [p=*q]:   %61 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !606
LOAD [p=*q]:   %47 = load i32* @quiet, align 4, !dbg !601
LOAD [p=*q]:   %47 = load i32* @quiet, align 4, !dbg !601
LOAD [p=*q]:   %54 = load i32* @exit_code, align 4, !dbg !601
LOAD [p=*q]:   %50 = load %struct._IO_FILE** @stderr, align 8, !dbg !601
LOAD [p=*q]:   %51 = load i8** @program_name, align 8, !dbg !601
CALL [call func]:   %52 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([55 x i8]* @.str28, i32 0, i32 0), i8* %51, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !601
LOAD [p=*q]:   %50 = load %struct._IO_FILE** @stderr, align 8, !dbg !601
LOAD [p=*q]:   %51 = load i8** @program_name, align 8, !dbg !601
CALL [call func]:   %52 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([55 x i8]* @.str28, i32 0, i32 0), i8* %51, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !601
LOAD [p=*q]:   %54 = load i32* @exit_code, align 4, !dbg !601
LOAD [p=*q]:   %54 = load i32* @exit_code, align 4, !dbg !601
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !601
LOAD [p=*q]:   %58 = load i32* @ifd, align 4, !dbg !604
CALL [call func]:   %59 = call i32 @close(i32 %58), !dbg !604
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !601
LOAD [p=*q]:   %58 = load i32* @ifd, align 4, !dbg !604
CALL [call func]:   %59 = call i32 @close(i32 %58), !dbg !604
LOAD [p=*q]:   %58 = load i32* @ifd, align 4, !dbg !604
CALL [call func]:   %59 = call i32 @close(i32 %58), !dbg !604
Analyzing return instruction for treat_file
No return value for: treat_file
LOAD [p=*q]:   %61 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !606
LOAD [p=*q]:   %65 = load i32* @quiet, align 4, !dbg !607
LOAD [p=*q]:   %79 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !612
LOAD [p=*q]:   %65 = load i32* @quiet, align 4, !dbg !607
LOAD [p=*q]:   %72 = load i32* @exit_code, align 4, !dbg !607
LOAD [p=*q]:   %68 = load %struct._IO_FILE** @stderr, align 8, !dbg !607
LOAD [p=*q]:   %69 = load i8** @program_name, align 8, !dbg !607
CALL [call func]:   %70 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([46 x i8]* @.str29, i32 0, i32 0), i8* %69, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !607
LOAD [p=*q]:   %68 = load %struct._IO_FILE** @stderr, align 8, !dbg !607
LOAD [p=*q]:   %69 = load i8** @program_name, align 8, !dbg !607
CALL [call func]:   %70 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([46 x i8]* @.str29, i32 0, i32 0), i8* %69, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !607
LOAD [p=*q]:   %72 = load i32* @exit_code, align 4, !dbg !607
LOAD [p=*q]:   %72 = load i32* @exit_code, align 4, !dbg !607
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !607
LOAD [p=*q]:   %76 = load i32* @ifd, align 4, !dbg !610
CALL [call func]:   %77 = call i32 @close(i32 %76), !dbg !610
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !607
LOAD [p=*q]:   %76 = load i32* @ifd, align 4, !dbg !610
CALL [call func]:   %77 = call i32 @close(i32 %76), !dbg !610
LOAD [p=*q]:   %76 = load i32* @ifd, align 4, !dbg !610
CALL [call func]:   %77 = call i32 @close(i32 %76), !dbg !610
Analyzing return instruction for treat_file
No return value for: treat_file
LOAD [p=*q]:   %79 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !612
LOAD [p=*q]:   %83 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %97 = load i32* @force, align 4, !dbg !618
LOAD [p=*q]:   %83 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %90 = load i32* @exit_code, align 4, !dbg !613
LOAD [p=*q]:   %86 = load %struct._IO_FILE** @stderr, align 8, !dbg !613
LOAD [p=*q]:   %87 = load i8** @program_name, align 8, !dbg !613
CALL [call func]:   %88 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([47 x i8]* @.str30, i32 0, i32 0), i8* %87, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !613
LOAD [p=*q]:   %86 = load %struct._IO_FILE** @stderr, align 8, !dbg !613
LOAD [p=*q]:   %87 = load i8** @program_name, align 8, !dbg !613
CALL [call func]:   %88 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([47 x i8]* @.str30, i32 0, i32 0), i8* %87, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !613
LOAD [p=*q]:   %90 = load i32* @exit_code, align 4, !dbg !613
LOAD [p=*q]:   %90 = load i32* @exit_code, align 4, !dbg !613
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !613
LOAD [p=*q]:   %94 = load i32* @ifd, align 4, !dbg !616
CALL [call func]:   %95 = call i32 @close(i32 %94), !dbg !616
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !613
LOAD [p=*q]:   %94 = load i32* @ifd, align 4, !dbg !616
CALL [call func]:   %95 = call i32 @close(i32 %94), !dbg !616
LOAD [p=*q]:   %94 = load i32* @ifd, align 4, !dbg !616
CALL [call func]:   %95 = call i32 @close(i32 %94), !dbg !616
Analyzing return instruction for treat_file
No return value for: treat_file
LOAD [p=*q]:   %97 = load i32* @force, align 4, !dbg !618
LOAD [p=*q]:   %100 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !619
LOAD [p=*q]:   %100 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !619
LOAD [p=*q]:   %104 = load i32* @quiet, align 4, !dbg !621
LOAD [p=*q]:   %118 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 2), align 8, !dbg !626
LOAD [p=*q]:   %104 = load i32* @quiet, align 4, !dbg !621
LOAD [p=*q]:   %111 = load i32* @exit_code, align 4, !dbg !621
LOAD [p=*q]:   %107 = load %struct._IO_FILE** @stderr, align 8, !dbg !621
LOAD [p=*q]:   %108 = load i8** @program_name, align 8, !dbg !621
CALL [call func]:   %109 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %107, i8* getelementptr inbounds ([46 x i8]* @.str31, i32 0, i32 0), i8* %108, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !621
LOAD [p=*q]:   %107 = load %struct._IO_FILE** @stderr, align 8, !dbg !621
LOAD [p=*q]:   %108 = load i8** @program_name, align 8, !dbg !621
CALL [call func]:   %109 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %107, i8* getelementptr inbounds ([46 x i8]* @.str31, i32 0, i32 0), i8* %108, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !621
LOAD [p=*q]:   %111 = load i32* @exit_code, align 4, !dbg !621
LOAD [p=*q]:   %111 = load i32* @exit_code, align 4, !dbg !621
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !621
LOAD [p=*q]:   %115 = load i32* @ifd, align 4, !dbg !624
CALL [call func]:   %116 = call i32 @close(i32 %115), !dbg !624
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !621
LOAD [p=*q]:   %115 = load i32* @ifd, align 4, !dbg !624
CALL [call func]:   %116 = call i32 @close(i32 %115), !dbg !624
LOAD [p=*q]:   %115 = load i32* @ifd, align 4, !dbg !624
CALL [call func]:   %116 = call i32 @close(i32 %115), !dbg !624
Analyzing return instruction for treat_file
No return value for: treat_file
LOAD [p=*q]:   %118 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 2), align 8, !dbg !626
LOAD [p=*q]:   %121 = load i32* @quiet, align 4, !dbg !627
LOAD [p=*q]:   %121 = load i32* @quiet, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @exit_code, align 4, !dbg !627
LOAD [p=*q]:   %124 = load %struct._IO_FILE** @stderr, align 8, !dbg !627
LOAD [p=*q]:   %125 = load i8** @program_name, align 8, !dbg !627
LOAD [p=*q]:   %126 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 2), align 8, !dbg !627
LOAD [p=*q]:   %128 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 2), align 8, !dbg !627
CALL [call func]:   %131 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %124, i8* getelementptr inbounds ([42 x i8]* @.str32, i32 0, i32 0), i8* %125, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i64 %127, i32 %130), !dbg !627
LOAD [p=*q]:   %124 = load %struct._IO_FILE** @stderr, align 8, !dbg !627
LOAD [p=*q]:   %125 = load i8** @program_name, align 8, !dbg !627
LOAD [p=*q]:   %126 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 2), align 8, !dbg !627
LOAD [p=*q]:   %128 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 2), align 8, !dbg !627
CALL [call func]:   %131 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %124, i8* getelementptr inbounds ([42 x i8]* @.str32, i32 0, i32 0), i8* %125, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i64 %127, i32 %130), !dbg !627
LOAD [p=*q]:   %133 = load i32* @exit_code, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @exit_code, align 4, !dbg !627
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !627
LOAD [p=*q]:   %137 = load i32* @ifd, align 4, !dbg !630
CALL [call func]:   %138 = call i32 @close(i32 %137), !dbg !630
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !627
LOAD [p=*q]:   %137 = load i32* @ifd, align 4, !dbg !630
CALL [call func]:   %138 = call i32 @close(i32 %137), !dbg !630
LOAD [p=*q]:   %137 = load i32* @ifd, align 4, !dbg !630
CALL [call func]:   %138 = call i32 @close(i32 %137), !dbg !630
Analyzing return instruction for treat_file
No return value for: treat_file
LOAD [p=*q]:   %142 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !634
LOAD [p=*q]:   %142 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !634
LOAD [p=*q]:   %146 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 8), align 8, !dbg !634
LOAD [p=*q]:   %146 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 8), align 8, !dbg !634
STORE [*p=q]:   store i64 %149, i64* @ifile_size, align 8, !dbg !634
STORE [*p=q]:   store i64 -1, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !635
LOAD [p=*q]:   %150 = load i32* @no_time, align 4, !dbg !636
STORE [*p=q]:   store i64 %149, i64* @ifile_size, align 8, !dbg !634
STORE [*p=q]:   store i64 -1, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !635
LOAD [p=*q]:   %150 = load i32* @no_time, align 4, !dbg !636
STORE [*p=q]:   store i64 %149, i64* @ifile_size, align 8, !dbg !634
STORE [*p=q]:   store i64 -1, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !635
LOAD [p=*q]:   %150 = load i32* @no_time, align 4, !dbg !636
LOAD [p=*q]:   %153 = load i32* @list, align 4, !dbg !636
CALL [call func]:   %156 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !637
STORE [*p=q]:   store i64 %159, i64* %158, align 1, !dbg !637
STORE [*p=q]:   store i64 %161, i64* %160, align 1, !dbg !637
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.timespec* @time_stamp to i8*), i8* %162, i64 16, i32 8, i1 false), !dbg !637
LOAD [p=*q]:   %153 = load i32* @list, align 4, !dbg !636
CALL [call func]:   %156 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !637
STORE [*p=q]:   store i64 %159, i64* %158, align 1, !dbg !637
STORE [*p=q]:   store i64 %161, i64* %160, align 1, !dbg !637
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.timespec* @time_stamp to i8*), i8* %162, i64 16, i32 8, i1 false), !dbg !637
LOAD [p=*q]:   %164 = load i32* @to_stdout, align 4, !dbg !638
CALL [call func]:   %156 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !637
STORE [*p=q]:   store i64 %159, i64* %158, align 1, !dbg !637
STORE [*p=q]:   store i64 %161, i64* %160, align 1, !dbg !637
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.timespec* @time_stamp to i8*), i8* %162, i64 16, i32 8, i1 false), !dbg !637
LOAD [p=*q]:   %164 = load i32* @to_stdout, align 4, !dbg !638
LOAD [p=*q]:   %164 = load i32* @to_stdout, align 4, !dbg !638
LOAD [p=*q]:   %167 = load i32* @list, align 4, !dbg !638
CALL [call func]:   %175 = call i32 @make_ofname(), !dbg !642
LOAD [p=*q]:   %167 = load i32* @list, align 4, !dbg !638
CALL [call func]:   %175 = call i32 @make_ofname(), !dbg !642
LOAD [p=*q]:   %170 = load i32* @test, align 4, !dbg !638
LOAD [p=*q]:   %170 = load i32* @test, align 4, !dbg !638
CALL [call func]:   %175 = call i32 @make_ofname(), !dbg !642
CALL [call func]:   %173 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !639
CALL [call func]:   %173 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !639
CALL [call func]:   call void @clear_bufs(), !dbg !646
STORE [*p=q]:   store i32 0, i32* @part_nb, align 4, !dbg !647
LOAD [p=*q]:   %182 = load i32* @decompress, align 4, !dbg !648
CALL [call func]:   %175 = call i32 @make_ofname(), !dbg !642
LOAD [p=*q]:   %178 = load i32* @ifd, align 4, !dbg !643
CALL [call func]:   %179 = call i32 @close(i32 %178), !dbg !643
LOAD [p=*q]:   %178 = load i32* @ifd, align 4, !dbg !643
CALL [call func]:   %179 = call i32 @close(i32 %178), !dbg !643
Analyzing return instruction for treat_file
No return value for: treat_file
CALL [call func]:   call void @clear_bufs(), !dbg !646
STORE [*p=q]:   store i32 0, i32* @part_nb, align 4, !dbg !647
LOAD [p=*q]:   %182 = load i32* @decompress, align 4, !dbg !648
CALL [call func]:   call void @clear_bufs(), !dbg !646
STORE [*p=q]:   store i32 0, i32* @part_nb, align 4, !dbg !647
LOAD [p=*q]:   %182 = load i32* @decompress, align 4, !dbg !648
LOAD [p=*q]:   %185 = load i32* @ifd, align 4, !dbg !649
CALL [call func]:   %186 = call i32 @get_method(i32 %185), !dbg !649
STORE [*p=q]:   store i32 %186, i32* @method, align 4, !dbg !649
LOAD [p=*q]:   %187 = load i32* @method, align 4, !dbg !651
LOAD [p=*q]:   %194 = load i32* @list, align 4, !dbg !656
LOAD [p=*q]:   %185 = load i32* @ifd, align 4, !dbg !649
CALL [call func]:   %186 = call i32 @get_method(i32 %185), !dbg !649
STORE [*p=q]:   store i32 %186, i32* @method, align 4, !dbg !649
LOAD [p=*q]:   %187 = load i32* @method, align 4, !dbg !651
LOAD [p=*q]:   %190 = load i32* @ifd, align 4, !dbg !652
CALL [call func]:   %191 = call i32 @close(i32 %190), !dbg !652
LOAD [p=*q]:   %190 = load i32* @ifd, align 4, !dbg !652
CALL [call func]:   %191 = call i32 @close(i32 %190), !dbg !652
Analyzing return instruction for treat_file
No return value for: treat_file
LOAD [p=*q]:   %194 = load i32* @list, align 4, !dbg !656
LOAD [p=*q]:   %194 = load i32* @list, align 4, !dbg !656
LOAD [p=*q]:   %197 = load i32* @ifd, align 4, !dbg !657
LOAD [p=*q]:   %198 = load i32* @method, align 4, !dbg !657
CALL [call func]:   call void @do_list(i32 %197, i32 %198), !dbg !657
LOAD [p=*q]:   %199 = load i32* @ifd, align 4, !dbg !659
CALL [call func]:   %200 = call i32 @close(i32 %199), !dbg !659
LOAD [p=*q]:   %205 = load i32* @to_stdout, align 4, !dbg !662
LOAD [p=*q]:   %197 = load i32* @ifd, align 4, !dbg !657
LOAD [p=*q]:   %198 = load i32* @method, align 4, !dbg !657
CALL [call func]:   call void @do_list(i32 %197, i32 %198), !dbg !657
LOAD [p=*q]:   %199 = load i32* @ifd, align 4, !dbg !659
CALL [call func]:   %200 = call i32 @close(i32 %199), !dbg !659
CALL [call func]:   call void @read_error() #7, !dbg !660
CALL [call func]:   call void @read_error() #7, !dbg !660
Analyzing return instruction for treat_file
No return value for: treat_file
LOAD [p=*q]:   %205 = load i32* @to_stdout, align 4, !dbg !662
LOAD [p=*q]:   %208 = load %struct._IO_FILE** @stdout, align 8, !dbg !663
CALL [call func]:   %209 = call i32 @fileno(%struct._IO_FILE* %208) #3, !dbg !663
STORE [*p=q]:   store i32 %209, i32* @ofd, align 4, !dbg !663
CALL [call func]:   %211 = call i32 @create_outfile(), !dbg !666
LOAD [p=*q]:   %208 = load %struct._IO_FILE** @stdout, align 8, !dbg !663
CALL [call func]:   %209 = call i32 @fileno(%struct._IO_FILE* %208) #3, !dbg !663
STORE [*p=q]:   store i32 %209, i32* @ofd, align 4, !dbg !663
LOAD [p=*q]:   %232 = load i32* @save_orig_name, align 4, !dbg !673
CALL [call func]:   %211 = call i32 @create_outfile(), !dbg !666
LOAD [p=*q]:   %215 = load i32* @decompress, align 4, !dbg !669
Analyzing return instruction for treat_file
No return value for: treat_file
LOAD [p=*q]:   %215 = load i32* @decompress, align 4, !dbg !669
LOAD [p=*q]:   %218 = load i32* @save_orig_name, align 4, !dbg !669
LOAD [p=*q]:   %218 = load i32* @save_orig_name, align 4, !dbg !669
LOAD [p=*q]:   %221 = load i32* @verbose, align 4, !dbg !669
LOAD [p=*q]:   %221 = load i32* @verbose, align 4, !dbg !669
LOAD [p=*q]:   %224 = load i32* @quiet, align 4, !dbg !669
LOAD [p=*q]:   %224 = load i32* @quiet, align 4, !dbg !669
LOAD [p=*q]:   %227 = load %struct._IO_FILE** @stderr, align 8, !dbg !670
LOAD [p=*q]:   %228 = load i8** @program_name, align 8, !dbg !670
CALL [call func]:   %229 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %227, i8* getelementptr inbounds ([25 x i8]* @.str34, i32 0, i32 0), i8* %228, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !670
LOAD [p=*q]:   %227 = load %struct._IO_FILE** @stderr, align 8, !dbg !670
LOAD [p=*q]:   %228 = load i8** @program_name, align 8, !dbg !670
CALL [call func]:   %229 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %227, i8* getelementptr inbounds ([25 x i8]* @.str34, i32 0, i32 0), i8* %228, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !670
LOAD [p=*q]:   %232 = load i32* @save_orig_name, align 4, !dbg !673
LOAD [p=*q]:   %232 = load i32* @save_orig_name, align 4, !dbg !673
LOAD [p=*q]:   %240 = load i32* @verbose, align 4, !dbg !675
LOAD [p=*q]:   %235 = load i32* @no_name, align 4, !dbg !674
STORE [*p=q]:   store i32 %238, i32* @save_orig_name, align 4, !dbg !674
LOAD [p=*q]:   %235 = load i32* @no_name, align 4, !dbg !674
STORE [*p=q]:   store i32 %238, i32* @save_orig_name, align 4, !dbg !674
LOAD [p=*q]:   %240 = load i32* @verbose, align 4, !dbg !675
LOAD [p=*q]:   %240 = load i32* @verbose, align 4, !dbg !675
LOAD [p=*q]:   %243 = load %struct._IO_FILE** @stderr, align 8, !dbg !676
CALL [call func]:   %244 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %243, i8* getelementptr inbounds ([5 x i8]* @.str35, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !676
LOAD [p=*q]:   %243 = load %struct._IO_FILE** @stderr, align 8, !dbg !676
CALL [call func]:   %244 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %243, i8* getelementptr inbounds ([5 x i8]* @.str35, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !676
LOAD [p=*q]:   %247 = load i32 (i32, i32)** @work, align 8, !dbg !681
LOAD [p=*q]:   %248 = load i32* @ifd, align 4, !dbg !681
LOAD [p=*q]:   %249 = load i32* @ofd, align 4, !dbg !681
CALL [call func]:   %250 = call i32 %247(i32 %248, i32 %249), !dbg !681
LOAD [p=*q]:   %247 = load i32 (i32, i32)** @work, align 8, !dbg !681
LOAD [p=*q]:   %248 = load i32* @ifd, align 4, !dbg !681
LOAD [p=*q]:   %249 = load i32* @ofd, align 4, !dbg !681
CALL [call func]:   %250 = call i32 %247(i32 %248, i32 %249), !dbg !681
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !683
CALL [call func]:   %254 = call i32 @input_eof(), !dbg !686
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !683
LOAD [p=*q]:   %265 = load i32* @ifd, align 4, !dbg !693
CALL [call func]:   %266 = call i32 @close(i32 %265), !dbg !693
CALL [call func]:   %254 = call i32 @input_eof(), !dbg !686
LOAD [p=*q]:   %258 = load i32* @ifd, align 4, !dbg !688
CALL [call func]:   %259 = call i32 @get_method(i32 %258), !dbg !688
STORE [*p=q]:   store i32 %259, i32* @method, align 4, !dbg !688
LOAD [p=*q]:   %260 = load i32* @method, align 4, !dbg !689
LOAD [p=*q]:   %265 = load i32* @ifd, align 4, !dbg !693
CALL [call func]:   %266 = call i32 @close(i32 %265), !dbg !693
LOAD [p=*q]:   %258 = load i32* @ifd, align 4, !dbg !688
CALL [call func]:   %259 = call i32 @get_method(i32 %258), !dbg !688
STORE [*p=q]:   store i32 %259, i32* @method, align 4, !dbg !688
LOAD [p=*q]:   %260 = load i32* @method, align 4, !dbg !689
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !691
LOAD [p=*q]:   %265 = load i32* @ifd, align 4, !dbg !693
CALL [call func]:   %266 = call i32 @close(i32 %265), !dbg !693
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !691
LOAD [p=*q]:   %247 = load i32 (i32, i32)** @work, align 8, !dbg !681
LOAD [p=*q]:   %248 = load i32* @ifd, align 4, !dbg !681
LOAD [p=*q]:   %249 = load i32* @ofd, align 4, !dbg !681
CALL [call func]:   %250 = call i32 %247(i32 %248, i32 %249), !dbg !681
LOAD [p=*q]:   %265 = load i32* @ifd, align 4, !dbg !693
CALL [call func]:   %266 = call i32 @close(i32 %265), !dbg !693
CALL [call func]:   call void @read_error() #7, !dbg !694
LOAD [p=*q]:   %270 = load i32* @to_stdout, align 4, !dbg !695
CALL [call func]:   call void @read_error() #7, !dbg !694
LOAD [p=*q]:   %270 = load i32* @to_stdout, align 4, !dbg !695
LOAD [p=*q]:   %314 = load i32* @method, align 4, !dbg !723
CALL [call func]:   call void @copy_stat(%struct.stat* @istat), !dbg !696
LOAD [p=*q]:   %273 = load i32* @ofd, align 4, !dbg !698
CALL [call func]:   %274 = call i32 @close(i32 %273), !dbg !698
CALL [call func]:   call void @copy_stat(%struct.stat* @istat), !dbg !696
LOAD [p=*q]:   %273 = load i32* @ofd, align 4, !dbg !698
CALL [call func]:   %274 = call i32 @close(i32 %273), !dbg !698
CALL [call func]:   call void @write_error() #7, !dbg !699
LOAD [p=*q]:   %278 = load i32* @keep, align 4, !dbg !700
CALL [call func]:   call void @write_error() #7, !dbg !699
LOAD [p=*q]:   %278 = load i32* @keep, align 4, !dbg !700
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.__sigset_t* %oldset}, metadata !701), !dbg !703
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %unlink_errno}, metadata !704), !dbg !705
CALL [call func]:   %281 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !706
STORE [*p=q]:   store volatile i32 -1, i32* @remove_ofname_fd, align 4, !dbg !707
CALL [call func]:   %282 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !708
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.__sigset_t* %oldset}, metadata !701), !dbg !703
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %unlink_errno}, metadata !704), !dbg !705
CALL [call func]:   %281 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !706
STORE [*p=q]:   store volatile i32 -1, i32* @remove_ofname_fd, align 4, !dbg !707
CALL [call func]:   %282 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !708
CALL [call func]:   %286 = call i32* @__errno_location() #1, !dbg !709
LOAD [p=*q]:   %287 = load i32* %286, !dbg !709
STORE [*p=q]:   store i32 %289, i32* %unlink_errno, align 4, !dbg !709
CALL [call func]:   %290 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !710
LOAD [p=*q]:   %291 = load i32* %unlink_errno, align 4, !dbg !711
CALL [call func]:   %286 = call i32* @__errno_location() #1, !dbg !709
LOAD [p=*q]:   %287 = load i32* %286, !dbg !709
STORE [*p=q]:   store i32 %289, i32* %unlink_errno, align 4, !dbg !709
CALL [call func]:   %290 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !710
LOAD [p=*q]:   %291 = load i32* %unlink_errno, align 4, !dbg !711
STORE [*p=q]:   store i32 %289, i32* %unlink_errno, align 4, !dbg !709
CALL [call func]:   %290 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !710
LOAD [p=*q]:   %291 = load i32* %unlink_errno, align 4, !dbg !711
LOAD [p=*q]:   %294 = load i32* @quiet, align 4, !dbg !712
LOAD [p=*q]:   %294 = load i32* @quiet, align 4, !dbg !712
LOAD [p=*q]:   %301 = load i32* @exit_code, align 4, !dbg !712
LOAD [p=*q]:   %297 = load %struct._IO_FILE** @stderr, align 8, !dbg !712
LOAD [p=*q]:   %298 = load i8** @program_name, align 8, !dbg !712
CALL [call func]:   %299 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %297, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %298), !dbg !712
LOAD [p=*q]:   %297 = load %struct._IO_FILE** @stderr, align 8, !dbg !712
LOAD [p=*q]:   %298 = load i8** @program_name, align 8, !dbg !712
CALL [call func]:   %299 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %297, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %298), !dbg !712
LOAD [p=*q]:   %301 = load i32* @exit_code, align 4, !dbg !712
LOAD [p=*q]:   %301 = load i32* @exit_code, align 4, !dbg !712
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !712
LOAD [p=*q]:   %305 = load i32* @quiet, align 4, !dbg !715
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !712
LOAD [p=*q]:   %305 = load i32* @quiet, align 4, !dbg !715
LOAD [p=*q]:   %305 = load i32* @quiet, align 4, !dbg !715
LOAD [p=*q]:   %308 = load i32* %unlink_errno, align 4, !dbg !716
CALL [call func]:   %309 = call i32* @__errno_location() #1, !dbg !716
STORE [*p=q]:   store i32 %308, i32* %309, !dbg !716
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !718
LOAD [p=*q]:   %308 = load i32* %unlink_errno, align 4, !dbg !716
CALL [call func]:   %309 = call i32* @__errno_location() #1, !dbg !716
STORE [*p=q]:   store i32 %308, i32* %309, !dbg !716
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !718
LOAD [p=*q]:   %314 = load i32* @method, align 4, !dbg !723
LOAD [p=*q]:   %314 = load i32* @method, align 4, !dbg !723
LOAD [p=*q]:   %317 = load i32* @to_stdout, align 4, !dbg !724
LOAD [p=*q]:   %322 = load i32* @verbose, align 4, !dbg !728
LOAD [p=*q]:   %317 = load i32* @to_stdout, align 4, !dbg !724
CALL [call func]:   call void @remove_output_file(), !dbg !726
CALL [call func]:   call void @remove_output_file(), !dbg !726
Analyzing return instruction for treat_file
No return value for: treat_file
LOAD [p=*q]:   %322 = load i32* @verbose, align 4, !dbg !728
LOAD [p=*q]:   %325 = load i32* @test, align 4, !dbg !729
Analyzing return instruction for treat_file
No return value for: treat_file
LOAD [p=*q]:   %325 = load i32* @test, align 4, !dbg !729
LOAD [p=*q]:   %328 = load %struct._IO_FILE** @stderr, align 8, !dbg !731
CALL [call func]:   %329 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %328, i8* getelementptr inbounds ([4 x i8]* @.str37, i32 0, i32 0)), !dbg !731
LOAD [p=*q]:   %331 = load i32* @decompress, align 4, !dbg !734
LOAD [p=*q]:   %328 = load %struct._IO_FILE** @stderr, align 8, !dbg !731
CALL [call func]:   %329 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %328, i8* getelementptr inbounds ([4 x i8]* @.str37, i32 0, i32 0)), !dbg !731
LOAD [p=*q]:   %351 = load i32* @test, align 4, !dbg !740
LOAD [p=*q]:   %331 = load i32* @decompress, align 4, !dbg !734
LOAD [p=*q]:   %334 = load i64* @bytes_out, align 8, !dbg !735
LOAD [p=*q]:   %335 = load i64* @bytes_in, align 8, !dbg !735
LOAD [p=*q]:   %336 = load i64* @header_bytes, align 8, !dbg !735
LOAD [p=*q]:   %339 = load i64* @bytes_out, align 8, !dbg !735
LOAD [p=*q]:   %340 = load %struct._IO_FILE** @stderr, align 8, !dbg !735
CALL [call func]:   call void @display_ratio(i64 %338, i64 %339, %struct._IO_FILE* %340), !dbg !735
LOAD [p=*q]:   %342 = load i64* @bytes_in, align 8, !dbg !738
LOAD [p=*q]:   %343 = load i64* @bytes_out, align 8, !dbg !738
LOAD [p=*q]:   %344 = load i64* @header_bytes, align 8, !dbg !738
LOAD [p=*q]:   %347 = load i64* @bytes_in, align 8, !dbg !738
LOAD [p=*q]:   %348 = load %struct._IO_FILE** @stderr, align 8, !dbg !738
CALL [call func]:   call void @display_ratio(i64 %346, i64 %347, %struct._IO_FILE* %348), !dbg !738
LOAD [p=*q]:   %334 = load i64* @bytes_out, align 8, !dbg !735
LOAD [p=*q]:   %335 = load i64* @bytes_in, align 8, !dbg !735
LOAD [p=*q]:   %336 = load i64* @header_bytes, align 8, !dbg !735
LOAD [p=*q]:   %339 = load i64* @bytes_out, align 8, !dbg !735
LOAD [p=*q]:   %340 = load %struct._IO_FILE** @stderr, align 8, !dbg !735
CALL [call func]:   call void @display_ratio(i64 %338, i64 %339, %struct._IO_FILE* %340), !dbg !735
LOAD [p=*q]:   %342 = load i64* @bytes_in, align 8, !dbg !738
LOAD [p=*q]:   %343 = load i64* @bytes_out, align 8, !dbg !738
LOAD [p=*q]:   %344 = load i64* @header_bytes, align 8, !dbg !738
LOAD [p=*q]:   %347 = load i64* @bytes_in, align 8, !dbg !738
LOAD [p=*q]:   %348 = load %struct._IO_FILE** @stderr, align 8, !dbg !738
CALL [call func]:   call void @display_ratio(i64 %346, i64 %347, %struct._IO_FILE* %348), !dbg !738
LOAD [p=*q]:   %351 = load i32* @test, align 4, !dbg !740
LOAD [p=*q]:   %351 = load i32* @test, align 4, !dbg !740
LOAD [p=*q]:   %360 = load %struct._IO_FILE** @stderr, align 8, !dbg !744
CALL [call func]:   %361 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %360, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !744
LOAD [p=*q]:   %354 = load i32* @to_stdout, align 4, !dbg !740
LOAD [p=*q]:   %354 = load i32* @to_stdout, align 4, !dbg !740
LOAD [p=*q]:   %360 = load %struct._IO_FILE** @stderr, align 8, !dbg !744
CALL [call func]:   %361 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %360, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !744
LOAD [p=*q]:   %357 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %357, i8* getelementptr inbounds ([21 x i8]* @.str38, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !741
LOAD [p=*q]:   %357 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %357, i8* getelementptr inbounds ([21 x i8]* @.str38, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !741
LOAD [p=*q]:   %360 = load %struct._IO_FILE** @stderr, align 8, !dbg !744
CALL [call func]:   %361 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %360, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !744
LOAD [p=*q]:   %360 = load %struct._IO_FILE** @stderr, align 8, !dbg !744
CALL [call func]:   %361 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %360, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !744
Analyzing return instruction for treat_file
No return value for: treat_file
Analyzing return instruction for treat_file
No return value for: treat_file
[Processing][Function][deflate_fast]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %hash_head}, metadata !574), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %flush}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %match_length}, metadata !580), !dbg !581
STORE [*p=q]:   store i32 0, i32* %match_length, align 4, !dbg !582
STORE [*p=q]:   store i32 2, i32* @prev_length, align 4, !dbg !583
LOAD [p=*q]:   %2 = load i32* @lookahead, align 4, !dbg !584
LOAD [p=*q]:   %2 = load i32* @lookahead, align 4, !dbg !584
LOAD [p=*q]:   %5 = load i32* @ins_h, align 4, !dbg !585
LOAD [p=*q]:   %7 = load i32* @strstart, align 4, !dbg !585
LOAD [p=*q]:   %12 = load i8* %11, align 1, !dbg !585
STORE [*p=q]:   store i32 %15, i32* @ins_h, align 4, !dbg !585
LOAD [p=*q]:   %16 = load i32* @ins_h, align 4, !dbg !585
LOAD [p=*q]:   %19 = load i16* %18, !dbg !585
STORE [*p=q]:   store i32 %20, i32* %hash_head, align 4, !dbg !585
LOAD [p=*q]:   %22 = load i32* @strstart, align 4, !dbg !585
STORE [*p=q]:   store i16 %21, i16* %25, align 1, !dbg !585
LOAD [p=*q]:   %26 = load i32* @strstart, align 4, !dbg !585
LOAD [p=*q]:   %28 = load i32* @ins_h, align 4, !dbg !585
STORE [*p=q]:   store i16 %27, i16* %30, !dbg !585
LOAD [p=*q]:   %31 = load i32* %hash_head, align 4, !dbg !587
LOAD [p=*q]:   %173 = load i64* @block_start, align 8, !dbg !622
LOAD [p=*q]:   %5 = load i32* @ins_h, align 4, !dbg !585
LOAD [p=*q]:   %7 = load i32* @strstart, align 4, !dbg !585
LOAD [p=*q]:   %12 = load i8* %11, align 1, !dbg !585
STORE [*p=q]:   store i32 %15, i32* @ins_h, align 4, !dbg !585
LOAD [p=*q]:   %16 = load i32* @ins_h, align 4, !dbg !585
LOAD [p=*q]:   %19 = load i16* %18, !dbg !585
STORE [*p=q]:   store i32 %20, i32* %hash_head, align 4, !dbg !585
LOAD [p=*q]:   %22 = load i32* @strstart, align 4, !dbg !585
STORE [*p=q]:   store i16 %21, i16* %25, align 1, !dbg !585
LOAD [p=*q]:   %26 = load i32* @strstart, align 4, !dbg !585
LOAD [p=*q]:   %28 = load i32* @ins_h, align 4, !dbg !585
STORE [*p=q]:   store i16 %27, i16* %30, !dbg !585
LOAD [p=*q]:   %31 = load i32* %hash_head, align 4, !dbg !587
LOAD [p=*q]:   %34 = load i32* @strstart, align 4, !dbg !587
LOAD [p=*q]:   %35 = load i32* %hash_head, align 4, !dbg !587
LOAD [p=*q]:   %54 = load i32* %match_length, align 4, !dbg !593
LOAD [p=*q]:   %34 = load i32* @strstart, align 4, !dbg !587
LOAD [p=*q]:   %35 = load i32* %hash_head, align 4, !dbg !587
LOAD [p=*q]:   %39 = load i32* @strstart, align 4, !dbg !587
LOAD [p=*q]:   %41 = load i64* @window_size, align 8, !dbg !587
LOAD [p=*q]:   %54 = load i32* %match_length, align 4, !dbg !593
LOAD [p=*q]:   %39 = load i32* @strstart, align 4, !dbg !587
LOAD [p=*q]:   %41 = load i64* @window_size, align 8, !dbg !587
LOAD [p=*q]:   %45 = load i32* %hash_head, align 4, !dbg !588
CALL [call func]:   %46 = call i32 @longest_match(i32 %45), !dbg !588
STORE [*p=q]:   store i32 %46, i32* %match_length, align 4, !dbg !588
LOAD [p=*q]:   %47 = load i32* %match_length, align 4, !dbg !590
LOAD [p=*q]:   %48 = load i32* @lookahead, align 4, !dbg !590
LOAD [p=*q]:   %54 = load i32* %match_length, align 4, !dbg !593
LOAD [p=*q]:   %45 = load i32* %hash_head, align 4, !dbg !588
CALL [call func]:   %46 = call i32 @longest_match(i32 %45), !dbg !588
STORE [*p=q]:   store i32 %46, i32* %match_length, align 4, !dbg !588
LOAD [p=*q]:   %47 = load i32* %match_length, align 4, !dbg !590
LOAD [p=*q]:   %48 = load i32* @lookahead, align 4, !dbg !590
LOAD [p=*q]:   %51 = load i32* @lookahead, align 4, !dbg !591
STORE [*p=q]:   store i32 %51, i32* %match_length, align 4, !dbg !591
LOAD [p=*q]:   %51 = load i32* @lookahead, align 4, !dbg !591
STORE [*p=q]:   store i32 %51, i32* %match_length, align 4, !dbg !591
LOAD [p=*q]:   %54 = load i32* %match_length, align 4, !dbg !593
LOAD [p=*q]:   %54 = load i32* %match_length, align 4, !dbg !593
LOAD [p=*q]:   %57 = load i32* @strstart, align 4, !dbg !594
LOAD [p=*q]:   %58 = load i32* @match_start, align 4, !dbg !594
LOAD [p=*q]:   %60 = load i32* %match_length, align 4, !dbg !594
CALL [call func]:   %62 = call i32 @ct_tally(i32 %59, i32 %61), !dbg !594
STORE [*p=q]:   store i32 %62, i32* %flush, align 4, !dbg !594
LOAD [p=*q]:   %63 = load i32* %match_length, align 4, !dbg !596
LOAD [p=*q]:   %64 = load i32* @lookahead, align 4, !dbg !596
STORE [*p=q]:   store i32 %65, i32* @lookahead, align 4, !dbg !596
LOAD [p=*q]:   %66 = load i32* %match_length, align 4, !dbg !597
LOAD [p=*q]:   %67 = load i32* @max_lazy_match, align 4, !dbg !597
LOAD [p=*q]:   %129 = load i32* @strstart, align 4, !dbg !613
LOAD [p=*q]:   %132 = load i8* %131, align 1, !dbg !613
CALL [call func]:   %134 = call i32 @ct_tally(i32 0, i32 %133), !dbg !613
STORE [*p=q]:   store i32 %134, i32* %flush, align 4, !dbg !613
LOAD [p=*q]:   %135 = load i32* @lookahead, align 4, !dbg !615
STORE [*p=q]:   store i32 %136, i32* @lookahead, align 4, !dbg !615
LOAD [p=*q]:   %137 = load i32* @strstart, align 4, !dbg !616
STORE [*p=q]:   store i32 %138, i32* @strstart, align 4, !dbg !616
LOAD [p=*q]:   %57 = load i32* @strstart, align 4, !dbg !594
LOAD [p=*q]:   %58 = load i32* @match_start, align 4, !dbg !594
LOAD [p=*q]:   %60 = load i32* %match_length, align 4, !dbg !594
CALL [call func]:   %62 = call i32 @ct_tally(i32 %59, i32 %61), !dbg !594
STORE [*p=q]:   store i32 %62, i32* %flush, align 4, !dbg !594
LOAD [p=*q]:   %63 = load i32* %match_length, align 4, !dbg !596
LOAD [p=*q]:   %64 = load i32* @lookahead, align 4, !dbg !596
STORE [*p=q]:   store i32 %65, i32* @lookahead, align 4, !dbg !596
LOAD [p=*q]:   %66 = load i32* %match_length, align 4, !dbg !597
LOAD [p=*q]:   %67 = load i32* @max_lazy_match, align 4, !dbg !597
LOAD [p=*q]:   %70 = load i32* %match_length, align 4, !dbg !598
STORE [*p=q]:   store i32 %71, i32* %match_length, align 4, !dbg !598
LOAD [p=*q]:   %109 = load i32* %match_length, align 4, !dbg !607
LOAD [p=*q]:   %110 = load i32* @strstart, align 4, !dbg !607
STORE [*p=q]:   store i32 %111, i32* @strstart, align 4, !dbg !607
STORE [*p=q]:   store i32 0, i32* %match_length, align 4, !dbg !609
LOAD [p=*q]:   %112 = load i32* @strstart, align 4, !dbg !610
LOAD [p=*q]:   %115 = load i8* %114, align 1, !dbg !610
STORE [*p=q]:   store i32 %116, i32* @ins_h, align 4, !dbg !610
LOAD [p=*q]:   %117 = load i32* @ins_h, align 4, !dbg !611
LOAD [p=*q]:   %119 = load i32* @strstart, align 4, !dbg !611
LOAD [p=*q]:   %123 = load i8* %122, align 1, !dbg !611
STORE [*p=q]:   store i32 %126, i32* @ins_h, align 4, !dbg !611
LOAD [p=*q]:   %70 = load i32* %match_length, align 4, !dbg !598
STORE [*p=q]:   store i32 %71, i32* %match_length, align 4, !dbg !598
LOAD [p=*q]:   %73 = load i32* @strstart, align 4, !dbg !601
STORE [*p=q]:   store i32 %74, i32* @strstart, align 4, !dbg !601
LOAD [p=*q]:   %75 = load i32* @ins_h, align 4, !dbg !603
LOAD [p=*q]:   %77 = load i32* @strstart, align 4, !dbg !603
LOAD [p=*q]:   %82 = load i8* %81, align 1, !dbg !603
STORE [*p=q]:   store i32 %85, i32* @ins_h, align 4, !dbg !603
LOAD [p=*q]:   %86 = load i32* @ins_h, align 4, !dbg !603
LOAD [p=*q]:   %89 = load i16* %88, !dbg !603
STORE [*p=q]:   store i32 %90, i32* %hash_head, align 4, !dbg !603
LOAD [p=*q]:   %92 = load i32* @strstart, align 4, !dbg !603
STORE [*p=q]:   store i16 %91, i16* %95, align 1, !dbg !603
LOAD [p=*q]:   %96 = load i32* @strstart, align 4, !dbg !603
LOAD [p=*q]:   %98 = load i32* @ins_h, align 4, !dbg !603
STORE [*p=q]:   store i16 %97, i16* %100, !dbg !603
LOAD [p=*q]:   %73 = load i32* @strstart, align 4, !dbg !601
STORE [*p=q]:   store i32 %74, i32* @strstart, align 4, !dbg !601
LOAD [p=*q]:   %75 = load i32* @ins_h, align 4, !dbg !603
LOAD [p=*q]:   %77 = load i32* @strstart, align 4, !dbg !603
LOAD [p=*q]:   %82 = load i8* %81, align 1, !dbg !603
STORE [*p=q]:   store i32 %85, i32* @ins_h, align 4, !dbg !603
LOAD [p=*q]:   %86 = load i32* @ins_h, align 4, !dbg !603
LOAD [p=*q]:   %89 = load i16* %88, !dbg !603
STORE [*p=q]:   store i32 %90, i32* %hash_head, align 4, !dbg !603
LOAD [p=*q]:   %92 = load i32* @strstart, align 4, !dbg !603
STORE [*p=q]:   store i16 %91, i16* %95, align 1, !dbg !603
LOAD [p=*q]:   %96 = load i32* @strstart, align 4, !dbg !603
LOAD [p=*q]:   %98 = load i32* @ins_h, align 4, !dbg !603
STORE [*p=q]:   store i16 %97, i16* %100, !dbg !603
LOAD [p=*q]:   %102 = load i32* %match_length, align 4, !dbg !604
STORE [*p=q]:   store i32 %103, i32* %match_length, align 4, !dbg !604
LOAD [p=*q]:   %102 = load i32* %match_length, align 4, !dbg !604
STORE [*p=q]:   store i32 %103, i32* %match_length, align 4, !dbg !604
LOAD [p=*q]:   %73 = load i32* @strstart, align 4, !dbg !601
STORE [*p=q]:   store i32 %74, i32* @strstart, align 4, !dbg !601
LOAD [p=*q]:   %75 = load i32* @ins_h, align 4, !dbg !603
LOAD [p=*q]:   %77 = load i32* @strstart, align 4, !dbg !603
LOAD [p=*q]:   %82 = load i8* %81, align 1, !dbg !603
STORE [*p=q]:   store i32 %85, i32* @ins_h, align 4, !dbg !603
LOAD [p=*q]:   %86 = load i32* @ins_h, align 4, !dbg !603
LOAD [p=*q]:   %89 = load i16* %88, !dbg !603
STORE [*p=q]:   store i32 %90, i32* %hash_head, align 4, !dbg !603
LOAD [p=*q]:   %92 = load i32* @strstart, align 4, !dbg !603
STORE [*p=q]:   store i16 %91, i16* %95, align 1, !dbg !603
LOAD [p=*q]:   %96 = load i32* @strstart, align 4, !dbg !603
LOAD [p=*q]:   %98 = load i32* @ins_h, align 4, !dbg !603
STORE [*p=q]:   store i16 %97, i16* %100, !dbg !603
LOAD [p=*q]:   %106 = load i32* @strstart, align 4, !dbg !605
STORE [*p=q]:   store i32 %107, i32* @strstart, align 4, !dbg !605
LOAD [p=*q]:   %106 = load i32* @strstart, align 4, !dbg !605
STORE [*p=q]:   store i32 %107, i32* @strstart, align 4, !dbg !605
LOAD [p=*q]:   %109 = load i32* %match_length, align 4, !dbg !607
LOAD [p=*q]:   %110 = load i32* @strstart, align 4, !dbg !607
STORE [*p=q]:   store i32 %111, i32* @strstart, align 4, !dbg !607
STORE [*p=q]:   store i32 0, i32* %match_length, align 4, !dbg !609
LOAD [p=*q]:   %112 = load i32* @strstart, align 4, !dbg !610
LOAD [p=*q]:   %115 = load i8* %114, align 1, !dbg !610
STORE [*p=q]:   store i32 %116, i32* @ins_h, align 4, !dbg !610
LOAD [p=*q]:   %117 = load i32* @ins_h, align 4, !dbg !611
LOAD [p=*q]:   %119 = load i32* @strstart, align 4, !dbg !611
LOAD [p=*q]:   %123 = load i8* %122, align 1, !dbg !611
STORE [*p=q]:   store i32 %126, i32* @ins_h, align 4, !dbg !611
LOAD [p=*q]:   %140 = load i32* %flush, align 4, !dbg !617
LOAD [p=*q]:   %129 = load i32* @strstart, align 4, !dbg !613
LOAD [p=*q]:   %132 = load i8* %131, align 1, !dbg !613
CALL [call func]:   %134 = call i32 @ct_tally(i32 0, i32 %133), !dbg !613
STORE [*p=q]:   store i32 %134, i32* %flush, align 4, !dbg !613
LOAD [p=*q]:   %135 = load i32* @lookahead, align 4, !dbg !615
STORE [*p=q]:   store i32 %136, i32* @lookahead, align 4, !dbg !615
LOAD [p=*q]:   %137 = load i32* @strstart, align 4, !dbg !616
STORE [*p=q]:   store i32 %138, i32* @strstart, align 4, !dbg !616
LOAD [p=*q]:   %140 = load i32* %flush, align 4, !dbg !617
LOAD [p=*q]:   %140 = load i32* %flush, align 4, !dbg !617
LOAD [p=*q]:   %143 = load i64* @block_start, align 8, !dbg !618
LOAD [p=*q]:   %143 = load i64* @block_start, align 8, !dbg !618
LOAD [p=*q]:   %146 = load i64* @block_start, align 8, !dbg !618
LOAD [p=*q]:   %146 = load i64* @block_start, align 8, !dbg !618
LOAD [p=*q]:   %153 = load i32* @strstart, align 4, !dbg !618
LOAD [p=*q]:   %155 = load i64* @block_start, align 8, !dbg !618
CALL [call func]:   %157 = call i64 @flush_block(i8* %152, i64 %156, i32 0), !dbg !618
LOAD [p=*q]:   %158 = load i32* @strstart, align 4, !dbg !618
STORE [*p=q]:   store i64 %159, i64* @block_start, align 8, !dbg !618
LOAD [p=*q]:   %153 = load i32* @strstart, align 4, !dbg !618
LOAD [p=*q]:   %155 = load i64* @block_start, align 8, !dbg !618
CALL [call func]:   %157 = call i64 @flush_block(i8* %152, i64 %156, i32 0), !dbg !618
LOAD [p=*q]:   %158 = load i32* @strstart, align 4, !dbg !618
STORE [*p=q]:   store i64 %159, i64* @block_start, align 8, !dbg !618
LOAD [p=*q]:   %153 = load i32* @strstart, align 4, !dbg !618
LOAD [p=*q]:   %155 = load i64* @block_start, align 8, !dbg !618
CALL [call func]:   %157 = call i64 @flush_block(i8* %152, i64 %156, i32 0), !dbg !618
LOAD [p=*q]:   %158 = load i32* @strstart, align 4, !dbg !618
STORE [*p=q]:   store i64 %159, i64* @block_start, align 8, !dbg !618
LOAD [p=*q]:   %162 = load i32* @lookahead, align 4, !dbg !619
LOAD [p=*q]:   %162 = load i32* @lookahead, align 4, !dbg !619
LOAD [p=*q]:   %165 = load i32* @eofile, align 4, !dbg !619
LOAD [p=*q]:   %165 = load i32* @eofile, align 4, !dbg !619
CALL [call func]:   call void @fill_window(), !dbg !620
CALL [call func]:   call void @fill_window(), !dbg !620
LOAD [p=*q]:   %162 = load i32* @lookahead, align 4, !dbg !619
LOAD [p=*q]:   %2 = load i32* @lookahead, align 4, !dbg !584
LOAD [p=*q]:   %173 = load i64* @block_start, align 8, !dbg !622
LOAD [p=*q]:   %176 = load i64* @block_start, align 8, !dbg !622
LOAD [p=*q]:   %176 = load i64* @block_start, align 8, !dbg !622
LOAD [p=*q]:   %183 = load i32* @strstart, align 4, !dbg !622
LOAD [p=*q]:   %185 = load i64* @block_start, align 8, !dbg !622
CALL [call func]:   %187 = call i64 @flush_block(i8* %182, i64 %186, i32 1), !dbg !622
Analyzing return instruction for deflate_fast
	  %187 = call i64 @flush_block(i8* %182, i64 %186, i32 1), !dbg !622
LOAD [p=*q]:   %183 = load i32* @strstart, align 4, !dbg !622
LOAD [p=*q]:   %185 = load i64* @block_start, align 8, !dbg !622
CALL [call func]:   %187 = call i64 @flush_block(i8* %182, i64 %186, i32 1), !dbg !622
Analyzing return instruction for deflate_fast
	  %187 = call i64 @flush_block(i8* %182, i64 %186, i32 1), !dbg !622
LOAD [p=*q]:   %183 = load i32* @strstart, align 4, !dbg !622
LOAD [p=*q]:   %185 = load i64* @block_start, align 8, !dbg !622
CALL [call func]:   %187 = call i64 @flush_block(i8* %182, i64 %186, i32 1), !dbg !622
Analyzing return instruction for deflate_fast
	  %187 = call i64 @flush_block(i8* %182, i64 %186, i32 1), !dbg !622
[Processing][Function][deflate]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %hash_head}, metadata !574), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %prev_match}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %flush}, metadata !580), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %match_available}, metadata !582), !dbg !583
STORE [*p=q]:   store i32 0, i32* %match_available, align 4, !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %match_length}, metadata !585), !dbg !586
STORE [*p=q]:   store i32 2, i32* %match_length, align 4, !dbg !587
LOAD [p=*q]:   %2 = load i32* @compr_level, align 4, !dbg !588
CALL [call func]:   %5 = call i64 @deflate_fast(), !dbg !589
STORE [*p=q]:   store i64 %5, i64* %1, !dbg !589
CALL [call func]:   %5 = call i64 @deflate_fast(), !dbg !589
STORE [*p=q]:   store i64 %5, i64* %1, !dbg !589
LOAD [p=*q]:   %235 = load i64* %1, !dbg !640
Analyzing return instruction for deflate
	  %235 = load i64* %1, !dbg !640
LOAD [p=*q]:   %8 = load i32* @lookahead, align 4, !dbg !590
LOAD [p=*q]:   %8 = load i32* @lookahead, align 4, !dbg !590
LOAD [p=*q]:   %11 = load i32* @ins_h, align 4, !dbg !591
LOAD [p=*q]:   %13 = load i32* @strstart, align 4, !dbg !591
LOAD [p=*q]:   %18 = load i8* %17, align 1, !dbg !591
STORE [*p=q]:   store i32 %21, i32* @ins_h, align 4, !dbg !591
LOAD [p=*q]:   %22 = load i32* @ins_h, align 4, !dbg !591
LOAD [p=*q]:   %25 = load i16* %24, !dbg !591
STORE [*p=q]:   store i32 %26, i32* %hash_head, align 4, !dbg !591
LOAD [p=*q]:   %28 = load i32* @strstart, align 4, !dbg !591
STORE [*p=q]:   store i16 %27, i16* %31, align 1, !dbg !591
LOAD [p=*q]:   %32 = load i32* @strstart, align 4, !dbg !591
LOAD [p=*q]:   %34 = load i32* @ins_h, align 4, !dbg !591
STORE [*p=q]:   store i16 %33, i16* %36, !dbg !591
LOAD [p=*q]:   %37 = load i32* %match_length, align 4, !dbg !593
STORE [*p=q]:   store i32 %37, i32* @prev_length, align 4, !dbg !593
LOAD [p=*q]:   %38 = load i32* @match_start, align 4, !dbg !593
STORE [*p=q]:   store i32 %38, i32* %prev_match, align 4, !dbg !593
STORE [*p=q]:   store i32 2, i32* %match_length, align 4, !dbg !594
LOAD [p=*q]:   %39 = load i32* %hash_head, align 4, !dbg !595
LOAD [p=*q]:   %208 = load i32* %match_available, align 4, !dbg !637
LOAD [p=*q]:   %11 = load i32* @ins_h, align 4, !dbg !591
LOAD [p=*q]:   %13 = load i32* @strstart, align 4, !dbg !591
LOAD [p=*q]:   %18 = load i8* %17, align 1, !dbg !591
STORE [*p=q]:   store i32 %21, i32* @ins_h, align 4, !dbg !591
LOAD [p=*q]:   %22 = load i32* @ins_h, align 4, !dbg !591
LOAD [p=*q]:   %25 = load i16* %24, !dbg !591
STORE [*p=q]:   store i32 %26, i32* %hash_head, align 4, !dbg !591
LOAD [p=*q]:   %28 = load i32* @strstart, align 4, !dbg !591
STORE [*p=q]:   store i16 %27, i16* %31, align 1, !dbg !591
LOAD [p=*q]:   %32 = load i32* @strstart, align 4, !dbg !591
LOAD [p=*q]:   %34 = load i32* @ins_h, align 4, !dbg !591
STORE [*p=q]:   store i16 %33, i16* %36, !dbg !591
LOAD [p=*q]:   %37 = load i32* %match_length, align 4, !dbg !593
STORE [*p=q]:   store i32 %37, i32* @prev_length, align 4, !dbg !593
LOAD [p=*q]:   %38 = load i32* @match_start, align 4, !dbg !593
STORE [*p=q]:   store i32 %38, i32* %prev_match, align 4, !dbg !593
STORE [*p=q]:   store i32 2, i32* %match_length, align 4, !dbg !594
LOAD [p=*q]:   %39 = load i32* %hash_head, align 4, !dbg !595
LOAD [p=*q]:   %42 = load i32* @prev_length, align 4, !dbg !595
LOAD [p=*q]:   %43 = load i32* @max_lazy_match, align 4, !dbg !595
LOAD [p=*q]:   %77 = load i32* @prev_length, align 4, !dbg !605
LOAD [p=*q]:   %42 = load i32* @prev_length, align 4, !dbg !595
LOAD [p=*q]:   %43 = load i32* @max_lazy_match, align 4, !dbg !595
LOAD [p=*q]:   %46 = load i32* @strstart, align 4, !dbg !595
LOAD [p=*q]:   %47 = load i32* %hash_head, align 4, !dbg !595
LOAD [p=*q]:   %77 = load i32* @prev_length, align 4, !dbg !605
LOAD [p=*q]:   %46 = load i32* @strstart, align 4, !dbg !595
LOAD [p=*q]:   %47 = load i32* %hash_head, align 4, !dbg !595
LOAD [p=*q]:   %51 = load i32* @strstart, align 4, !dbg !595
LOAD [p=*q]:   %53 = load i64* @window_size, align 8, !dbg !595
LOAD [p=*q]:   %77 = load i32* @prev_length, align 4, !dbg !605
LOAD [p=*q]:   %51 = load i32* @strstart, align 4, !dbg !595
LOAD [p=*q]:   %53 = load i64* @window_size, align 8, !dbg !595
LOAD [p=*q]:   %57 = load i32* %hash_head, align 4, !dbg !596
CALL [call func]:   %58 = call i32 @longest_match(i32 %57), !dbg !596
STORE [*p=q]:   store i32 %58, i32* %match_length, align 4, !dbg !596
LOAD [p=*q]:   %59 = load i32* %match_length, align 4, !dbg !598
LOAD [p=*q]:   %60 = load i32* @lookahead, align 4, !dbg !598
LOAD [p=*q]:   %77 = load i32* @prev_length, align 4, !dbg !605
LOAD [p=*q]:   %57 = load i32* %hash_head, align 4, !dbg !596
CALL [call func]:   %58 = call i32 @longest_match(i32 %57), !dbg !596
STORE [*p=q]:   store i32 %58, i32* %match_length, align 4, !dbg !596
LOAD [p=*q]:   %59 = load i32* %match_length, align 4, !dbg !598
LOAD [p=*q]:   %60 = load i32* @lookahead, align 4, !dbg !598
LOAD [p=*q]:   %63 = load i32* @lookahead, align 4, !dbg !599
STORE [*p=q]:   store i32 %63, i32* %match_length, align 4, !dbg !599
LOAD [p=*q]:   %65 = load i32* %match_length, align 4, !dbg !600
LOAD [p=*q]:   %63 = load i32* @lookahead, align 4, !dbg !599
STORE [*p=q]:   store i32 %63, i32* %match_length, align 4, !dbg !599
LOAD [p=*q]:   %65 = load i32* %match_length, align 4, !dbg !600
LOAD [p=*q]:   %65 = load i32* %match_length, align 4, !dbg !600
LOAD [p=*q]:   %68 = load i32* @strstart, align 4, !dbg !600
LOAD [p=*q]:   %69 = load i32* @match_start, align 4, !dbg !600
LOAD [p=*q]:   %68 = load i32* @strstart, align 4, !dbg !600
LOAD [p=*q]:   %69 = load i32* @match_start, align 4, !dbg !600
LOAD [p=*q]:   %73 = load i32* %match_length, align 4, !dbg !601
STORE [*p=q]:   store i32 %74, i32* %match_length, align 4, !dbg !601
LOAD [p=*q]:   %73 = load i32* %match_length, align 4, !dbg !601
STORE [*p=q]:   store i32 %74, i32* %match_length, align 4, !dbg !601
LOAD [p=*q]:   %77 = load i32* @prev_length, align 4, !dbg !605
LOAD [p=*q]:   %77 = load i32* @prev_length, align 4, !dbg !605
LOAD [p=*q]:   %80 = load i32* %match_length, align 4, !dbg !605
LOAD [p=*q]:   %81 = load i32* @prev_length, align 4, !dbg !605
LOAD [p=*q]:   %155 = load i32* %match_available, align 4, !dbg !621
LOAD [p=*q]:   %80 = load i32* %match_length, align 4, !dbg !605
LOAD [p=*q]:   %81 = load i32* @prev_length, align 4, !dbg !605
LOAD [p=*q]:   %84 = load i32* @strstart, align 4, !dbg !606
LOAD [p=*q]:   %86 = load i32* %prev_match, align 4, !dbg !606
LOAD [p=*q]:   %88 = load i32* @prev_length, align 4, !dbg !606
CALL [call func]:   %90 = call i32 @ct_tally(i32 %87, i32 %89), !dbg !606
STORE [*p=q]:   store i32 %90, i32* %flush, align 4, !dbg !606
LOAD [p=*q]:   %91 = load i32* @prev_length, align 4, !dbg !608
LOAD [p=*q]:   %93 = load i32* @lookahead, align 4, !dbg !608
STORE [*p=q]:   store i32 %94, i32* @lookahead, align 4, !dbg !608
LOAD [p=*q]:   %95 = load i32* @prev_length, align 4, !dbg !609
STORE [*p=q]:   store i32 %96, i32* @prev_length, align 4, !dbg !609
LOAD [p=*q]:   %155 = load i32* %match_available, align 4, !dbg !621
LOAD [p=*q]:   %84 = load i32* @strstart, align 4, !dbg !606
LOAD [p=*q]:   %86 = load i32* %prev_match, align 4, !dbg !606
LOAD [p=*q]:   %88 = load i32* @prev_length, align 4, !dbg !606
CALL [call func]:   %90 = call i32 @ct_tally(i32 %87, i32 %89), !dbg !606
STORE [*p=q]:   store i32 %90, i32* %flush, align 4, !dbg !606
LOAD [p=*q]:   %91 = load i32* @prev_length, align 4, !dbg !608
LOAD [p=*q]:   %93 = load i32* @lookahead, align 4, !dbg !608
STORE [*p=q]:   store i32 %94, i32* @lookahead, align 4, !dbg !608
LOAD [p=*q]:   %95 = load i32* @prev_length, align 4, !dbg !609
STORE [*p=q]:   store i32 %96, i32* @prev_length, align 4, !dbg !609
LOAD [p=*q]:   %98 = load i32* @strstart, align 4, !dbg !611
STORE [*p=q]:   store i32 %99, i32* @strstart, align 4, !dbg !611
LOAD [p=*q]:   %100 = load i32* @ins_h, align 4, !dbg !613
LOAD [p=*q]:   %102 = load i32* @strstart, align 4, !dbg !613
LOAD [p=*q]:   %107 = load i8* %106, align 1, !dbg !613
STORE [*p=q]:   store i32 %110, i32* @ins_h, align 4, !dbg !613
LOAD [p=*q]:   %111 = load i32* @ins_h, align 4, !dbg !613
LOAD [p=*q]:   %114 = load i16* %113, !dbg !613
STORE [*p=q]:   store i32 %115, i32* %hash_head, align 4, !dbg !613
LOAD [p=*q]:   %117 = load i32* @strstart, align 4, !dbg !613
STORE [*p=q]:   store i16 %116, i16* %120, align 1, !dbg !613
LOAD [p=*q]:   %121 = load i32* @strstart, align 4, !dbg !613
LOAD [p=*q]:   %123 = load i32* @ins_h, align 4, !dbg !613
STORE [*p=q]:   store i16 %122, i16* %125, !dbg !613
LOAD [p=*q]:   %98 = load i32* @strstart, align 4, !dbg !611
STORE [*p=q]:   store i32 %99, i32* @strstart, align 4, !dbg !611
LOAD [p=*q]:   %100 = load i32* @ins_h, align 4, !dbg !613
LOAD [p=*q]:   %102 = load i32* @strstart, align 4, !dbg !613
LOAD [p=*q]:   %107 = load i8* %106, align 1, !dbg !613
STORE [*p=q]:   store i32 %110, i32* @ins_h, align 4, !dbg !613
LOAD [p=*q]:   %111 = load i32* @ins_h, align 4, !dbg !613
LOAD [p=*q]:   %114 = load i16* %113, !dbg !613
STORE [*p=q]:   store i32 %115, i32* %hash_head, align 4, !dbg !613
LOAD [p=*q]:   %117 = load i32* @strstart, align 4, !dbg !613
STORE [*p=q]:   store i16 %116, i16* %120, align 1, !dbg !613
LOAD [p=*q]:   %121 = load i32* @strstart, align 4, !dbg !613
LOAD [p=*q]:   %123 = load i32* @ins_h, align 4, !dbg !613
STORE [*p=q]:   store i16 %122, i16* %125, !dbg !613
LOAD [p=*q]:   %127 = load i32* @prev_length, align 4, !dbg !614
STORE [*p=q]:   store i32 %128, i32* @prev_length, align 4, !dbg !614
LOAD [p=*q]:   %127 = load i32* @prev_length, align 4, !dbg !614
STORE [*p=q]:   store i32 %128, i32* @prev_length, align 4, !dbg !614
LOAD [p=*q]:   %98 = load i32* @strstart, align 4, !dbg !611
STORE [*p=q]:   store i32 %99, i32* @strstart, align 4, !dbg !611
LOAD [p=*q]:   %100 = load i32* @ins_h, align 4, !dbg !613
LOAD [p=*q]:   %102 = load i32* @strstart, align 4, !dbg !613
LOAD [p=*q]:   %107 = load i8* %106, align 1, !dbg !613
STORE [*p=q]:   store i32 %110, i32* @ins_h, align 4, !dbg !613
LOAD [p=*q]:   %111 = load i32* @ins_h, align 4, !dbg !613
LOAD [p=*q]:   %114 = load i16* %113, !dbg !613
STORE [*p=q]:   store i32 %115, i32* %hash_head, align 4, !dbg !613
LOAD [p=*q]:   %117 = load i32* @strstart, align 4, !dbg !613
STORE [*p=q]:   store i16 %116, i16* %120, align 1, !dbg !613
LOAD [p=*q]:   %121 = load i32* @strstart, align 4, !dbg !613
LOAD [p=*q]:   %123 = load i32* @ins_h, align 4, !dbg !613
STORE [*p=q]:   store i16 %122, i16* %125, !dbg !613
STORE [*p=q]:   store i32 0, i32* %match_available, align 4, !dbg !615
STORE [*p=q]:   store i32 2, i32* %match_length, align 4, !dbg !616
LOAD [p=*q]:   %131 = load i32* @strstart, align 4, !dbg !617
STORE [*p=q]:   store i32 %132, i32* @strstart, align 4, !dbg !617
LOAD [p=*q]:   %133 = load i32* %flush, align 4, !dbg !618
STORE [*p=q]:   store i32 0, i32* %match_available, align 4, !dbg !615
STORE [*p=q]:   store i32 2, i32* %match_length, align 4, !dbg !616
LOAD [p=*q]:   %131 = load i32* @strstart, align 4, !dbg !617
STORE [*p=q]:   store i32 %132, i32* @strstart, align 4, !dbg !617
LOAD [p=*q]:   %133 = load i32* %flush, align 4, !dbg !618
LOAD [p=*q]:   %136 = load i64* @block_start, align 8, !dbg !619
LOAD [p=*q]:   %136 = load i64* @block_start, align 8, !dbg !619
LOAD [p=*q]:   %139 = load i64* @block_start, align 8, !dbg !619
LOAD [p=*q]:   %139 = load i64* @block_start, align 8, !dbg !619
LOAD [p=*q]:   %146 = load i32* @strstart, align 4, !dbg !619
LOAD [p=*q]:   %148 = load i64* @block_start, align 8, !dbg !619
CALL [call func]:   %150 = call i64 @flush_block(i8* %145, i64 %149, i32 0), !dbg !619
LOAD [p=*q]:   %151 = load i32* @strstart, align 4, !dbg !619
STORE [*p=q]:   store i64 %152, i64* @block_start, align 8, !dbg !619
LOAD [p=*q]:   %146 = load i32* @strstart, align 4, !dbg !619
LOAD [p=*q]:   %148 = load i64* @block_start, align 8, !dbg !619
CALL [call func]:   %150 = call i64 @flush_block(i8* %145, i64 %149, i32 0), !dbg !619
LOAD [p=*q]:   %151 = load i32* @strstart, align 4, !dbg !619
STORE [*p=q]:   store i64 %152, i64* @block_start, align 8, !dbg !619
LOAD [p=*q]:   %146 = load i32* @strstart, align 4, !dbg !619
LOAD [p=*q]:   %148 = load i64* @block_start, align 8, !dbg !619
CALL [call func]:   %150 = call i64 @flush_block(i8* %145, i64 %149, i32 0), !dbg !619
LOAD [p=*q]:   %151 = load i32* @strstart, align 4, !dbg !619
STORE [*p=q]:   store i64 %152, i64* @block_start, align 8, !dbg !619
LOAD [p=*q]:   %155 = load i32* %match_available, align 4, !dbg !621
LOAD [p=*q]:   %158 = load i32* @strstart, align 4, !dbg !622
LOAD [p=*q]:   %162 = load i8* %161, align 1, !dbg !622
CALL [call func]:   %164 = call i32 @ct_tally(i32 0, i32 %163), !dbg !622
STORE [*p=q]:   store i32 1, i32* %match_available, align 4, !dbg !630
LOAD [p=*q]:   %190 = load i32* @strstart, align 4, !dbg !632
STORE [*p=q]:   store i32 %191, i32* @strstart, align 4, !dbg !632
LOAD [p=*q]:   %192 = load i32* @lookahead, align 4, !dbg !633
STORE [*p=q]:   store i32 %193, i32* @lookahead, align 4, !dbg !633
LOAD [p=*q]:   %158 = load i32* @strstart, align 4, !dbg !622
LOAD [p=*q]:   %162 = load i8* %161, align 1, !dbg !622
CALL [call func]:   %164 = call i32 @ct_tally(i32 0, i32 %163), !dbg !622
LOAD [p=*q]:   %167 = load i64* @block_start, align 8, !dbg !624
LOAD [p=*q]:   %185 = load i32* @strstart, align 4, !dbg !627
STORE [*p=q]:   store i32 %186, i32* @strstart, align 4, !dbg !627
LOAD [p=*q]:   %187 = load i32* @lookahead, align 4, !dbg !628
STORE [*p=q]:   store i32 %188, i32* @lookahead, align 4, !dbg !628
LOAD [p=*q]:   %167 = load i64* @block_start, align 8, !dbg !624
LOAD [p=*q]:   %170 = load i64* @block_start, align 8, !dbg !624
LOAD [p=*q]:   %170 = load i64* @block_start, align 8, !dbg !624
LOAD [p=*q]:   %177 = load i32* @strstart, align 4, !dbg !624
LOAD [p=*q]:   %179 = load i64* @block_start, align 8, !dbg !624
CALL [call func]:   %181 = call i64 @flush_block(i8* %176, i64 %180, i32 0), !dbg !624
LOAD [p=*q]:   %182 = load i32* @strstart, align 4, !dbg !624
STORE [*p=q]:   store i64 %183, i64* @block_start, align 8, !dbg !624
LOAD [p=*q]:   %177 = load i32* @strstart, align 4, !dbg !624
LOAD [p=*q]:   %179 = load i64* @block_start, align 8, !dbg !624
CALL [call func]:   %181 = call i64 @flush_block(i8* %176, i64 %180, i32 0), !dbg !624
LOAD [p=*q]:   %182 = load i32* @strstart, align 4, !dbg !624
STORE [*p=q]:   store i64 %183, i64* @block_start, align 8, !dbg !624
LOAD [p=*q]:   %177 = load i32* @strstart, align 4, !dbg !624
LOAD [p=*q]:   %179 = load i64* @block_start, align 8, !dbg !624
CALL [call func]:   %181 = call i64 @flush_block(i8* %176, i64 %180, i32 0), !dbg !624
LOAD [p=*q]:   %182 = load i32* @strstart, align 4, !dbg !624
STORE [*p=q]:   store i64 %183, i64* @block_start, align 8, !dbg !624
LOAD [p=*q]:   %185 = load i32* @strstart, align 4, !dbg !627
STORE [*p=q]:   store i32 %186, i32* @strstart, align 4, !dbg !627
LOAD [p=*q]:   %187 = load i32* @lookahead, align 4, !dbg !628
STORE [*p=q]:   store i32 %188, i32* @lookahead, align 4, !dbg !628
LOAD [p=*q]:   %185 = load i32* @strstart, align 4, !dbg !627
STORE [*p=q]:   store i32 %186, i32* @strstart, align 4, !dbg !627
LOAD [p=*q]:   %187 = load i32* @lookahead, align 4, !dbg !628
STORE [*p=q]:   store i32 %188, i32* @lookahead, align 4, !dbg !628
STORE [*p=q]:   store i32 1, i32* %match_available, align 4, !dbg !630
LOAD [p=*q]:   %190 = load i32* @strstart, align 4, !dbg !632
STORE [*p=q]:   store i32 %191, i32* @strstart, align 4, !dbg !632
LOAD [p=*q]:   %192 = load i32* @lookahead, align 4, !dbg !633
STORE [*p=q]:   store i32 %193, i32* @lookahead, align 4, !dbg !633
LOAD [p=*q]:   %197 = load i32* @lookahead, align 4, !dbg !634
LOAD [p=*q]:   %197 = load i32* @lookahead, align 4, !dbg !634
LOAD [p=*q]:   %200 = load i32* @eofile, align 4, !dbg !634
LOAD [p=*q]:   %200 = load i32* @eofile, align 4, !dbg !634
CALL [call func]:   call void @fill_window(), !dbg !635
CALL [call func]:   call void @fill_window(), !dbg !635
LOAD [p=*q]:   %197 = load i32* @lookahead, align 4, !dbg !634
LOAD [p=*q]:   %8 = load i32* @lookahead, align 4, !dbg !590
LOAD [p=*q]:   %208 = load i32* %match_available, align 4, !dbg !637
LOAD [p=*q]:   %211 = load i32* @strstart, align 4, !dbg !638
LOAD [p=*q]:   %215 = load i8* %214, align 1, !dbg !638
CALL [call func]:   %217 = call i32 @ct_tally(i32 0, i32 %216), !dbg !638
LOAD [p=*q]:   %219 = load i64* @block_start, align 8, !dbg !639
LOAD [p=*q]:   %211 = load i32* @strstart, align 4, !dbg !638
LOAD [p=*q]:   %215 = load i8* %214, align 1, !dbg !638
CALL [call func]:   %217 = call i32 @ct_tally(i32 0, i32 %216), !dbg !638
LOAD [p=*q]:   %219 = load i64* @block_start, align 8, !dbg !639
LOAD [p=*q]:   %219 = load i64* @block_start, align 8, !dbg !639
LOAD [p=*q]:   %222 = load i64* @block_start, align 8, !dbg !639
LOAD [p=*q]:   %222 = load i64* @block_start, align 8, !dbg !639
LOAD [p=*q]:   %229 = load i32* @strstart, align 4, !dbg !639
LOAD [p=*q]:   %231 = load i64* @block_start, align 8, !dbg !639
CALL [call func]:   %233 = call i64 @flush_block(i8* %228, i64 %232, i32 1), !dbg !639
STORE [*p=q]:   store i64 %233, i64* %1, !dbg !639
LOAD [p=*q]:   %229 = load i32* @strstart, align 4, !dbg !639
LOAD [p=*q]:   %231 = load i64* @block_start, align 8, !dbg !639
CALL [call func]:   %233 = call i64 @flush_block(i8* %228, i64 %232, i32 1), !dbg !639
STORE [*p=q]:   store i64 %233, i64* %1, !dbg !639
LOAD [p=*q]:   %229 = load i32* @strstart, align 4, !dbg !639
LOAD [p=*q]:   %231 = load i64* @block_start, align 8, !dbg !639
CALL [call func]:   %233 = call i64 @flush_block(i8* %228, i64 %232, i32 1), !dbg !639
STORE [*p=q]:   store i64 %233, i64* %1, !dbg !639
LOAD [p=*q]:   %235 = load i64* %1, !dbg !640
Analyzing return instruction for deflate
	  %235 = load i64* %1, !dbg !640
LOAD [p=*q]:   %235 = load i64* %1, !dbg !640
Analyzing return instruction for deflate
	  %235 = load i64* %1, !dbg !640
[Processing][Function][fill_window]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !574), !dbg !576
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %m}, metadata !577), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %more}, metadata !579), !dbg !580
LOAD [p=*q]:   %1 = load i64* @window_size, align 8, !dbg !581
LOAD [p=*q]:   %2 = load i32* @lookahead, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @strstart, align 4, !dbg !581
STORE [*p=q]:   store i32 %8, i32* %more, align 4, !dbg !581
LOAD [p=*q]:   %9 = load i32* %more, align 4, !dbg !582
LOAD [p=*q]:   %12 = load i32* %more, align 4, !dbg !583
STORE [*p=q]:   store i32 %13, i32* %more, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* @strstart, align 4, !dbg !586
LOAD [p=*q]:   %12 = load i32* %more, align 4, !dbg !583
STORE [*p=q]:   store i32 %13, i32* %more, align 4, !dbg !583
LOAD [p=*q]:   %78 = load i32* @eofile, align 4, !dbg !608
LOAD [p=*q]:   %15 = load i32* @strstart, align 4, !dbg !586
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([65536 x i8]* @window, i32 0, i32 0), i8* getelementptr inbounds ([65536 x i8]* @window, i32 0, i64 32768), i64 32768, i32 1, i1 false), !dbg !587
LOAD [p=*q]:   %18 = load i32* @match_start, align 4, !dbg !589
STORE [*p=q]:   store i32 %19, i32* @match_start, align 4, !dbg !589
LOAD [p=*q]:   %20 = load i32* @strstart, align 4, !dbg !590
STORE [*p=q]:   store i32 %21, i32* @strstart, align 4, !dbg !590
LOAD [p=*q]:   %22 = load i64* @block_start, align 8, !dbg !591
STORE [*p=q]:   store i64 %23, i64* @block_start, align 8, !dbg !591
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !592
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([65536 x i8]* @window, i32 0, i32 0), i8* getelementptr inbounds ([65536 x i8]* @window, i32 0, i64 32768), i64 32768, i32 1, i1 false), !dbg !587
LOAD [p=*q]:   %18 = load i32* @match_start, align 4, !dbg !589
STORE [*p=q]:   store i32 %19, i32* @match_start, align 4, !dbg !589
LOAD [p=*q]:   %20 = load i32* @strstart, align 4, !dbg !590
STORE [*p=q]:   store i32 %21, i32* @strstart, align 4, !dbg !590
LOAD [p=*q]:   %22 = load i64* @block_start, align 8, !dbg !591
STORE [*p=q]:   store i64 %23, i64* @block_start, align 8, !dbg !591
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !592
LOAD [p=*q]:   %25 = load i32* %n, align 4, !dbg !592
LOAD [p=*q]:   %25 = load i32* %n, align 4, !dbg !592
LOAD [p=*q]:   %28 = load i32* %n, align 4, !dbg !594
LOAD [p=*q]:   %31 = load i16* %30, !dbg !594
STORE [*p=q]:   store i32 %32, i32* %m, align 4, !dbg !594
LOAD [p=*q]:   %33 = load i32* %m, align 4, !dbg !596
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !599
LOAD [p=*q]:   %28 = load i32* %n, align 4, !dbg !594
LOAD [p=*q]:   %31 = load i16* %30, !dbg !594
STORE [*p=q]:   store i32 %32, i32* %m, align 4, !dbg !594
LOAD [p=*q]:   %33 = load i32* %m, align 4, !dbg !596
LOAD [p=*q]:   %36 = load i32* %m, align 4, !dbg !596
LOAD [p=*q]:   %36 = load i32* %m, align 4, !dbg !596
LOAD [p=*q]:   %42 = load i32* %n, align 4, !dbg !596
STORE [*p=q]:   store i16 %41, i16* %44, !dbg !596
LOAD [p=*q]:   %42 = load i32* %n, align 4, !dbg !596
STORE [*p=q]:   store i16 %41, i16* %44, !dbg !596
LOAD [p=*q]:   %42 = load i32* %n, align 4, !dbg !596
STORE [*p=q]:   store i16 %41, i16* %44, !dbg !596
LOAD [p=*q]:   %46 = load i32* %n, align 4, !dbg !598
STORE [*p=q]:   store i32 %47, i32* %n, align 4, !dbg !598
LOAD [p=*q]:   %46 = load i32* %n, align 4, !dbg !598
STORE [*p=q]:   store i32 %47, i32* %n, align 4, !dbg !598
LOAD [p=*q]:   %25 = load i32* %n, align 4, !dbg !592
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !599
LOAD [p=*q]:   %50 = load i32* %n, align 4, !dbg !599
LOAD [p=*q]:   %50 = load i32* %n, align 4, !dbg !599
LOAD [p=*q]:   %53 = load i32* %n, align 4, !dbg !601
LOAD [p=*q]:   %56 = load i16* %55, align 1, !dbg !601
STORE [*p=q]:   store i32 %57, i32* %m, align 4, !dbg !601
LOAD [p=*q]:   %58 = load i32* %m, align 4, !dbg !603
LOAD [p=*q]:   %74 = load i32* %more, align 4, !dbg !606
STORE [*p=q]:   store i32 %75, i32* %more, align 4, !dbg !606
LOAD [p=*q]:   %53 = load i32* %n, align 4, !dbg !601
LOAD [p=*q]:   %56 = load i16* %55, align 1, !dbg !601
STORE [*p=q]:   store i32 %57, i32* %m, align 4, !dbg !601
LOAD [p=*q]:   %58 = load i32* %m, align 4, !dbg !603
LOAD [p=*q]:   %61 = load i32* %m, align 4, !dbg !603
LOAD [p=*q]:   %61 = load i32* %m, align 4, !dbg !603
LOAD [p=*q]:   %67 = load i32* %n, align 4, !dbg !603
STORE [*p=q]:   store i16 %66, i16* %69, align 1, !dbg !603
LOAD [p=*q]:   %67 = load i32* %n, align 4, !dbg !603
STORE [*p=q]:   store i16 %66, i16* %69, align 1, !dbg !603
LOAD [p=*q]:   %67 = load i32* %n, align 4, !dbg !603
STORE [*p=q]:   store i16 %66, i16* %69, align 1, !dbg !603
LOAD [p=*q]:   %71 = load i32* %n, align 4, !dbg !605
STORE [*p=q]:   store i32 %72, i32* %n, align 4, !dbg !605
LOAD [p=*q]:   %71 = load i32* %n, align 4, !dbg !605
STORE [*p=q]:   store i32 %72, i32* %n, align 4, !dbg !605
LOAD [p=*q]:   %50 = load i32* %n, align 4, !dbg !599
LOAD [p=*q]:   %74 = load i32* %more, align 4, !dbg !606
STORE [*p=q]:   store i32 %75, i32* %more, align 4, !dbg !606
LOAD [p=*q]:   %78 = load i32* @eofile, align 4, !dbg !608
LOAD [p=*q]:   %78 = load i32* @eofile, align 4, !dbg !608
Analyzing return instruction for fill_window
No return value for: fill_window
LOAD [p=*q]:   %81 = load i32 (i8*, i32)** @read_buf, align 8, !dbg !609
LOAD [p=*q]:   %82 = load i32* @strstart, align 4, !dbg !609
LOAD [p=*q]:   %85 = load i32* @lookahead, align 4, !dbg !609
LOAD [p=*q]:   %88 = load i32* %more, align 4, !dbg !609
CALL [call func]:   %89 = call i32 %81(i8* %87, i32 %88), !dbg !609
STORE [*p=q]:   store i32 %89, i32* %n, align 4, !dbg !609
LOAD [p=*q]:   %90 = load i32* %n, align 4, !dbg !611
LOAD [p=*q]:   %81 = load i32 (i8*, i32)** @read_buf, align 8, !dbg !609
LOAD [p=*q]:   %82 = load i32* @strstart, align 4, !dbg !609
LOAD [p=*q]:   %85 = load i32* @lookahead, align 4, !dbg !609
LOAD [p=*q]:   %88 = load i32* %more, align 4, !dbg !609
CALL [call func]:   %89 = call i32 %81(i8* %87, i32 %88), !dbg !609
STORE [*p=q]:   store i32 %89, i32* %n, align 4, !dbg !609
LOAD [p=*q]:   %90 = load i32* %n, align 4, !dbg !611
STORE [*p=q]:   store i32 1, i32* @eofile, align 4, !dbg !612
LOAD [p=*q]:   %96 = load i32* @strstart, align 4, !dbg !614
LOAD [p=*q]:   %99 = load i32* @lookahead, align 4, !dbg !614
CALL [call func]:   call void @llvm.memset.p0i8.i64(i8* %101, i8 0, i64 2, i32 1, i1 false), !dbg !614
LOAD [p=*q]:   %93 = load i32* %n, align 4, !dbg !611
LOAD [p=*q]:   %93 = load i32* %n, align 4, !dbg !611
STORE [*p=q]:   store i32 1, i32* @eofile, align 4, !dbg !612
LOAD [p=*q]:   %96 = load i32* @strstart, align 4, !dbg !614
LOAD [p=*q]:   %99 = load i32* @lookahead, align 4, !dbg !614
CALL [call func]:   call void @llvm.memset.p0i8.i64(i8* %101, i8 0, i64 2, i32 1, i1 false), !dbg !614
LOAD [p=*q]:   %103 = load i32* %n, align 4, !dbg !616
LOAD [p=*q]:   %104 = load i32* @lookahead, align 4, !dbg !616
STORE [*p=q]:   store i32 %105, i32* @lookahead, align 4, !dbg !616
STORE [*p=q]:   store i32 1, i32* @eofile, align 4, !dbg !612
LOAD [p=*q]:   %96 = load i32* @strstart, align 4, !dbg !614
LOAD [p=*q]:   %99 = load i32* @lookahead, align 4, !dbg !614
CALL [call func]:   call void @llvm.memset.p0i8.i64(i8* %101, i8 0, i64 2, i32 1, i1 false), !dbg !614
LOAD [p=*q]:   %103 = load i32* %n, align 4, !dbg !616
LOAD [p=*q]:   %104 = load i32* @lookahead, align 4, !dbg !616
STORE [*p=q]:   store i32 %105, i32* @lookahead, align 4, !dbg !616
Analyzing return instruction for fill_window
No return value for: fill_window
Analyzing return instruction for fill_window
No return value for: fill_window
[Processing][Function][lm_init]
STORE [*p=q]:   store i32 %pack_level, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i16* %flags, i16** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i16** %2}, metadata !576), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %j}, metadata !579), !dbg !581
LOAD [p=*q]:   %3 = load i32* %1, align 4, !dbg !582
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([15 x i8]* @.str, i32 0, i32 0)) #7, !dbg !583
LOAD [p=*q]:   %6 = load i32* %1, align 4, !dbg !582
LOAD [p=*q]:   %6 = load i32* %1, align 4, !dbg !582
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([15 x i8]* @.str, i32 0, i32 0)) #7, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
STORE [*p=q]:   store i32 %10, i32* @compr_level, align 4, !dbg !584
CALL [call func]:   call void @llvm.memset.p0i8.i64(i8* bitcast (i16* getelementptr inbounds ([65536 x i16]* @prev, i32 0, i64 32768) to i8*), i8 0, i64 65536, i32 1, i1 false), !dbg !585
LOAD [p=*q]:   %11 = load i32* %1, align 4, !dbg !586
LOAD [p=*q]:   %15 = load i16* %14, align 2, !dbg !586
STORE [*p=q]:   store i32 %16, i32* @max_lazy_match, align 4, !dbg !586
LOAD [p=*q]:   %17 = load i32* %1, align 4, !dbg !587
LOAD [p=*q]:   %21 = load i16* %20, align 2, !dbg !587
STORE [*p=q]:   store i32 %22, i32* @good_match, align 4, !dbg !587
LOAD [p=*q]:   %23 = load i32* %1, align 4, !dbg !588
LOAD [p=*q]:   %27 = load i16* %26, align 2, !dbg !588
STORE [*p=q]:   store i32 %28, i32* @nice_match, align 4, !dbg !588
LOAD [p=*q]:   %29 = load i32* %1, align 4, !dbg !589
LOAD [p=*q]:   %33 = load i16* %32, align 2, !dbg !589
STORE [*p=q]:   store i32 %34, i32* @max_chain_length, align 4, !dbg !589
LOAD [p=*q]:   %35 = load i32* %1, align 4, !dbg !590
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([15 x i8]* @.str, i32 0, i32 0)) #7, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
STORE [*p=q]:   store i32 %10, i32* @compr_level, align 4, !dbg !584
CALL [call func]:   call void @llvm.memset.p0i8.i64(i8* bitcast (i16* getelementptr inbounds ([65536 x i16]* @prev, i32 0, i64 32768) to i8*), i8 0, i64 65536, i32 1, i1 false), !dbg !585
LOAD [p=*q]:   %11 = load i32* %1, align 4, !dbg !586
LOAD [p=*q]:   %15 = load i16* %14, align 2, !dbg !586
STORE [*p=q]:   store i32 %16, i32* @max_lazy_match, align 4, !dbg !586
LOAD [p=*q]:   %17 = load i32* %1, align 4, !dbg !587
LOAD [p=*q]:   %21 = load i16* %20, align 2, !dbg !587
STORE [*p=q]:   store i32 %22, i32* @good_match, align 4, !dbg !587
LOAD [p=*q]:   %23 = load i32* %1, align 4, !dbg !588
LOAD [p=*q]:   %27 = load i16* %26, align 2, !dbg !588
STORE [*p=q]:   store i32 %28, i32* @nice_match, align 4, !dbg !588
LOAD [p=*q]:   %29 = load i32* %1, align 4, !dbg !589
LOAD [p=*q]:   %33 = load i16* %32, align 2, !dbg !589
STORE [*p=q]:   store i32 %34, i32* @max_chain_length, align 4, !dbg !589
LOAD [p=*q]:   %35 = load i32* %1, align 4, !dbg !590
LOAD [p=*q]:   %38 = load i16** %2, align 8, !dbg !591
LOAD [p=*q]:   %39 = load i16* %38, !dbg !591
STORE [*p=q]:   store i16 %42, i16* %38, !dbg !591
LOAD [p=*q]:   %44 = load i32* %1, align 4, !dbg !594
LOAD [p=*q]:   %38 = load i16** %2, align 8, !dbg !591
LOAD [p=*q]:   %39 = load i16* %38, !dbg !591
STORE [*p=q]:   store i16 %42, i16* %38, !dbg !591
STORE [*p=q]:   store i32 0, i32* @strstart, align 4, !dbg !598
STORE [*p=q]:   store i64 0, i64* @block_start, align 8, !dbg !599
LOAD [p=*q]:   %54 = load i32 (i8*, i32)** @read_buf, align 8, !dbg !600
CALL [call func]:   %55 = call i32 %54(i8* getelementptr inbounds ([65536 x i8]* @window, i32 0, i32 0), i32 65536), !dbg !600
STORE [*p=q]:   store i32 %55, i32* @lookahead, align 4, !dbg !600
LOAD [p=*q]:   %56 = load i32* @lookahead, align 4, !dbg !601
LOAD [p=*q]:   %44 = load i32* %1, align 4, !dbg !594
LOAD [p=*q]:   %47 = load i16** %2, align 8, !dbg !595
LOAD [p=*q]:   %48 = load i16* %47, !dbg !595
STORE [*p=q]:   store i16 %51, i16* %47, !dbg !595
LOAD [p=*q]:   %47 = load i16** %2, align 8, !dbg !595
LOAD [p=*q]:   %48 = load i16* %47, !dbg !595
STORE [*p=q]:   store i16 %51, i16* %47, !dbg !595
STORE [*p=q]:   store i32 0, i32* @strstart, align 4, !dbg !598
STORE [*p=q]:   store i64 0, i64* @block_start, align 8, !dbg !599
LOAD [p=*q]:   %54 = load i32 (i8*, i32)** @read_buf, align 8, !dbg !600
CALL [call func]:   %55 = call i32 %54(i8* getelementptr inbounds ([65536 x i8]* @window, i32 0, i32 0), i32 65536), !dbg !600
STORE [*p=q]:   store i32 %55, i32* @lookahead, align 4, !dbg !600
LOAD [p=*q]:   %56 = load i32* @lookahead, align 4, !dbg !601
STORE [*p=q]:   store i32 0, i32* @strstart, align 4, !dbg !598
STORE [*p=q]:   store i64 0, i64* @block_start, align 8, !dbg !599
LOAD [p=*q]:   %54 = load i32 (i8*, i32)** @read_buf, align 8, !dbg !600
CALL [call func]:   %55 = call i32 %54(i8* getelementptr inbounds ([65536 x i8]* @window, i32 0, i32 0), i32 65536), !dbg !600
STORE [*p=q]:   store i32 %55, i32* @lookahead, align 4, !dbg !600
LOAD [p=*q]:   %56 = load i32* @lookahead, align 4, !dbg !601
STORE [*p=q]:   store i32 1, i32* @eofile, align 4, !dbg !602
STORE [*p=q]:   store i32 0, i32* @lookahead, align 4, !dbg !602
LOAD [p=*q]:   %59 = load i32* @lookahead, align 4, !dbg !601
LOAD [p=*q]:   %59 = load i32* @lookahead, align 4, !dbg !601
STORE [*p=q]:   store i32 1, i32* @eofile, align 4, !dbg !602
STORE [*p=q]:   store i32 0, i32* @lookahead, align 4, !dbg !602
STORE [*p=q]:   store i32 0, i32* @eofile, align 4, !dbg !605
STORE [*p=q]:   store i32 1, i32* @eofile, align 4, !dbg !602
STORE [*p=q]:   store i32 0, i32* @lookahead, align 4, !dbg !602
Analyzing return instruction for lm_init
No return value for: lm_init
STORE [*p=q]:   store i32 0, i32* @eofile, align 4, !dbg !605
LOAD [p=*q]:   %64 = load i32* @lookahead, align 4, !dbg !606
LOAD [p=*q]:   %64 = load i32* @lookahead, align 4, !dbg !606
LOAD [p=*q]:   %67 = load i32* @eofile, align 4, !dbg !606
LOAD [p=*q]:   %67 = load i32* @eofile, align 4, !dbg !606
CALL [call func]:   call void @fill_window(), !dbg !607
STORE [*p=q]:   store i32 0, i32* @ins_h, align 4, !dbg !608
STORE [*p=q]:   store i32 0, i32* %j, align 4, !dbg !609
CALL [call func]:   call void @fill_window(), !dbg !607
LOAD [p=*q]:   %64 = load i32* @lookahead, align 4, !dbg !606
STORE [*p=q]:   store i32 0, i32* @ins_h, align 4, !dbg !608
STORE [*p=q]:   store i32 0, i32* %j, align 4, !dbg !609
LOAD [p=*q]:   %75 = load i32* %j, align 4, !dbg !609
LOAD [p=*q]:   %75 = load i32* %j, align 4, !dbg !609
LOAD [p=*q]:   %78 = load i32* @ins_h, align 4, !dbg !611
LOAD [p=*q]:   %80 = load i32* %j, align 4, !dbg !611
LOAD [p=*q]:   %83 = load i8* %82, align 1, !dbg !611
STORE [*p=q]:   store i32 %86, i32* @ins_h, align 4, !dbg !611
Analyzing return instruction for lm_init
No return value for: lm_init
LOAD [p=*q]:   %78 = load i32* @ins_h, align 4, !dbg !611
LOAD [p=*q]:   %80 = load i32* %j, align 4, !dbg !611
LOAD [p=*q]:   %83 = load i8* %82, align 1, !dbg !611
STORE [*p=q]:   store i32 %86, i32* @ins_h, align 4, !dbg !611
LOAD [p=*q]:   %88 = load i32* %j, align 4, !dbg !612
STORE [*p=q]:   store i32 %89, i32* %j, align 4, !dbg !612
LOAD [p=*q]:   %88 = load i32* %j, align 4, !dbg !612
STORE [*p=q]:   store i32 %89, i32* %j, align 4, !dbg !612
LOAD [p=*q]:   %75 = load i32* %j, align 4, !dbg !609
Analyzing return instruction for lm_init
No return value for: lm_init
[Processing][Function][copy_block]
STORE [*p=q]:   store i8* %buf, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %len, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
STORE [*p=q]:   store i32 %header, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !578), !dbg !579
CALL [call func]:   call void @bi_windup(), !dbg !580
LOAD [p=*q]:   %4 = load i32* %3, align 4, !dbg !582
LOAD [p=*q]:   %7 = load i32* @outcnt, align 4, !dbg !583
LOAD [p=*q]:   %7 = load i32* @outcnt, align 4, !dbg !583
LOAD [p=*q]:   %10 = load i32* %2, align 4, !dbg !586
LOAD [p=*q]:   %15 = load i32* @outcnt, align 4, !dbg !586
STORE [*p=q]:   store i32 %16, i32* @outcnt, align 4, !dbg !586
STORE [*p=q]:   store i8 %14, i8* %18, align 1, !dbg !586
LOAD [p=*q]:   %19 = load i32* %2, align 4, !dbg !586
LOAD [p=*q]:   %24 = load i32* @outcnt, align 4, !dbg !586
STORE [*p=q]:   store i32 %25, i32* @outcnt, align 4, !dbg !586
STORE [*p=q]:   store i8 %23, i8* %27, align 1, !dbg !586
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !588
LOAD [p=*q]:   %34 = load i32* @outcnt, align 4, !dbg !588
STORE [*p=q]:   store i32 %35, i32* @outcnt, align 4, !dbg !588
STORE [*p=q]:   store i8 %33, i8* %37, align 1, !dbg !588
LOAD [p=*q]:   %38 = load i32* @outcnt, align 4, !dbg !588
LOAD [p=*q]:   %10 = load i32* %2, align 4, !dbg !586
LOAD [p=*q]:   %15 = load i32* @outcnt, align 4, !dbg !586
STORE [*p=q]:   store i32 %16, i32* @outcnt, align 4, !dbg !586
STORE [*p=q]:   store i8 %14, i8* %18, align 1, !dbg !586
LOAD [p=*q]:   %19 = load i32* %2, align 4, !dbg !586
LOAD [p=*q]:   %24 = load i32* @outcnt, align 4, !dbg !586
STORE [*p=q]:   store i32 %25, i32* @outcnt, align 4, !dbg !586
STORE [*p=q]:   store i8 %23, i8* %27, align 1, !dbg !586
LOAD [p=*q]:   %56 = load i32* @outcnt, align 4, !dbg !593
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !588
LOAD [p=*q]:   %34 = load i32* @outcnt, align 4, !dbg !588
STORE [*p=q]:   store i32 %35, i32* @outcnt, align 4, !dbg !588
STORE [*p=q]:   store i8 %33, i8* %37, align 1, !dbg !588
LOAD [p=*q]:   %38 = load i32* @outcnt, align 4, !dbg !588
CALL [call func]:   call void @flush_outbuf(), !dbg !588
LOAD [p=*q]:   %42 = load i32* %2, align 4, !dbg !591
LOAD [p=*q]:   %47 = load i32* @outcnt, align 4, !dbg !591
STORE [*p=q]:   store i32 %48, i32* @outcnt, align 4, !dbg !591
STORE [*p=q]:   store i8 %46, i8* %50, align 1, !dbg !591
LOAD [p=*q]:   %51 = load i32* @outcnt, align 4, !dbg !591
CALL [call func]:   call void @flush_outbuf(), !dbg !588
LOAD [p=*q]:   %42 = load i32* %2, align 4, !dbg !591
LOAD [p=*q]:   %47 = load i32* @outcnt, align 4, !dbg !591
STORE [*p=q]:   store i32 %48, i32* @outcnt, align 4, !dbg !591
STORE [*p=q]:   store i8 %46, i8* %50, align 1, !dbg !591
LOAD [p=*q]:   %51 = load i32* @outcnt, align 4, !dbg !591
LOAD [p=*q]:   %42 = load i32* %2, align 4, !dbg !591
LOAD [p=*q]:   %47 = load i32* @outcnt, align 4, !dbg !591
STORE [*p=q]:   store i32 %48, i32* @outcnt, align 4, !dbg !591
STORE [*p=q]:   store i8 %46, i8* %50, align 1, !dbg !591
LOAD [p=*q]:   %51 = load i32* @outcnt, align 4, !dbg !591
CALL [call func]:   call void @flush_outbuf(), !dbg !591
CALL [call func]:   call void @flush_outbuf(), !dbg !591
LOAD [p=*q]:   %56 = load i32* @outcnt, align 4, !dbg !593
LOAD [p=*q]:   %56 = load i32* @outcnt, align 4, !dbg !593
LOAD [p=*q]:   %59 = load i32* %2, align 4, !dbg !595
LOAD [p=*q]:   %65 = load i32* @outcnt, align 4, !dbg !595
STORE [*p=q]:   store i32 %66, i32* @outcnt, align 4, !dbg !595
STORE [*p=q]:   store i8 %64, i8* %68, align 1, !dbg !595
LOAD [p=*q]:   %69 = load i32* %2, align 4, !dbg !595
LOAD [p=*q]:   %75 = load i32* @outcnt, align 4, !dbg !595
STORE [*p=q]:   store i32 %76, i32* @outcnt, align 4, !dbg !595
STORE [*p=q]:   store i8 %74, i8* %78, align 1, !dbg !595
LOAD [p=*q]:   %80 = load i32* %2, align 4, !dbg !597
LOAD [p=*q]:   %86 = load i32* @outcnt, align 4, !dbg !597
STORE [*p=q]:   store i32 %87, i32* @outcnt, align 4, !dbg !597
STORE [*p=q]:   store i8 %85, i8* %89, align 1, !dbg !597
LOAD [p=*q]:   %90 = load i32* @outcnt, align 4, !dbg !597
LOAD [p=*q]:   %59 = load i32* %2, align 4, !dbg !595
LOAD [p=*q]:   %65 = load i32* @outcnt, align 4, !dbg !595
STORE [*p=q]:   store i32 %66, i32* @outcnt, align 4, !dbg !595
STORE [*p=q]:   store i8 %64, i8* %68, align 1, !dbg !595
LOAD [p=*q]:   %69 = load i32* %2, align 4, !dbg !595
LOAD [p=*q]:   %75 = load i32* @outcnt, align 4, !dbg !595
STORE [*p=q]:   store i32 %76, i32* @outcnt, align 4, !dbg !595
STORE [*p=q]:   store i8 %74, i8* %78, align 1, !dbg !595
LOAD [p=*q]:   %80 = load i32* %2, align 4, !dbg !597
LOAD [p=*q]:   %86 = load i32* @outcnt, align 4, !dbg !597
STORE [*p=q]:   store i32 %87, i32* @outcnt, align 4, !dbg !597
STORE [*p=q]:   store i8 %85, i8* %89, align 1, !dbg !597
LOAD [p=*q]:   %90 = load i32* @outcnt, align 4, !dbg !597
CALL [call func]:   call void @flush_outbuf(), !dbg !597
LOAD [p=*q]:   %94 = load i32* %2, align 4, !dbg !600
LOAD [p=*q]:   %100 = load i32* @outcnt, align 4, !dbg !600
STORE [*p=q]:   store i32 %101, i32* @outcnt, align 4, !dbg !600
STORE [*p=q]:   store i8 %99, i8* %103, align 1, !dbg !600
LOAD [p=*q]:   %104 = load i32* @outcnt, align 4, !dbg !600
CALL [call func]:   call void @flush_outbuf(), !dbg !597
LOAD [p=*q]:   %94 = load i32* %2, align 4, !dbg !600
LOAD [p=*q]:   %100 = load i32* @outcnt, align 4, !dbg !600
STORE [*p=q]:   store i32 %101, i32* @outcnt, align 4, !dbg !600
STORE [*p=q]:   store i8 %99, i8* %103, align 1, !dbg !600
LOAD [p=*q]:   %104 = load i32* @outcnt, align 4, !dbg !600
LOAD [p=*q]:   %94 = load i32* %2, align 4, !dbg !600
LOAD [p=*q]:   %100 = load i32* @outcnt, align 4, !dbg !600
STORE [*p=q]:   store i32 %101, i32* @outcnt, align 4, !dbg !600
STORE [*p=q]:   store i8 %99, i8* %103, align 1, !dbg !600
LOAD [p=*q]:   %104 = load i32* @outcnt, align 4, !dbg !600
CALL [call func]:   call void @flush_outbuf(), !dbg !600
CALL [call func]:   call void @flush_outbuf(), !dbg !600
LOAD [p=*q]:   %111 = load i32* %2, align 4, !dbg !603
STORE [*p=q]:   store i32 %112, i32* %2, align 4, !dbg !603
LOAD [p=*q]:   %111 = load i32* %2, align 4, !dbg !603
STORE [*p=q]:   store i32 %112, i32* %2, align 4, !dbg !603
LOAD [p=*q]:   %115 = load i8** %1, align 8, !dbg !604
STORE [*p=q]:   store i8* %116, i8** %1, align 8, !dbg !604
LOAD [p=*q]:   %117 = load i8* %115, !dbg !604
LOAD [p=*q]:   %118 = load i32* @outcnt, align 4, !dbg !604
STORE [*p=q]:   store i32 %119, i32* @outcnt, align 4, !dbg !604
STORE [*p=q]:   store i8 %117, i8* %121, align 1, !dbg !604
LOAD [p=*q]:   %122 = load i32* @outcnt, align 4, !dbg !604
Analyzing return instruction for copy_block
No return value for: copy_block
LOAD [p=*q]:   %115 = load i8** %1, align 8, !dbg !604
STORE [*p=q]:   store i8* %116, i8** %1, align 8, !dbg !604
LOAD [p=*q]:   %117 = load i8* %115, !dbg !604
LOAD [p=*q]:   %118 = load i32* @outcnt, align 4, !dbg !604
STORE [*p=q]:   store i32 %119, i32* @outcnt, align 4, !dbg !604
STORE [*p=q]:   store i8 %117, i8* %121, align 1, !dbg !604
LOAD [p=*q]:   %122 = load i32* @outcnt, align 4, !dbg !604
CALL [call func]:   call void @flush_outbuf(), !dbg !604
CALL [call func]:   call void @flush_outbuf(), !dbg !604
LOAD [p=*q]:   %111 = load i32* %2, align 4, !dbg !603
STORE [*p=q]:   store i32 %112, i32* %2, align 4, !dbg !603
Analyzing return instruction for copy_block
No return value for: copy_block
[Processing][Function][ct_init]
STORE [*p=q]:   store i16* %attr, i16** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i16** %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32* %methodp, i32** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32** %2}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !578), !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %bits}, metadata !581), !dbg !582
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %length}, metadata !583), !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %code}, metadata !585), !dbg !586
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %dist}, metadata !587), !dbg !588
LOAD [p=*q]:   %3 = load i16** %1, align 8, !dbg !589
STORE [*p=q]:   store i16* %3, i16** @file_type, align 8, !dbg !589
LOAD [p=*q]:   %4 = load i32** %2, align 8, !dbg !590
STORE [*p=q]:   store i32* %4, i32** @file_method, align 8, !dbg !590
STORE [*p=q]:   store i64 0, i64* @input_len, align 8, !dbg !591
STORE [*p=q]:   store i64 0, i64* @compressed_len, align 8, !dbg !591
LOAD [p=*q]:   %5 = load i16* getelementptr inbounds ([30 x %struct.ct_data]* @static_dtree, i32 0, i64 0, i32 1, i32 0), align 2, !dbg !592
STORE [*p=q]:   store i32 0, i32* %length, align 4, !dbg !594
STORE [*p=q]:   store i32 0, i32* %code, align 4, !dbg !595
Analyzing return instruction for ct_init
No return value for: ct_init
STORE [*p=q]:   store i32 0, i32* %length, align 4, !dbg !594
STORE [*p=q]:   store i32 0, i32* %code, align 4, !dbg !595
LOAD [p=*q]:   %11 = load i32* %code, align 4, !dbg !595
LOAD [p=*q]:   %11 = load i32* %code, align 4, !dbg !595
LOAD [p=*q]:   %14 = load i32* %length, align 4, !dbg !597
LOAD [p=*q]:   %15 = load i32* %code, align 4, !dbg !597
STORE [*p=q]:   store i32 %14, i32* %17, align 4, !dbg !597
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !599
LOAD [p=*q]:   %41 = load i32* %code, align 4, !dbg !607
LOAD [p=*q]:   %43 = load i32* %length, align 4, !dbg !607
STORE [*p=q]:   store i8 %42, i8* %46, align 1, !dbg !607
STORE [*p=q]:   store i32 0, i32* %dist, align 4, !dbg !608
STORE [*p=q]:   store i32 0, i32* %code, align 4, !dbg !609
LOAD [p=*q]:   %14 = load i32* %length, align 4, !dbg !597
LOAD [p=*q]:   %15 = load i32* %code, align 4, !dbg !597
STORE [*p=q]:   store i32 %14, i32* %17, align 4, !dbg !597
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !599
LOAD [p=*q]:   %19 = load i32* %n, align 4, !dbg !599
LOAD [p=*q]:   %20 = load i32* %code, align 4, !dbg !599
LOAD [p=*q]:   %23 = load i32* %22, align 4, !dbg !599
LOAD [p=*q]:   %19 = load i32* %n, align 4, !dbg !599
LOAD [p=*q]:   %20 = load i32* %code, align 4, !dbg !599
LOAD [p=*q]:   %23 = load i32* %22, align 4, !dbg !599
LOAD [p=*q]:   %27 = load i32* %code, align 4, !dbg !601
LOAD [p=*q]:   %29 = load i32* %length, align 4, !dbg !601
STORE [*p=q]:   store i32 %30, i32* %length, align 4, !dbg !601
STORE [*p=q]:   store i8 %28, i8* %32, align 1, !dbg !601
LOAD [p=*q]:   %27 = load i32* %code, align 4, !dbg !601
LOAD [p=*q]:   %29 = load i32* %length, align 4, !dbg !601
STORE [*p=q]:   store i32 %30, i32* %length, align 4, !dbg !601
STORE [*p=q]:   store i8 %28, i8* %32, align 1, !dbg !601
LOAD [p=*q]:   %34 = load i32* %n, align 4, !dbg !604
STORE [*p=q]:   store i32 %35, i32* %n, align 4, !dbg !604
LOAD [p=*q]:   %34 = load i32* %n, align 4, !dbg !604
STORE [*p=q]:   store i32 %35, i32* %n, align 4, !dbg !604
LOAD [p=*q]:   %19 = load i32* %n, align 4, !dbg !599
LOAD [p=*q]:   %20 = load i32* %code, align 4, !dbg !599
LOAD [p=*q]:   %23 = load i32* %22, align 4, !dbg !599
LOAD [p=*q]:   %38 = load i32* %code, align 4, !dbg !606
STORE [*p=q]:   store i32 %39, i32* %code, align 4, !dbg !606
LOAD [p=*q]:   %38 = load i32* %code, align 4, !dbg !606
STORE [*p=q]:   store i32 %39, i32* %code, align 4, !dbg !606
LOAD [p=*q]:   %11 = load i32* %code, align 4, !dbg !595
LOAD [p=*q]:   %41 = load i32* %code, align 4, !dbg !607
LOAD [p=*q]:   %43 = load i32* %length, align 4, !dbg !607
STORE [*p=q]:   store i8 %42, i8* %46, align 1, !dbg !607
STORE [*p=q]:   store i32 0, i32* %dist, align 4, !dbg !608
STORE [*p=q]:   store i32 0, i32* %code, align 4, !dbg !609
LOAD [p=*q]:   %48 = load i32* %code, align 4, !dbg !609
LOAD [p=*q]:   %48 = load i32* %code, align 4, !dbg !609
LOAD [p=*q]:   %51 = load i32* %dist, align 4, !dbg !611
LOAD [p=*q]:   %52 = load i32* %code, align 4, !dbg !611
STORE [*p=q]:   store i32 %51, i32* %54, align 4, !dbg !611
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !613
LOAD [p=*q]:   %78 = load i32* %dist, align 4, !dbg !621
STORE [*p=q]:   store i32 %79, i32* %dist, align 4, !dbg !621
LOAD [p=*q]:   %51 = load i32* %dist, align 4, !dbg !611
LOAD [p=*q]:   %52 = load i32* %code, align 4, !dbg !611
STORE [*p=q]:   store i32 %51, i32* %54, align 4, !dbg !611
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !613
LOAD [p=*q]:   %56 = load i32* %n, align 4, !dbg !613
LOAD [p=*q]:   %57 = load i32* %code, align 4, !dbg !613
LOAD [p=*q]:   %60 = load i32* %59, align 4, !dbg !613
LOAD [p=*q]:   %56 = load i32* %n, align 4, !dbg !613
LOAD [p=*q]:   %57 = load i32* %code, align 4, !dbg !613
LOAD [p=*q]:   %60 = load i32* %59, align 4, !dbg !613
LOAD [p=*q]:   %64 = load i32* %code, align 4, !dbg !615
LOAD [p=*q]:   %66 = load i32* %dist, align 4, !dbg !615
STORE [*p=q]:   store i32 %67, i32* %dist, align 4, !dbg !615
STORE [*p=q]:   store i8 %65, i8* %69, align 1, !dbg !615
LOAD [p=*q]:   %64 = load i32* %code, align 4, !dbg !615
LOAD [p=*q]:   %66 = load i32* %dist, align 4, !dbg !615
STORE [*p=q]:   store i32 %67, i32* %dist, align 4, !dbg !615
STORE [*p=q]:   store i8 %65, i8* %69, align 1, !dbg !615
LOAD [p=*q]:   %71 = load i32* %n, align 4, !dbg !618
STORE [*p=q]:   store i32 %72, i32* %n, align 4, !dbg !618
LOAD [p=*q]:   %71 = load i32* %n, align 4, !dbg !618
STORE [*p=q]:   store i32 %72, i32* %n, align 4, !dbg !618
LOAD [p=*q]:   %56 = load i32* %n, align 4, !dbg !613
LOAD [p=*q]:   %57 = load i32* %code, align 4, !dbg !613
LOAD [p=*q]:   %60 = load i32* %59, align 4, !dbg !613
LOAD [p=*q]:   %75 = load i32* %code, align 4, !dbg !620
STORE [*p=q]:   store i32 %76, i32* %code, align 4, !dbg !620
LOAD [p=*q]:   %75 = load i32* %code, align 4, !dbg !620
STORE [*p=q]:   store i32 %76, i32* %code, align 4, !dbg !620
LOAD [p=*q]:   %48 = load i32* %code, align 4, !dbg !609
LOAD [p=*q]:   %78 = load i32* %dist, align 4, !dbg !621
STORE [*p=q]:   store i32 %79, i32* %dist, align 4, !dbg !621
LOAD [p=*q]:   %81 = load i32* %code, align 4, !dbg !622
LOAD [p=*q]:   %81 = load i32* %code, align 4, !dbg !622
LOAD [p=*q]:   %84 = load i32* %dist, align 4, !dbg !624
LOAD [p=*q]:   %86 = load i32* %code, align 4, !dbg !624
STORE [*p=q]:   store i32 %85, i32* %88, align 4, !dbg !624
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !626
STORE [*p=q]:   store i32 0, i32* %bits, align 4, !dbg !634
LOAD [p=*q]:   %84 = load i32* %dist, align 4, !dbg !624
LOAD [p=*q]:   %86 = load i32* %code, align 4, !dbg !624
STORE [*p=q]:   store i32 %85, i32* %88, align 4, !dbg !624
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !626
LOAD [p=*q]:   %90 = load i32* %n, align 4, !dbg !626
LOAD [p=*q]:   %91 = load i32* %code, align 4, !dbg !626
LOAD [p=*q]:   %94 = load i32* %93, align 4, !dbg !626
LOAD [p=*q]:   %90 = load i32* %n, align 4, !dbg !626
LOAD [p=*q]:   %91 = load i32* %code, align 4, !dbg !626
LOAD [p=*q]:   %94 = load i32* %93, align 4, !dbg !626
LOAD [p=*q]:   %99 = load i32* %code, align 4, !dbg !628
LOAD [p=*q]:   %101 = load i32* %dist, align 4, !dbg !628
STORE [*p=q]:   store i32 %102, i32* %dist, align 4, !dbg !628
STORE [*p=q]:   store i8 %100, i8* %105, align 1, !dbg !628
LOAD [p=*q]:   %99 = load i32* %code, align 4, !dbg !628
LOAD [p=*q]:   %101 = load i32* %dist, align 4, !dbg !628
STORE [*p=q]:   store i32 %102, i32* %dist, align 4, !dbg !628
STORE [*p=q]:   store i8 %100, i8* %105, align 1, !dbg !628
LOAD [p=*q]:   %107 = load i32* %n, align 4, !dbg !631
STORE [*p=q]:   store i32 %108, i32* %n, align 4, !dbg !631
LOAD [p=*q]:   %107 = load i32* %n, align 4, !dbg !631
STORE [*p=q]:   store i32 %108, i32* %n, align 4, !dbg !631
LOAD [p=*q]:   %90 = load i32* %n, align 4, !dbg !626
LOAD [p=*q]:   %91 = load i32* %code, align 4, !dbg !626
LOAD [p=*q]:   %94 = load i32* %93, align 4, !dbg !626
LOAD [p=*q]:   %111 = load i32* %code, align 4, !dbg !633
STORE [*p=q]:   store i32 %112, i32* %code, align 4, !dbg !633
LOAD [p=*q]:   %111 = load i32* %code, align 4, !dbg !633
STORE [*p=q]:   store i32 %112, i32* %code, align 4, !dbg !633
LOAD [p=*q]:   %81 = load i32* %code, align 4, !dbg !622
STORE [*p=q]:   store i32 0, i32* %bits, align 4, !dbg !634
LOAD [p=*q]:   %115 = load i32* %bits, align 4, !dbg !634
LOAD [p=*q]:   %115 = load i32* %bits, align 4, !dbg !634
LOAD [p=*q]:   %118 = load i32* %bits, align 4, !dbg !636
STORE [*p=q]:   store i16 0, i16* %120, align 2, !dbg !636
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !638
LOAD [p=*q]:   %118 = load i32* %bits, align 4, !dbg !636
STORE [*p=q]:   store i16 0, i16* %120, align 2, !dbg !636
LOAD [p=*q]:   %122 = load i32* %bits, align 4, !dbg !637
STORE [*p=q]:   store i32 %123, i32* %bits, align 4, !dbg !637
LOAD [p=*q]:   %122 = load i32* %bits, align 4, !dbg !637
STORE [*p=q]:   store i32 %123, i32* %bits, align 4, !dbg !637
LOAD [p=*q]:   %115 = load i32* %bits, align 4, !dbg !634
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !638
LOAD [p=*q]:   %126 = load i32* %n, align 4, !dbg !639
LOAD [p=*q]:   %126 = load i32* %n, align 4, !dbg !639
LOAD [p=*q]:   %129 = load i32* %n, align 4, !dbg !640
STORE [*p=q]:   store i32 %130, i32* %n, align 4, !dbg !640
STORE [*p=q]:   store i16 8, i16* %134, align 2, !dbg !640
LOAD [p=*q]:   %135 = load i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 8), align 2, !dbg !640
STORE [*p=q]:   store i16 %136, i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 8), align 2, !dbg !640
LOAD [p=*q]:   %129 = load i32* %n, align 4, !dbg !640
STORE [*p=q]:   store i32 %130, i32* %n, align 4, !dbg !640
STORE [*p=q]:   store i16 8, i16* %134, align 2, !dbg !640
LOAD [p=*q]:   %135 = load i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 8), align 2, !dbg !640
STORE [*p=q]:   store i16 %136, i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 8), align 2, !dbg !640
LOAD [p=*q]:   %126 = load i32* %n, align 4, !dbg !639
LOAD [p=*q]:   %139 = load i32* %n, align 4, !dbg !641
LOAD [p=*q]:   %139 = load i32* %n, align 4, !dbg !641
LOAD [p=*q]:   %142 = load i32* %n, align 4, !dbg !642
STORE [*p=q]:   store i32 %143, i32* %n, align 4, !dbg !642
STORE [*p=q]:   store i16 9, i16* %147, align 2, !dbg !642
LOAD [p=*q]:   %148 = load i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 9), align 2, !dbg !642
STORE [*p=q]:   store i16 %149, i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 9), align 2, !dbg !642
LOAD [p=*q]:   %142 = load i32* %n, align 4, !dbg !642
STORE [*p=q]:   store i32 %143, i32* %n, align 4, !dbg !642
STORE [*p=q]:   store i16 9, i16* %147, align 2, !dbg !642
LOAD [p=*q]:   %148 = load i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 9), align 2, !dbg !642
STORE [*p=q]:   store i16 %149, i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 9), align 2, !dbg !642
LOAD [p=*q]:   %139 = load i32* %n, align 4, !dbg !641
LOAD [p=*q]:   %152 = load i32* %n, align 4, !dbg !643
LOAD [p=*q]:   %152 = load i32* %n, align 4, !dbg !643
LOAD [p=*q]:   %155 = load i32* %n, align 4, !dbg !644
STORE [*p=q]:   store i32 %156, i32* %n, align 4, !dbg !644
STORE [*p=q]:   store i16 7, i16* %160, align 2, !dbg !644
LOAD [p=*q]:   %161 = load i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 7), align 2, !dbg !644
STORE [*p=q]:   store i16 %162, i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 7), align 2, !dbg !644
LOAD [p=*q]:   %155 = load i32* %n, align 4, !dbg !644
STORE [*p=q]:   store i32 %156, i32* %n, align 4, !dbg !644
STORE [*p=q]:   store i16 7, i16* %160, align 2, !dbg !644
LOAD [p=*q]:   %161 = load i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 7), align 2, !dbg !644
STORE [*p=q]:   store i16 %162, i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 7), align 2, !dbg !644
LOAD [p=*q]:   %152 = load i32* %n, align 4, !dbg !643
LOAD [p=*q]:   %165 = load i32* %n, align 4, !dbg !645
LOAD [p=*q]:   %165 = load i32* %n, align 4, !dbg !645
LOAD [p=*q]:   %168 = load i32* %n, align 4, !dbg !646
STORE [*p=q]:   store i32 %169, i32* %n, align 4, !dbg !646
STORE [*p=q]:   store i16 8, i16* %173, align 2, !dbg !646
LOAD [p=*q]:   %174 = load i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 8), align 2, !dbg !646
STORE [*p=q]:   store i16 %175, i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 8), align 2, !dbg !646
CALL [call func]:   call void @gen_codes(%struct.ct_data* getelementptr inbounds ([288 x %struct.ct_data]* @static_ltree, i32 0, i32 0), i32 287), !dbg !647
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !648
LOAD [p=*q]:   %168 = load i32* %n, align 4, !dbg !646
STORE [*p=q]:   store i32 %169, i32* %n, align 4, !dbg !646
STORE [*p=q]:   store i16 8, i16* %173, align 2, !dbg !646
LOAD [p=*q]:   %174 = load i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 8), align 2, !dbg !646
STORE [*p=q]:   store i16 %175, i16* getelementptr inbounds ([16 x i16]* @bl_count, i32 0, i64 8), align 2, !dbg !646
LOAD [p=*q]:   %165 = load i32* %n, align 4, !dbg !645
CALL [call func]:   call void @gen_codes(%struct.ct_data* getelementptr inbounds ([288 x %struct.ct_data]* @static_ltree, i32 0, i32 0), i32 287), !dbg !647
STORE [*p=q]:   store i32 0, i32* %n, align 4, !dbg !648
LOAD [p=*q]:   %178 = load i32* %n, align 4, !dbg !648
LOAD [p=*q]:   %178 = load i32* %n, align 4, !dbg !648
LOAD [p=*q]:   %181 = load i32* %n, align 4, !dbg !650
STORE [*p=q]:   store i16 5, i16* %185, align 2, !dbg !650
LOAD [p=*q]:   %186 = load i32* %n, align 4, !dbg !652
CALL [call func]:   %187 = call i32 @bi_reverse(i32 %186, i32 5) #1, !dbg !652
LOAD [p=*q]:   %189 = load i32* %n, align 4, !dbg !652
STORE [*p=q]:   store i16 %188, i16* %193, align 2, !dbg !652
CALL [call func]:   call void @init_block(), !dbg !655
LOAD [p=*q]:   %181 = load i32* %n, align 4, !dbg !650
STORE [*p=q]:   store i16 5, i16* %185, align 2, !dbg !650
LOAD [p=*q]:   %186 = load i32* %n, align 4, !dbg !652
CALL [call func]:   %187 = call i32 @bi_reverse(i32 %186, i32 5) #1, !dbg !652
LOAD [p=*q]:   %189 = load i32* %n, align 4, !dbg !652
STORE [*p=q]:   store i16 %188, i16* %193, align 2, !dbg !652
LOAD [p=*q]:   %195 = load i32* %n, align 4, !dbg !654
STORE [*p=q]:   store i32 %196, i32* %n, align 4, !dbg !654
LOAD [p=*q]:   %195 = load i32* %n, align 4, !dbg !654
STORE [*p=q]:   store i32 %196, i32* %n, align 4, !dbg !654
LOAD [p=*q]:   %178 = load i32* %n, align 4, !dbg !648
CALL [call func]:   call void @init_block(), !dbg !655
Analyzing return instruction for ct_init
No return value for: ct_init
Analyzing return instruction for ct_init
No return value for: ct_init
[Processing][Function][lzw]
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %out, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !576), !dbg !577
LOAD [p=*q]:   %4 = load i32* @msg_done, align 4, !dbg !578
STORE [*p=q]:   store i32 1, i32* %1, !dbg !580
STORE [*p=q]:   store i32 1, i32* @msg_done, align 4, !dbg !581
LOAD [p=*q]:   %8 = load %struct._IO_FILE** @stderr, align 8, !dbg !582
CALL [call func]:   %9 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([44 x i8]* @.str140, i32 0, i32 0)), !dbg !582
LOAD [p=*q]:   %10 = load i32* %2, align 4, !dbg !583
LOAD [p=*q]:   %11 = load i32* %3, align 4, !dbg !583
STORE [*p=q]:   store i32 1, i32* %1, !dbg !580
LOAD [p=*q]:   %16 = load i32* %1, !dbg !588
Analyzing return instruction for lzw
	  %16 = load i32* %1, !dbg !588
STORE [*p=q]:   store i32 1, i32* @msg_done, align 4, !dbg !581
LOAD [p=*q]:   %8 = load %struct._IO_FILE** @stderr, align 8, !dbg !582
CALL [call func]:   %9 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([44 x i8]* @.str140, i32 0, i32 0)), !dbg !582
LOAD [p=*q]:   %10 = load i32* %2, align 4, !dbg !583
LOAD [p=*q]:   %11 = load i32* %3, align 4, !dbg !583
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !584
STORE [*p=q]:   store i32 1, i32* %1, !dbg !587
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !584
STORE [*p=q]:   store i32 1, i32* %1, !dbg !587
STORE [*p=q]:   store i32 1, i32* %1, !dbg !587
LOAD [p=*q]:   %16 = load i32* %1, !dbg !588
Analyzing return instruction for lzw
	  %16 = load i32* %1, !dbg !588
LOAD [p=*q]:   %16 = load i32* %1, !dbg !588
Analyzing return instruction for lzw
	  %16 = load i32* %1, !dbg !588
[Processing][Function][inflate_codes]
STORE [*p=q]:   store %struct.huft* %tl, %struct.huft** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.huft** %2}, metadata !574), !dbg !586
STORE [*p=q]:   store %struct.huft* %td, %struct.huft** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.huft** %3}, metadata !587), !dbg !588
STORE [*p=q]:   store i32 %bl, i32* %4, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %4}, metadata !589), !dbg !590
STORE [*p=q]:   store i32 %bd, i32* %5, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %5}, metadata !591), !dbg !592
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !593), !dbg !595
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !596), !dbg !597
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %d}, metadata !598), !dbg !599
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %w}, metadata !600), !dbg !601
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.huft** %t}, metadata !602), !dbg !603
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %ml}, metadata !604), !dbg !605
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %md}, metadata !606), !dbg !607
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %b}, metadata !608), !dbg !609
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %k}, metadata !610), !dbg !611
LOAD [p=*q]:   %6 = load i64* @bb, align 8, !dbg !612
STORE [*p=q]:   store i64 %6, i64* %b, align 8, !dbg !612
LOAD [p=*q]:   %7 = load i32* @bk, align 4, !dbg !613
STORE [*p=q]:   store i32 %7, i32* %k, align 4, !dbg !613
LOAD [p=*q]:   %8 = load i32* @outcnt, align 4, !dbg !614
STORE [*p=q]:   store i32 %8, i32* %w, align 4, !dbg !614
LOAD [p=*q]:   %9 = load i32* %4, align 4, !dbg !615
LOAD [p=*q]:   %12 = load i16* %11, align 2, !dbg !615
STORE [*p=q]:   store i32 %13, i32* %ml, align 4, !dbg !615
LOAD [p=*q]:   %14 = load i32* %5, align 4, !dbg !616
LOAD [p=*q]:   %17 = load i16* %16, align 2, !dbg !616
STORE [*p=q]:   store i32 %18, i32* %md, align 4, !dbg !616
LOAD [p=*q]:   %21 = load i32* %k, align 4, !dbg !619
LOAD [p=*q]:   %22 = load i32* %4, align 4, !dbg !619
LOAD [p=*q]:   %21 = load i32* %k, align 4, !dbg !619
LOAD [p=*q]:   %22 = load i32* %4, align 4, !dbg !619
LOAD [p=*q]:   %25 = load i32* @inptr, align 4, !dbg !622
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !622
LOAD [p=*q]:   %50 = load %struct.huft** %2, align 8, !dbg !624
LOAD [p=*q]:   %51 = load i64* %b, align 8, !dbg !624
LOAD [p=*q]:   %53 = load i32* %ml, align 4, !dbg !624
STORE [*p=q]:   store %struct.huft* %56, %struct.huft** %t, align 8, !dbg !624
LOAD [p=*q]:   %58 = load i8* %57, align 1, !dbg !624
STORE [*p=q]:   store i32 %59, i32* %e, align 4, !dbg !624
LOAD [p=*q]:   %25 = load i32* @inptr, align 4, !dbg !622
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !622
LOAD [p=*q]:   %29 = load i32* @inptr, align 4, !dbg !622
STORE [*p=q]:   store i32 %30, i32* @inptr, align 4, !dbg !622
LOAD [p=*q]:   %33 = load i8* %32, align 1, !dbg !622
LOAD [p=*q]:   %36 = load i32* %w, align 4, !dbg !622
STORE [*p=q]:   store i32 %36, i32* @outcnt, align 4, !dbg !622
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 0), !dbg !622
LOAD [p=*q]:   %29 = load i32* @inptr, align 4, !dbg !622
STORE [*p=q]:   store i32 %30, i32* @inptr, align 4, !dbg !622
LOAD [p=*q]:   %33 = load i8* %32, align 1, !dbg !622
LOAD [p=*q]:   %42 = load i32* %k, align 4, !dbg !622
LOAD [p=*q]:   %45 = load i64* %b, align 8, !dbg !622
STORE [*p=q]:   store i64 %46, i64* %b, align 8, !dbg !622
LOAD [p=*q]:   %47 = load i32* %k, align 4, !dbg !622
STORE [*p=q]:   store i32 %48, i32* %k, align 4, !dbg !622
LOAD [p=*q]:   %36 = load i32* %w, align 4, !dbg !622
STORE [*p=q]:   store i32 %36, i32* @outcnt, align 4, !dbg !622
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 0), !dbg !622
LOAD [p=*q]:   %42 = load i32* %k, align 4, !dbg !622
LOAD [p=*q]:   %45 = load i64* %b, align 8, !dbg !622
STORE [*p=q]:   store i64 %46, i64* %b, align 8, !dbg !622
LOAD [p=*q]:   %47 = load i32* %k, align 4, !dbg !622
STORE [*p=q]:   store i32 %48, i32* %k, align 4, !dbg !622
LOAD [p=*q]:   %42 = load i32* %k, align 4, !dbg !622
LOAD [p=*q]:   %45 = load i64* %b, align 8, !dbg !622
STORE [*p=q]:   store i64 %46, i64* %b, align 8, !dbg !622
LOAD [p=*q]:   %47 = load i32* %k, align 4, !dbg !622
STORE [*p=q]:   store i32 %48, i32* %k, align 4, !dbg !622
LOAD [p=*q]:   %21 = load i32* %k, align 4, !dbg !619
LOAD [p=*q]:   %22 = load i32* %4, align 4, !dbg !619
LOAD [p=*q]:   %50 = load %struct.huft** %2, align 8, !dbg !624
LOAD [p=*q]:   %51 = load i64* %b, align 8, !dbg !624
LOAD [p=*q]:   %53 = load i32* %ml, align 4, !dbg !624
STORE [*p=q]:   store %struct.huft* %56, %struct.huft** %t, align 8, !dbg !624
LOAD [p=*q]:   %58 = load i8* %57, align 1, !dbg !624
STORE [*p=q]:   store i32 %59, i32* %e, align 4, !dbg !624
LOAD [p=*q]:   %133 = load %struct.huft** %t, align 8, !dbg !637
LOAD [p=*q]:   %135 = load i8* %134, align 1, !dbg !637
LOAD [p=*q]:   %137 = load i64* %b, align 8, !dbg !637
STORE [*p=q]:   store i64 %139, i64* %b, align 8, !dbg !637
LOAD [p=*q]:   %140 = load %struct.huft** %t, align 8, !dbg !637
LOAD [p=*q]:   %142 = load i8* %141, align 1, !dbg !637
LOAD [p=*q]:   %144 = load i32* %k, align 4, !dbg !637
STORE [*p=q]:   store i32 %145, i32* %k, align 4, !dbg !637
LOAD [p=*q]:   %146 = load i32* %e, align 4, !dbg !639
LOAD [p=*q]:   %63 = load i32* %e, align 4, !dbg !626
LOAD [p=*q]:   %63 = load i32* %e, align 4, !dbg !626
STORE [*p=q]:   store i32 1, i32* %1, !dbg !628
LOAD [p=*q]:   %67 = load %struct.huft** %t, align 8, !dbg !629
LOAD [p=*q]:   %69 = load i8* %68, align 1, !dbg !629
LOAD [p=*q]:   %71 = load i64* %b, align 8, !dbg !629
STORE [*p=q]:   store i64 %73, i64* %b, align 8, !dbg !629
LOAD [p=*q]:   %74 = load %struct.huft** %t, align 8, !dbg !629
LOAD [p=*q]:   %76 = load i8* %75, align 1, !dbg !629
LOAD [p=*q]:   %78 = load i32* %k, align 4, !dbg !629
STORE [*p=q]:   store i32 %79, i32* %k, align 4, !dbg !629
LOAD [p=*q]:   %80 = load i32* %e, align 4, !dbg !631
STORE [*p=q]:   store i32 %81, i32* %e, align 4, !dbg !631
STORE [*p=q]:   store i32 1, i32* %1, !dbg !628
LOAD [p=*q]:   %482 = load i32* %1, !dbg !708
Analyzing return instruction for inflate_codes
	  %482 = load i32* %1, !dbg !708
LOAD [p=*q]:   %67 = load %struct.huft** %t, align 8, !dbg !629
LOAD [p=*q]:   %69 = load i8* %68, align 1, !dbg !629
LOAD [p=*q]:   %71 = load i64* %b, align 8, !dbg !629
STORE [*p=q]:   store i64 %73, i64* %b, align 8, !dbg !629
LOAD [p=*q]:   %74 = load %struct.huft** %t, align 8, !dbg !629
LOAD [p=*q]:   %76 = load i8* %75, align 1, !dbg !629
LOAD [p=*q]:   %78 = load i32* %k, align 4, !dbg !629
STORE [*p=q]:   store i32 %79, i32* %k, align 4, !dbg !629
LOAD [p=*q]:   %80 = load i32* %e, align 4, !dbg !631
STORE [*p=q]:   store i32 %81, i32* %e, align 4, !dbg !631
LOAD [p=*q]:   %83 = load i32* %k, align 4, !dbg !632
LOAD [p=*q]:   %84 = load i32* %e, align 4, !dbg !632
LOAD [p=*q]:   %83 = load i32* %k, align 4, !dbg !632
LOAD [p=*q]:   %84 = load i32* %e, align 4, !dbg !632
LOAD [p=*q]:   %87 = load i32* @inptr, align 4, !dbg !634
LOAD [p=*q]:   %88 = load i32* @insize, align 4, !dbg !634
LOAD [p=*q]:   %87 = load i32* @inptr, align 4, !dbg !634
LOAD [p=*q]:   %88 = load i32* @insize, align 4, !dbg !634
LOAD [p=*q]:   %91 = load i32* @inptr, align 4, !dbg !634
STORE [*p=q]:   store i32 %92, i32* @inptr, align 4, !dbg !634
LOAD [p=*q]:   %95 = load i8* %94, align 1, !dbg !634
LOAD [p=*q]:   %98 = load i32* %w, align 4, !dbg !634
STORE [*p=q]:   store i32 %98, i32* @outcnt, align 4, !dbg !634
CALL [call func]:   %99 = call i32 @fill_inbuf(i32 0), !dbg !634
LOAD [p=*q]:   %91 = load i32* @inptr, align 4, !dbg !634
STORE [*p=q]:   store i32 %92, i32* @inptr, align 4, !dbg !634
LOAD [p=*q]:   %95 = load i8* %94, align 1, !dbg !634
LOAD [p=*q]:   %104 = load i32* %k, align 4, !dbg !634
LOAD [p=*q]:   %107 = load i64* %b, align 8, !dbg !634
STORE [*p=q]:   store i64 %108, i64* %b, align 8, !dbg !634
LOAD [p=*q]:   %109 = load i32* %k, align 4, !dbg !634
STORE [*p=q]:   store i32 %110, i32* %k, align 4, !dbg !634
LOAD [p=*q]:   %98 = load i32* %w, align 4, !dbg !634
STORE [*p=q]:   store i32 %98, i32* @outcnt, align 4, !dbg !634
CALL [call func]:   %99 = call i32 @fill_inbuf(i32 0), !dbg !634
LOAD [p=*q]:   %104 = load i32* %k, align 4, !dbg !634
LOAD [p=*q]:   %107 = load i64* %b, align 8, !dbg !634
STORE [*p=q]:   store i64 %108, i64* %b, align 8, !dbg !634
LOAD [p=*q]:   %109 = load i32* %k, align 4, !dbg !634
STORE [*p=q]:   store i32 %110, i32* %k, align 4, !dbg !634
LOAD [p=*q]:   %104 = load i32* %k, align 4, !dbg !634
LOAD [p=*q]:   %107 = load i64* %b, align 8, !dbg !634
STORE [*p=q]:   store i64 %108, i64* %b, align 8, !dbg !634
LOAD [p=*q]:   %109 = load i32* %k, align 4, !dbg !634
STORE [*p=q]:   store i32 %110, i32* %k, align 4, !dbg !634
LOAD [p=*q]:   %83 = load i32* %k, align 4, !dbg !632
LOAD [p=*q]:   %84 = load i32* %e, align 4, !dbg !632
LOAD [p=*q]:   %113 = load %struct.huft** %t, align 8, !dbg !636
LOAD [p=*q]:   %116 = load %struct.huft** %115, align 8, !dbg !636
LOAD [p=*q]:   %117 = load i64* %b, align 8, !dbg !636
LOAD [p=*q]:   %119 = load i32* %e, align 4, !dbg !636
LOAD [p=*q]:   %122 = load i16* %121, align 2, !dbg !636
STORE [*p=q]:   store %struct.huft* %126, %struct.huft** %t, align 8, !dbg !636
LOAD [p=*q]:   %128 = load i8* %127, align 1, !dbg !636
STORE [*p=q]:   store i32 %129, i32* %e, align 4, !dbg !636
LOAD [p=*q]:   %113 = load %struct.huft** %t, align 8, !dbg !636
LOAD [p=*q]:   %116 = load %struct.huft** %115, align 8, !dbg !636
LOAD [p=*q]:   %117 = load i64* %b, align 8, !dbg !636
LOAD [p=*q]:   %119 = load i32* %e, align 4, !dbg !636
LOAD [p=*q]:   %122 = load i16* %121, align 2, !dbg !636
STORE [*p=q]:   store %struct.huft* %126, %struct.huft** %t, align 8, !dbg !636
LOAD [p=*q]:   %128 = load i8* %127, align 1, !dbg !636
STORE [*p=q]:   store i32 %129, i32* %e, align 4, !dbg !636
LOAD [p=*q]:   %63 = load i32* %e, align 4, !dbg !626
LOAD [p=*q]:   %133 = load %struct.huft** %t, align 8, !dbg !637
LOAD [p=*q]:   %135 = load i8* %134, align 1, !dbg !637
LOAD [p=*q]:   %137 = load i64* %b, align 8, !dbg !637
STORE [*p=q]:   store i64 %139, i64* %b, align 8, !dbg !637
LOAD [p=*q]:   %140 = load %struct.huft** %t, align 8, !dbg !637
LOAD [p=*q]:   %142 = load i8* %141, align 1, !dbg !637
LOAD [p=*q]:   %144 = load i32* %k, align 4, !dbg !637
STORE [*p=q]:   store i32 %145, i32* %k, align 4, !dbg !637
LOAD [p=*q]:   %146 = load i32* %e, align 4, !dbg !639
LOAD [p=*q]:   %133 = load %struct.huft** %t, align 8, !dbg !637
LOAD [p=*q]:   %135 = load i8* %134, align 1, !dbg !637
LOAD [p=*q]:   %137 = load i64* %b, align 8, !dbg !637
STORE [*p=q]:   store i64 %139, i64* %b, align 8, !dbg !637
LOAD [p=*q]:   %140 = load %struct.huft** %t, align 8, !dbg !637
LOAD [p=*q]:   %142 = load i8* %141, align 1, !dbg !637
LOAD [p=*q]:   %144 = load i32* %k, align 4, !dbg !637
STORE [*p=q]:   store i32 %145, i32* %k, align 4, !dbg !637
LOAD [p=*q]:   %146 = load i32* %e, align 4, !dbg !639
LOAD [p=*q]:   %149 = load %struct.huft** %t, align 8, !dbg !640
LOAD [p=*q]:   %152 = load i16* %151, align 2, !dbg !640
LOAD [p=*q]:   %154 = load i32* %w, align 4, !dbg !640
STORE [*p=q]:   store i32 %155, i32* %w, align 4, !dbg !640
STORE [*p=q]:   store i8 %153, i8* %157, align 1, !dbg !640
LOAD [p=*q]:   %158 = load i32* %w, align 4, !dbg !642
LOAD [p=*q]:   %164 = load i32* %e, align 4, !dbg !648
LOAD [p=*q]:   %149 = load %struct.huft** %t, align 8, !dbg !640
LOAD [p=*q]:   %152 = load i16* %151, align 2, !dbg !640
LOAD [p=*q]:   %154 = load i32* %w, align 4, !dbg !640
STORE [*p=q]:   store i32 %155, i32* %w, align 4, !dbg !640
STORE [*p=q]:   store i8 %153, i8* %157, align 1, !dbg !640
LOAD [p=*q]:   %158 = load i32* %w, align 4, !dbg !642
LOAD [p=*q]:   %161 = load i32* %w, align 4, !dbg !643
STORE [*p=q]:   store i32 %161, i32* @outcnt, align 4, !dbg !643
CALL [call func]:   call void @flush_window(), !dbg !643
STORE [*p=q]:   store i32 0, i32* %w, align 4, !dbg !645
LOAD [p=*q]:   %161 = load i32* %w, align 4, !dbg !643
STORE [*p=q]:   store i32 %161, i32* @outcnt, align 4, !dbg !643
CALL [call func]:   call void @flush_window(), !dbg !643
STORE [*p=q]:   store i32 0, i32* %w, align 4, !dbg !645
LOAD [p=*q]:   %164 = load i32* %e, align 4, !dbg !648
LOAD [p=*q]:   %478 = load i32* %w, align 4, !dbg !704
STORE [*p=q]:   store i32 %478, i32* @outcnt, align 4, !dbg !704
LOAD [p=*q]:   %479 = load i64* %b, align 8, !dbg !705
STORE [*p=q]:   store i64 %479, i64* @bb, align 8, !dbg !705
LOAD [p=*q]:   %480 = load i32* %k, align 4, !dbg !706
STORE [*p=q]:   store i32 %480, i32* @bk, align 4, !dbg !706
STORE [*p=q]:   store i32 0, i32* %1, !dbg !707
LOAD [p=*q]:   %169 = load i32* %k, align 4, !dbg !651
LOAD [p=*q]:   %170 = load i32* %e, align 4, !dbg !651
LOAD [p=*q]:   %169 = load i32* %k, align 4, !dbg !651
LOAD [p=*q]:   %170 = load i32* %e, align 4, !dbg !651
LOAD [p=*q]:   %173 = load i32* @inptr, align 4, !dbg !653
LOAD [p=*q]:   %174 = load i32* @insize, align 4, !dbg !653
LOAD [p=*q]:   %198 = load %struct.huft** %t, align 8, !dbg !655
LOAD [p=*q]:   %201 = load i16* %200, align 2, !dbg !655
LOAD [p=*q]:   %203 = load i64* %b, align 8, !dbg !655
LOAD [p=*q]:   %205 = load i32* %e, align 4, !dbg !655
LOAD [p=*q]:   %208 = load i16* %207, align 2, !dbg !655
STORE [*p=q]:   store i32 %211, i32* %n, align 4, !dbg !655
LOAD [p=*q]:   %212 = load i32* %e, align 4, !dbg !656
LOAD [p=*q]:   %213 = load i64* %b, align 8, !dbg !656
STORE [*p=q]:   store i64 %215, i64* %b, align 8, !dbg !656
LOAD [p=*q]:   %216 = load i32* %e, align 4, !dbg !656
LOAD [p=*q]:   %217 = load i32* %k, align 4, !dbg !656
STORE [*p=q]:   store i32 %218, i32* %k, align 4, !dbg !656
LOAD [p=*q]:   %173 = load i32* @inptr, align 4, !dbg !653
LOAD [p=*q]:   %174 = load i32* @insize, align 4, !dbg !653
LOAD [p=*q]:   %177 = load i32* @inptr, align 4, !dbg !653
STORE [*p=q]:   store i32 %178, i32* @inptr, align 4, !dbg !653
LOAD [p=*q]:   %181 = load i8* %180, align 1, !dbg !653
LOAD [p=*q]:   %184 = load i32* %w, align 4, !dbg !653
STORE [*p=q]:   store i32 %184, i32* @outcnt, align 4, !dbg !653
CALL [call func]:   %185 = call i32 @fill_inbuf(i32 0), !dbg !653
LOAD [p=*q]:   %177 = load i32* @inptr, align 4, !dbg !653
STORE [*p=q]:   store i32 %178, i32* @inptr, align 4, !dbg !653
LOAD [p=*q]:   %181 = load i8* %180, align 1, !dbg !653
LOAD [p=*q]:   %190 = load i32* %k, align 4, !dbg !653
LOAD [p=*q]:   %193 = load i64* %b, align 8, !dbg !653
STORE [*p=q]:   store i64 %194, i64* %b, align 8, !dbg !653
LOAD [p=*q]:   %195 = load i32* %k, align 4, !dbg !653
STORE [*p=q]:   store i32 %196, i32* %k, align 4, !dbg !653
LOAD [p=*q]:   %184 = load i32* %w, align 4, !dbg !653
STORE [*p=q]:   store i32 %184, i32* @outcnt, align 4, !dbg !653
CALL [call func]:   %185 = call i32 @fill_inbuf(i32 0), !dbg !653
LOAD [p=*q]:   %190 = load i32* %k, align 4, !dbg !653
LOAD [p=*q]:   %193 = load i64* %b, align 8, !dbg !653
STORE [*p=q]:   store i64 %194, i64* %b, align 8, !dbg !653
LOAD [p=*q]:   %195 = load i32* %k, align 4, !dbg !653
STORE [*p=q]:   store i32 %196, i32* %k, align 4, !dbg !653
LOAD [p=*q]:   %190 = load i32* %k, align 4, !dbg !653
LOAD [p=*q]:   %193 = load i64* %b, align 8, !dbg !653
STORE [*p=q]:   store i64 %194, i64* %b, align 8, !dbg !653
LOAD [p=*q]:   %195 = load i32* %k, align 4, !dbg !653
STORE [*p=q]:   store i32 %196, i32* %k, align 4, !dbg !653
LOAD [p=*q]:   %169 = load i32* %k, align 4, !dbg !651
LOAD [p=*q]:   %170 = load i32* %e, align 4, !dbg !651
LOAD [p=*q]:   %198 = load %struct.huft** %t, align 8, !dbg !655
LOAD [p=*q]:   %201 = load i16* %200, align 2, !dbg !655
LOAD [p=*q]:   %203 = load i64* %b, align 8, !dbg !655
LOAD [p=*q]:   %205 = load i32* %e, align 4, !dbg !655
LOAD [p=*q]:   %208 = load i16* %207, align 2, !dbg !655
STORE [*p=q]:   store i32 %211, i32* %n, align 4, !dbg !655
LOAD [p=*q]:   %212 = load i32* %e, align 4, !dbg !656
LOAD [p=*q]:   %213 = load i64* %b, align 8, !dbg !656
STORE [*p=q]:   store i64 %215, i64* %b, align 8, !dbg !656
LOAD [p=*q]:   %216 = load i32* %e, align 4, !dbg !656
LOAD [p=*q]:   %217 = load i32* %k, align 4, !dbg !656
STORE [*p=q]:   store i32 %218, i32* %k, align 4, !dbg !656
LOAD [p=*q]:   %220 = load i32* %k, align 4, !dbg !658
LOAD [p=*q]:   %221 = load i32* %5, align 4, !dbg !658
LOAD [p=*q]:   %220 = load i32* %k, align 4, !dbg !658
LOAD [p=*q]:   %221 = load i32* %5, align 4, !dbg !658
LOAD [p=*q]:   %224 = load i32* @inptr, align 4, !dbg !660
LOAD [p=*q]:   %225 = load i32* @insize, align 4, !dbg !660
LOAD [p=*q]:   %249 = load %struct.huft** %3, align 8, !dbg !662
LOAD [p=*q]:   %250 = load i64* %b, align 8, !dbg !662
LOAD [p=*q]:   %252 = load i32* %md, align 4, !dbg !662
STORE [*p=q]:   store %struct.huft* %255, %struct.huft** %t, align 8, !dbg !662
LOAD [p=*q]:   %257 = load i8* %256, align 1, !dbg !662
STORE [*p=q]:   store i32 %258, i32* %e, align 4, !dbg !662
LOAD [p=*q]:   %224 = load i32* @inptr, align 4, !dbg !660
LOAD [p=*q]:   %225 = load i32* @insize, align 4, !dbg !660
LOAD [p=*q]:   %228 = load i32* @inptr, align 4, !dbg !660
STORE [*p=q]:   store i32 %229, i32* @inptr, align 4, !dbg !660
LOAD [p=*q]:   %232 = load i8* %231, align 1, !dbg !660
LOAD [p=*q]:   %235 = load i32* %w, align 4, !dbg !660
STORE [*p=q]:   store i32 %235, i32* @outcnt, align 4, !dbg !660
CALL [call func]:   %236 = call i32 @fill_inbuf(i32 0), !dbg !660
LOAD [p=*q]:   %228 = load i32* @inptr, align 4, !dbg !660
STORE [*p=q]:   store i32 %229, i32* @inptr, align 4, !dbg !660
LOAD [p=*q]:   %232 = load i8* %231, align 1, !dbg !660
LOAD [p=*q]:   %241 = load i32* %k, align 4, !dbg !660
LOAD [p=*q]:   %244 = load i64* %b, align 8, !dbg !660
STORE [*p=q]:   store i64 %245, i64* %b, align 8, !dbg !660
LOAD [p=*q]:   %246 = load i32* %k, align 4, !dbg !660
STORE [*p=q]:   store i32 %247, i32* %k, align 4, !dbg !660
LOAD [p=*q]:   %235 = load i32* %w, align 4, !dbg !660
STORE [*p=q]:   store i32 %235, i32* @outcnt, align 4, !dbg !660
CALL [call func]:   %236 = call i32 @fill_inbuf(i32 0), !dbg !660
LOAD [p=*q]:   %241 = load i32* %k, align 4, !dbg !660
LOAD [p=*q]:   %244 = load i64* %b, align 8, !dbg !660
STORE [*p=q]:   store i64 %245, i64* %b, align 8, !dbg !660
LOAD [p=*q]:   %246 = load i32* %k, align 4, !dbg !660
STORE [*p=q]:   store i32 %247, i32* %k, align 4, !dbg !660
LOAD [p=*q]:   %241 = load i32* %k, align 4, !dbg !660
LOAD [p=*q]:   %244 = load i64* %b, align 8, !dbg !660
STORE [*p=q]:   store i64 %245, i64* %b, align 8, !dbg !660
LOAD [p=*q]:   %246 = load i32* %k, align 4, !dbg !660
STORE [*p=q]:   store i32 %247, i32* %k, align 4, !dbg !660
LOAD [p=*q]:   %220 = load i32* %k, align 4, !dbg !658
LOAD [p=*q]:   %221 = load i32* %5, align 4, !dbg !658
LOAD [p=*q]:   %249 = load %struct.huft** %3, align 8, !dbg !662
LOAD [p=*q]:   %250 = load i64* %b, align 8, !dbg !662
LOAD [p=*q]:   %252 = load i32* %md, align 4, !dbg !662
STORE [*p=q]:   store %struct.huft* %255, %struct.huft** %t, align 8, !dbg !662
LOAD [p=*q]:   %257 = load i8* %256, align 1, !dbg !662
STORE [*p=q]:   store i32 %258, i32* %e, align 4, !dbg !662
LOAD [p=*q]:   %332 = load %struct.huft** %t, align 8, !dbg !675
LOAD [p=*q]:   %334 = load i8* %333, align 1, !dbg !675
LOAD [p=*q]:   %336 = load i64* %b, align 8, !dbg !675
STORE [*p=q]:   store i64 %338, i64* %b, align 8, !dbg !675
LOAD [p=*q]:   %339 = load %struct.huft** %t, align 8, !dbg !675
LOAD [p=*q]:   %341 = load i8* %340, align 1, !dbg !675
LOAD [p=*q]:   %343 = load i32* %k, align 4, !dbg !675
STORE [*p=q]:   store i32 %344, i32* %k, align 4, !dbg !675
LOAD [p=*q]:   %262 = load i32* %e, align 4, !dbg !664
LOAD [p=*q]:   %262 = load i32* %e, align 4, !dbg !664
STORE [*p=q]:   store i32 1, i32* %1, !dbg !666
LOAD [p=*q]:   %266 = load %struct.huft** %t, align 8, !dbg !667
LOAD [p=*q]:   %268 = load i8* %267, align 1, !dbg !667
LOAD [p=*q]:   %270 = load i64* %b, align 8, !dbg !667
STORE [*p=q]:   store i64 %272, i64* %b, align 8, !dbg !667
LOAD [p=*q]:   %273 = load %struct.huft** %t, align 8, !dbg !667
LOAD [p=*q]:   %275 = load i8* %274, align 1, !dbg !667
LOAD [p=*q]:   %277 = load i32* %k, align 4, !dbg !667
STORE [*p=q]:   store i32 %278, i32* %k, align 4, !dbg !667
LOAD [p=*q]:   %279 = load i32* %e, align 4, !dbg !669
STORE [*p=q]:   store i32 %280, i32* %e, align 4, !dbg !669
STORE [*p=q]:   store i32 1, i32* %1, !dbg !666
LOAD [p=*q]:   %482 = load i32* %1, !dbg !708
Analyzing return instruction for inflate_codes
	  %482 = load i32* %1, !dbg !708
LOAD [p=*q]:   %266 = load %struct.huft** %t, align 8, !dbg !667
LOAD [p=*q]:   %268 = load i8* %267, align 1, !dbg !667
LOAD [p=*q]:   %270 = load i64* %b, align 8, !dbg !667
STORE [*p=q]:   store i64 %272, i64* %b, align 8, !dbg !667
LOAD [p=*q]:   %273 = load %struct.huft** %t, align 8, !dbg !667
LOAD [p=*q]:   %275 = load i8* %274, align 1, !dbg !667
LOAD [p=*q]:   %277 = load i32* %k, align 4, !dbg !667
STORE [*p=q]:   store i32 %278, i32* %k, align 4, !dbg !667
LOAD [p=*q]:   %279 = load i32* %e, align 4, !dbg !669
STORE [*p=q]:   store i32 %280, i32* %e, align 4, !dbg !669
LOAD [p=*q]:   %282 = load i32* %k, align 4, !dbg !670
LOAD [p=*q]:   %283 = load i32* %e, align 4, !dbg !670
LOAD [p=*q]:   %282 = load i32* %k, align 4, !dbg !670
LOAD [p=*q]:   %283 = load i32* %e, align 4, !dbg !670
LOAD [p=*q]:   %286 = load i32* @inptr, align 4, !dbg !672
LOAD [p=*q]:   %287 = load i32* @insize, align 4, !dbg !672
LOAD [p=*q]:   %286 = load i32* @inptr, align 4, !dbg !672
LOAD [p=*q]:   %287 = load i32* @insize, align 4, !dbg !672
LOAD [p=*q]:   %290 = load i32* @inptr, align 4, !dbg !672
STORE [*p=q]:   store i32 %291, i32* @inptr, align 4, !dbg !672
LOAD [p=*q]:   %294 = load i8* %293, align 1, !dbg !672
LOAD [p=*q]:   %297 = load i32* %w, align 4, !dbg !672
STORE [*p=q]:   store i32 %297, i32* @outcnt, align 4, !dbg !672
CALL [call func]:   %298 = call i32 @fill_inbuf(i32 0), !dbg !672
LOAD [p=*q]:   %290 = load i32* @inptr, align 4, !dbg !672
STORE [*p=q]:   store i32 %291, i32* @inptr, align 4, !dbg !672
LOAD [p=*q]:   %294 = load i8* %293, align 1, !dbg !672
LOAD [p=*q]:   %303 = load i32* %k, align 4, !dbg !672
LOAD [p=*q]:   %306 = load i64* %b, align 8, !dbg !672
STORE [*p=q]:   store i64 %307, i64* %b, align 8, !dbg !672
LOAD [p=*q]:   %308 = load i32* %k, align 4, !dbg !672
STORE [*p=q]:   store i32 %309, i32* %k, align 4, !dbg !672
LOAD [p=*q]:   %297 = load i32* %w, align 4, !dbg !672
STORE [*p=q]:   store i32 %297, i32* @outcnt, align 4, !dbg !672
CALL [call func]:   %298 = call i32 @fill_inbuf(i32 0), !dbg !672
LOAD [p=*q]:   %303 = load i32* %k, align 4, !dbg !672
LOAD [p=*q]:   %306 = load i64* %b, align 8, !dbg !672
STORE [*p=q]:   store i64 %307, i64* %b, align 8, !dbg !672
LOAD [p=*q]:   %308 = load i32* %k, align 4, !dbg !672
STORE [*p=q]:   store i32 %309, i32* %k, align 4, !dbg !672
LOAD [p=*q]:   %303 = load i32* %k, align 4, !dbg !672
LOAD [p=*q]:   %306 = load i64* %b, align 8, !dbg !672
STORE [*p=q]:   store i64 %307, i64* %b, align 8, !dbg !672
LOAD [p=*q]:   %308 = load i32* %k, align 4, !dbg !672
STORE [*p=q]:   store i32 %309, i32* %k, align 4, !dbg !672
LOAD [p=*q]:   %282 = load i32* %k, align 4, !dbg !670
LOAD [p=*q]:   %283 = load i32* %e, align 4, !dbg !670
LOAD [p=*q]:   %312 = load %struct.huft** %t, align 8, !dbg !674
LOAD [p=*q]:   %315 = load %struct.huft** %314, align 8, !dbg !674
LOAD [p=*q]:   %316 = load i64* %b, align 8, !dbg !674
LOAD [p=*q]:   %318 = load i32* %e, align 4, !dbg !674
LOAD [p=*q]:   %321 = load i16* %320, align 2, !dbg !674
STORE [*p=q]:   store %struct.huft* %325, %struct.huft** %t, align 8, !dbg !674
LOAD [p=*q]:   %327 = load i8* %326, align 1, !dbg !674
STORE [*p=q]:   store i32 %328, i32* %e, align 4, !dbg !674
LOAD [p=*q]:   %312 = load %struct.huft** %t, align 8, !dbg !674
LOAD [p=*q]:   %315 = load %struct.huft** %314, align 8, !dbg !674
LOAD [p=*q]:   %316 = load i64* %b, align 8, !dbg !674
LOAD [p=*q]:   %318 = load i32* %e, align 4, !dbg !674
LOAD [p=*q]:   %321 = load i16* %320, align 2, !dbg !674
STORE [*p=q]:   store %struct.huft* %325, %struct.huft** %t, align 8, !dbg !674
LOAD [p=*q]:   %327 = load i8* %326, align 1, !dbg !674
STORE [*p=q]:   store i32 %328, i32* %e, align 4, !dbg !674
LOAD [p=*q]:   %262 = load i32* %e, align 4, !dbg !664
LOAD [p=*q]:   %332 = load %struct.huft** %t, align 8, !dbg !675
LOAD [p=*q]:   %334 = load i8* %333, align 1, !dbg !675
LOAD [p=*q]:   %336 = load i64* %b, align 8, !dbg !675
STORE [*p=q]:   store i64 %338, i64* %b, align 8, !dbg !675
LOAD [p=*q]:   %339 = load %struct.huft** %t, align 8, !dbg !675
LOAD [p=*q]:   %341 = load i8* %340, align 1, !dbg !675
LOAD [p=*q]:   %343 = load i32* %k, align 4, !dbg !675
STORE [*p=q]:   store i32 %344, i32* %k, align 4, !dbg !675
LOAD [p=*q]:   %332 = load %struct.huft** %t, align 8, !dbg !675
LOAD [p=*q]:   %334 = load i8* %333, align 1, !dbg !675
LOAD [p=*q]:   %336 = load i64* %b, align 8, !dbg !675
STORE [*p=q]:   store i64 %338, i64* %b, align 8, !dbg !675
LOAD [p=*q]:   %339 = load %struct.huft** %t, align 8, !dbg !675
LOAD [p=*q]:   %341 = load i8* %340, align 1, !dbg !675
LOAD [p=*q]:   %343 = load i32* %k, align 4, !dbg !675
STORE [*p=q]:   store i32 %344, i32* %k, align 4, !dbg !675
LOAD [p=*q]:   %346 = load i32* %k, align 4, !dbg !677
LOAD [p=*q]:   %347 = load i32* %e, align 4, !dbg !677
LOAD [p=*q]:   %346 = load i32* %k, align 4, !dbg !677
LOAD [p=*q]:   %347 = load i32* %e, align 4, !dbg !677
LOAD [p=*q]:   %350 = load i32* @inptr, align 4, !dbg !679
LOAD [p=*q]:   %351 = load i32* @insize, align 4, !dbg !679
LOAD [p=*q]:   %375 = load i32* %w, align 4, !dbg !681
LOAD [p=*q]:   %376 = load %struct.huft** %t, align 8, !dbg !681
LOAD [p=*q]:   %379 = load i16* %378, align 2, !dbg !681
LOAD [p=*q]:   %382 = load i64* %b, align 8, !dbg !681
LOAD [p=*q]:   %384 = load i32* %e, align 4, !dbg !681
LOAD [p=*q]:   %387 = load i16* %386, align 2, !dbg !681
STORE [*p=q]:   store i32 %390, i32* %d, align 4, !dbg !681
LOAD [p=*q]:   %391 = load i32* %e, align 4, !dbg !682
LOAD [p=*q]:   %392 = load i64* %b, align 8, !dbg !682
STORE [*p=q]:   store i64 %394, i64* %b, align 8, !dbg !682
LOAD [p=*q]:   %395 = load i32* %e, align 4, !dbg !682
LOAD [p=*q]:   %396 = load i32* %k, align 4, !dbg !682
STORE [*p=q]:   store i32 %397, i32* %k, align 4, !dbg !682
LOAD [p=*q]:   %350 = load i32* @inptr, align 4, !dbg !679
LOAD [p=*q]:   %351 = load i32* @insize, align 4, !dbg !679
LOAD [p=*q]:   %354 = load i32* @inptr, align 4, !dbg !679
STORE [*p=q]:   store i32 %355, i32* @inptr, align 4, !dbg !679
LOAD [p=*q]:   %358 = load i8* %357, align 1, !dbg !679
LOAD [p=*q]:   %361 = load i32* %w, align 4, !dbg !679
STORE [*p=q]:   store i32 %361, i32* @outcnt, align 4, !dbg !679
CALL [call func]:   %362 = call i32 @fill_inbuf(i32 0), !dbg !679
LOAD [p=*q]:   %354 = load i32* @inptr, align 4, !dbg !679
STORE [*p=q]:   store i32 %355, i32* @inptr, align 4, !dbg !679
LOAD [p=*q]:   %358 = load i8* %357, align 1, !dbg !679
LOAD [p=*q]:   %367 = load i32* %k, align 4, !dbg !679
LOAD [p=*q]:   %370 = load i64* %b, align 8, !dbg !679
STORE [*p=q]:   store i64 %371, i64* %b, align 8, !dbg !679
LOAD [p=*q]:   %372 = load i32* %k, align 4, !dbg !679
STORE [*p=q]:   store i32 %373, i32* %k, align 4, !dbg !679
LOAD [p=*q]:   %361 = load i32* %w, align 4, !dbg !679
STORE [*p=q]:   store i32 %361, i32* @outcnt, align 4, !dbg !679
CALL [call func]:   %362 = call i32 @fill_inbuf(i32 0), !dbg !679
LOAD [p=*q]:   %367 = load i32* %k, align 4, !dbg !679
LOAD [p=*q]:   %370 = load i64* %b, align 8, !dbg !679
STORE [*p=q]:   store i64 %371, i64* %b, align 8, !dbg !679
LOAD [p=*q]:   %372 = load i32* %k, align 4, !dbg !679
STORE [*p=q]:   store i32 %373, i32* %k, align 4, !dbg !679
LOAD [p=*q]:   %367 = load i32* %k, align 4, !dbg !679
LOAD [p=*q]:   %370 = load i64* %b, align 8, !dbg !679
STORE [*p=q]:   store i64 %371, i64* %b, align 8, !dbg !679
LOAD [p=*q]:   %372 = load i32* %k, align 4, !dbg !679
STORE [*p=q]:   store i32 %373, i32* %k, align 4, !dbg !679
LOAD [p=*q]:   %346 = load i32* %k, align 4, !dbg !677
LOAD [p=*q]:   %347 = load i32* %e, align 4, !dbg !677
LOAD [p=*q]:   %375 = load i32* %w, align 4, !dbg !681
LOAD [p=*q]:   %376 = load %struct.huft** %t, align 8, !dbg !681
LOAD [p=*q]:   %379 = load i16* %378, align 2, !dbg !681
LOAD [p=*q]:   %382 = load i64* %b, align 8, !dbg !681
LOAD [p=*q]:   %384 = load i32* %e, align 4, !dbg !681
LOAD [p=*q]:   %387 = load i16* %386, align 2, !dbg !681
STORE [*p=q]:   store i32 %390, i32* %d, align 4, !dbg !681
LOAD [p=*q]:   %391 = load i32* %e, align 4, !dbg !682
LOAD [p=*q]:   %392 = load i64* %b, align 8, !dbg !682
STORE [*p=q]:   store i64 %394, i64* %b, align 8, !dbg !682
LOAD [p=*q]:   %395 = load i32* %e, align 4, !dbg !682
LOAD [p=*q]:   %396 = load i32* %k, align 4, !dbg !682
STORE [*p=q]:   store i32 %397, i32* %k, align 4, !dbg !682
LOAD [p=*q]:   %399 = load i32* %d, align 4, !dbg !685
STORE [*p=q]:   store i32 %400, i32* %d, align 4, !dbg !685
LOAD [p=*q]:   %401 = load i32* %w, align 4, !dbg !685
LOAD [p=*q]:   %399 = load i32* %d, align 4, !dbg !685
STORE [*p=q]:   store i32 %400, i32* %d, align 4, !dbg !685
LOAD [p=*q]:   %401 = load i32* %w, align 4, !dbg !685
LOAD [p=*q]:   %404 = load i32* %d, align 4, !dbg !685
LOAD [p=*q]:   %406 = load i32* %w, align 4, !dbg !685
LOAD [p=*q]:   %404 = load i32* %d, align 4, !dbg !685
STORE [*p=q]:   store i32 %409, i32* %e, align 4, !dbg !685
LOAD [p=*q]:   %410 = load i32* %n, align 4, !dbg !685
LOAD [p=*q]:   %406 = load i32* %w, align 4, !dbg !685
STORE [*p=q]:   store i32 %409, i32* %e, align 4, !dbg !685
LOAD [p=*q]:   %410 = load i32* %n, align 4, !dbg !685
STORE [*p=q]:   store i32 %409, i32* %e, align 4, !dbg !685
LOAD [p=*q]:   %410 = load i32* %n, align 4, !dbg !685
LOAD [p=*q]:   %413 = load i32* %n, align 4, !dbg !685
LOAD [p=*q]:   %415 = load i32* %e, align 4, !dbg !685
LOAD [p=*q]:   %413 = load i32* %n, align 4, !dbg !685
STORE [*p=q]:   store i32 %417, i32* %e, align 4, !dbg !685
LOAD [p=*q]:   %418 = load i32* %n, align 4, !dbg !685
STORE [*p=q]:   store i32 %419, i32* %n, align 4, !dbg !685
LOAD [p=*q]:   %420 = load i32* %e, align 4, !dbg !687
LOAD [p=*q]:   %421 = load i32* %d, align 4, !dbg !687
LOAD [p=*q]:   %422 = load i32* %w, align 4, !dbg !687
LOAD [p=*q]:   %415 = load i32* %e, align 4, !dbg !685
STORE [*p=q]:   store i32 %417, i32* %e, align 4, !dbg !685
LOAD [p=*q]:   %418 = load i32* %n, align 4, !dbg !685
STORE [*p=q]:   store i32 %419, i32* %n, align 4, !dbg !685
LOAD [p=*q]:   %420 = load i32* %e, align 4, !dbg !687
LOAD [p=*q]:   %421 = load i32* %d, align 4, !dbg !687
LOAD [p=*q]:   %422 = load i32* %w, align 4, !dbg !687
STORE [*p=q]:   store i32 %417, i32* %e, align 4, !dbg !685
LOAD [p=*q]:   %418 = load i32* %n, align 4, !dbg !685
STORE [*p=q]:   store i32 %419, i32* %n, align 4, !dbg !685
LOAD [p=*q]:   %420 = load i32* %e, align 4, !dbg !687
LOAD [p=*q]:   %421 = load i32* %d, align 4, !dbg !687
LOAD [p=*q]:   %422 = load i32* %w, align 4, !dbg !687
LOAD [p=*q]:   %425 = load i32* %w, align 4, !dbg !687
LOAD [p=*q]:   %426 = load i32* %d, align 4, !dbg !687
LOAD [p=*q]:   %429 = load i32* %d, align 4, !dbg !687
LOAD [p=*q]:   %430 = load i32* %w, align 4, !dbg !687
LOAD [p=*q]:   %425 = load i32* %w, align 4, !dbg !687
LOAD [p=*q]:   %426 = load i32* %d, align 4, !dbg !687
LOAD [p=*q]:   %429 = load i32* %d, align 4, !dbg !687
LOAD [p=*q]:   %430 = load i32* %w, align 4, !dbg !687
LOAD [p=*q]:   %436 = load i32* %w, align 4, !dbg !688
LOAD [p=*q]:   %439 = load i32* %d, align 4, !dbg !688
LOAD [p=*q]:   %442 = load i32* %e, align 4, !dbg !688
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %438, i8* %441, i64 %443, i32 1, i1 false), !dbg !688
LOAD [p=*q]:   %444 = load i32* %e, align 4, !dbg !690
LOAD [p=*q]:   %445 = load i32* %w, align 4, !dbg !690
STORE [*p=q]:   store i32 %446, i32* %w, align 4, !dbg !690
LOAD [p=*q]:   %447 = load i32* %e, align 4, !dbg !691
LOAD [p=*q]:   %448 = load i32* %d, align 4, !dbg !691
STORE [*p=q]:   store i32 %449, i32* %d, align 4, !dbg !691
LOAD [p=*q]:   %436 = load i32* %w, align 4, !dbg !688
LOAD [p=*q]:   %439 = load i32* %d, align 4, !dbg !688
LOAD [p=*q]:   %442 = load i32* %e, align 4, !dbg !688
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %438, i8* %441, i64 %443, i32 1, i1 false), !dbg !688
LOAD [p=*q]:   %444 = load i32* %e, align 4, !dbg !690
LOAD [p=*q]:   %445 = load i32* %w, align 4, !dbg !690
STORE [*p=q]:   store i32 %446, i32* %w, align 4, !dbg !690
LOAD [p=*q]:   %447 = load i32* %e, align 4, !dbg !691
LOAD [p=*q]:   %448 = load i32* %d, align 4, !dbg !691
STORE [*p=q]:   store i32 %449, i32* %d, align 4, !dbg !691
LOAD [p=*q]:   %467 = load i32* %w, align 4, !dbg !697
LOAD [p=*q]:   %452 = load i32* %d, align 4, !dbg !694
STORE [*p=q]:   store i32 %453, i32* %d, align 4, !dbg !694
LOAD [p=*q]:   %456 = load i8* %455, align 1, !dbg !694
LOAD [p=*q]:   %457 = load i32* %w, align 4, !dbg !694
STORE [*p=q]:   store i32 %458, i32* %w, align 4, !dbg !694
STORE [*p=q]:   store i8 %456, i8* %460, align 1, !dbg !694
LOAD [p=*q]:   %452 = load i32* %d, align 4, !dbg !694
STORE [*p=q]:   store i32 %453, i32* %d, align 4, !dbg !694
LOAD [p=*q]:   %456 = load i8* %455, align 1, !dbg !694
LOAD [p=*q]:   %457 = load i32* %w, align 4, !dbg !694
STORE [*p=q]:   store i32 %458, i32* %w, align 4, !dbg !694
STORE [*p=q]:   store i8 %456, i8* %460, align 1, !dbg !694
LOAD [p=*q]:   %462 = load i32* %e, align 4, !dbg !696
STORE [*p=q]:   store i32 %463, i32* %e, align 4, !dbg !696
LOAD [p=*q]:   %462 = load i32* %e, align 4, !dbg !696
STORE [*p=q]:   store i32 %463, i32* %e, align 4, !dbg !696
LOAD [p=*q]:   %452 = load i32* %d, align 4, !dbg !694
STORE [*p=q]:   store i32 %453, i32* %d, align 4, !dbg !694
LOAD [p=*q]:   %456 = load i8* %455, align 1, !dbg !694
LOAD [p=*q]:   %457 = load i32* %w, align 4, !dbg !694
STORE [*p=q]:   store i32 %458, i32* %w, align 4, !dbg !694
STORE [*p=q]:   store i8 %456, i8* %460, align 1, !dbg !694
LOAD [p=*q]:   %467 = load i32* %w, align 4, !dbg !697
LOAD [p=*q]:   %467 = load i32* %w, align 4, !dbg !697
LOAD [p=*q]:   %470 = load i32* %w, align 4, !dbg !698
STORE [*p=q]:   store i32 %470, i32* @outcnt, align 4, !dbg !698
CALL [call func]:   call void @flush_window(), !dbg !698
STORE [*p=q]:   store i32 0, i32* %w, align 4, !dbg !700
LOAD [p=*q]:   %470 = load i32* %w, align 4, !dbg !698
STORE [*p=q]:   store i32 %470, i32* @outcnt, align 4, !dbg !698
CALL [call func]:   call void @flush_window(), !dbg !698
STORE [*p=q]:   store i32 0, i32* %w, align 4, !dbg !700
LOAD [p=*q]:   %473 = load i32* %n, align 4, !dbg !702
LOAD [p=*q]:   %473 = load i32* %n, align 4, !dbg !702
LOAD [p=*q]:   %399 = load i32* %d, align 4, !dbg !685
STORE [*p=q]:   store i32 %400, i32* %d, align 4, !dbg !685
LOAD [p=*q]:   %401 = load i32* %w, align 4, !dbg !685
LOAD [p=*q]:   %478 = load i32* %w, align 4, !dbg !704
STORE [*p=q]:   store i32 %478, i32* @outcnt, align 4, !dbg !704
LOAD [p=*q]:   %479 = load i64* %b, align 8, !dbg !705
STORE [*p=q]:   store i64 %479, i64* @bb, align 8, !dbg !705
LOAD [p=*q]:   %480 = load i32* %k, align 4, !dbg !706
STORE [*p=q]:   store i32 %480, i32* @bk, align 4, !dbg !706
STORE [*p=q]:   store i32 0, i32* %1, !dbg !707
LOAD [p=*q]:   %482 = load i32* %1, !dbg !708
Analyzing return instruction for inflate_codes
	  %482 = load i32* %1, !dbg !708
LOAD [p=*q]:   %482 = load i32* %1, !dbg !708
Analyzing return instruction for inflate_codes
	  %482 = load i32* %1, !dbg !708
[Processing][Function][huft_free]
STORE [*p=q]:   store %struct.huft* %t, %struct.huft** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.huft** %1}, metadata !574), !dbg !586
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.huft** %p}, metadata !587), !dbg !589
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.huft** %q}, metadata !590), !dbg !591
LOAD [p=*q]:   %2 = load %struct.huft** %1, align 8, !dbg !592
STORE [*p=q]:   store %struct.huft* %2, %struct.huft** %p, align 8, !dbg !592
LOAD [p=*q]:   %4 = load %struct.huft** %p, align 8, !dbg !593
LOAD [p=*q]:   %4 = load %struct.huft** %p, align 8, !dbg !593
LOAD [p=*q]:   %7 = load %struct.huft** %p, align 8, !dbg !594
STORE [*p=q]:   store %struct.huft* %8, %struct.huft** %p, align 8, !dbg !594
LOAD [p=*q]:   %11 = load %struct.huft** %10, align 8, !dbg !594
STORE [*p=q]:   store %struct.huft* %11, %struct.huft** %q, align 8, !dbg !594
LOAD [p=*q]:   %12 = load %struct.huft** %p, align 8, !dbg !596
CALL [call func]:   call void @free(i8* %13) #3, !dbg !596
LOAD [p=*q]:   %14 = load %struct.huft** %q, align 8, !dbg !597
STORE [*p=q]:   store %struct.huft* %14, %struct.huft** %p, align 8, !dbg !597
Analyzing return instruction for huft_free
	i32 0
LOAD [p=*q]:   %7 = load %struct.huft** %p, align 8, !dbg !594
STORE [*p=q]:   store %struct.huft* %8, %struct.huft** %p, align 8, !dbg !594
LOAD [p=*q]:   %11 = load %struct.huft** %10, align 8, !dbg !594
STORE [*p=q]:   store %struct.huft* %11, %struct.huft** %q, align 8, !dbg !594
LOAD [p=*q]:   %12 = load %struct.huft** %p, align 8, !dbg !596
CALL [call func]:   call void @free(i8* %13) #3, !dbg !596
LOAD [p=*q]:   %14 = load %struct.huft** %q, align 8, !dbg !597
STORE [*p=q]:   store %struct.huft* %14, %struct.huft** %p, align 8, !dbg !597
LOAD [p=*q]:   %4 = load %struct.huft** %p, align 8, !dbg !593
Analyzing return instruction for huft_free
	i32 0
[Processing][Function][huft_build]
STORE [*p=q]:   store i32* %b, i32** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32** %2}, metadata !574), !dbg !576
STORE [*p=q]:   store i32 %n, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !577), !dbg !578
STORE [*p=q]:   store i32 %s, i32* %4, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %4}, metadata !579), !dbg !580
STORE [*p=q]:   store i16* %d, i16** %5, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i16** %5}, metadata !581), !dbg !583
STORE [*p=q]:   store i16* %e, i16** %6, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i16** %6}, metadata !584), !dbg !585
STORE [*p=q]:   store %struct.huft** %t, %struct.huft*** %7, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.huft*** %7}, metadata !586), !dbg !599
STORE [*p=q]:   store i32* %m, i32** %8, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32** %8}, metadata !600), !dbg !601
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %a}, metadata !602), !dbg !604
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[17 x i32]* %c}, metadata !605), !dbg !607
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %f}, metadata !608), !dbg !609
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %g}, metadata !610), !dbg !611
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %h}, metadata !612), !dbg !613
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !614), !dbg !615
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %j}, metadata !616), !dbg !617
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %k}, metadata !618), !dbg !619
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %l}, metadata !620), !dbg !621
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32** %p}, metadata !622), !dbg !623
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.huft** %q}, metadata !624), !dbg !625
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.huft* %r}, metadata !626), !dbg !627
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[16 x %struct.huft*]* %u}, metadata !628), !dbg !630
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[288 x i32]* %v}, metadata !631), !dbg !633
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %w}, metadata !634), !dbg !635
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[17 x i32]* %x}, metadata !636), !dbg !637
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32** %xp}, metadata !638), !dbg !639
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %y}, metadata !640), !dbg !641
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %z}, metadata !642), !dbg !643
CALL [call func]:   call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 68, i32 1, i1 false), !dbg !644
LOAD [p=*q]:   %11 = load i32** %2, align 8, !dbg !645
STORE [*p=q]:   store i32* %11, i32** %p, align 8, !dbg !645
LOAD [p=*q]:   %12 = load i32* %3, align 4, !dbg !646
STORE [*p=q]:   store i32 %12, i32* %i, align 4, !dbg !646
LOAD [p=*q]:   %14 = load i32** %p, align 8, !dbg !648
LOAD [p=*q]:   %15 = load i32* %14, !dbg !648
LOAD [p=*q]:   %18 = load i32* %17, align 4, !dbg !648
STORE [*p=q]:   store i32 %19, i32* %17, align 4, !dbg !648
LOAD [p=*q]:   %20 = load i32** %p, align 8, !dbg !650
STORE [*p=q]:   store i32* %21, i32** %p, align 8, !dbg !650
LOAD [p=*q]:   %14 = load i32** %p, align 8, !dbg !648
LOAD [p=*q]:   %15 = load i32* %14, !dbg !648
LOAD [p=*q]:   %18 = load i32* %17, align 4, !dbg !648
STORE [*p=q]:   store i32 %19, i32* %17, align 4, !dbg !648
LOAD [p=*q]:   %20 = load i32** %p, align 8, !dbg !650
STORE [*p=q]:   store i32* %21, i32** %p, align 8, !dbg !650
LOAD [p=*q]:   %23 = load i32* %i, align 4, !dbg !651
STORE [*p=q]:   store i32 %24, i32* %i, align 4, !dbg !651
LOAD [p=*q]:   %23 = load i32* %i, align 4, !dbg !651
STORE [*p=q]:   store i32 %24, i32* %i, align 4, !dbg !651
LOAD [p=*q]:   %14 = load i32** %p, align 8, !dbg !648
LOAD [p=*q]:   %15 = load i32* %14, !dbg !648
LOAD [p=*q]:   %18 = load i32* %17, align 4, !dbg !648
STORE [*p=q]:   store i32 %19, i32* %17, align 4, !dbg !648
LOAD [p=*q]:   %20 = load i32** %p, align 8, !dbg !650
STORE [*p=q]:   store i32* %21, i32** %p, align 8, !dbg !650
LOAD [p=*q]:   %28 = load i32* %27, align 4, !dbg !652
LOAD [p=*q]:   %29 = load i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %28 = load i32* %27, align 4, !dbg !652
LOAD [p=*q]:   %29 = load i32* %3, align 4, !dbg !652
CALL [call func]:   %32 = call noalias i8* @malloc(i64 48) #3, !dbg !653
STORE [*p=q]:   store %struct.huft* %33, %struct.huft** %q, align 8, !dbg !653
LOAD [p=*q]:   %34 = load %struct.huft** %q, align 8, !dbg !655
LOAD [p=*q]:   %61 = load i32** %8, align 8, !dbg !666
LOAD [p=*q]:   %62 = load i32* %61, !dbg !666
STORE [*p=q]:   store i32 %62, i32* %l, align 4, !dbg !666
STORE [*p=q]:   store i32 1, i32* %j, align 4, !dbg !667
CALL [call func]:   %32 = call noalias i8* @malloc(i64 48) #3, !dbg !653
STORE [*p=q]:   store %struct.huft* %33, %struct.huft** %q, align 8, !dbg !653
LOAD [p=*q]:   %34 = load %struct.huft** %q, align 8, !dbg !655
LOAD [p=*q]:   %38 = load i32* @hufts, align 4, !dbg !657
STORE [*p=q]:   store i32 %39, i32* @hufts, align 4, !dbg !657
LOAD [p=*q]:   %40 = load %struct.huft** %q, align 8, !dbg !658
STORE [*p=q]:   store %struct.huft* null, %struct.huft** %43, align 8, !dbg !658
LOAD [p=*q]:   %44 = load %struct.huft** %q, align 8, !dbg !659
STORE [*p=q]:   store i8 99, i8* %46, align 1, !dbg !659
LOAD [p=*q]:   %47 = load %struct.huft** %q, align 8, !dbg !660
STORE [*p=q]:   store i8 1, i8* %49, align 1, !dbg !660
LOAD [p=*q]:   %50 = load %struct.huft** %q, align 8, !dbg !661
STORE [*p=q]:   store i8 99, i8* %52, align 1, !dbg !661
LOAD [p=*q]:   %53 = load %struct.huft** %q, align 8, !dbg !662
STORE [*p=q]:   store i8 1, i8* %55, align 1, !dbg !662
LOAD [p=*q]:   %56 = load %struct.huft** %q, align 8, !dbg !663
LOAD [p=*q]:   %58 = load %struct.huft*** %7, align 8, !dbg !663
STORE [*p=q]:   store %struct.huft* %57, %struct.huft** %58, !dbg !663
LOAD [p=*q]:   %59 = load i32** %8, align 8, !dbg !664
STORE [*p=q]:   store i32 1, i32* %59, !dbg !664
STORE [*p=q]:   store i32 0, i32* %1, !dbg !665
STORE [*p=q]:   store i32 3, i32* %1, !dbg !656
STORE [*p=q]:   store i32 3, i32* %1, !dbg !656
LOAD [p=*q]:   %470 = load i32* %1, !dbg !788
Analyzing return instruction for huft_build
	  %470 = load i32* %1, !dbg !788
LOAD [p=*q]:   %38 = load i32* @hufts, align 4, !dbg !657
STORE [*p=q]:   store i32 %39, i32* @hufts, align 4, !dbg !657
LOAD [p=*q]:   %40 = load %struct.huft** %q, align 8, !dbg !658
STORE [*p=q]:   store %struct.huft* null, %struct.huft** %43, align 8, !dbg !658
LOAD [p=*q]:   %44 = load %struct.huft** %q, align 8, !dbg !659
STORE [*p=q]:   store i8 99, i8* %46, align 1, !dbg !659
LOAD [p=*q]:   %47 = load %struct.huft** %q, align 8, !dbg !660
STORE [*p=q]:   store i8 1, i8* %49, align 1, !dbg !660
LOAD [p=*q]:   %50 = load %struct.huft** %q, align 8, !dbg !661
STORE [*p=q]:   store i8 99, i8* %52, align 1, !dbg !661
LOAD [p=*q]:   %53 = load %struct.huft** %q, align 8, !dbg !662
STORE [*p=q]:   store i8 1, i8* %55, align 1, !dbg !662
LOAD [p=*q]:   %56 = load %struct.huft** %q, align 8, !dbg !663
LOAD [p=*q]:   %58 = load %struct.huft*** %7, align 8, !dbg !663
STORE [*p=q]:   store %struct.huft* %57, %struct.huft** %58, !dbg !663
LOAD [p=*q]:   %59 = load i32** %8, align 8, !dbg !664
STORE [*p=q]:   store i32 1, i32* %59, !dbg !664
STORE [*p=q]:   store i32 0, i32* %1, !dbg !665
LOAD [p=*q]:   %470 = load i32* %1, !dbg !788
Analyzing return instruction for huft_build
	  %470 = load i32* %1, !dbg !788
LOAD [p=*q]:   %61 = load i32** %8, align 8, !dbg !666
LOAD [p=*q]:   %62 = load i32* %61, !dbg !666
STORE [*p=q]:   store i32 %62, i32* %l, align 4, !dbg !666
STORE [*p=q]:   store i32 1, i32* %j, align 4, !dbg !667
LOAD [p=*q]:   %64 = load i32* %j, align 4, !dbg !667
LOAD [p=*q]:   %64 = load i32* %j, align 4, !dbg !667
LOAD [p=*q]:   %67 = load i32* %j, align 4, !dbg !669
LOAD [p=*q]:   %70 = load i32* %69, align 4, !dbg !669
LOAD [p=*q]:   %78 = load i32* %j, align 4, !dbg !672
STORE [*p=q]:   store i32 %78, i32* %k, align 4, !dbg !672
LOAD [p=*q]:   %79 = load i32* %l, align 4, !dbg !673
LOAD [p=*q]:   %80 = load i32* %j, align 4, !dbg !673
LOAD [p=*q]:   %67 = load i32* %j, align 4, !dbg !669
LOAD [p=*q]:   %70 = load i32* %69, align 4, !dbg !669
LOAD [p=*q]:   %78 = load i32* %j, align 4, !dbg !672
STORE [*p=q]:   store i32 %78, i32* %k, align 4, !dbg !672
LOAD [p=*q]:   %79 = load i32* %l, align 4, !dbg !673
LOAD [p=*q]:   %80 = load i32* %j, align 4, !dbg !673
LOAD [p=*q]:   %75 = load i32* %j, align 4, !dbg !671
STORE [*p=q]:   store i32 %76, i32* %j, align 4, !dbg !671
LOAD [p=*q]:   %75 = load i32* %j, align 4, !dbg !671
STORE [*p=q]:   store i32 %76, i32* %j, align 4, !dbg !671
LOAD [p=*q]:   %64 = load i32* %j, align 4, !dbg !667
LOAD [p=*q]:   %78 = load i32* %j, align 4, !dbg !672
STORE [*p=q]:   store i32 %78, i32* %k, align 4, !dbg !672
LOAD [p=*q]:   %79 = load i32* %l, align 4, !dbg !673
LOAD [p=*q]:   %80 = load i32* %j, align 4, !dbg !673
LOAD [p=*q]:   %83 = load i32* %j, align 4, !dbg !674
STORE [*p=q]:   store i32 %83, i32* %l, align 4, !dbg !674
STORE [*p=q]:   store i32 16, i32* %i, align 4, !dbg !675
LOAD [p=*q]:   %83 = load i32* %j, align 4, !dbg !674
STORE [*p=q]:   store i32 %83, i32* %l, align 4, !dbg !674
STORE [*p=q]:   store i32 16, i32* %i, align 4, !dbg !675
STORE [*p=q]:   store i32 16, i32* %i, align 4, !dbg !675
LOAD [p=*q]:   %86 = load i32* %i, align 4, !dbg !675
LOAD [p=*q]:   %86 = load i32* %i, align 4, !dbg !675
LOAD [p=*q]:   %89 = load i32* %i, align 4, !dbg !677
LOAD [p=*q]:   %92 = load i32* %91, align 4, !dbg !677
LOAD [p=*q]:   %100 = load i32* %i, align 4, !dbg !680
STORE [*p=q]:   store i32 %100, i32* %g, align 4, !dbg !680
LOAD [p=*q]:   %101 = load i32* %l, align 4, !dbg !681
LOAD [p=*q]:   %102 = load i32* %i, align 4, !dbg !681
LOAD [p=*q]:   %89 = load i32* %i, align 4, !dbg !677
LOAD [p=*q]:   %92 = load i32* %91, align 4, !dbg !677
LOAD [p=*q]:   %100 = load i32* %i, align 4, !dbg !680
STORE [*p=q]:   store i32 %100, i32* %g, align 4, !dbg !680
LOAD [p=*q]:   %101 = load i32* %l, align 4, !dbg !681
LOAD [p=*q]:   %102 = load i32* %i, align 4, !dbg !681
LOAD [p=*q]:   %97 = load i32* %i, align 4, !dbg !679
STORE [*p=q]:   store i32 %98, i32* %i, align 4, !dbg !679
LOAD [p=*q]:   %97 = load i32* %i, align 4, !dbg !679
STORE [*p=q]:   store i32 %98, i32* %i, align 4, !dbg !679
LOAD [p=*q]:   %86 = load i32* %i, align 4, !dbg !675
LOAD [p=*q]:   %100 = load i32* %i, align 4, !dbg !680
STORE [*p=q]:   store i32 %100, i32* %g, align 4, !dbg !680
LOAD [p=*q]:   %101 = load i32* %l, align 4, !dbg !681
LOAD [p=*q]:   %102 = load i32* %i, align 4, !dbg !681
LOAD [p=*q]:   %105 = load i32* %i, align 4, !dbg !682
STORE [*p=q]:   store i32 %105, i32* %l, align 4, !dbg !682
LOAD [p=*q]:   %107 = load i32* %l, align 4, !dbg !683
LOAD [p=*q]:   %108 = load i32** %8, align 8, !dbg !683
STORE [*p=q]:   store i32 %107, i32* %108, !dbg !683
LOAD [p=*q]:   %109 = load i32* %j, align 4, !dbg !684
STORE [*p=q]:   store i32 %110, i32* %y, align 4, !dbg !684
LOAD [p=*q]:   %105 = load i32* %i, align 4, !dbg !682
STORE [*p=q]:   store i32 %105, i32* %l, align 4, !dbg !682
LOAD [p=*q]:   %107 = load i32* %l, align 4, !dbg !683
LOAD [p=*q]:   %108 = load i32** %8, align 8, !dbg !683
STORE [*p=q]:   store i32 %107, i32* %108, !dbg !683
LOAD [p=*q]:   %109 = load i32* %j, align 4, !dbg !684
STORE [*p=q]:   store i32 %110, i32* %y, align 4, !dbg !684
LOAD [p=*q]:   %107 = load i32* %l, align 4, !dbg !683
LOAD [p=*q]:   %108 = load i32** %8, align 8, !dbg !683
STORE [*p=q]:   store i32 %107, i32* %108, !dbg !683
LOAD [p=*q]:   %109 = load i32* %j, align 4, !dbg !684
STORE [*p=q]:   store i32 %110, i32* %y, align 4, !dbg !684
LOAD [p=*q]:   %112 = load i32* %j, align 4, !dbg !684
LOAD [p=*q]:   %113 = load i32* %i, align 4, !dbg !684
LOAD [p=*q]:   %112 = load i32* %j, align 4, !dbg !684
LOAD [p=*q]:   %113 = load i32* %i, align 4, !dbg !684
LOAD [p=*q]:   %116 = load i32* %j, align 4, !dbg !686
LOAD [p=*q]:   %119 = load i32* %118, align 4, !dbg !686
LOAD [p=*q]:   %120 = load i32* %y, align 4, !dbg !686
STORE [*p=q]:   store i32 %121, i32* %y, align 4, !dbg !686
LOAD [p=*q]:   %131 = load i32* %i, align 4, !dbg !689
LOAD [p=*q]:   %134 = load i32* %133, align 4, !dbg !689
LOAD [p=*q]:   %135 = load i32* %y, align 4, !dbg !689
STORE [*p=q]:   store i32 %136, i32* %y, align 4, !dbg !689
LOAD [p=*q]:   %116 = load i32* %j, align 4, !dbg !686
LOAD [p=*q]:   %119 = load i32* %118, align 4, !dbg !686
LOAD [p=*q]:   %120 = load i32* %y, align 4, !dbg !686
STORE [*p=q]:   store i32 %121, i32* %y, align 4, !dbg !686
STORE [*p=q]:   store i32 2, i32* %1, !dbg !687
STORE [*p=q]:   store i32 2, i32* %1, !dbg !687
LOAD [p=*q]:   %470 = load i32* %1, !dbg !788
Analyzing return instruction for huft_build
	  %470 = load i32* %1, !dbg !788
LOAD [p=*q]:   %126 = load i32* %j, align 4, !dbg !688
STORE [*p=q]:   store i32 %127, i32* %j, align 4, !dbg !688
LOAD [p=*q]:   %128 = load i32* %y, align 4, !dbg !688
STORE [*p=q]:   store i32 %129, i32* %y, align 4, !dbg !688
LOAD [p=*q]:   %126 = load i32* %j, align 4, !dbg !688
STORE [*p=q]:   store i32 %127, i32* %j, align 4, !dbg !688
LOAD [p=*q]:   %128 = load i32* %y, align 4, !dbg !688
STORE [*p=q]:   store i32 %129, i32* %y, align 4, !dbg !688
LOAD [p=*q]:   %112 = load i32* %j, align 4, !dbg !684
LOAD [p=*q]:   %113 = load i32* %i, align 4, !dbg !684
LOAD [p=*q]:   %131 = load i32* %i, align 4, !dbg !689
LOAD [p=*q]:   %134 = load i32* %133, align 4, !dbg !689
LOAD [p=*q]:   %135 = load i32* %y, align 4, !dbg !689
STORE [*p=q]:   store i32 %136, i32* %y, align 4, !dbg !689
STORE [*p=q]:   store i32 2, i32* %1, !dbg !690
LOAD [p=*q]:   %140 = load i32* %y, align 4, !dbg !691
LOAD [p=*q]:   %141 = load i32* %i, align 4, !dbg !691
LOAD [p=*q]:   %144 = load i32* %143, align 4, !dbg !691
STORE [*p=q]:   store i32 %145, i32* %143, align 4, !dbg !691
STORE [*p=q]:   store i32 0, i32* %j, align 4, !dbg !692
STORE [*p=q]:   store i32 0, i32* %146, align 4, !dbg !692
STORE [*p=q]:   store i32* %148, i32** %p, align 8, !dbg !693
STORE [*p=q]:   store i32* %150, i32** %xp, align 8, !dbg !694
STORE [*p=q]:   store i32 2, i32* %1, !dbg !690
LOAD [p=*q]:   %470 = load i32* %1, !dbg !788
Analyzing return instruction for huft_build
	  %470 = load i32* %1, !dbg !788
LOAD [p=*q]:   %140 = load i32* %y, align 4, !dbg !691
LOAD [p=*q]:   %141 = load i32* %i, align 4, !dbg !691
LOAD [p=*q]:   %144 = load i32* %143, align 4, !dbg !691
STORE [*p=q]:   store i32 %145, i32* %143, align 4, !dbg !691
STORE [*p=q]:   store i32 0, i32* %j, align 4, !dbg !692
STORE [*p=q]:   store i32 0, i32* %146, align 4, !dbg !692
STORE [*p=q]:   store i32* %148, i32** %p, align 8, !dbg !693
STORE [*p=q]:   store i32* %150, i32** %xp, align 8, !dbg !694
LOAD [p=*q]:   %152 = load i32* %i, align 4, !dbg !695
STORE [*p=q]:   store i32 %153, i32* %i, align 4, !dbg !695
LOAD [p=*q]:   %152 = load i32* %i, align 4, !dbg !695
STORE [*p=q]:   store i32 %153, i32* %i, align 4, !dbg !695
LOAD [p=*q]:   %156 = load i32** %p, align 8, !dbg !696
STORE [*p=q]:   store i32* %157, i32** %p, align 8, !dbg !696
LOAD [p=*q]:   %158 = load i32* %156, !dbg !696
LOAD [p=*q]:   %159 = load i32* %j, align 4, !dbg !696
STORE [*p=q]:   store i32 %160, i32* %j, align 4, !dbg !696
LOAD [p=*q]:   %161 = load i32** %xp, align 8, !dbg !696
STORE [*p=q]:   store i32* %162, i32** %xp, align 8, !dbg !696
STORE [*p=q]:   store i32 %160, i32* %161, !dbg !696
LOAD [p=*q]:   %164 = load i32** %2, align 8, !dbg !699
STORE [*p=q]:   store i32* %164, i32** %p, align 8, !dbg !699
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !700
LOAD [p=*q]:   %156 = load i32** %p, align 8, !dbg !696
STORE [*p=q]:   store i32* %157, i32** %p, align 8, !dbg !696
LOAD [p=*q]:   %158 = load i32* %156, !dbg !696
LOAD [p=*q]:   %159 = load i32* %j, align 4, !dbg !696
STORE [*p=q]:   store i32 %160, i32* %j, align 4, !dbg !696
LOAD [p=*q]:   %161 = load i32** %xp, align 8, !dbg !696
STORE [*p=q]:   store i32* %162, i32** %xp, align 8, !dbg !696
STORE [*p=q]:   store i32 %160, i32* %161, !dbg !696
LOAD [p=*q]:   %152 = load i32* %i, align 4, !dbg !695
STORE [*p=q]:   store i32 %153, i32* %i, align 4, !dbg !695
LOAD [p=*q]:   %164 = load i32** %2, align 8, !dbg !699
STORE [*p=q]:   store i32* %164, i32** %p, align 8, !dbg !699
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !700
LOAD [p=*q]:   %166 = load i32** %p, align 8, !dbg !702
STORE [*p=q]:   store i32* %167, i32** %p, align 8, !dbg !702
LOAD [p=*q]:   %168 = load i32* %166, !dbg !702
STORE [*p=q]:   store i32 %168, i32* %j, align 4, !dbg !702
LOAD [p=*q]:   %166 = load i32** %p, align 8, !dbg !702
STORE [*p=q]:   store i32* %167, i32** %p, align 8, !dbg !702
LOAD [p=*q]:   %168 = load i32* %166, !dbg !702
STORE [*p=q]:   store i32 %168, i32* %j, align 4, !dbg !702
LOAD [p=*q]:   %171 = load i32* %i, align 4, !dbg !704
LOAD [p=*q]:   %172 = load i32* %j, align 4, !dbg !704
LOAD [p=*q]:   %175 = load i32* %174, align 4, !dbg !704
STORE [*p=q]:   store i32 %176, i32* %174, align 4, !dbg !704
STORE [*p=q]:   store i32 %171, i32* %178, align 4, !dbg !704
LOAD [p=*q]:   %171 = load i32* %i, align 4, !dbg !704
LOAD [p=*q]:   %172 = load i32* %j, align 4, !dbg !704
LOAD [p=*q]:   %175 = load i32* %174, align 4, !dbg !704
STORE [*p=q]:   store i32 %176, i32* %174, align 4, !dbg !704
STORE [*p=q]:   store i32 %171, i32* %178, align 4, !dbg !704
LOAD [p=*q]:   %181 = load i32* %i, align 4, !dbg !705
STORE [*p=q]:   store i32 %182, i32* %i, align 4, !dbg !705
LOAD [p=*q]:   %183 = load i32* %3, align 4, !dbg !705
LOAD [p=*q]:   %181 = load i32* %i, align 4, !dbg !705
STORE [*p=q]:   store i32 %182, i32* %i, align 4, !dbg !705
LOAD [p=*q]:   %183 = load i32* %3, align 4, !dbg !705
LOAD [p=*q]:   %166 = load i32** %p, align 8, !dbg !702
STORE [*p=q]:   store i32* %167, i32** %p, align 8, !dbg !702
LOAD [p=*q]:   %168 = load i32* %166, !dbg !702
STORE [*p=q]:   store i32 %168, i32* %j, align 4, !dbg !702
LOAD [p=*q]:   %186 = load i32* %g, align 4, !dbg !706
LOAD [p=*q]:   %189 = load i32* %188, align 4, !dbg !706
STORE [*p=q]:   store i32 %189, i32* %3, align 4, !dbg !706
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !707
STORE [*p=q]:   store i32 0, i32* %190, align 4, !dbg !707
STORE [*p=q]:   store i32* %191, i32** %p, align 8, !dbg !708
STORE [*p=q]:   store i32 -1, i32* %h, align 4, !dbg !709
LOAD [p=*q]:   %192 = load i32* %l, align 4, !dbg !710
STORE [*p=q]:   store i32 %193, i32* %w, align 4, !dbg !710
STORE [*p=q]:   store %struct.huft* null, %struct.huft** %194, align 8, !dbg !711
STORE [*p=q]:   store %struct.huft* null, %struct.huft** %q, align 8, !dbg !712
STORE [*p=q]:   store i32 0, i32* %z, align 4, !dbg !713
LOAD [p=*q]:   %186 = load i32* %g, align 4, !dbg !706
LOAD [p=*q]:   %189 = load i32* %188, align 4, !dbg !706
STORE [*p=q]:   store i32 %189, i32* %3, align 4, !dbg !706
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !707
STORE [*p=q]:   store i32 0, i32* %190, align 4, !dbg !707
STORE [*p=q]:   store i32* %191, i32** %p, align 8, !dbg !708
STORE [*p=q]:   store i32 -1, i32* %h, align 4, !dbg !709
LOAD [p=*q]:   %192 = load i32* %l, align 4, !dbg !710
STORE [*p=q]:   store i32 %193, i32* %w, align 4, !dbg !710
STORE [*p=q]:   store %struct.huft* null, %struct.huft** %194, align 8, !dbg !711
STORE [*p=q]:   store %struct.huft* null, %struct.huft** %q, align 8, !dbg !712
STORE [*p=q]:   store i32 0, i32* %z, align 4, !dbg !713
LOAD [p=*q]:   %196 = load i32* %k, align 4, !dbg !714
LOAD [p=*q]:   %197 = load i32* %g, align 4, !dbg !714
LOAD [p=*q]:   %196 = load i32* %k, align 4, !dbg !714
LOAD [p=*q]:   %197 = load i32* %g, align 4, !dbg !714
LOAD [p=*q]:   %200 = load i32* %k, align 4, !dbg !716
LOAD [p=*q]:   %203 = load i32* %202, align 4, !dbg !716
STORE [*p=q]:   store i32 %203, i32* %a, align 4, !dbg !716
LOAD [p=*q]:   %461 = load i32* %y, align 4, !dbg !787
LOAD [p=*q]:   %200 = load i32* %k, align 4, !dbg !716
LOAD [p=*q]:   %203 = load i32* %202, align 4, !dbg !716
STORE [*p=q]:   store i32 %203, i32* %a, align 4, !dbg !716
LOAD [p=*q]:   %205 = load i32* %a, align 4, !dbg !718
STORE [*p=q]:   store i32 %206, i32* %a, align 4, !dbg !718
LOAD [p=*q]:   %205 = load i32* %a, align 4, !dbg !718
STORE [*p=q]:   store i32 %206, i32* %a, align 4, !dbg !718
LOAD [p=*q]:   %210 = load i32* %k, align 4, !dbg !719
LOAD [p=*q]:   %211 = load i32* %w, align 4, !dbg !719
LOAD [p=*q]:   %212 = load i32* %l, align 4, !dbg !719
LOAD [p=*q]:   %210 = load i32* %k, align 4, !dbg !719
LOAD [p=*q]:   %211 = load i32* %w, align 4, !dbg !719
LOAD [p=*q]:   %212 = load i32* %l, align 4, !dbg !719
LOAD [p=*q]:   %216 = load i32* %h, align 4, !dbg !721
STORE [*p=q]:   store i32 %217, i32* %h, align 4, !dbg !721
LOAD [p=*q]:   %218 = load i32* %l, align 4, !dbg !723
LOAD [p=*q]:   %219 = load i32* %w, align 4, !dbg !723
STORE [*p=q]:   store i32 %220, i32* %w, align 4, !dbg !723
LOAD [p=*q]:   %221 = load i32* %g, align 4, !dbg !724
LOAD [p=*q]:   %222 = load i32* %w, align 4, !dbg !724
STORE [*p=q]:   store i32 %223, i32* %z, align 4, !dbg !724
LOAD [p=*q]:   %224 = load i32* %l, align 4, !dbg !724
LOAD [p=*q]:   %340 = load i32* %k, align 4, !dbg !757
LOAD [p=*q]:   %341 = load i32* %w, align 4, !dbg !757
STORE [*p=q]:   store i8 %343, i8* %344, align 1, !dbg !757
LOAD [p=*q]:   %345 = load i32** %p, align 8, !dbg !758
LOAD [p=*q]:   %347 = load i32* %3, align 4, !dbg !758
LOAD [p=*q]:   %216 = load i32* %h, align 4, !dbg !721
STORE [*p=q]:   store i32 %217, i32* %h, align 4, !dbg !721
LOAD [p=*q]:   %218 = load i32* %l, align 4, !dbg !723
LOAD [p=*q]:   %219 = load i32* %w, align 4, !dbg !723
STORE [*p=q]:   store i32 %220, i32* %w, align 4, !dbg !723
LOAD [p=*q]:   %221 = load i32* %g, align 4, !dbg !724
LOAD [p=*q]:   %222 = load i32* %w, align 4, !dbg !724
STORE [*p=q]:   store i32 %223, i32* %z, align 4, !dbg !724
LOAD [p=*q]:   %224 = load i32* %l, align 4, !dbg !724
LOAD [p=*q]:   %227 = load i32* %l, align 4, !dbg !724
LOAD [p=*q]:   %229 = load i32* %z, align 4, !dbg !724
LOAD [p=*q]:   %227 = load i32* %l, align 4, !dbg !724
STORE [*p=q]:   store i32 %231, i32* %z, align 4, !dbg !724
LOAD [p=*q]:   %232 = load i32* %k, align 4, !dbg !725
LOAD [p=*q]:   %233 = load i32* %w, align 4, !dbg !725
STORE [*p=q]:   store i32 %234, i32* %j, align 4, !dbg !725
STORE [*p=q]:   store i32 %235, i32* %f, align 4, !dbg !725
LOAD [p=*q]:   %236 = load i32* %a, align 4, !dbg !725
LOAD [p=*q]:   %229 = load i32* %z, align 4, !dbg !724
STORE [*p=q]:   store i32 %231, i32* %z, align 4, !dbg !724
LOAD [p=*q]:   %232 = load i32* %k, align 4, !dbg !725
LOAD [p=*q]:   %233 = load i32* %w, align 4, !dbg !725
STORE [*p=q]:   store i32 %234, i32* %j, align 4, !dbg !725
STORE [*p=q]:   store i32 %235, i32* %f, align 4, !dbg !725
LOAD [p=*q]:   %236 = load i32* %a, align 4, !dbg !725
STORE [*p=q]:   store i32 %231, i32* %z, align 4, !dbg !724
LOAD [p=*q]:   %232 = load i32* %k, align 4, !dbg !725
LOAD [p=*q]:   %233 = load i32* %w, align 4, !dbg !725
STORE [*p=q]:   store i32 %234, i32* %j, align 4, !dbg !725
STORE [*p=q]:   store i32 %235, i32* %f, align 4, !dbg !725
LOAD [p=*q]:   %236 = load i32* %a, align 4, !dbg !725
LOAD [p=*q]:   %240 = load i32* %a, align 4, !dbg !726
LOAD [p=*q]:   %242 = load i32* %f, align 4, !dbg !726
STORE [*p=q]:   store i32 %243, i32* %f, align 4, !dbg !726
LOAD [p=*q]:   %245 = load i32* %k, align 4, !dbg !728
STORE [*p=q]:   store i32* %247, i32** %xp, align 8, !dbg !728
LOAD [p=*q]:   %248 = load i32* %j, align 4, !dbg !729
LOAD [p=*q]:   %249 = load i32* %z, align 4, !dbg !729
LOAD [p=*q]:   %273 = load i32* %j, align 4, !dbg !737
STORE [*p=q]:   store i32 %274, i32* %z, align 4, !dbg !737
LOAD [p=*q]:   %275 = load i32* %z, align 4, !dbg !738
CALL [call func]:   %279 = call noalias i8* @malloc(i64 %278) #3, !dbg !738
STORE [*p=q]:   store %struct.huft* %280, %struct.huft** %q, align 8, !dbg !738
LOAD [p=*q]:   %240 = load i32* %a, align 4, !dbg !726
LOAD [p=*q]:   %242 = load i32* %f, align 4, !dbg !726
STORE [*p=q]:   store i32 %243, i32* %f, align 4, !dbg !726
LOAD [p=*q]:   %245 = load i32* %k, align 4, !dbg !728
STORE [*p=q]:   store i32* %247, i32** %xp, align 8, !dbg !728
LOAD [p=*q]:   %248 = load i32* %j, align 4, !dbg !729
LOAD [p=*q]:   %249 = load i32* %z, align 4, !dbg !729
LOAD [p=*q]:   %253 = load i32* %j, align 4, !dbg !730
STORE [*p=q]:   store i32 %254, i32* %j, align 4, !dbg !730
LOAD [p=*q]:   %255 = load i32* %z, align 4, !dbg !730
LOAD [p=*q]:   %253 = load i32* %j, align 4, !dbg !730
STORE [*p=q]:   store i32 %254, i32* %j, align 4, !dbg !730
LOAD [p=*q]:   %255 = load i32* %z, align 4, !dbg !730
LOAD [p=*q]:   %258 = load i32* %f, align 4, !dbg !731
STORE [*p=q]:   store i32 %259, i32* %f, align 4, !dbg !731
LOAD [p=*q]:   %260 = load i32** %xp, align 8, !dbg !731
STORE [*p=q]:   store i32* %261, i32** %xp, align 8, !dbg !731
LOAD [p=*q]:   %262 = load i32* %261, !dbg !731
LOAD [p=*q]:   %258 = load i32* %f, align 4, !dbg !731
STORE [*p=q]:   store i32 %259, i32* %f, align 4, !dbg !731
LOAD [p=*q]:   %260 = load i32** %xp, align 8, !dbg !731
STORE [*p=q]:   store i32* %261, i32** %xp, align 8, !dbg !731
LOAD [p=*q]:   %262 = load i32* %261, !dbg !731
LOAD [p=*q]:   %266 = load i32** %xp, align 8, !dbg !734
LOAD [p=*q]:   %267 = load i32* %266, !dbg !734
LOAD [p=*q]:   %268 = load i32* %f, align 4, !dbg !734
STORE [*p=q]:   store i32 %269, i32* %f, align 4, !dbg !734
LOAD [p=*q]:   %266 = load i32** %xp, align 8, !dbg !734
LOAD [p=*q]:   %267 = load i32* %266, !dbg !734
LOAD [p=*q]:   %268 = load i32* %f, align 4, !dbg !734
STORE [*p=q]:   store i32 %269, i32* %f, align 4, !dbg !734
LOAD [p=*q]:   %253 = load i32* %j, align 4, !dbg !730
STORE [*p=q]:   store i32 %254, i32* %j, align 4, !dbg !730
LOAD [p=*q]:   %255 = load i32* %z, align 4, !dbg !730
LOAD [p=*q]:   %273 = load i32* %j, align 4, !dbg !737
STORE [*p=q]:   store i32 %274, i32* %z, align 4, !dbg !737
LOAD [p=*q]:   %275 = load i32* %z, align 4, !dbg !738
CALL [call func]:   %279 = call noalias i8* @malloc(i64 %278) #3, !dbg !738
STORE [*p=q]:   store %struct.huft* %280, %struct.huft** %q, align 8, !dbg !738
LOAD [p=*q]:   %273 = load i32* %j, align 4, !dbg !737
STORE [*p=q]:   store i32 %274, i32* %z, align 4, !dbg !737
LOAD [p=*q]:   %275 = load i32* %z, align 4, !dbg !738
CALL [call func]:   %279 = call noalias i8* @malloc(i64 %278) #3, !dbg !738
STORE [*p=q]:   store %struct.huft* %280, %struct.huft** %q, align 8, !dbg !738
LOAD [p=*q]:   %283 = load i32* %h, align 4, !dbg !739
LOAD [p=*q]:   %291 = load i32* %z, align 4, !dbg !743
LOAD [p=*q]:   %293 = load i32* @hufts, align 4, !dbg !743
STORE [*p=q]:   store i32 %294, i32* @hufts, align 4, !dbg !743
LOAD [p=*q]:   %295 = load %struct.huft** %q, align 8, !dbg !744
LOAD [p=*q]:   %297 = load %struct.huft*** %7, align 8, !dbg !744
STORE [*p=q]:   store %struct.huft* %296, %struct.huft** %297, !dbg !744
LOAD [p=*q]:   %298 = load %struct.huft** %q, align 8, !dbg !745
STORE [*p=q]:   store %struct.huft** %300, %struct.huft*** %7, align 8, !dbg !745
STORE [*p=q]:   store %struct.huft* null, %struct.huft** %300, !dbg !745
LOAD [p=*q]:   %301 = load %struct.huft** %q, align 8, !dbg !746
STORE [*p=q]:   store %struct.huft* %302, %struct.huft** %q, align 8, !dbg !746
LOAD [p=*q]:   %303 = load i32* %h, align 4, !dbg !746
STORE [*p=q]:   store %struct.huft* %302, %struct.huft** %305, align 8, !dbg !746
LOAD [p=*q]:   %306 = load i32* %h, align 4, !dbg !747
LOAD [p=*q]:   %283 = load i32* %h, align 4, !dbg !739
LOAD [p=*q]:   %287 = load %struct.huft** %286, align 8, !dbg !741
CALL [call func]:   %288 = call i32 @huft_free(%struct.huft* %287), !dbg !741
STORE [*p=q]:   store i32 3, i32* %1, !dbg !742
LOAD [p=*q]:   %287 = load %struct.huft** %286, align 8, !dbg !741
CALL [call func]:   %288 = call i32 @huft_free(%struct.huft* %287), !dbg !741
STORE [*p=q]:   store i32 3, i32* %1, !dbg !742
STORE [*p=q]:   store i32 3, i32* %1, !dbg !742
LOAD [p=*q]:   %470 = load i32* %1, !dbg !788
Analyzing return instruction for huft_build
	  %470 = load i32* %1, !dbg !788
LOAD [p=*q]:   %291 = load i32* %z, align 4, !dbg !743
LOAD [p=*q]:   %293 = load i32* @hufts, align 4, !dbg !743
STORE [*p=q]:   store i32 %294, i32* @hufts, align 4, !dbg !743
LOAD [p=*q]:   %295 = load %struct.huft** %q, align 8, !dbg !744
LOAD [p=*q]:   %297 = load %struct.huft*** %7, align 8, !dbg !744
STORE [*p=q]:   store %struct.huft* %296, %struct.huft** %297, !dbg !744
LOAD [p=*q]:   %298 = load %struct.huft** %q, align 8, !dbg !745
STORE [*p=q]:   store %struct.huft** %300, %struct.huft*** %7, align 8, !dbg !745
STORE [*p=q]:   store %struct.huft* null, %struct.huft** %300, !dbg !745
LOAD [p=*q]:   %301 = load %struct.huft** %q, align 8, !dbg !746
STORE [*p=q]:   store %struct.huft* %302, %struct.huft** %q, align 8, !dbg !746
LOAD [p=*q]:   %303 = load i32* %h, align 4, !dbg !746
STORE [*p=q]:   store %struct.huft* %302, %struct.huft** %305, align 8, !dbg !746
LOAD [p=*q]:   %306 = load i32* %h, align 4, !dbg !747
LOAD [p=*q]:   %309 = load i32* %i, align 4, !dbg !748
LOAD [p=*q]:   %310 = load i32* %h, align 4, !dbg !748
STORE [*p=q]:   store i32 %309, i32* %312, align 4, !dbg !748
LOAD [p=*q]:   %313 = load i32* %l, align 4, !dbg !750
STORE [*p=q]:   store i8 %314, i8* %315, align 1, !dbg !750
LOAD [p=*q]:   %316 = load i32* %j, align 4, !dbg !751
STORE [*p=q]:   store i8 %318, i8* %319, align 1, !dbg !751
LOAD [p=*q]:   %320 = load %struct.huft** %q, align 8, !dbg !752
STORE [*p=q]:   store %struct.huft* %320, %struct.huft** %322, align 8, !dbg !752
LOAD [p=*q]:   %323 = load i32* %i, align 4, !dbg !753
LOAD [p=*q]:   %324 = load i32* %w, align 4, !dbg !753
LOAD [p=*q]:   %325 = load i32* %l, align 4, !dbg !753
STORE [*p=q]:   store i32 %327, i32* %j, align 4, !dbg !753
LOAD [p=*q]:   %328 = load i32* %j, align 4, !dbg !754
LOAD [p=*q]:   %330 = load i32* %h, align 4, !dbg !754
LOAD [p=*q]:   %334 = load %struct.huft** %333, align 8, !dbg !754
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %336, i8* %337, i64 16, i32 8, i1 false), !dbg !754
LOAD [p=*q]:   %309 = load i32* %i, align 4, !dbg !748
LOAD [p=*q]:   %310 = load i32* %h, align 4, !dbg !748
STORE [*p=q]:   store i32 %309, i32* %312, align 4, !dbg !748
LOAD [p=*q]:   %313 = load i32* %l, align 4, !dbg !750
STORE [*p=q]:   store i8 %314, i8* %315, align 1, !dbg !750
LOAD [p=*q]:   %316 = load i32* %j, align 4, !dbg !751
STORE [*p=q]:   store i8 %318, i8* %319, align 1, !dbg !751
LOAD [p=*q]:   %320 = load %struct.huft** %q, align 8, !dbg !752
STORE [*p=q]:   store %struct.huft* %320, %struct.huft** %322, align 8, !dbg !752
LOAD [p=*q]:   %323 = load i32* %i, align 4, !dbg !753
LOAD [p=*q]:   %324 = load i32* %w, align 4, !dbg !753
LOAD [p=*q]:   %325 = load i32* %l, align 4, !dbg !753
STORE [*p=q]:   store i32 %327, i32* %j, align 4, !dbg !753
LOAD [p=*q]:   %328 = load i32* %j, align 4, !dbg !754
LOAD [p=*q]:   %330 = load i32* %h, align 4, !dbg !754
LOAD [p=*q]:   %334 = load %struct.huft** %333, align 8, !dbg !754
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %336, i8* %337, i64 16, i32 8, i1 false), !dbg !754
LOAD [p=*q]:   %210 = load i32* %k, align 4, !dbg !719
LOAD [p=*q]:   %211 = load i32* %w, align 4, !dbg !719
LOAD [p=*q]:   %212 = load i32* %l, align 4, !dbg !719
LOAD [p=*q]:   %340 = load i32* %k, align 4, !dbg !757
LOAD [p=*q]:   %341 = load i32* %w, align 4, !dbg !757
STORE [*p=q]:   store i8 %343, i8* %344, align 1, !dbg !757
LOAD [p=*q]:   %345 = load i32** %p, align 8, !dbg !758
LOAD [p=*q]:   %347 = load i32* %3, align 4, !dbg !758
STORE [*p=q]:   store i8 99, i8* %352, align 1, !dbg !759
LOAD [p=*q]:   %354 = load i32** %p, align 8, !dbg !760
LOAD [p=*q]:   %355 = load i32* %354, !dbg !760
LOAD [p=*q]:   %356 = load i32* %4, align 4, !dbg !760
STORE [*p=q]:   store i8 99, i8* %352, align 1, !dbg !759
LOAD [p=*q]:   %396 = load i32* %k, align 4, !dbg !769
LOAD [p=*q]:   %397 = load i32* %w, align 4, !dbg !769
STORE [*p=q]:   store i32 %399, i32* %f, align 4, !dbg !769
LOAD [p=*q]:   %400 = load i32* %i, align 4, !dbg !770
LOAD [p=*q]:   %401 = load i32* %w, align 4, !dbg !770
STORE [*p=q]:   store i32 %402, i32* %j, align 4, !dbg !770
LOAD [p=*q]:   %354 = load i32** %p, align 8, !dbg !760
LOAD [p=*q]:   %355 = load i32* %354, !dbg !760
LOAD [p=*q]:   %356 = load i32* %4, align 4, !dbg !760
LOAD [p=*q]:   %359 = load i32** %p, align 8, !dbg !761
LOAD [p=*q]:   %360 = load i32* %359, !dbg !761
STORE [*p=q]:   store i8 %363, i8* %364, align 1, !dbg !761
LOAD [p=*q]:   %365 = load i32** %p, align 8, !dbg !763
LOAD [p=*q]:   %366 = load i32* %365, !dbg !763
STORE [*p=q]:   store i16 %367, i16* %369, align 2, !dbg !763
LOAD [p=*q]:   %370 = load i32** %p, align 8, !dbg !764
STORE [*p=q]:   store i32* %371, i32** %p, align 8, !dbg !764
LOAD [p=*q]:   %373 = load i32** %p, align 8, !dbg !766
LOAD [p=*q]:   %374 = load i32* %373, !dbg !766
LOAD [p=*q]:   %375 = load i32* %4, align 4, !dbg !766
LOAD [p=*q]:   %378 = load i16** %6, align 8, !dbg !766
LOAD [p=*q]:   %380 = load i16* %379, !dbg !766
STORE [*p=q]:   store i8 %381, i8* %382, align 1, !dbg !766
LOAD [p=*q]:   %383 = load i32** %p, align 8, !dbg !768
STORE [*p=q]:   store i32* %384, i32** %p, align 8, !dbg !768
LOAD [p=*q]:   %385 = load i32* %383, !dbg !768
LOAD [p=*q]:   %386 = load i32* %4, align 4, !dbg !768
LOAD [p=*q]:   %389 = load i16** %5, align 8, !dbg !768
LOAD [p=*q]:   %391 = load i16* %390, !dbg !768
STORE [*p=q]:   store i16 %391, i16* %393, align 2, !dbg !768
LOAD [p=*q]:   %359 = load i32** %p, align 8, !dbg !761
LOAD [p=*q]:   %360 = load i32* %359, !dbg !761
STORE [*p=q]:   store i8 %363, i8* %364, align 1, !dbg !761
LOAD [p=*q]:   %365 = load i32** %p, align 8, !dbg !763
LOAD [p=*q]:   %366 = load i32* %365, !dbg !763
STORE [*p=q]:   store i16 %367, i16* %369, align 2, !dbg !763
LOAD [p=*q]:   %370 = load i32** %p, align 8, !dbg !764
STORE [*p=q]:   store i32* %371, i32** %p, align 8, !dbg !764
LOAD [p=*q]:   %373 = load i32** %p, align 8, !dbg !766
LOAD [p=*q]:   %374 = load i32* %373, !dbg !766
LOAD [p=*q]:   %375 = load i32* %4, align 4, !dbg !766
LOAD [p=*q]:   %378 = load i16** %6, align 8, !dbg !766
LOAD [p=*q]:   %380 = load i16* %379, !dbg !766
STORE [*p=q]:   store i8 %381, i8* %382, align 1, !dbg !766
LOAD [p=*q]:   %383 = load i32** %p, align 8, !dbg !768
STORE [*p=q]:   store i32* %384, i32** %p, align 8, !dbg !768
LOAD [p=*q]:   %385 = load i32* %383, !dbg !768
LOAD [p=*q]:   %386 = load i32* %4, align 4, !dbg !768
LOAD [p=*q]:   %389 = load i16** %5, align 8, !dbg !768
LOAD [p=*q]:   %391 = load i16* %390, !dbg !768
STORE [*p=q]:   store i16 %391, i16* %393, align 2, !dbg !768
LOAD [p=*q]:   %396 = load i32* %k, align 4, !dbg !769
LOAD [p=*q]:   %397 = load i32* %w, align 4, !dbg !769
STORE [*p=q]:   store i32 %399, i32* %f, align 4, !dbg !769
LOAD [p=*q]:   %400 = load i32* %i, align 4, !dbg !770
LOAD [p=*q]:   %401 = load i32* %w, align 4, !dbg !770
STORE [*p=q]:   store i32 %402, i32* %j, align 4, !dbg !770
LOAD [p=*q]:   %396 = load i32* %k, align 4, !dbg !769
LOAD [p=*q]:   %397 = load i32* %w, align 4, !dbg !769
STORE [*p=q]:   store i32 %399, i32* %f, align 4, !dbg !769
LOAD [p=*q]:   %400 = load i32* %i, align 4, !dbg !770
LOAD [p=*q]:   %401 = load i32* %w, align 4, !dbg !770
STORE [*p=q]:   store i32 %402, i32* %j, align 4, !dbg !770
LOAD [p=*q]:   %404 = load i32* %j, align 4, !dbg !770
LOAD [p=*q]:   %405 = load i32* %z, align 4, !dbg !770
LOAD [p=*q]:   %404 = load i32* %j, align 4, !dbg !770
LOAD [p=*q]:   %405 = load i32* %z, align 4, !dbg !770
LOAD [p=*q]:   %408 = load i32* %j, align 4, !dbg !772
LOAD [p=*q]:   %410 = load %struct.huft** %q, align 8, !dbg !772
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %412, i8* %413, i64 16, i32 8, i1 false), !dbg !772
LOAD [p=*q]:   %419 = load i32* %k, align 4, !dbg !774
STORE [*p=q]:   store i32 %421, i32* %j, align 4, !dbg !774
LOAD [p=*q]:   %408 = load i32* %j, align 4, !dbg !772
LOAD [p=*q]:   %410 = load %struct.huft** %q, align 8, !dbg !772
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %412, i8* %413, i64 16, i32 8, i1 false), !dbg !772
LOAD [p=*q]:   %415 = load i32* %f, align 4, !dbg !773
LOAD [p=*q]:   %416 = load i32* %j, align 4, !dbg !773
STORE [*p=q]:   store i32 %417, i32* %j, align 4, !dbg !773
LOAD [p=*q]:   %415 = load i32* %f, align 4, !dbg !773
LOAD [p=*q]:   %416 = load i32* %j, align 4, !dbg !773
STORE [*p=q]:   store i32 %417, i32* %j, align 4, !dbg !773
LOAD [p=*q]:   %404 = load i32* %j, align 4, !dbg !770
LOAD [p=*q]:   %405 = load i32* %z, align 4, !dbg !770
LOAD [p=*q]:   %419 = load i32* %k, align 4, !dbg !774
STORE [*p=q]:   store i32 %421, i32* %j, align 4, !dbg !774
LOAD [p=*q]:   %423 = load i32* %i, align 4, !dbg !774
LOAD [p=*q]:   %424 = load i32* %j, align 4, !dbg !774
LOAD [p=*q]:   %423 = load i32* %i, align 4, !dbg !774
LOAD [p=*q]:   %424 = load i32* %j, align 4, !dbg !774
LOAD [p=*q]:   %428 = load i32* %j, align 4, !dbg !776
LOAD [p=*q]:   %429 = load i32* %i, align 4, !dbg !776
STORE [*p=q]:   store i32 %430, i32* %i, align 4, !dbg !776
LOAD [p=*q]:   %435 = load i32* %j, align 4, !dbg !778
LOAD [p=*q]:   %436 = load i32* %i, align 4, !dbg !778
STORE [*p=q]:   store i32 %437, i32* %i, align 4, !dbg !778
LOAD [p=*q]:   %428 = load i32* %j, align 4, !dbg !776
LOAD [p=*q]:   %429 = load i32* %i, align 4, !dbg !776
STORE [*p=q]:   store i32 %430, i32* %i, align 4, !dbg !776
LOAD [p=*q]:   %432 = load i32* %j, align 4, !dbg !777
STORE [*p=q]:   store i32 %433, i32* %j, align 4, !dbg !777
LOAD [p=*q]:   %432 = load i32* %j, align 4, !dbg !777
STORE [*p=q]:   store i32 %433, i32* %j, align 4, !dbg !777
LOAD [p=*q]:   %423 = load i32* %i, align 4, !dbg !774
LOAD [p=*q]:   %424 = load i32* %j, align 4, !dbg !774
LOAD [p=*q]:   %435 = load i32* %j, align 4, !dbg !778
LOAD [p=*q]:   %436 = load i32* %i, align 4, !dbg !778
STORE [*p=q]:   store i32 %437, i32* %i, align 4, !dbg !778
LOAD [p=*q]:   %439 = load i32* %i, align 4, !dbg !779
LOAD [p=*q]:   %440 = load i32* %w, align 4, !dbg !779
LOAD [p=*q]:   %444 = load i32* %h, align 4, !dbg !779
LOAD [p=*q]:   %447 = load i32* %446, align 4, !dbg !779
LOAD [p=*q]:   %439 = load i32* %i, align 4, !dbg !779
LOAD [p=*q]:   %440 = load i32* %w, align 4, !dbg !779
LOAD [p=*q]:   %444 = load i32* %h, align 4, !dbg !779
LOAD [p=*q]:   %447 = load i32* %446, align 4, !dbg !779
LOAD [p=*q]:   %450 = load i32* %h, align 4, !dbg !780
STORE [*p=q]:   store i32 %451, i32* %h, align 4, !dbg !780
LOAD [p=*q]:   %452 = load i32* %l, align 4, !dbg !782
LOAD [p=*q]:   %453 = load i32* %w, align 4, !dbg !782
STORE [*p=q]:   store i32 %454, i32* %w, align 4, !dbg !782
LOAD [p=*q]:   %450 = load i32* %h, align 4, !dbg !780
STORE [*p=q]:   store i32 %451, i32* %h, align 4, !dbg !780
LOAD [p=*q]:   %452 = load i32* %l, align 4, !dbg !782
LOAD [p=*q]:   %453 = load i32* %w, align 4, !dbg !782
STORE [*p=q]:   store i32 %454, i32* %w, align 4, !dbg !782
LOAD [p=*q]:   %439 = load i32* %i, align 4, !dbg !779
LOAD [p=*q]:   %440 = load i32* %w, align 4, !dbg !779
LOAD [p=*q]:   %444 = load i32* %h, align 4, !dbg !779
LOAD [p=*q]:   %447 = load i32* %446, align 4, !dbg !779
LOAD [p=*q]:   %205 = load i32* %a, align 4, !dbg !718
STORE [*p=q]:   store i32 %206, i32* %a, align 4, !dbg !718
LOAD [p=*q]:   %458 = load i32* %k, align 4, !dbg !786
STORE [*p=q]:   store i32 %459, i32* %k, align 4, !dbg !786
LOAD [p=*q]:   %458 = load i32* %k, align 4, !dbg !786
STORE [*p=q]:   store i32 %459, i32* %k, align 4, !dbg !786
LOAD [p=*q]:   %196 = load i32* %k, align 4, !dbg !714
LOAD [p=*q]:   %197 = load i32* %g, align 4, !dbg !714
LOAD [p=*q]:   %461 = load i32* %y, align 4, !dbg !787
LOAD [p=*q]:   %464 = load i32* %g, align 4, !dbg !787
STORE [*p=q]:   store i32 %468, i32* %1
LOAD [p=*q]:   %464 = load i32* %g, align 4, !dbg !787
STORE [*p=q]:   store i32 %468, i32* %1
STORE [*p=q]:   store i32 %468, i32* %1
LOAD [p=*q]:   %470 = load i32* %1, !dbg !788
Analyzing return instruction for huft_build
	  %470 = load i32* %1, !dbg !788
LOAD [p=*q]:   %470 = load i32* %1, !dbg !788
Analyzing return instruction for huft_build
	  %470 = load i32* %1, !dbg !788
[Processing][Function][inflate_fixed]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !574), !dbg !576
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.huft** %tl}, metadata !577), !dbg !589
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.huft** %td}, metadata !590), !dbg !591
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %bl}, metadata !592), !dbg !593
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %bd}, metadata !594), !dbg !595
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[288 x i32]* %l}, metadata !596), !dbg !598
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !599
LOAD [p=*q]:   %3 = load i32* %i, align 4, !dbg !599
LOAD [p=*q]:   %3 = load i32* %i, align 4, !dbg !599
LOAD [p=*q]:   %6 = load i32* %i, align 4, !dbg !601
STORE [*p=q]:   store i32 8, i32* %8, align 4, !dbg !601
LOAD [p=*q]:   %6 = load i32* %i, align 4, !dbg !601
STORE [*p=q]:   store i32 8, i32* %8, align 4, !dbg !601
LOAD [p=*q]:   %10 = load i32* %i, align 4, !dbg !602
STORE [*p=q]:   store i32 %11, i32* %i, align 4, !dbg !602
LOAD [p=*q]:   %10 = load i32* %i, align 4, !dbg !602
STORE [*p=q]:   store i32 %11, i32* %i, align 4, !dbg !602
LOAD [p=*q]:   %3 = load i32* %i, align 4, !dbg !599
LOAD [p=*q]:   %14 = load i32* %i, align 4, !dbg !603
LOAD [p=*q]:   %14 = load i32* %i, align 4, !dbg !603
LOAD [p=*q]:   %17 = load i32* %i, align 4, !dbg !605
STORE [*p=q]:   store i32 9, i32* %19, align 4, !dbg !605
LOAD [p=*q]:   %17 = load i32* %i, align 4, !dbg !605
STORE [*p=q]:   store i32 9, i32* %19, align 4, !dbg !605
LOAD [p=*q]:   %21 = load i32* %i, align 4, !dbg !606
STORE [*p=q]:   store i32 %22, i32* %i, align 4, !dbg !606
LOAD [p=*q]:   %21 = load i32* %i, align 4, !dbg !606
STORE [*p=q]:   store i32 %22, i32* %i, align 4, !dbg !606
LOAD [p=*q]:   %14 = load i32* %i, align 4, !dbg !603
LOAD [p=*q]:   %25 = load i32* %i, align 4, !dbg !607
LOAD [p=*q]:   %25 = load i32* %i, align 4, !dbg !607
LOAD [p=*q]:   %28 = load i32* %i, align 4, !dbg !609
STORE [*p=q]:   store i32 7, i32* %30, align 4, !dbg !609
LOAD [p=*q]:   %28 = load i32* %i, align 4, !dbg !609
STORE [*p=q]:   store i32 7, i32* %30, align 4, !dbg !609
LOAD [p=*q]:   %32 = load i32* %i, align 4, !dbg !610
STORE [*p=q]:   store i32 %33, i32* %i, align 4, !dbg !610
LOAD [p=*q]:   %32 = load i32* %i, align 4, !dbg !610
STORE [*p=q]:   store i32 %33, i32* %i, align 4, !dbg !610
LOAD [p=*q]:   %25 = load i32* %i, align 4, !dbg !607
LOAD [p=*q]:   %36 = load i32* %i, align 4, !dbg !611
LOAD [p=*q]:   %36 = load i32* %i, align 4, !dbg !611
LOAD [p=*q]:   %39 = load i32* %i, align 4, !dbg !613
STORE [*p=q]:   store i32 8, i32* %41, align 4, !dbg !613
STORE [*p=q]:   store i32 7, i32* %bl, align 4, !dbg !615
CALL [call func]:   %47 = call i32 @huft_build(i32* %46, i32 288, i32 257, i16* getelementptr inbounds ([31 x i16]* @cplens, i32 0, i32 0), i16* getelementptr inbounds ([31 x i16]* @cplext, i32 0, i32 0), %struct.huft** %tl, i32* %bl), !dbg !616
STORE [*p=q]:   store i32 %47, i32* %i, align 4, !dbg !616
LOAD [p=*q]:   %39 = load i32* %i, align 4, !dbg !613
STORE [*p=q]:   store i32 8, i32* %41, align 4, !dbg !613
LOAD [p=*q]:   %43 = load i32* %i, align 4, !dbg !614
STORE [*p=q]:   store i32 %44, i32* %i, align 4, !dbg !614
LOAD [p=*q]:   %43 = load i32* %i, align 4, !dbg !614
STORE [*p=q]:   store i32 %44, i32* %i, align 4, !dbg !614
LOAD [p=*q]:   %36 = load i32* %i, align 4, !dbg !611
STORE [*p=q]:   store i32 7, i32* %bl, align 4, !dbg !615
CALL [call func]:   %47 = call i32 @huft_build(i32* %46, i32 288, i32 257, i16* getelementptr inbounds ([31 x i16]* @cplens, i32 0, i32 0), i16* getelementptr inbounds ([31 x i16]* @cplext, i32 0, i32 0), %struct.huft** %tl, i32* %bl), !dbg !616
STORE [*p=q]:   store i32 %47, i32* %i, align 4, !dbg !616
LOAD [p=*q]:   %50 = load i32* %i, align 4, !dbg !617
STORE [*p=q]:   store i32 %50, i32* %1, !dbg !617
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !618
LOAD [p=*q]:   %50 = load i32* %i, align 4, !dbg !617
STORE [*p=q]:   store i32 %50, i32* %1, !dbg !617
LOAD [p=*q]:   %84 = load i32* %1, !dbg !632
Analyzing return instruction for inflate_fixed
	  %84 = load i32* %1, !dbg !632
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !618
LOAD [p=*q]:   %53 = load i32* %i, align 4, !dbg !618
LOAD [p=*q]:   %53 = load i32* %i, align 4, !dbg !618
LOAD [p=*q]:   %56 = load i32* %i, align 4, !dbg !620
STORE [*p=q]:   store i32 5, i32* %58, align 4, !dbg !620
STORE [*p=q]:   store i32 5, i32* %bd, align 4, !dbg !622
CALL [call func]:   %64 = call i32 @huft_build(i32* %63, i32 30, i32 0, i16* getelementptr inbounds ([30 x i16]* @cpdist, i32 0, i32 0), i16* getelementptr inbounds ([30 x i16]* @cpdext, i32 0, i32 0), %struct.huft** %td, i32* %bd), !dbg !623
STORE [*p=q]:   store i32 %64, i32* %i, align 4, !dbg !623
LOAD [p=*q]:   %56 = load i32* %i, align 4, !dbg !620
STORE [*p=q]:   store i32 5, i32* %58, align 4, !dbg !620
LOAD [p=*q]:   %60 = load i32* %i, align 4, !dbg !621
STORE [*p=q]:   store i32 %61, i32* %i, align 4, !dbg !621
LOAD [p=*q]:   %60 = load i32* %i, align 4, !dbg !621
STORE [*p=q]:   store i32 %61, i32* %i, align 4, !dbg !621
LOAD [p=*q]:   %53 = load i32* %i, align 4, !dbg !618
STORE [*p=q]:   store i32 5, i32* %bd, align 4, !dbg !622
CALL [call func]:   %64 = call i32 @huft_build(i32* %63, i32 30, i32 0, i16* getelementptr inbounds ([30 x i16]* @cpdist, i32 0, i32 0), i16* getelementptr inbounds ([30 x i16]* @cpdext, i32 0, i32 0), %struct.huft** %td, i32* %bd), !dbg !623
STORE [*p=q]:   store i32 %64, i32* %i, align 4, !dbg !623
LOAD [p=*q]:   %67 = load %struct.huft** %tl, align 8, !dbg !624
CALL [call func]:   %68 = call i32 @huft_free(%struct.huft* %67), !dbg !624
LOAD [p=*q]:   %69 = load i32* %i, align 4, !dbg !626
STORE [*p=q]:   store i32 %69, i32* %1, !dbg !626
LOAD [p=*q]:   %71 = load %struct.huft** %tl, align 8, !dbg !627
LOAD [p=*q]:   %72 = load %struct.huft** %td, align 8, !dbg !627
LOAD [p=*q]:   %73 = load i32* %bl, align 4, !dbg !627
LOAD [p=*q]:   %74 = load i32* %bd, align 4, !dbg !627
CALL [call func]:   %75 = call i32 @inflate_codes(%struct.huft* %71, %struct.huft* %72, i32 %73, i32 %74), !dbg !627
LOAD [p=*q]:   %67 = load %struct.huft** %tl, align 8, !dbg !624
CALL [call func]:   %68 = call i32 @huft_free(%struct.huft* %67), !dbg !624
LOAD [p=*q]:   %69 = load i32* %i, align 4, !dbg !626
STORE [*p=q]:   store i32 %69, i32* %1, !dbg !626
LOAD [p=*q]:   %84 = load i32* %1, !dbg !632
Analyzing return instruction for inflate_fixed
	  %84 = load i32* %1, !dbg !632
LOAD [p=*q]:   %71 = load %struct.huft** %tl, align 8, !dbg !627
LOAD [p=*q]:   %72 = load %struct.huft** %td, align 8, !dbg !627
LOAD [p=*q]:   %73 = load i32* %bl, align 4, !dbg !627
LOAD [p=*q]:   %74 = load i32* %bd, align 4, !dbg !627
CALL [call func]:   %75 = call i32 @inflate_codes(%struct.huft* %71, %struct.huft* %72, i32 %73, i32 %74), !dbg !627
STORE [*p=q]:   store i32 1, i32* %1, !dbg !628
LOAD [p=*q]:   %79 = load %struct.huft** %tl, align 8, !dbg !629
CALL [call func]:   %80 = call i32 @huft_free(%struct.huft* %79), !dbg !629
LOAD [p=*q]:   %81 = load %struct.huft** %td, align 8, !dbg !630
CALL [call func]:   %82 = call i32 @huft_free(%struct.huft* %81), !dbg !630
STORE [*p=q]:   store i32 0, i32* %1, !dbg !631
STORE [*p=q]:   store i32 1, i32* %1, !dbg !628
LOAD [p=*q]:   %84 = load i32* %1, !dbg !632
Analyzing return instruction for inflate_fixed
	  %84 = load i32* %1, !dbg !632
LOAD [p=*q]:   %79 = load %struct.huft** %tl, align 8, !dbg !629
CALL [call func]:   %80 = call i32 @huft_free(%struct.huft* %79), !dbg !629
LOAD [p=*q]:   %81 = load %struct.huft** %td, align 8, !dbg !630
CALL [call func]:   %82 = call i32 @huft_free(%struct.huft* %81), !dbg !630
STORE [*p=q]:   store i32 0, i32* %1, !dbg !631
LOAD [p=*q]:   %84 = load i32* %1, !dbg !632
Analyzing return instruction for inflate_fixed
	  %84 = load i32* %1, !dbg !632
LOAD [p=*q]:   %84 = load i32* %1, !dbg !632
Analyzing return instruction for inflate_fixed
	  %84 = load i32* %1, !dbg !632
[Processing][Function][inflate_stored]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !574), !dbg !576
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %w}, metadata !577), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %b}, metadata !579), !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %k}, metadata !581), !dbg !582
LOAD [p=*q]:   %2 = load i64* @bb, align 8, !dbg !583
STORE [*p=q]:   store i64 %2, i64* %b, align 8, !dbg !583
LOAD [p=*q]:   %3 = load i32* @bk, align 4, !dbg !584
STORE [*p=q]:   store i32 %3, i32* %k, align 4, !dbg !584
LOAD [p=*q]:   %4 = load i32* @outcnt, align 4, !dbg !585
STORE [*p=q]:   store i32 %4, i32* %w, align 4, !dbg !585
LOAD [p=*q]:   %5 = load i32* %k, align 4, !dbg !586
STORE [*p=q]:   store i32 %6, i32* %n, align 4, !dbg !586
LOAD [p=*q]:   %7 = load i32* %n, align 4, !dbg !587
LOAD [p=*q]:   %8 = load i64* %b, align 8, !dbg !587
STORE [*p=q]:   store i64 %10, i64* %b, align 8, !dbg !587
LOAD [p=*q]:   %11 = load i32* %n, align 4, !dbg !587
LOAD [p=*q]:   %12 = load i32* %k, align 4, !dbg !587
STORE [*p=q]:   store i32 %13, i32* %k, align 4, !dbg !587
LOAD [p=*q]:   %15 = load i32* %k, align 4, !dbg !589
LOAD [p=*q]:   %15 = load i32* %k, align 4, !dbg !589
LOAD [p=*q]:   %18 = load i32* @inptr, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i32* @insize, align 4, !dbg !591
LOAD [p=*q]:   %43 = load i64* %b, align 8, !dbg !593
STORE [*p=q]:   store i32 %45, i32* %n, align 4, !dbg !593
LOAD [p=*q]:   %46 = load i64* %b, align 8, !dbg !594
STORE [*p=q]:   store i64 %47, i64* %b, align 8, !dbg !594
LOAD [p=*q]:   %48 = load i32* %k, align 4, !dbg !594
STORE [*p=q]:   store i32 %49, i32* %k, align 4, !dbg !594
LOAD [p=*q]:   %18 = load i32* @inptr, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i32* @insize, align 4, !dbg !591
LOAD [p=*q]:   %22 = load i32* @inptr, align 4, !dbg !591
STORE [*p=q]:   store i32 %23, i32* @inptr, align 4, !dbg !591
LOAD [p=*q]:   %26 = load i8* %25, align 1, !dbg !591
LOAD [p=*q]:   %29 = load i32* %w, align 4, !dbg !591
STORE [*p=q]:   store i32 %29, i32* @outcnt, align 4, !dbg !591
CALL [call func]:   %30 = call i32 @fill_inbuf(i32 0), !dbg !591
LOAD [p=*q]:   %22 = load i32* @inptr, align 4, !dbg !591
STORE [*p=q]:   store i32 %23, i32* @inptr, align 4, !dbg !591
LOAD [p=*q]:   %26 = load i8* %25, align 1, !dbg !591
LOAD [p=*q]:   %35 = load i32* %k, align 4, !dbg !591
LOAD [p=*q]:   %38 = load i64* %b, align 8, !dbg !591
STORE [*p=q]:   store i64 %39, i64* %b, align 8, !dbg !591
LOAD [p=*q]:   %40 = load i32* %k, align 4, !dbg !591
STORE [*p=q]:   store i32 %41, i32* %k, align 4, !dbg !591
LOAD [p=*q]:   %29 = load i32* %w, align 4, !dbg !591
STORE [*p=q]:   store i32 %29, i32* @outcnt, align 4, !dbg !591
CALL [call func]:   %30 = call i32 @fill_inbuf(i32 0), !dbg !591
LOAD [p=*q]:   %35 = load i32* %k, align 4, !dbg !591
LOAD [p=*q]:   %38 = load i64* %b, align 8, !dbg !591
STORE [*p=q]:   store i64 %39, i64* %b, align 8, !dbg !591
LOAD [p=*q]:   %40 = load i32* %k, align 4, !dbg !591
STORE [*p=q]:   store i32 %41, i32* %k, align 4, !dbg !591
LOAD [p=*q]:   %35 = load i32* %k, align 4, !dbg !591
LOAD [p=*q]:   %38 = load i64* %b, align 8, !dbg !591
STORE [*p=q]:   store i64 %39, i64* %b, align 8, !dbg !591
LOAD [p=*q]:   %40 = load i32* %k, align 4, !dbg !591
STORE [*p=q]:   store i32 %41, i32* %k, align 4, !dbg !591
LOAD [p=*q]:   %15 = load i32* %k, align 4, !dbg !589
LOAD [p=*q]:   %43 = load i64* %b, align 8, !dbg !593
STORE [*p=q]:   store i32 %45, i32* %n, align 4, !dbg !593
LOAD [p=*q]:   %46 = load i64* %b, align 8, !dbg !594
STORE [*p=q]:   store i64 %47, i64* %b, align 8, !dbg !594
LOAD [p=*q]:   %48 = load i32* %k, align 4, !dbg !594
STORE [*p=q]:   store i32 %49, i32* %k, align 4, !dbg !594
LOAD [p=*q]:   %51 = load i32* %k, align 4, !dbg !596
LOAD [p=*q]:   %51 = load i32* %k, align 4, !dbg !596
LOAD [p=*q]:   %54 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %55 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %79 = load i32* %n, align 4, !dbg !600
LOAD [p=*q]:   %80 = load i64* %b, align 8, !dbg !600
LOAD [p=*q]:   %54 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %55 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %58 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %59, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %62 = load i8* %61, align 1, !dbg !598
LOAD [p=*q]:   %65 = load i32* %w, align 4, !dbg !598
STORE [*p=q]:   store i32 %65, i32* @outcnt, align 4, !dbg !598
CALL [call func]:   %66 = call i32 @fill_inbuf(i32 0), !dbg !598
LOAD [p=*q]:   %58 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %59, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %62 = load i8* %61, align 1, !dbg !598
LOAD [p=*q]:   %71 = load i32* %k, align 4, !dbg !598
LOAD [p=*q]:   %74 = load i64* %b, align 8, !dbg !598
STORE [*p=q]:   store i64 %75, i64* %b, align 8, !dbg !598
LOAD [p=*q]:   %76 = load i32* %k, align 4, !dbg !598
STORE [*p=q]:   store i32 %77, i32* %k, align 4, !dbg !598
LOAD [p=*q]:   %65 = load i32* %w, align 4, !dbg !598
STORE [*p=q]:   store i32 %65, i32* @outcnt, align 4, !dbg !598
CALL [call func]:   %66 = call i32 @fill_inbuf(i32 0), !dbg !598
LOAD [p=*q]:   %71 = load i32* %k, align 4, !dbg !598
LOAD [p=*q]:   %74 = load i64* %b, align 8, !dbg !598
STORE [*p=q]:   store i64 %75, i64* %b, align 8, !dbg !598
LOAD [p=*q]:   %76 = load i32* %k, align 4, !dbg !598
STORE [*p=q]:   store i32 %77, i32* %k, align 4, !dbg !598
LOAD [p=*q]:   %71 = load i32* %k, align 4, !dbg !598
LOAD [p=*q]:   %74 = load i64* %b, align 8, !dbg !598
STORE [*p=q]:   store i64 %75, i64* %b, align 8, !dbg !598
LOAD [p=*q]:   %76 = load i32* %k, align 4, !dbg !598
STORE [*p=q]:   store i32 %77, i32* %k, align 4, !dbg !598
LOAD [p=*q]:   %51 = load i32* %k, align 4, !dbg !596
LOAD [p=*q]:   %79 = load i32* %n, align 4, !dbg !600
LOAD [p=*q]:   %80 = load i64* %b, align 8, !dbg !600
STORE [*p=q]:   store i32 1, i32* %1, !dbg !601
LOAD [p=*q]:   %87 = load i64* %b, align 8, !dbg !602
STORE [*p=q]:   store i64 %88, i64* %b, align 8, !dbg !602
LOAD [p=*q]:   %89 = load i32* %k, align 4, !dbg !602
STORE [*p=q]:   store i32 %90, i32* %k, align 4, !dbg !602
STORE [*p=q]:   store i32 1, i32* %1, !dbg !601
LOAD [p=*q]:   %145 = load i32* %1, !dbg !623
Analyzing return instruction for inflate_stored
	  %145 = load i32* %1, !dbg !623
LOAD [p=*q]:   %87 = load i64* %b, align 8, !dbg !602
STORE [*p=q]:   store i64 %88, i64* %b, align 8, !dbg !602
LOAD [p=*q]:   %89 = load i32* %k, align 4, !dbg !602
STORE [*p=q]:   store i32 %90, i32* %k, align 4, !dbg !602
LOAD [p=*q]:   %92 = load i32* %n, align 4, !dbg !604
STORE [*p=q]:   store i32 %93, i32* %n, align 4, !dbg !604
LOAD [p=*q]:   %92 = load i32* %n, align 4, !dbg !604
STORE [*p=q]:   store i32 %93, i32* %n, align 4, !dbg !604
LOAD [p=*q]:   %141 = load i32* %w, align 4, !dbg !619
STORE [*p=q]:   store i32 %141, i32* @outcnt, align 4, !dbg !619
LOAD [p=*q]:   %142 = load i64* %b, align 8, !dbg !620
STORE [*p=q]:   store i64 %142, i64* @bb, align 8, !dbg !620
LOAD [p=*q]:   %143 = load i32* %k, align 4, !dbg !621
STORE [*p=q]:   store i32 %143, i32* @bk, align 4, !dbg !621
STORE [*p=q]:   store i32 0, i32* %1, !dbg !622
LOAD [p=*q]:   %97 = load i32* %k, align 4, !dbg !605
LOAD [p=*q]:   %97 = load i32* %k, align 4, !dbg !605
LOAD [p=*q]:   %100 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %101 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %125 = load i64* %b, align 8, !dbg !610
LOAD [p=*q]:   %127 = load i32* %w, align 4, !dbg !610
STORE [*p=q]:   store i32 %128, i32* %w, align 4, !dbg !610
STORE [*p=q]:   store i8 %126, i8* %130, align 1, !dbg !610
LOAD [p=*q]:   %131 = load i32* %w, align 4, !dbg !611
LOAD [p=*q]:   %100 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %101 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %104 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %105, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %108 = load i8* %107, align 1, !dbg !608
LOAD [p=*q]:   %111 = load i32* %w, align 4, !dbg !608
STORE [*p=q]:   store i32 %111, i32* @outcnt, align 4, !dbg !608
CALL [call func]:   %112 = call i32 @fill_inbuf(i32 0), !dbg !608
LOAD [p=*q]:   %104 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %105, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %108 = load i8* %107, align 1, !dbg !608
LOAD [p=*q]:   %117 = load i32* %k, align 4, !dbg !608
LOAD [p=*q]:   %120 = load i64* %b, align 8, !dbg !608
STORE [*p=q]:   store i64 %121, i64* %b, align 8, !dbg !608
LOAD [p=*q]:   %122 = load i32* %k, align 4, !dbg !608
STORE [*p=q]:   store i32 %123, i32* %k, align 4, !dbg !608
LOAD [p=*q]:   %111 = load i32* %w, align 4, !dbg !608
STORE [*p=q]:   store i32 %111, i32* @outcnt, align 4, !dbg !608
CALL [call func]:   %112 = call i32 @fill_inbuf(i32 0), !dbg !608
LOAD [p=*q]:   %117 = load i32* %k, align 4, !dbg !608
LOAD [p=*q]:   %120 = load i64* %b, align 8, !dbg !608
STORE [*p=q]:   store i64 %121, i64* %b, align 8, !dbg !608
LOAD [p=*q]:   %122 = load i32* %k, align 4, !dbg !608
STORE [*p=q]:   store i32 %123, i32* %k, align 4, !dbg !608
LOAD [p=*q]:   %117 = load i32* %k, align 4, !dbg !608
LOAD [p=*q]:   %120 = load i64* %b, align 8, !dbg !608
STORE [*p=q]:   store i64 %121, i64* %b, align 8, !dbg !608
LOAD [p=*q]:   %122 = load i32* %k, align 4, !dbg !608
STORE [*p=q]:   store i32 %123, i32* %k, align 4, !dbg !608
LOAD [p=*q]:   %97 = load i32* %k, align 4, !dbg !605
LOAD [p=*q]:   %125 = load i64* %b, align 8, !dbg !610
LOAD [p=*q]:   %127 = load i32* %w, align 4, !dbg !610
STORE [*p=q]:   store i32 %128, i32* %w, align 4, !dbg !610
STORE [*p=q]:   store i8 %126, i8* %130, align 1, !dbg !610
LOAD [p=*q]:   %131 = load i32* %w, align 4, !dbg !611
LOAD [p=*q]:   %134 = load i32* %w, align 4, !dbg !612
STORE [*p=q]:   store i32 %134, i32* @outcnt, align 4, !dbg !612
CALL [call func]:   call void @flush_window(), !dbg !612
STORE [*p=q]:   store i32 0, i32* %w, align 4, !dbg !614
LOAD [p=*q]:   %136 = load i64* %b, align 8, !dbg !616
STORE [*p=q]:   store i64 %137, i64* %b, align 8, !dbg !616
LOAD [p=*q]:   %138 = load i32* %k, align 4, !dbg !616
STORE [*p=q]:   store i32 %139, i32* %k, align 4, !dbg !616
LOAD [p=*q]:   %134 = load i32* %w, align 4, !dbg !612
STORE [*p=q]:   store i32 %134, i32* @outcnt, align 4, !dbg !612
CALL [call func]:   call void @flush_window(), !dbg !612
STORE [*p=q]:   store i32 0, i32* %w, align 4, !dbg !614
LOAD [p=*q]:   %136 = load i64* %b, align 8, !dbg !616
STORE [*p=q]:   store i64 %137, i64* %b, align 8, !dbg !616
LOAD [p=*q]:   %138 = load i32* %k, align 4, !dbg !616
STORE [*p=q]:   store i32 %139, i32* %k, align 4, !dbg !616
LOAD [p=*q]:   %136 = load i64* %b, align 8, !dbg !616
STORE [*p=q]:   store i64 %137, i64* %b, align 8, !dbg !616
LOAD [p=*q]:   %138 = load i32* %k, align 4, !dbg !616
STORE [*p=q]:   store i32 %139, i32* %k, align 4, !dbg !616
LOAD [p=*q]:   %92 = load i32* %n, align 4, !dbg !604
STORE [*p=q]:   store i32 %93, i32* %n, align 4, !dbg !604
LOAD [p=*q]:   %141 = load i32* %w, align 4, !dbg !619
STORE [*p=q]:   store i32 %141, i32* @outcnt, align 4, !dbg !619
LOAD [p=*q]:   %142 = load i64* %b, align 8, !dbg !620
STORE [*p=q]:   store i64 %142, i64* @bb, align 8, !dbg !620
LOAD [p=*q]:   %143 = load i32* %k, align 4, !dbg !621
STORE [*p=q]:   store i32 %143, i32* @bk, align 4, !dbg !621
STORE [*p=q]:   store i32 0, i32* %1, !dbg !622
LOAD [p=*q]:   %145 = load i32* %1, !dbg !623
Analyzing return instruction for inflate_stored
	  %145 = load i32* %1, !dbg !623
LOAD [p=*q]:   %145 = load i32* %1, !dbg !623
Analyzing return instruction for inflate_stored
	  %145 = load i32* %1, !dbg !623
[Processing][Function][inflate_dynamic]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !574), !dbg !576
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %j}, metadata !577), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %l}, metadata !579), !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %m}, metadata !581), !dbg !582
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !583), !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %w}, metadata !585), !dbg !586
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.huft** %tl}, metadata !587), !dbg !599
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.huft** %td}, metadata !600), !dbg !601
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %bl}, metadata !602), !dbg !603
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %bd}, metadata !604), !dbg !605
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nb}, metadata !606), !dbg !607
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nl}, metadata !608), !dbg !609
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nd}, metadata !610), !dbg !611
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[316 x i32]* %ll}, metadata !612), !dbg !616
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %b}, metadata !617), !dbg !618
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %k}, metadata !619), !dbg !620
LOAD [p=*q]:   %2 = load i64* @bb, align 8, !dbg !621
STORE [*p=q]:   store i64 %2, i64* %b, align 8, !dbg !621
LOAD [p=*q]:   %3 = load i32* @bk, align 4, !dbg !622
STORE [*p=q]:   store i32 %3, i32* %k, align 4, !dbg !622
LOAD [p=*q]:   %4 = load i32* @outcnt, align 4, !dbg !623
STORE [*p=q]:   store i32 %4, i32* %w, align 4, !dbg !623
LOAD [p=*q]:   %6 = load i32* %k, align 4, !dbg !624
LOAD [p=*q]:   %6 = load i32* %k, align 4, !dbg !624
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !626
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !626
LOAD [p=*q]:   %34 = load i64* %b, align 8, !dbg !628
STORE [*p=q]:   store i32 %37, i32* %nl, align 4, !dbg !628
LOAD [p=*q]:   %38 = load i64* %b, align 8, !dbg !629
STORE [*p=q]:   store i64 %39, i64* %b, align 8, !dbg !629
LOAD [p=*q]:   %40 = load i32* %k, align 4, !dbg !629
STORE [*p=q]:   store i32 %41, i32* %k, align 4, !dbg !629
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !626
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !626
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !626
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !626
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !626
LOAD [p=*q]:   %20 = load i32* %w, align 4, !dbg !626
STORE [*p=q]:   store i32 %20, i32* @outcnt, align 4, !dbg !626
CALL [call func]:   %21 = call i32 @fill_inbuf(i32 0), !dbg !626
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !626
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !626
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !626
LOAD [p=*q]:   %26 = load i32* %k, align 4, !dbg !626
LOAD [p=*q]:   %29 = load i64* %b, align 8, !dbg !626
STORE [*p=q]:   store i64 %30, i64* %b, align 8, !dbg !626
LOAD [p=*q]:   %31 = load i32* %k, align 4, !dbg !626
STORE [*p=q]:   store i32 %32, i32* %k, align 4, !dbg !626
LOAD [p=*q]:   %20 = load i32* %w, align 4, !dbg !626
STORE [*p=q]:   store i32 %20, i32* @outcnt, align 4, !dbg !626
CALL [call func]:   %21 = call i32 @fill_inbuf(i32 0), !dbg !626
LOAD [p=*q]:   %26 = load i32* %k, align 4, !dbg !626
LOAD [p=*q]:   %29 = load i64* %b, align 8, !dbg !626
STORE [*p=q]:   store i64 %30, i64* %b, align 8, !dbg !626
LOAD [p=*q]:   %31 = load i32* %k, align 4, !dbg !626
STORE [*p=q]:   store i32 %32, i32* %k, align 4, !dbg !626
LOAD [p=*q]:   %26 = load i32* %k, align 4, !dbg !626
LOAD [p=*q]:   %29 = load i64* %b, align 8, !dbg !626
STORE [*p=q]:   store i64 %30, i64* %b, align 8, !dbg !626
LOAD [p=*q]:   %31 = load i32* %k, align 4, !dbg !626
STORE [*p=q]:   store i32 %32, i32* %k, align 4, !dbg !626
LOAD [p=*q]:   %6 = load i32* %k, align 4, !dbg !624
LOAD [p=*q]:   %34 = load i64* %b, align 8, !dbg !628
STORE [*p=q]:   store i32 %37, i32* %nl, align 4, !dbg !628
LOAD [p=*q]:   %38 = load i64* %b, align 8, !dbg !629
STORE [*p=q]:   store i64 %39, i64* %b, align 8, !dbg !629
LOAD [p=*q]:   %40 = load i32* %k, align 4, !dbg !629
STORE [*p=q]:   store i32 %41, i32* %k, align 4, !dbg !629
LOAD [p=*q]:   %43 = load i32* %k, align 4, !dbg !631
LOAD [p=*q]:   %43 = load i32* %k, align 4, !dbg !631
LOAD [p=*q]:   %46 = load i32* @inptr, align 4, !dbg !633
LOAD [p=*q]:   %47 = load i32* @insize, align 4, !dbg !633
LOAD [p=*q]:   %71 = load i64* %b, align 8, !dbg !635
STORE [*p=q]:   store i32 %74, i32* %nd, align 4, !dbg !635
LOAD [p=*q]:   %75 = load i64* %b, align 8, !dbg !636
STORE [*p=q]:   store i64 %76, i64* %b, align 8, !dbg !636
LOAD [p=*q]:   %77 = load i32* %k, align 4, !dbg !636
STORE [*p=q]:   store i32 %78, i32* %k, align 4, !dbg !636
LOAD [p=*q]:   %46 = load i32* @inptr, align 4, !dbg !633
LOAD [p=*q]:   %47 = load i32* @insize, align 4, !dbg !633
LOAD [p=*q]:   %50 = load i32* @inptr, align 4, !dbg !633
STORE [*p=q]:   store i32 %51, i32* @inptr, align 4, !dbg !633
LOAD [p=*q]:   %54 = load i8* %53, align 1, !dbg !633
LOAD [p=*q]:   %57 = load i32* %w, align 4, !dbg !633
STORE [*p=q]:   store i32 %57, i32* @outcnt, align 4, !dbg !633
CALL [call func]:   %58 = call i32 @fill_inbuf(i32 0), !dbg !633
LOAD [p=*q]:   %50 = load i32* @inptr, align 4, !dbg !633
STORE [*p=q]:   store i32 %51, i32* @inptr, align 4, !dbg !633
LOAD [p=*q]:   %54 = load i8* %53, align 1, !dbg !633
LOAD [p=*q]:   %63 = load i32* %k, align 4, !dbg !633
LOAD [p=*q]:   %66 = load i64* %b, align 8, !dbg !633
STORE [*p=q]:   store i64 %67, i64* %b, align 8, !dbg !633
LOAD [p=*q]:   %68 = load i32* %k, align 4, !dbg !633
STORE [*p=q]:   store i32 %69, i32* %k, align 4, !dbg !633
LOAD [p=*q]:   %57 = load i32* %w, align 4, !dbg !633
STORE [*p=q]:   store i32 %57, i32* @outcnt, align 4, !dbg !633
CALL [call func]:   %58 = call i32 @fill_inbuf(i32 0), !dbg !633
LOAD [p=*q]:   %63 = load i32* %k, align 4, !dbg !633
LOAD [p=*q]:   %66 = load i64* %b, align 8, !dbg !633
STORE [*p=q]:   store i64 %67, i64* %b, align 8, !dbg !633
LOAD [p=*q]:   %68 = load i32* %k, align 4, !dbg !633
STORE [*p=q]:   store i32 %69, i32* %k, align 4, !dbg !633
LOAD [p=*q]:   %63 = load i32* %k, align 4, !dbg !633
LOAD [p=*q]:   %66 = load i64* %b, align 8, !dbg !633
STORE [*p=q]:   store i64 %67, i64* %b, align 8, !dbg !633
LOAD [p=*q]:   %68 = load i32* %k, align 4, !dbg !633
STORE [*p=q]:   store i32 %69, i32* %k, align 4, !dbg !633
LOAD [p=*q]:   %43 = load i32* %k, align 4, !dbg !631
LOAD [p=*q]:   %71 = load i64* %b, align 8, !dbg !635
STORE [*p=q]:   store i32 %74, i32* %nd, align 4, !dbg !635
LOAD [p=*q]:   %75 = load i64* %b, align 8, !dbg !636
STORE [*p=q]:   store i64 %76, i64* %b, align 8, !dbg !636
LOAD [p=*q]:   %77 = load i32* %k, align 4, !dbg !636
STORE [*p=q]:   store i32 %78, i32* %k, align 4, !dbg !636
LOAD [p=*q]:   %80 = load i32* %k, align 4, !dbg !638
LOAD [p=*q]:   %80 = load i32* %k, align 4, !dbg !638
LOAD [p=*q]:   %83 = load i32* @inptr, align 4, !dbg !640
LOAD [p=*q]:   %84 = load i32* @insize, align 4, !dbg !640
LOAD [p=*q]:   %108 = load i64* %b, align 8, !dbg !642
STORE [*p=q]:   store i32 %111, i32* %nb, align 4, !dbg !642
LOAD [p=*q]:   %112 = load i64* %b, align 8, !dbg !643
STORE [*p=q]:   store i64 %113, i64* %b, align 8, !dbg !643
LOAD [p=*q]:   %114 = load i32* %k, align 4, !dbg !643
STORE [*p=q]:   store i32 %115, i32* %k, align 4, !dbg !643
LOAD [p=*q]:   %116 = load i32* %nl, align 4, !dbg !645
LOAD [p=*q]:   %83 = load i32* @inptr, align 4, !dbg !640
LOAD [p=*q]:   %84 = load i32* @insize, align 4, !dbg !640
LOAD [p=*q]:   %87 = load i32* @inptr, align 4, !dbg !640
STORE [*p=q]:   store i32 %88, i32* @inptr, align 4, !dbg !640
LOAD [p=*q]:   %91 = load i8* %90, align 1, !dbg !640
LOAD [p=*q]:   %94 = load i32* %w, align 4, !dbg !640
STORE [*p=q]:   store i32 %94, i32* @outcnt, align 4, !dbg !640
CALL [call func]:   %95 = call i32 @fill_inbuf(i32 0), !dbg !640
LOAD [p=*q]:   %87 = load i32* @inptr, align 4, !dbg !640
STORE [*p=q]:   store i32 %88, i32* @inptr, align 4, !dbg !640
LOAD [p=*q]:   %91 = load i8* %90, align 1, !dbg !640
LOAD [p=*q]:   %100 = load i32* %k, align 4, !dbg !640
LOAD [p=*q]:   %103 = load i64* %b, align 8, !dbg !640
STORE [*p=q]:   store i64 %104, i64* %b, align 8, !dbg !640
LOAD [p=*q]:   %105 = load i32* %k, align 4, !dbg !640
STORE [*p=q]:   store i32 %106, i32* %k, align 4, !dbg !640
LOAD [p=*q]:   %94 = load i32* %w, align 4, !dbg !640
STORE [*p=q]:   store i32 %94, i32* @outcnt, align 4, !dbg !640
CALL [call func]:   %95 = call i32 @fill_inbuf(i32 0), !dbg !640
LOAD [p=*q]:   %100 = load i32* %k, align 4, !dbg !640
LOAD [p=*q]:   %103 = load i64* %b, align 8, !dbg !640
STORE [*p=q]:   store i64 %104, i64* %b, align 8, !dbg !640
LOAD [p=*q]:   %105 = load i32* %k, align 4, !dbg !640
STORE [*p=q]:   store i32 %106, i32* %k, align 4, !dbg !640
LOAD [p=*q]:   %100 = load i32* %k, align 4, !dbg !640
LOAD [p=*q]:   %103 = load i64* %b, align 8, !dbg !640
STORE [*p=q]:   store i64 %104, i64* %b, align 8, !dbg !640
LOAD [p=*q]:   %105 = load i32* %k, align 4, !dbg !640
STORE [*p=q]:   store i32 %106, i32* %k, align 4, !dbg !640
LOAD [p=*q]:   %80 = load i32* %k, align 4, !dbg !638
LOAD [p=*q]:   %108 = load i64* %b, align 8, !dbg !642
STORE [*p=q]:   store i32 %111, i32* %nb, align 4, !dbg !642
LOAD [p=*q]:   %112 = load i64* %b, align 8, !dbg !643
STORE [*p=q]:   store i64 %113, i64* %b, align 8, !dbg !643
LOAD [p=*q]:   %114 = load i32* %k, align 4, !dbg !643
STORE [*p=q]:   store i32 %115, i32* %k, align 4, !dbg !643
LOAD [p=*q]:   %116 = load i32* %nl, align 4, !dbg !645
STORE [*p=q]:   store i32 1, i32* %1, !dbg !646
LOAD [p=*q]:   %119 = load i32* %nd, align 4, !dbg !645
LOAD [p=*q]:   %119 = load i32* %nd, align 4, !dbg !645
STORE [*p=q]:   store i32 1, i32* %1, !dbg !646
STORE [*p=q]:   store i32 0, i32* %j, align 4, !dbg !647
STORE [*p=q]:   store i32 1, i32* %1, !dbg !646
LOAD [p=*q]:   %503 = load i32* %1, !dbg !756
Analyzing return instruction for inflate_dynamic
	  %503 = load i32* %1, !dbg !756
STORE [*p=q]:   store i32 0, i32* %j, align 4, !dbg !647
LOAD [p=*q]:   %124 = load i32* %j, align 4, !dbg !647
LOAD [p=*q]:   %125 = load i32* %nb, align 4, !dbg !647
LOAD [p=*q]:   %124 = load i32* %j, align 4, !dbg !647
LOAD [p=*q]:   %125 = load i32* %nb, align 4, !dbg !647
LOAD [p=*q]:   %129 = load i32* %k, align 4, !dbg !649
LOAD [p=*q]:   %129 = load i32* %k, align 4, !dbg !649
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !652
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !652
LOAD [p=*q]:   %157 = load i64* %b, align 8, !dbg !654
LOAD [p=*q]:   %160 = load i32* %j, align 4, !dbg !654
LOAD [p=*q]:   %163 = load i32* %162, align 4, !dbg !654
STORE [*p=q]:   store i32 %159, i32* %165, align 4, !dbg !654
LOAD [p=*q]:   %166 = load i64* %b, align 8, !dbg !655
STORE [*p=q]:   store i64 %167, i64* %b, align 8, !dbg !655
LOAD [p=*q]:   %168 = load i32* %k, align 4, !dbg !655
STORE [*p=q]:   store i32 %169, i32* %k, align 4, !dbg !655
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !652
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !652
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !652
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !652
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !652
LOAD [p=*q]:   %143 = load i32* %w, align 4, !dbg !652
STORE [*p=q]:   store i32 %143, i32* @outcnt, align 4, !dbg !652
CALL [call func]:   %144 = call i32 @fill_inbuf(i32 0), !dbg !652
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !652
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !652
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !652
LOAD [p=*q]:   %149 = load i32* %k, align 4, !dbg !652
LOAD [p=*q]:   %152 = load i64* %b, align 8, !dbg !652
STORE [*p=q]:   store i64 %153, i64* %b, align 8, !dbg !652
LOAD [p=*q]:   %154 = load i32* %k, align 4, !dbg !652
STORE [*p=q]:   store i32 %155, i32* %k, align 4, !dbg !652
LOAD [p=*q]:   %143 = load i32* %w, align 4, !dbg !652
STORE [*p=q]:   store i32 %143, i32* @outcnt, align 4, !dbg !652
CALL [call func]:   %144 = call i32 @fill_inbuf(i32 0), !dbg !652
LOAD [p=*q]:   %149 = load i32* %k, align 4, !dbg !652
LOAD [p=*q]:   %152 = load i64* %b, align 8, !dbg !652
STORE [*p=q]:   store i64 %153, i64* %b, align 8, !dbg !652
LOAD [p=*q]:   %154 = load i32* %k, align 4, !dbg !652
STORE [*p=q]:   store i32 %155, i32* %k, align 4, !dbg !652
LOAD [p=*q]:   %149 = load i32* %k, align 4, !dbg !652
LOAD [p=*q]:   %152 = load i64* %b, align 8, !dbg !652
STORE [*p=q]:   store i64 %153, i64* %b, align 8, !dbg !652
LOAD [p=*q]:   %154 = load i32* %k, align 4, !dbg !652
STORE [*p=q]:   store i32 %155, i32* %k, align 4, !dbg !652
LOAD [p=*q]:   %129 = load i32* %k, align 4, !dbg !649
LOAD [p=*q]:   %157 = load i64* %b, align 8, !dbg !654
LOAD [p=*q]:   %160 = load i32* %j, align 4, !dbg !654
LOAD [p=*q]:   %163 = load i32* %162, align 4, !dbg !654
STORE [*p=q]:   store i32 %159, i32* %165, align 4, !dbg !654
LOAD [p=*q]:   %166 = load i64* %b, align 8, !dbg !655
STORE [*p=q]:   store i64 %167, i64* %b, align 8, !dbg !655
LOAD [p=*q]:   %168 = load i32* %k, align 4, !dbg !655
STORE [*p=q]:   store i32 %169, i32* %k, align 4, !dbg !655
LOAD [p=*q]:   %171 = load i32* %j, align 4, !dbg !658
STORE [*p=q]:   store i32 %172, i32* %j, align 4, !dbg !658
LOAD [p=*q]:   %171 = load i32* %j, align 4, !dbg !658
STORE [*p=q]:   store i32 %172, i32* %j, align 4, !dbg !658
LOAD [p=*q]:   %124 = load i32* %j, align 4, !dbg !647
LOAD [p=*q]:   %125 = load i32* %nb, align 4, !dbg !647
LOAD [p=*q]:   %175 = load i32* %j, align 4, !dbg !659
LOAD [p=*q]:   %175 = load i32* %j, align 4, !dbg !659
LOAD [p=*q]:   %178 = load i32* %j, align 4, !dbg !661
LOAD [p=*q]:   %181 = load i32* %180, align 4, !dbg !661
STORE [*p=q]:   store i32 0, i32* %183, align 4, !dbg !661
STORE [*p=q]:   store i32 7, i32* %bl, align 4, !dbg !663
CALL [call func]:   %189 = call i32 @huft_build(i32* %188, i32 19, i32 19, i16* null, i16* null, %struct.huft** %tl, i32* %bl), !dbg !664
STORE [*p=q]:   store i32 %189, i32* %i, align 4, !dbg !664
LOAD [p=*q]:   %178 = load i32* %j, align 4, !dbg !661
LOAD [p=*q]:   %181 = load i32* %180, align 4, !dbg !661
STORE [*p=q]:   store i32 0, i32* %183, align 4, !dbg !661
LOAD [p=*q]:   %185 = load i32* %j, align 4, !dbg !662
STORE [*p=q]:   store i32 %186, i32* %j, align 4, !dbg !662
LOAD [p=*q]:   %185 = load i32* %j, align 4, !dbg !662
STORE [*p=q]:   store i32 %186, i32* %j, align 4, !dbg !662
LOAD [p=*q]:   %175 = load i32* %j, align 4, !dbg !659
STORE [*p=q]:   store i32 7, i32* %bl, align 4, !dbg !663
CALL [call func]:   %189 = call i32 @huft_build(i32* %188, i32 19, i32 19, i16* null, i16* null, %struct.huft** %tl, i32* %bl), !dbg !664
STORE [*p=q]:   store i32 %189, i32* %i, align 4, !dbg !664
LOAD [p=*q]:   %192 = load i32* %i, align 4, !dbg !665
LOAD [p=*q]:   %200 = load %struct.huft** %tl, align 8, !dbg !669
LOAD [p=*q]:   %192 = load i32* %i, align 4, !dbg !665
LOAD [p=*q]:   %195 = load %struct.huft** %tl, align 8, !dbg !667
CALL [call func]:   %196 = call i32 @huft_free(%struct.huft* %195), !dbg !667
LOAD [p=*q]:   %198 = load i32* %i, align 4, !dbg !668
STORE [*p=q]:   store i32 %198, i32* %1, !dbg !668
LOAD [p=*q]:   %195 = load %struct.huft** %tl, align 8, !dbg !667
CALL [call func]:   %196 = call i32 @huft_free(%struct.huft* %195), !dbg !667
LOAD [p=*q]:   %198 = load i32* %i, align 4, !dbg !668
STORE [*p=q]:   store i32 %198, i32* %1, !dbg !668
LOAD [p=*q]:   %198 = load i32* %i, align 4, !dbg !668
STORE [*p=q]:   store i32 %198, i32* %1, !dbg !668
LOAD [p=*q]:   %503 = load i32* %1, !dbg !756
Analyzing return instruction for inflate_dynamic
	  %503 = load i32* %1, !dbg !756
LOAD [p=*q]:   %200 = load %struct.huft** %tl, align 8, !dbg !669
STORE [*p=q]:   store i32 2, i32* %1, !dbg !670
LOAD [p=*q]:   %204 = load i32* %nl, align 4, !dbg !671
LOAD [p=*q]:   %205 = load i32* %nd, align 4, !dbg !671
STORE [*p=q]:   store i32 %206, i32* %n, align 4, !dbg !671
LOAD [p=*q]:   %207 = load i32* %bl, align 4, !dbg !672
LOAD [p=*q]:   %210 = load i16* %209, align 2, !dbg !672
STORE [*p=q]:   store i32 %211, i32* %m, align 4, !dbg !672
STORE [*p=q]:   store i32 0, i32* %l, align 4, !dbg !673
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !673
STORE [*p=q]:   store i32 2, i32* %1, !dbg !670
LOAD [p=*q]:   %503 = load i32* %1, !dbg !756
Analyzing return instruction for inflate_dynamic
	  %503 = load i32* %1, !dbg !756
LOAD [p=*q]:   %204 = load i32* %nl, align 4, !dbg !671
LOAD [p=*q]:   %205 = load i32* %nd, align 4, !dbg !671
STORE [*p=q]:   store i32 %206, i32* %n, align 4, !dbg !671
LOAD [p=*q]:   %207 = load i32* %bl, align 4, !dbg !672
LOAD [p=*q]:   %210 = load i16* %209, align 2, !dbg !672
STORE [*p=q]:   store i32 %211, i32* %m, align 4, !dbg !672
STORE [*p=q]:   store i32 0, i32* %l, align 4, !dbg !673
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !673
LOAD [p=*q]:   %213 = load i32* %i, align 4, !dbg !674
LOAD [p=*q]:   %214 = load i32* %n, align 4, !dbg !674
LOAD [p=*q]:   %213 = load i32* %i, align 4, !dbg !674
LOAD [p=*q]:   %214 = load i32* %n, align 4, !dbg !674
LOAD [p=*q]:   %453 = load %struct.huft** %tl, align 8, !dbg !729
CALL [call func]:   %454 = call i32 @huft_free(%struct.huft* %453), !dbg !729
LOAD [p=*q]:   %455 = load i64* %b, align 8, !dbg !730
STORE [*p=q]:   store i64 %455, i64* @bb, align 8, !dbg !730
LOAD [p=*q]:   %456 = load i32* %k, align 4, !dbg !731
STORE [*p=q]:   store i32 %456, i32* @bk, align 4, !dbg !731
LOAD [p=*q]:   %457 = load i32* @lbits, align 4, !dbg !732
STORE [*p=q]:   store i32 %457, i32* %bl, align 4, !dbg !732
LOAD [p=*q]:   %459 = load i32* %nl, align 4, !dbg !733
CALL [call func]:   %460 = call i32 @huft_build(i32* %458, i32 %459, i32 257, i16* getelementptr inbounds ([31 x i16]* @cplens, i32 0, i32 0), i16* getelementptr inbounds ([31 x i16]* @cplext, i32 0, i32 0), %struct.huft** %tl, i32* %bl), !dbg !733
STORE [*p=q]:   store i32 %460, i32* %i, align 4, !dbg !733
LOAD [p=*q]:   %218 = load i32* %k, align 4, !dbg !675
LOAD [p=*q]:   %219 = load i32* %bl, align 4, !dbg !675
LOAD [p=*q]:   %218 = load i32* %k, align 4, !dbg !675
LOAD [p=*q]:   %219 = load i32* %bl, align 4, !dbg !675
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %247 = load %struct.huft** %tl, align 8, !dbg !680
LOAD [p=*q]:   %248 = load i64* %b, align 8, !dbg !680
LOAD [p=*q]:   %250 = load i32* %m, align 4, !dbg !680
STORE [*p=q]:   store %struct.huft* %253, %struct.huft** %td, align 8, !dbg !680
LOAD [p=*q]:   %255 = load i8* %254, align 1, !dbg !680
STORE [*p=q]:   store i32 %256, i32* %j, align 4, !dbg !680
LOAD [p=*q]:   %257 = load i32* %j, align 4, !dbg !681
LOAD [p=*q]:   %258 = load i64* %b, align 8, !dbg !681
STORE [*p=q]:   store i64 %260, i64* %b, align 8, !dbg !681
LOAD [p=*q]:   %261 = load i32* %j, align 4, !dbg !681
LOAD [p=*q]:   %262 = load i32* %k, align 4, !dbg !681
STORE [*p=q]:   store i32 %263, i32* %k, align 4, !dbg !681
LOAD [p=*q]:   %264 = load %struct.huft** %td, align 8, !dbg !683
LOAD [p=*q]:   %267 = load i16* %266, align 2, !dbg !683
STORE [*p=q]:   store i32 %268, i32* %j, align 4, !dbg !683
LOAD [p=*q]:   %269 = load i32* %j, align 4, !dbg !684
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !678
LOAD [p=*q]:   %233 = load i32* %w, align 4, !dbg !678
STORE [*p=q]:   store i32 %233, i32* @outcnt, align 4, !dbg !678
CALL [call func]:   %234 = call i32 @fill_inbuf(i32 0), !dbg !678
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !678
LOAD [p=*q]:   %239 = load i32* %k, align 4, !dbg !678
LOAD [p=*q]:   %242 = load i64* %b, align 8, !dbg !678
STORE [*p=q]:   store i64 %243, i64* %b, align 8, !dbg !678
LOAD [p=*q]:   %244 = load i32* %k, align 4, !dbg !678
STORE [*p=q]:   store i32 %245, i32* %k, align 4, !dbg !678
LOAD [p=*q]:   %233 = load i32* %w, align 4, !dbg !678
STORE [*p=q]:   store i32 %233, i32* @outcnt, align 4, !dbg !678
CALL [call func]:   %234 = call i32 @fill_inbuf(i32 0), !dbg !678
LOAD [p=*q]:   %239 = load i32* %k, align 4, !dbg !678
LOAD [p=*q]:   %242 = load i64* %b, align 8, !dbg !678
STORE [*p=q]:   store i64 %243, i64* %b, align 8, !dbg !678
LOAD [p=*q]:   %244 = load i32* %k, align 4, !dbg !678
STORE [*p=q]:   store i32 %245, i32* %k, align 4, !dbg !678
LOAD [p=*q]:   %239 = load i32* %k, align 4, !dbg !678
LOAD [p=*q]:   %242 = load i64* %b, align 8, !dbg !678
STORE [*p=q]:   store i64 %243, i64* %b, align 8, !dbg !678
LOAD [p=*q]:   %244 = load i32* %k, align 4, !dbg !678
STORE [*p=q]:   store i32 %245, i32* %k, align 4, !dbg !678
LOAD [p=*q]:   %218 = load i32* %k, align 4, !dbg !675
LOAD [p=*q]:   %219 = load i32* %bl, align 4, !dbg !675
LOAD [p=*q]:   %247 = load %struct.huft** %tl, align 8, !dbg !680
LOAD [p=*q]:   %248 = load i64* %b, align 8, !dbg !680
LOAD [p=*q]:   %250 = load i32* %m, align 4, !dbg !680
STORE [*p=q]:   store %struct.huft* %253, %struct.huft** %td, align 8, !dbg !680
LOAD [p=*q]:   %255 = load i8* %254, align 1, !dbg !680
STORE [*p=q]:   store i32 %256, i32* %j, align 4, !dbg !680
LOAD [p=*q]:   %257 = load i32* %j, align 4, !dbg !681
LOAD [p=*q]:   %258 = load i64* %b, align 8, !dbg !681
STORE [*p=q]:   store i64 %260, i64* %b, align 8, !dbg !681
LOAD [p=*q]:   %261 = load i32* %j, align 4, !dbg !681
LOAD [p=*q]:   %262 = load i32* %k, align 4, !dbg !681
STORE [*p=q]:   store i32 %263, i32* %k, align 4, !dbg !681
LOAD [p=*q]:   %264 = load %struct.huft** %td, align 8, !dbg !683
LOAD [p=*q]:   %267 = load i16* %266, align 2, !dbg !683
STORE [*p=q]:   store i32 %268, i32* %j, align 4, !dbg !683
LOAD [p=*q]:   %269 = load i32* %j, align 4, !dbg !684
LOAD [p=*q]:   %272 = load i32* %j, align 4, !dbg !685
STORE [*p=q]:   store i32 %272, i32* %l, align 4, !dbg !685
LOAD [p=*q]:   %273 = load i32* %i, align 4, !dbg !685
STORE [*p=q]:   store i32 %274, i32* %i, align 4, !dbg !685
STORE [*p=q]:   store i32 %272, i32* %276, align 4, !dbg !685
LOAD [p=*q]:   %278 = load i32* %j, align 4, !dbg !686
LOAD [p=*q]:   %272 = load i32* %j, align 4, !dbg !685
STORE [*p=q]:   store i32 %272, i32* %l, align 4, !dbg !685
LOAD [p=*q]:   %273 = load i32* %i, align 4, !dbg !685
STORE [*p=q]:   store i32 %274, i32* %i, align 4, !dbg !685
STORE [*p=q]:   store i32 %272, i32* %276, align 4, !dbg !685
LOAD [p=*q]:   %278 = load i32* %j, align 4, !dbg !686
LOAD [p=*q]:   %337 = load i32* %j, align 4, !dbg !700
LOAD [p=*q]:   %282 = load i32* %k, align 4, !dbg !687
LOAD [p=*q]:   %282 = load i32* %k, align 4, !dbg !687
LOAD [p=*q]:   %285 = load i32* @inptr, align 4, !dbg !690
LOAD [p=*q]:   %286 = load i32* @insize, align 4, !dbg !690
LOAD [p=*q]:   %310 = load i64* %b, align 8, !dbg !692
STORE [*p=q]:   store i32 %313, i32* %j, align 4, !dbg !692
LOAD [p=*q]:   %314 = load i64* %b, align 8, !dbg !693
STORE [*p=q]:   store i64 %315, i64* %b, align 8, !dbg !693
LOAD [p=*q]:   %316 = load i32* %k, align 4, !dbg !693
STORE [*p=q]:   store i32 %317, i32* %k, align 4, !dbg !693
LOAD [p=*q]:   %318 = load i32* %i, align 4, !dbg !695
LOAD [p=*q]:   %319 = load i32* %j, align 4, !dbg !695
LOAD [p=*q]:   %321 = load i32* %n, align 4, !dbg !695
LOAD [p=*q]:   %285 = load i32* @inptr, align 4, !dbg !690
LOAD [p=*q]:   %286 = load i32* @insize, align 4, !dbg !690
LOAD [p=*q]:   %289 = load i32* @inptr, align 4, !dbg !690
STORE [*p=q]:   store i32 %290, i32* @inptr, align 4, !dbg !690
LOAD [p=*q]:   %293 = load i8* %292, align 1, !dbg !690
LOAD [p=*q]:   %296 = load i32* %w, align 4, !dbg !690
STORE [*p=q]:   store i32 %296, i32* @outcnt, align 4, !dbg !690
CALL [call func]:   %297 = call i32 @fill_inbuf(i32 0), !dbg !690
LOAD [p=*q]:   %289 = load i32* @inptr, align 4, !dbg !690
STORE [*p=q]:   store i32 %290, i32* @inptr, align 4, !dbg !690
LOAD [p=*q]:   %293 = load i8* %292, align 1, !dbg !690
LOAD [p=*q]:   %302 = load i32* %k, align 4, !dbg !690
LOAD [p=*q]:   %305 = load i64* %b, align 8, !dbg !690
STORE [*p=q]:   store i64 %306, i64* %b, align 8, !dbg !690
LOAD [p=*q]:   %307 = load i32* %k, align 4, !dbg !690
STORE [*p=q]:   store i32 %308, i32* %k, align 4, !dbg !690
LOAD [p=*q]:   %296 = load i32* %w, align 4, !dbg !690
STORE [*p=q]:   store i32 %296, i32* @outcnt, align 4, !dbg !690
CALL [call func]:   %297 = call i32 @fill_inbuf(i32 0), !dbg !690
LOAD [p=*q]:   %302 = load i32* %k, align 4, !dbg !690
LOAD [p=*q]:   %305 = load i64* %b, align 8, !dbg !690
STORE [*p=q]:   store i64 %306, i64* %b, align 8, !dbg !690
LOAD [p=*q]:   %307 = load i32* %k, align 4, !dbg !690
STORE [*p=q]:   store i32 %308, i32* %k, align 4, !dbg !690
LOAD [p=*q]:   %302 = load i32* %k, align 4, !dbg !690
LOAD [p=*q]:   %305 = load i64* %b, align 8, !dbg !690
STORE [*p=q]:   store i64 %306, i64* %b, align 8, !dbg !690
LOAD [p=*q]:   %307 = load i32* %k, align 4, !dbg !690
STORE [*p=q]:   store i32 %308, i32* %k, align 4, !dbg !690
LOAD [p=*q]:   %282 = load i32* %k, align 4, !dbg !687
LOAD [p=*q]:   %310 = load i64* %b, align 8, !dbg !692
STORE [*p=q]:   store i32 %313, i32* %j, align 4, !dbg !692
LOAD [p=*q]:   %314 = load i64* %b, align 8, !dbg !693
STORE [*p=q]:   store i64 %315, i64* %b, align 8, !dbg !693
LOAD [p=*q]:   %316 = load i32* %k, align 4, !dbg !693
STORE [*p=q]:   store i32 %317, i32* %k, align 4, !dbg !693
LOAD [p=*q]:   %318 = load i32* %i, align 4, !dbg !695
LOAD [p=*q]:   %319 = load i32* %j, align 4, !dbg !695
LOAD [p=*q]:   %321 = load i32* %n, align 4, !dbg !695
STORE [*p=q]:   store i32 1, i32* %1, !dbg !696
STORE [*p=q]:   store i32 1, i32* %1, !dbg !696
LOAD [p=*q]:   %503 = load i32* %1, !dbg !756
Analyzing return instruction for inflate_dynamic
	  %503 = load i32* %1, !dbg !756
LOAD [p=*q]:   %326 = load i32* %j, align 4, !dbg !697
STORE [*p=q]:   store i32 %327, i32* %j, align 4, !dbg !697
LOAD [p=*q]:   %326 = load i32* %j, align 4, !dbg !697
STORE [*p=q]:   store i32 %327, i32* %j, align 4, !dbg !697
LOAD [p=*q]:   %330 = load i32* %l, align 4, !dbg !698
LOAD [p=*q]:   %331 = load i32* %i, align 4, !dbg !698
STORE [*p=q]:   store i32 %332, i32* %i, align 4, !dbg !698
STORE [*p=q]:   store i32 %330, i32* %334, align 4, !dbg !698
LOAD [p=*q]:   %330 = load i32* %l, align 4, !dbg !698
LOAD [p=*q]:   %331 = load i32* %i, align 4, !dbg !698
STORE [*p=q]:   store i32 %332, i32* %i, align 4, !dbg !698
STORE [*p=q]:   store i32 %330, i32* %334, align 4, !dbg !698
LOAD [p=*q]:   %326 = load i32* %j, align 4, !dbg !697
STORE [*p=q]:   store i32 %327, i32* %j, align 4, !dbg !697
LOAD [p=*q]:   %337 = load i32* %j, align 4, !dbg !700
LOAD [p=*q]:   %341 = load i32* %k, align 4, !dbg !701
LOAD [p=*q]:   %341 = load i32* %k, align 4, !dbg !701
LOAD [p=*q]:   %344 = load i32* @inptr, align 4, !dbg !704
LOAD [p=*q]:   %345 = load i32* @insize, align 4, !dbg !704
LOAD [p=*q]:   %369 = load i64* %b, align 8, !dbg !706
STORE [*p=q]:   store i32 %372, i32* %j, align 4, !dbg !706
LOAD [p=*q]:   %373 = load i64* %b, align 8, !dbg !707
STORE [*p=q]:   store i64 %374, i64* %b, align 8, !dbg !707
LOAD [p=*q]:   %375 = load i32* %k, align 4, !dbg !707
STORE [*p=q]:   store i32 %376, i32* %k, align 4, !dbg !707
LOAD [p=*q]:   %377 = load i32* %i, align 4, !dbg !709
LOAD [p=*q]:   %378 = load i32* %j, align 4, !dbg !709
LOAD [p=*q]:   %380 = load i32* %n, align 4, !dbg !709
LOAD [p=*q]:   %344 = load i32* @inptr, align 4, !dbg !704
LOAD [p=*q]:   %345 = load i32* @insize, align 4, !dbg !704
LOAD [p=*q]:   %348 = load i32* @inptr, align 4, !dbg !704
STORE [*p=q]:   store i32 %349, i32* @inptr, align 4, !dbg !704
LOAD [p=*q]:   %352 = load i8* %351, align 1, !dbg !704
LOAD [p=*q]:   %355 = load i32* %w, align 4, !dbg !704
STORE [*p=q]:   store i32 %355, i32* @outcnt, align 4, !dbg !704
CALL [call func]:   %356 = call i32 @fill_inbuf(i32 0), !dbg !704
LOAD [p=*q]:   %348 = load i32* @inptr, align 4, !dbg !704
STORE [*p=q]:   store i32 %349, i32* @inptr, align 4, !dbg !704
LOAD [p=*q]:   %352 = load i8* %351, align 1, !dbg !704
LOAD [p=*q]:   %361 = load i32* %k, align 4, !dbg !704
LOAD [p=*q]:   %364 = load i64* %b, align 8, !dbg !704
STORE [*p=q]:   store i64 %365, i64* %b, align 8, !dbg !704
LOAD [p=*q]:   %366 = load i32* %k, align 4, !dbg !704
STORE [*p=q]:   store i32 %367, i32* %k, align 4, !dbg !704
LOAD [p=*q]:   %355 = load i32* %w, align 4, !dbg !704
STORE [*p=q]:   store i32 %355, i32* @outcnt, align 4, !dbg !704
CALL [call func]:   %356 = call i32 @fill_inbuf(i32 0), !dbg !704
LOAD [p=*q]:   %361 = load i32* %k, align 4, !dbg !704
LOAD [p=*q]:   %364 = load i64* %b, align 8, !dbg !704
STORE [*p=q]:   store i64 %365, i64* %b, align 8, !dbg !704
LOAD [p=*q]:   %366 = load i32* %k, align 4, !dbg !704
STORE [*p=q]:   store i32 %367, i32* %k, align 4, !dbg !704
LOAD [p=*q]:   %361 = load i32* %k, align 4, !dbg !704
LOAD [p=*q]:   %364 = load i64* %b, align 8, !dbg !704
STORE [*p=q]:   store i64 %365, i64* %b, align 8, !dbg !704
LOAD [p=*q]:   %366 = load i32* %k, align 4, !dbg !704
STORE [*p=q]:   store i32 %367, i32* %k, align 4, !dbg !704
LOAD [p=*q]:   %341 = load i32* %k, align 4, !dbg !701
LOAD [p=*q]:   %369 = load i64* %b, align 8, !dbg !706
STORE [*p=q]:   store i32 %372, i32* %j, align 4, !dbg !706
LOAD [p=*q]:   %373 = load i64* %b, align 8, !dbg !707
STORE [*p=q]:   store i64 %374, i64* %b, align 8, !dbg !707
LOAD [p=*q]:   %375 = load i32* %k, align 4, !dbg !707
STORE [*p=q]:   store i32 %376, i32* %k, align 4, !dbg !707
LOAD [p=*q]:   %377 = load i32* %i, align 4, !dbg !709
LOAD [p=*q]:   %378 = load i32* %j, align 4, !dbg !709
LOAD [p=*q]:   %380 = load i32* %n, align 4, !dbg !709
STORE [*p=q]:   store i32 1, i32* %1, !dbg !710
STORE [*p=q]:   store i32 1, i32* %1, !dbg !710
LOAD [p=*q]:   %503 = load i32* %1, !dbg !756
Analyzing return instruction for inflate_dynamic
	  %503 = load i32* %1, !dbg !756
LOAD [p=*q]:   %385 = load i32* %j, align 4, !dbg !711
STORE [*p=q]:   store i32 %386, i32* %j, align 4, !dbg !711
LOAD [p=*q]:   %385 = load i32* %j, align 4, !dbg !711
STORE [*p=q]:   store i32 %386, i32* %j, align 4, !dbg !711
LOAD [p=*q]:   %389 = load i32* %i, align 4, !dbg !712
STORE [*p=q]:   store i32 %390, i32* %i, align 4, !dbg !712
STORE [*p=q]:   store i32 0, i32* %392, align 4, !dbg !712
STORE [*p=q]:   store i32 0, i32* %l, align 4, !dbg !713
LOAD [p=*q]:   %389 = load i32* %i, align 4, !dbg !712
STORE [*p=q]:   store i32 %390, i32* %i, align 4, !dbg !712
STORE [*p=q]:   store i32 0, i32* %392, align 4, !dbg !712
LOAD [p=*q]:   %385 = load i32* %j, align 4, !dbg !711
STORE [*p=q]:   store i32 %386, i32* %j, align 4, !dbg !711
STORE [*p=q]:   store i32 0, i32* %l, align 4, !dbg !713
LOAD [p=*q]:   %396 = load i32* %k, align 4, !dbg !715
LOAD [p=*q]:   %396 = load i32* %k, align 4, !dbg !715
LOAD [p=*q]:   %399 = load i32* @inptr, align 4, !dbg !718
LOAD [p=*q]:   %400 = load i32* @insize, align 4, !dbg !718
LOAD [p=*q]:   %424 = load i64* %b, align 8, !dbg !720
STORE [*p=q]:   store i32 %427, i32* %j, align 4, !dbg !720
LOAD [p=*q]:   %428 = load i64* %b, align 8, !dbg !721
STORE [*p=q]:   store i64 %429, i64* %b, align 8, !dbg !721
LOAD [p=*q]:   %430 = load i32* %k, align 4, !dbg !721
STORE [*p=q]:   store i32 %431, i32* %k, align 4, !dbg !721
LOAD [p=*q]:   %432 = load i32* %i, align 4, !dbg !723
LOAD [p=*q]:   %433 = load i32* %j, align 4, !dbg !723
LOAD [p=*q]:   %435 = load i32* %n, align 4, !dbg !723
LOAD [p=*q]:   %399 = load i32* @inptr, align 4, !dbg !718
LOAD [p=*q]:   %400 = load i32* @insize, align 4, !dbg !718
LOAD [p=*q]:   %403 = load i32* @inptr, align 4, !dbg !718
STORE [*p=q]:   store i32 %404, i32* @inptr, align 4, !dbg !718
LOAD [p=*q]:   %407 = load i8* %406, align 1, !dbg !718
LOAD [p=*q]:   %410 = load i32* %w, align 4, !dbg !718
STORE [*p=q]:   store i32 %410, i32* @outcnt, align 4, !dbg !718
CALL [call func]:   %411 = call i32 @fill_inbuf(i32 0), !dbg !718
LOAD [p=*q]:   %403 = load i32* @inptr, align 4, !dbg !718
STORE [*p=q]:   store i32 %404, i32* @inptr, align 4, !dbg !718
LOAD [p=*q]:   %407 = load i8* %406, align 1, !dbg !718
LOAD [p=*q]:   %416 = load i32* %k, align 4, !dbg !718
LOAD [p=*q]:   %419 = load i64* %b, align 8, !dbg !718
STORE [*p=q]:   store i64 %420, i64* %b, align 8, !dbg !718
LOAD [p=*q]:   %421 = load i32* %k, align 4, !dbg !718
STORE [*p=q]:   store i32 %422, i32* %k, align 4, !dbg !718
LOAD [p=*q]:   %410 = load i32* %w, align 4, !dbg !718
STORE [*p=q]:   store i32 %410, i32* @outcnt, align 4, !dbg !718
CALL [call func]:   %411 = call i32 @fill_inbuf(i32 0), !dbg !718
LOAD [p=*q]:   %416 = load i32* %k, align 4, !dbg !718
LOAD [p=*q]:   %419 = load i64* %b, align 8, !dbg !718
STORE [*p=q]:   store i64 %420, i64* %b, align 8, !dbg !718
LOAD [p=*q]:   %421 = load i32* %k, align 4, !dbg !718
STORE [*p=q]:   store i32 %422, i32* %k, align 4, !dbg !718
LOAD [p=*q]:   %416 = load i32* %k, align 4, !dbg !718
LOAD [p=*q]:   %419 = load i64* %b, align 8, !dbg !718
STORE [*p=q]:   store i64 %420, i64* %b, align 8, !dbg !718
LOAD [p=*q]:   %421 = load i32* %k, align 4, !dbg !718
STORE [*p=q]:   store i32 %422, i32* %k, align 4, !dbg !718
LOAD [p=*q]:   %396 = load i32* %k, align 4, !dbg !715
LOAD [p=*q]:   %424 = load i64* %b, align 8, !dbg !720
STORE [*p=q]:   store i32 %427, i32* %j, align 4, !dbg !720
LOAD [p=*q]:   %428 = load i64* %b, align 8, !dbg !721
STORE [*p=q]:   store i64 %429, i64* %b, align 8, !dbg !721
LOAD [p=*q]:   %430 = load i32* %k, align 4, !dbg !721
STORE [*p=q]:   store i32 %431, i32* %k, align 4, !dbg !721
LOAD [p=*q]:   %432 = load i32* %i, align 4, !dbg !723
LOAD [p=*q]:   %433 = load i32* %j, align 4, !dbg !723
LOAD [p=*q]:   %435 = load i32* %n, align 4, !dbg !723
STORE [*p=q]:   store i32 1, i32* %1, !dbg !724
STORE [*p=q]:   store i32 1, i32* %1, !dbg !724
LOAD [p=*q]:   %503 = load i32* %1, !dbg !756
Analyzing return instruction for inflate_dynamic
	  %503 = load i32* %1, !dbg !756
LOAD [p=*q]:   %440 = load i32* %j, align 4, !dbg !725
STORE [*p=q]:   store i32 %441, i32* %j, align 4, !dbg !725
LOAD [p=*q]:   %440 = load i32* %j, align 4, !dbg !725
STORE [*p=q]:   store i32 %441, i32* %j, align 4, !dbg !725
LOAD [p=*q]:   %444 = load i32* %i, align 4, !dbg !726
STORE [*p=q]:   store i32 %445, i32* %i, align 4, !dbg !726
STORE [*p=q]:   store i32 0, i32* %447, align 4, !dbg !726
STORE [*p=q]:   store i32 0, i32* %l, align 4, !dbg !727
LOAD [p=*q]:   %444 = load i32* %i, align 4, !dbg !726
STORE [*p=q]:   store i32 %445, i32* %i, align 4, !dbg !726
STORE [*p=q]:   store i32 0, i32* %447, align 4, !dbg !726
LOAD [p=*q]:   %440 = load i32* %j, align 4, !dbg !725
STORE [*p=q]:   store i32 %441, i32* %j, align 4, !dbg !725
STORE [*p=q]:   store i32 0, i32* %l, align 4, !dbg !727
LOAD [p=*q]:   %213 = load i32* %i, align 4, !dbg !674
LOAD [p=*q]:   %214 = load i32* %n, align 4, !dbg !674
LOAD [p=*q]:   %453 = load %struct.huft** %tl, align 8, !dbg !729
CALL [call func]:   %454 = call i32 @huft_free(%struct.huft* %453), !dbg !729
LOAD [p=*q]:   %455 = load i64* %b, align 8, !dbg !730
STORE [*p=q]:   store i64 %455, i64* @bb, align 8, !dbg !730
LOAD [p=*q]:   %456 = load i32* %k, align 4, !dbg !731
STORE [*p=q]:   store i32 %456, i32* @bk, align 4, !dbg !731
LOAD [p=*q]:   %457 = load i32* @lbits, align 4, !dbg !732
STORE [*p=q]:   store i32 %457, i32* %bl, align 4, !dbg !732
LOAD [p=*q]:   %459 = load i32* %nl, align 4, !dbg !733
CALL [call func]:   %460 = call i32 @huft_build(i32* %458, i32 %459, i32 257, i16* getelementptr inbounds ([31 x i16]* @cplens, i32 0, i32 0), i16* getelementptr inbounds ([31 x i16]* @cplext, i32 0, i32 0), %struct.huft** %tl, i32* %bl), !dbg !733
STORE [*p=q]:   store i32 %460, i32* %i, align 4, !dbg !733
LOAD [p=*q]:   %463 = load i32* %i, align 4, !dbg !734
LOAD [p=*q]:   %471 = load i32* @dbits, align 4, !dbg !740
STORE [*p=q]:   store i32 %471, i32* %bd, align 4, !dbg !740
LOAD [p=*q]:   %473 = load i32* %nl, align 4, !dbg !741
LOAD [p=*q]:   %476 = load i32* %nd, align 4, !dbg !741
CALL [call func]:   %477 = call i32 @huft_build(i32* %475, i32 %476, i32 0, i16* getelementptr inbounds ([30 x i16]* @cpdist, i32 0, i32 0), i16* getelementptr inbounds ([30 x i16]* @cpdext, i32 0, i32 0), %struct.huft** %td, i32* %bd), !dbg !741
STORE [*p=q]:   store i32 %477, i32* %i, align 4, !dbg !741
LOAD [p=*q]:   %463 = load i32* %i, align 4, !dbg !734
LOAD [p=*q]:   %466 = load %struct.huft** %tl, align 8, !dbg !736
CALL [call func]:   %467 = call i32 @huft_free(%struct.huft* %466), !dbg !736
LOAD [p=*q]:   %469 = load i32* %i, align 4, !dbg !739
STORE [*p=q]:   store i32 %469, i32* %1, !dbg !739
LOAD [p=*q]:   %466 = load %struct.huft** %tl, align 8, !dbg !736
CALL [call func]:   %467 = call i32 @huft_free(%struct.huft* %466), !dbg !736
LOAD [p=*q]:   %469 = load i32* %i, align 4, !dbg !739
STORE [*p=q]:   store i32 %469, i32* %1, !dbg !739
LOAD [p=*q]:   %469 = load i32* %i, align 4, !dbg !739
STORE [*p=q]:   store i32 %469, i32* %1, !dbg !739
LOAD [p=*q]:   %503 = load i32* %1, !dbg !756
Analyzing return instruction for inflate_dynamic
	  %503 = load i32* %1, !dbg !756
LOAD [p=*q]:   %471 = load i32* @dbits, align 4, !dbg !740
STORE [*p=q]:   store i32 %471, i32* %bd, align 4, !dbg !740
LOAD [p=*q]:   %473 = load i32* %nl, align 4, !dbg !741
LOAD [p=*q]:   %476 = load i32* %nd, align 4, !dbg !741
CALL [call func]:   %477 = call i32 @huft_build(i32* %475, i32 %476, i32 0, i16* getelementptr inbounds ([30 x i16]* @cpdist, i32 0, i32 0), i16* getelementptr inbounds ([30 x i16]* @cpdext, i32 0, i32 0), %struct.huft** %td, i32* %bd), !dbg !741
STORE [*p=q]:   store i32 %477, i32* %i, align 4, !dbg !741
LOAD [p=*q]:   %480 = load i32* %i, align 4, !dbg !742
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %err}, metadata !749), !dbg !751
LOAD [p=*q]:   %490 = load %struct.huft** %tl, align 8, !dbg !752
LOAD [p=*q]:   %491 = load %struct.huft** %td, align 8, !dbg !752
LOAD [p=*q]:   %492 = load i32* %bl, align 4, !dbg !752
LOAD [p=*q]:   %493 = load i32* %bd, align 4, !dbg !752
CALL [call func]:   %494 = call i32 @inflate_codes(%struct.huft* %490, %struct.huft* %491, i32 %492, i32 %493), !dbg !752
STORE [*p=q]:   store i32 %496, i32* %err, align 4, !dbg !752
LOAD [p=*q]:   %497 = load %struct.huft** %tl, align 8, !dbg !753
CALL [call func]:   %498 = call i32 @huft_free(%struct.huft* %497), !dbg !753
LOAD [p=*q]:   %499 = load %struct.huft** %td, align 8, !dbg !754
CALL [call func]:   %500 = call i32 @huft_free(%struct.huft* %499), !dbg !754
LOAD [p=*q]:   %501 = load i32* %err, align 4, !dbg !755
STORE [*p=q]:   store i32 %501, i32* %1, !dbg !755
LOAD [p=*q]:   %480 = load i32* %i, align 4, !dbg !742
LOAD [p=*q]:   %483 = load %struct.huft** %td, align 8, !dbg !744
CALL [call func]:   %484 = call i32 @huft_free(%struct.huft* %483), !dbg !744
LOAD [p=*q]:   %486 = load %struct.huft** %tl, align 8, !dbg !747
CALL [call func]:   %487 = call i32 @huft_free(%struct.huft* %486), !dbg !747
LOAD [p=*q]:   %488 = load i32* %i, align 4, !dbg !748
STORE [*p=q]:   store i32 %488, i32* %1, !dbg !748
LOAD [p=*q]:   %483 = load %struct.huft** %td, align 8, !dbg !744
CALL [call func]:   %484 = call i32 @huft_free(%struct.huft* %483), !dbg !744
LOAD [p=*q]:   %486 = load %struct.huft** %tl, align 8, !dbg !747
CALL [call func]:   %487 = call i32 @huft_free(%struct.huft* %486), !dbg !747
LOAD [p=*q]:   %488 = load i32* %i, align 4, !dbg !748
STORE [*p=q]:   store i32 %488, i32* %1, !dbg !748
LOAD [p=*q]:   %486 = load %struct.huft** %tl, align 8, !dbg !747
CALL [call func]:   %487 = call i32 @huft_free(%struct.huft* %486), !dbg !747
LOAD [p=*q]:   %488 = load i32* %i, align 4, !dbg !748
STORE [*p=q]:   store i32 %488, i32* %1, !dbg !748
LOAD [p=*q]:   %503 = load i32* %1, !dbg !756
Analyzing return instruction for inflate_dynamic
	  %503 = load i32* %1, !dbg !756
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %err}, metadata !749), !dbg !751
LOAD [p=*q]:   %490 = load %struct.huft** %tl, align 8, !dbg !752
LOAD [p=*q]:   %491 = load %struct.huft** %td, align 8, !dbg !752
LOAD [p=*q]:   %492 = load i32* %bl, align 4, !dbg !752
LOAD [p=*q]:   %493 = load i32* %bd, align 4, !dbg !752
CALL [call func]:   %494 = call i32 @inflate_codes(%struct.huft* %490, %struct.huft* %491, i32 %492, i32 %493), !dbg !752
STORE [*p=q]:   store i32 %496, i32* %err, align 4, !dbg !752
LOAD [p=*q]:   %497 = load %struct.huft** %tl, align 8, !dbg !753
CALL [call func]:   %498 = call i32 @huft_free(%struct.huft* %497), !dbg !753
LOAD [p=*q]:   %499 = load %struct.huft** %td, align 8, !dbg !754
CALL [call func]:   %500 = call i32 @huft_free(%struct.huft* %499), !dbg !754
LOAD [p=*q]:   %501 = load i32* %err, align 4, !dbg !755
STORE [*p=q]:   store i32 %501, i32* %1, !dbg !755
LOAD [p=*q]:   %503 = load i32* %1, !dbg !756
Analyzing return instruction for inflate_dynamic
	  %503 = load i32* %1, !dbg !756
LOAD [p=*q]:   %503 = load i32* %1, !dbg !756
Analyzing return instruction for inflate_dynamic
	  %503 = load i32* %1, !dbg !756
[Processing][Function][inflate_block]
STORE [*p=q]:   store i32* %e, i32** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32** %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %t}, metadata !576), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %w}, metadata !579), !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %b}, metadata !581), !dbg !582
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %k}, metadata !583), !dbg !584
LOAD [p=*q]:   %3 = load i64* @bb, align 8, !dbg !585
STORE [*p=q]:   store i64 %3, i64* %b, align 8, !dbg !585
LOAD [p=*q]:   %4 = load i32* @bk, align 4, !dbg !586
STORE [*p=q]:   store i32 %4, i32* %k, align 4, !dbg !586
LOAD [p=*q]:   %5 = load i32* @outcnt, align 4, !dbg !587
STORE [*p=q]:   store i32 %5, i32* %w, align 4, !dbg !587
LOAD [p=*q]:   %7 = load i32* %k, align 4, !dbg !588
LOAD [p=*q]:   %7 = load i32* %k, align 4, !dbg !588
LOAD [p=*q]:   %10 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %11 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %35 = load i64* %b, align 8, !dbg !592
LOAD [p=*q]:   %38 = load i32** %2, align 8, !dbg !592
STORE [*p=q]:   store i32 %37, i32* %38, !dbg !592
LOAD [p=*q]:   %39 = load i64* %b, align 8, !dbg !593
STORE [*p=q]:   store i64 %40, i64* %b, align 8, !dbg !593
LOAD [p=*q]:   %41 = load i32* %k, align 4, !dbg !593
STORE [*p=q]:   store i32 %42, i32* %k, align 4, !dbg !593
LOAD [p=*q]:   %10 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %11 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %14 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %15, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %18 = load i8* %17, align 1, !dbg !590
LOAD [p=*q]:   %21 = load i32* %w, align 4, !dbg !590
STORE [*p=q]:   store i32 %21, i32* @outcnt, align 4, !dbg !590
CALL [call func]:   %22 = call i32 @fill_inbuf(i32 0), !dbg !590
LOAD [p=*q]:   %14 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %15, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %18 = load i8* %17, align 1, !dbg !590
LOAD [p=*q]:   %27 = load i32* %k, align 4, !dbg !590
LOAD [p=*q]:   %30 = load i64* %b, align 8, !dbg !590
STORE [*p=q]:   store i64 %31, i64* %b, align 8, !dbg !590
LOAD [p=*q]:   %32 = load i32* %k, align 4, !dbg !590
STORE [*p=q]:   store i32 %33, i32* %k, align 4, !dbg !590
LOAD [p=*q]:   %21 = load i32* %w, align 4, !dbg !590
STORE [*p=q]:   store i32 %21, i32* @outcnt, align 4, !dbg !590
CALL [call func]:   %22 = call i32 @fill_inbuf(i32 0), !dbg !590
LOAD [p=*q]:   %27 = load i32* %k, align 4, !dbg !590
LOAD [p=*q]:   %30 = load i64* %b, align 8, !dbg !590
STORE [*p=q]:   store i64 %31, i64* %b, align 8, !dbg !590
LOAD [p=*q]:   %32 = load i32* %k, align 4, !dbg !590
STORE [*p=q]:   store i32 %33, i32* %k, align 4, !dbg !590
LOAD [p=*q]:   %27 = load i32* %k, align 4, !dbg !590
LOAD [p=*q]:   %30 = load i64* %b, align 8, !dbg !590
STORE [*p=q]:   store i64 %31, i64* %b, align 8, !dbg !590
LOAD [p=*q]:   %32 = load i32* %k, align 4, !dbg !590
STORE [*p=q]:   store i32 %33, i32* %k, align 4, !dbg !590
LOAD [p=*q]:   %7 = load i32* %k, align 4, !dbg !588
LOAD [p=*q]:   %35 = load i64* %b, align 8, !dbg !592
LOAD [p=*q]:   %38 = load i32** %2, align 8, !dbg !592
STORE [*p=q]:   store i32 %37, i32* %38, !dbg !592
LOAD [p=*q]:   %39 = load i64* %b, align 8, !dbg !593
STORE [*p=q]:   store i64 %40, i64* %b, align 8, !dbg !593
LOAD [p=*q]:   %41 = load i32* %k, align 4, !dbg !593
STORE [*p=q]:   store i32 %42, i32* %k, align 4, !dbg !593
LOAD [p=*q]:   %44 = load i32* %k, align 4, !dbg !595
LOAD [p=*q]:   %44 = load i32* %k, align 4, !dbg !595
LOAD [p=*q]:   %47 = load i32* @inptr, align 4, !dbg !597
LOAD [p=*q]:   %48 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %72 = load i64* %b, align 8, !dbg !599
STORE [*p=q]:   store i32 %74, i32* %t, align 4, !dbg !599
LOAD [p=*q]:   %75 = load i64* %b, align 8, !dbg !600
STORE [*p=q]:   store i64 %76, i64* %b, align 8, !dbg !600
LOAD [p=*q]:   %77 = load i32* %k, align 4, !dbg !600
STORE [*p=q]:   store i32 %78, i32* %k, align 4, !dbg !600
LOAD [p=*q]:   %79 = load i64* %b, align 8, !dbg !602
STORE [*p=q]:   store i64 %79, i64* @bb, align 8, !dbg !602
LOAD [p=*q]:   %80 = load i32* %k, align 4, !dbg !603
STORE [*p=q]:   store i32 %80, i32* @bk, align 4, !dbg !603
LOAD [p=*q]:   %81 = load i32* %t, align 4, !dbg !604
LOAD [p=*q]:   %47 = load i32* @inptr, align 4, !dbg !597
LOAD [p=*q]:   %48 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %51 = load i32* @inptr, align 4, !dbg !597
STORE [*p=q]:   store i32 %52, i32* @inptr, align 4, !dbg !597
LOAD [p=*q]:   %55 = load i8* %54, align 1, !dbg !597
LOAD [p=*q]:   %58 = load i32* %w, align 4, !dbg !597
STORE [*p=q]:   store i32 %58, i32* @outcnt, align 4, !dbg !597
CALL [call func]:   %59 = call i32 @fill_inbuf(i32 0), !dbg !597
LOAD [p=*q]:   %51 = load i32* @inptr, align 4, !dbg !597
STORE [*p=q]:   store i32 %52, i32* @inptr, align 4, !dbg !597
LOAD [p=*q]:   %55 = load i8* %54, align 1, !dbg !597
LOAD [p=*q]:   %64 = load i32* %k, align 4, !dbg !597
LOAD [p=*q]:   %67 = load i64* %b, align 8, !dbg !597
STORE [*p=q]:   store i64 %68, i64* %b, align 8, !dbg !597
LOAD [p=*q]:   %69 = load i32* %k, align 4, !dbg !597
STORE [*p=q]:   store i32 %70, i32* %k, align 4, !dbg !597
LOAD [p=*q]:   %58 = load i32* %w, align 4, !dbg !597
STORE [*p=q]:   store i32 %58, i32* @outcnt, align 4, !dbg !597
CALL [call func]:   %59 = call i32 @fill_inbuf(i32 0), !dbg !597
LOAD [p=*q]:   %64 = load i32* %k, align 4, !dbg !597
LOAD [p=*q]:   %67 = load i64* %b, align 8, !dbg !597
STORE [*p=q]:   store i64 %68, i64* %b, align 8, !dbg !597
LOAD [p=*q]:   %69 = load i32* %k, align 4, !dbg !597
STORE [*p=q]:   store i32 %70, i32* %k, align 4, !dbg !597
LOAD [p=*q]:   %64 = load i32* %k, align 4, !dbg !597
LOAD [p=*q]:   %67 = load i64* %b, align 8, !dbg !597
STORE [*p=q]:   store i64 %68, i64* %b, align 8, !dbg !597
LOAD [p=*q]:   %69 = load i32* %k, align 4, !dbg !597
STORE [*p=q]:   store i32 %70, i32* %k, align 4, !dbg !597
LOAD [p=*q]:   %44 = load i32* %k, align 4, !dbg !595
LOAD [p=*q]:   %72 = load i64* %b, align 8, !dbg !599
STORE [*p=q]:   store i32 %74, i32* %t, align 4, !dbg !599
LOAD [p=*q]:   %75 = load i64* %b, align 8, !dbg !600
STORE [*p=q]:   store i64 %76, i64* %b, align 8, !dbg !600
LOAD [p=*q]:   %77 = load i32* %k, align 4, !dbg !600
STORE [*p=q]:   store i32 %78, i32* %k, align 4, !dbg !600
LOAD [p=*q]:   %79 = load i64* %b, align 8, !dbg !602
STORE [*p=q]:   store i64 %79, i64* @bb, align 8, !dbg !602
LOAD [p=*q]:   %80 = load i32* %k, align 4, !dbg !603
STORE [*p=q]:   store i32 %80, i32* @bk, align 4, !dbg !603
LOAD [p=*q]:   %81 = load i32* %t, align 4, !dbg !604
CALL [call func]:   %84 = call i32 @inflate_dynamic(), !dbg !605
STORE [*p=q]:   store i32 %84, i32* %1, !dbg !605
LOAD [p=*q]:   %86 = load i32* %t, align 4, !dbg !606
CALL [call func]:   %84 = call i32 @inflate_dynamic(), !dbg !605
STORE [*p=q]:   store i32 %84, i32* %1, !dbg !605
LOAD [p=*q]:   %97 = load i32* %1, !dbg !611
Analyzing return instruction for inflate_block
	  %97 = load i32* %1, !dbg !611
LOAD [p=*q]:   %86 = load i32* %t, align 4, !dbg !606
CALL [call func]:   %89 = call i32 @inflate_stored(), !dbg !607
STORE [*p=q]:   store i32 %89, i32* %1, !dbg !607
LOAD [p=*q]:   %91 = load i32* %t, align 4, !dbg !608
CALL [call func]:   %89 = call i32 @inflate_stored(), !dbg !607
STORE [*p=q]:   store i32 %89, i32* %1, !dbg !607
LOAD [p=*q]:   %97 = load i32* %1, !dbg !611
Analyzing return instruction for inflate_block
	  %97 = load i32* %1, !dbg !611
LOAD [p=*q]:   %91 = load i32* %t, align 4, !dbg !608
CALL [call func]:   %94 = call i32 @inflate_fixed(), !dbg !609
STORE [*p=q]:   store i32 %94, i32* %1, !dbg !609
STORE [*p=q]:   store i32 2, i32* %1, !dbg !610
CALL [call func]:   %94 = call i32 @inflate_fixed(), !dbg !609
STORE [*p=q]:   store i32 %94, i32* %1, !dbg !609
LOAD [p=*q]:   %97 = load i32* %1, !dbg !611
Analyzing return instruction for inflate_block
	  %97 = load i32* %1, !dbg !611
STORE [*p=q]:   store i32 2, i32* %1, !dbg !610
LOAD [p=*q]:   %97 = load i32* %1, !dbg !611
Analyzing return instruction for inflate_block
	  %97 = load i32* %1, !dbg !611
LOAD [p=*q]:   %97 = load i32* %1, !dbg !611
Analyzing return instruction for inflate_block
	  %97 = load i32* %1, !dbg !611
[Processing][Function][inflate]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !574), !dbg !576
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !577), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %h}, metadata !579), !dbg !580
STORE [*p=q]:   store i32 0, i32* @outcnt, align 4, !dbg !581
STORE [*p=q]:   store i32 0, i32* @bk, align 4, !dbg !582
STORE [*p=q]:   store i64 0, i64* @bb, align 8, !dbg !583
STORE [*p=q]:   store i32 0, i32* %h, align 4, !dbg !584
STORE [*p=q]:   store i32 0, i32* @hufts, align 4, !dbg !586
CALL [call func]:   %3 = call i32 @inflate_block(i32* %e), !dbg !588
STORE [*p=q]:   store i32 %3, i32* %r, align 4, !dbg !588
STORE [*p=q]:   store i32 0, i32* @hufts, align 4, !dbg !586
CALL [call func]:   %3 = call i32 @inflate_block(i32* %e), !dbg !588
STORE [*p=q]:   store i32 %3, i32* %r, align 4, !dbg !588
LOAD [p=*q]:   %6 = load i32* %r, align 4, !dbg !589
STORE [*p=q]:   store i32 %6, i32* %1, !dbg !589
LOAD [p=*q]:   %8 = load i32* @hufts, align 4, !dbg !590
LOAD [p=*q]:   %9 = load i32* %h, align 4, !dbg !590
LOAD [p=*q]:   %6 = load i32* %r, align 4, !dbg !589
STORE [*p=q]:   store i32 %6, i32* %1, !dbg !589
LOAD [p=*q]:   %30 = load i32* %1, !dbg !600
Analyzing return instruction for inflate
	  %30 = load i32* %1, !dbg !600
LOAD [p=*q]:   %8 = load i32* @hufts, align 4, !dbg !590
LOAD [p=*q]:   %9 = load i32* %h, align 4, !dbg !590
LOAD [p=*q]:   %12 = load i32* @hufts, align 4, !dbg !591
STORE [*p=q]:   store i32 %12, i32* %h, align 4, !dbg !591
LOAD [p=*q]:   %12 = load i32* @hufts, align 4, !dbg !591
STORE [*p=q]:   store i32 %12, i32* %h, align 4, !dbg !591
LOAD [p=*q]:   %15 = load i32* %e, align 4, !dbg !592
LOAD [p=*q]:   %15 = load i32* %e, align 4, !dbg !592
STORE [*p=q]:   store i32 0, i32* @hufts, align 4, !dbg !586
CALL [call func]:   %3 = call i32 @inflate_block(i32* %e), !dbg !588
STORE [*p=q]:   store i32 %3, i32* %r, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @bk, align 4, !dbg !593
LOAD [p=*q]:   %20 = load i32* @bk, align 4, !dbg !593
LOAD [p=*q]:   %23 = load i32* @bk, align 4, !dbg !594
STORE [*p=q]:   store i32 %24, i32* @bk, align 4, !dbg !594
LOAD [p=*q]:   %25 = load i32* @inptr, align 4, !dbg !596
STORE [*p=q]:   store i32 %26, i32* @inptr, align 4, !dbg !596
LOAD [p=*q]:   %28 = load i32* @outcnt, align 4, !dbg !598
STORE [*p=q]:   store i32 %28, i32* @outcnt, align 4, !dbg !598
CALL [call func]:   call void @flush_window(), !dbg !598
STORE [*p=q]:   store i32 0, i32* %1, !dbg !599
LOAD [p=*q]:   %23 = load i32* @bk, align 4, !dbg !594
STORE [*p=q]:   store i32 %24, i32* @bk, align 4, !dbg !594
LOAD [p=*q]:   %25 = load i32* @inptr, align 4, !dbg !596
STORE [*p=q]:   store i32 %26, i32* @inptr, align 4, !dbg !596
LOAD [p=*q]:   %20 = load i32* @bk, align 4, !dbg !593
LOAD [p=*q]:   %28 = load i32* @outcnt, align 4, !dbg !598
STORE [*p=q]:   store i32 %28, i32* @outcnt, align 4, !dbg !598
CALL [call func]:   call void @flush_window(), !dbg !598
STORE [*p=q]:   store i32 0, i32* %1, !dbg !599
LOAD [p=*q]:   %30 = load i32* %1, !dbg !600
Analyzing return instruction for inflate
	  %30 = load i32* %1, !dbg !600
LOAD [p=*q]:   %30 = load i32* %1, !dbg !600
Analyzing return instruction for inflate
	  %30 = load i32* %1, !dbg !600
[Processing][Function][open_and_stat]
STORE [*p=q]:   store i8* %name, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %flags, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !576), !dbg !577
STORE [*p=q]:   store i32 %mode, i32* %4, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %4}, metadata !578), !dbg !580
STORE [*p=q]:   store %struct.stat* %st, %struct.stat** %5, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.stat** %5}, metadata !581), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %fd}, metadata !584), !dbg !586
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !587
LOAD [p=*q]:   %15 = load i8** %2, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %4, align 4, !dbg !591
CALL [call func]:   %18 = call i32 (i8*, i32, ...)* @open_safer(i8* %15, i32 %16, i32 %17), !dbg !591
STORE [*p=q]:   store i32 %18, i32* %fd, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i32* %fd, align 4, !dbg !592
LOAD [p=*q]:   %9 = load i32* @force, align 4, !dbg !587
LOAD [p=*q]:   %9 = load i32* @force, align 4, !dbg !587
LOAD [p=*q]:   %15 = load i8** %2, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %4, align 4, !dbg !591
CALL [call func]:   %18 = call i32 (i8*, i32, ...)* @open_safer(i8* %15, i32 %16, i32 %17), !dbg !591
STORE [*p=q]:   store i32 %18, i32* %fd, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i32* %fd, align 4, !dbg !592
LOAD [p=*q]:   %12 = load i32* %3, align 4, !dbg !588
STORE [*p=q]:   store i32 %13, i32* %3, align 4, !dbg !588
LOAD [p=*q]:   %12 = load i32* %3, align 4, !dbg !588
STORE [*p=q]:   store i32 %13, i32* %3, align 4, !dbg !588
LOAD [p=*q]:   %15 = load i8** %2, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %4, align 4, !dbg !591
CALL [call func]:   %18 = call i32 (i8*, i32, ...)* @open_safer(i8* %15, i32 %16, i32 %17), !dbg !591
STORE [*p=q]:   store i32 %18, i32* %fd, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i32* %fd, align 4, !dbg !592
LOAD [p=*q]:   %15 = load i8** %2, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %4, align 4, !dbg !591
CALL [call func]:   %18 = call i32 (i8*, i32, ...)* @open_safer(i8* %15, i32 %16, i32 %17), !dbg !591
STORE [*p=q]:   store i32 %18, i32* %fd, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i32* %fd, align 4, !dbg !592
LOAD [p=*q]:   %22 = load i32* %fd, align 4, !dbg !593
LOAD [p=*q]:   %23 = load %struct.stat** %5, align 8, !dbg !593
CALL [call func]:   %24 = call i32 @fstat(i32 %22, %struct.stat* %23) #3, !dbg !593
LOAD [p=*q]:   %34 = load i32* %fd, align 4, !dbg !601
STORE [*p=q]:   store i32 %34, i32* %1, !dbg !601
LOAD [p=*q]:   %22 = load i32* %fd, align 4, !dbg !593
LOAD [p=*q]:   %23 = load %struct.stat** %5, align 8, !dbg !593
CALL [call func]:   %24 = call i32 @fstat(i32 %22, %struct.stat* %23) #3, !dbg !593
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !594), !dbg !596
CALL [call func]:   %27 = call i32* @__errno_location() #1, !dbg !597
LOAD [p=*q]:   %28 = load i32* %27, !dbg !597
STORE [*p=q]:   store i32 %28, i32* %e, align 4, !dbg !597
LOAD [p=*q]:   %29 = load i32* %fd, align 4, !dbg !598
CALL [call func]:   %30 = call i32 @close(i32 %29), !dbg !598
LOAD [p=*q]:   %31 = load i32* %e, align 4, !dbg !599
CALL [call func]:   %32 = call i32* @__errno_location() #1, !dbg !599
STORE [*p=q]:   store i32 %31, i32* %32, !dbg !599
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !600
LOAD [p=*q]:   %34 = load i32* %fd, align 4, !dbg !601
STORE [*p=q]:   store i32 %34, i32* %1, !dbg !601
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !594), !dbg !596
CALL [call func]:   %27 = call i32* @__errno_location() #1, !dbg !597
LOAD [p=*q]:   %28 = load i32* %27, !dbg !597
STORE [*p=q]:   store i32 %28, i32* %e, align 4, !dbg !597
LOAD [p=*q]:   %29 = load i32* %fd, align 4, !dbg !598
CALL [call func]:   %30 = call i32 @close(i32 %29), !dbg !598
LOAD [p=*q]:   %31 = load i32* %e, align 4, !dbg !599
CALL [call func]:   %32 = call i32* @__errno_location() #1, !dbg !599
STORE [*p=q]:   store i32 %31, i32* %32, !dbg !599
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !600
LOAD [p=*q]:   %36 = load i32* %1, !dbg !602
Analyzing return instruction for open_and_stat
	  %36 = load i32* %1, !dbg !602
LOAD [p=*q]:   %34 = load i32* %fd, align 4, !dbg !601
STORE [*p=q]:   store i32 %34, i32* %1, !dbg !601
LOAD [p=*q]:   %36 = load i32* %1, !dbg !602
Analyzing return instruction for open_and_stat
	  %36 = load i32* %1, !dbg !602
LOAD [p=*q]:   %36 = load i32* %1, !dbg !602
Analyzing return instruction for open_and_stat
	  %36 = load i32* %1, !dbg !602
[Processing][Function][discard_input_bytes]
STORE [*p=q]:   store i64 %nbytes, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %flags, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
LOAD [p=*q]:   %4 = load i64* %1, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i64* %1, align 8, !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %7 = load i32* @inptr, align 4, !dbg !583
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !583
Analyzing return instruction for discard_input_bytes
No return value for: discard_input_bytes
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %7 = load i32* @inptr, align 4, !dbg !583
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !583
LOAD [p=*q]:   %11 = load i32* @inptr, align 4, !dbg !583
STORE [*p=q]:   store i32 %12, i32* @inptr, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i8* %14, align 1, !dbg !583
CALL [call func]:   %18 = call i32 @fill_inbuf(i32 0), !dbg !584
LOAD [p=*q]:   %11 = load i32* @inptr, align 4, !dbg !583
STORE [*p=q]:   store i32 %12, i32* @inptr, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i8* %14, align 1, !dbg !583
STORE [*p=q]:   store i8 %21, i8* %c, align 1, !dbg !584
LOAD [p=*q]:   %22 = load i32* %2, align 4, !dbg !585
CALL [call func]:   %18 = call i32 @fill_inbuf(i32 0), !dbg !584
STORE [*p=q]:   store i8 %21, i8* %c, align 1, !dbg !584
LOAD [p=*q]:   %22 = load i32* %2, align 4, !dbg !585
STORE [*p=q]:   store i8 %21, i8* %c, align 1, !dbg !584
LOAD [p=*q]:   %22 = load i32* %2, align 4, !dbg !585
CALL [call func]:   %26 = call i64 @updcrc(i8* %c, i32 1), !dbg !586
LOAD [p=*q]:   %28 = load i64* %1, align 8, !dbg !587
CALL [call func]:   %26 = call i64 @updcrc(i8* %c, i32 1), !dbg !586
LOAD [p=*q]:   %28 = load i64* %1, align 8, !dbg !587
LOAD [p=*q]:   %28 = load i64* %1, align 8, !dbg !587
LOAD [p=*q]:   %31 = load i64* %1, align 8, !dbg !588
STORE [*p=q]:   store i64 %32, i64* %1, align 8, !dbg !588
LOAD [p=*q]:   %34 = load i8* %c, align 1, !dbg !589
LOAD [p=*q]:   %31 = load i64* %1, align 8, !dbg !588
STORE [*p=q]:   store i64 %32, i64* %1, align 8, !dbg !588
LOAD [p=*q]:   %34 = load i8* %c, align 1, !dbg !589
Analyzing return instruction for discard_input_bytes
No return value for: discard_input_bytes
LOAD [p=*q]:   %4 = load i64* %1, align 8, !dbg !578
Analyzing return instruction for discard_input_bytes
No return value for: discard_input_bytes
[Processing][Function][get_suffix]
STORE [*p=q]:   store i8* %name, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nlen}, metadata !576), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %slen}, metadata !579), !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[33 x i8]* %suffix}, metadata !581), !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %suf}, metadata !586), !dbg !588
STORE [*p=q]:   store i8** getelementptr inbounds ([9 x i8*]* @get_suffix.known_suffixes, i32 0, i32 0), i8*** %suf, align 8, !dbg !589
LOAD [p=*q]:   %3 = load i8** @z_suffix, align 8, !dbg !590
LOAD [p=*q]:   %4 = load i8*** %suf, align 8, !dbg !590
STORE [*p=q]:   store i8* %3, i8** %4, !dbg !590
LOAD [p=*q]:   %5 = load i8** @z_suffix, align 8, !dbg !591
CALL [call func]:   %6 = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([2 x i8]* @.str56, i32 0, i32 0)) #4, !dbg !591
LOAD [p=*q]:   %9 = load i8*** %suf, align 8, !dbg !592
STORE [*p=q]:   store i8** %10, i8*** %suf, align 8, !dbg !592
LOAD [p=*q]:   %12 = load i8** %2, align 8, !dbg !593
CALL [call func]:   %13 = call i64 @strlen(i8* %12) #4, !dbg !593
STORE [*p=q]:   store i32 %14, i32* %nlen, align 4, !dbg !593
LOAD [p=*q]:   %15 = load i32* %nlen, align 4, !dbg !594
LOAD [p=*q]:   %9 = load i8*** %suf, align 8, !dbg !592
STORE [*p=q]:   store i8** %10, i8*** %suf, align 8, !dbg !592
LOAD [p=*q]:   %12 = load i8** %2, align 8, !dbg !593
CALL [call func]:   %13 = call i64 @strlen(i8* %12) #4, !dbg !593
STORE [*p=q]:   store i32 %14, i32* %nlen, align 4, !dbg !593
LOAD [p=*q]:   %15 = load i32* %nlen, align 4, !dbg !594
LOAD [p=*q]:   %12 = load i8** %2, align 8, !dbg !593
CALL [call func]:   %13 = call i64 @strlen(i8* %12) #4, !dbg !593
STORE [*p=q]:   store i32 %14, i32* %nlen, align 4, !dbg !593
LOAD [p=*q]:   %15 = load i32* %nlen, align 4, !dbg !594
LOAD [p=*q]:   %19 = load i8** %2, align 8, !dbg !595
CALL [call func]:   %20 = call i8* @strcpy(i8* %18, i8* %19) #3, !dbg !595
LOAD [p=*q]:   %23 = load i8** %2, align 8, !dbg !598
LOAD [p=*q]:   %24 = load i32* %nlen, align 4, !dbg !598
CALL [call func]:   %29 = call i8* @strcpy(i8* %22, i8* %28) #3, !dbg !598
LOAD [p=*q]:   %19 = load i8** %2, align 8, !dbg !595
CALL [call func]:   %20 = call i8* @strcpy(i8* %18, i8* %19) #3, !dbg !595
CALL [call func]:   %32 = call i8* @strlwr(i8* %31), !dbg !600
CALL [call func]:   %34 = call i64 @strlen(i8* %33) #4, !dbg !601
STORE [*p=q]:   store i32 %35, i32* %slen, align 4, !dbg !601
LOAD [p=*q]:   %23 = load i8** %2, align 8, !dbg !598
LOAD [p=*q]:   %24 = load i32* %nlen, align 4, !dbg !598
CALL [call func]:   %29 = call i8* @strcpy(i8* %22, i8* %28) #3, !dbg !598
CALL [call func]:   %32 = call i8* @strlwr(i8* %31), !dbg !600
CALL [call func]:   %34 = call i64 @strlen(i8* %33) #4, !dbg !601
STORE [*p=q]:   store i32 %35, i32* %slen, align 4, !dbg !601
CALL [call func]:   %32 = call i8* @strlwr(i8* %31), !dbg !600
CALL [call func]:   %34 = call i64 @strlen(i8* %33) #4, !dbg !601
STORE [*p=q]:   store i32 %35, i32* %slen, align 4, !dbg !601
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %s}, metadata !603), !dbg !605
LOAD [p=*q]:   %37 = load i8*** %suf, align 8, !dbg !606
LOAD [p=*q]:   %38 = load i8** %37, !dbg !606
CALL [call func]:   %39 = call i64 @strlen(i8* %38) #4, !dbg !606
STORE [*p=q]:   store i32 %40, i32* %s, align 4, !dbg !606
LOAD [p=*q]:   %41 = load i32* %slen, align 4, !dbg !607
LOAD [p=*q]:   %42 = load i32* %s, align 4, !dbg !607
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %s}, metadata !603), !dbg !605
LOAD [p=*q]:   %37 = load i8*** %suf, align 8, !dbg !606
LOAD [p=*q]:   %38 = load i8** %37, !dbg !606
CALL [call func]:   %39 = call i64 @strlen(i8* %38) #4, !dbg !606
STORE [*p=q]:   store i32 %40, i32* %s, align 4, !dbg !606
LOAD [p=*q]:   %41 = load i32* %slen, align 4, !dbg !607
LOAD [p=*q]:   %42 = load i32* %s, align 4, !dbg !607
LOAD [p=*q]:   %45 = load i32* %slen, align 4, !dbg !607
LOAD [p=*q]:   %46 = load i32* %s, align 4, !dbg !607
LOAD [p=*q]:   %51 = load i8* %50, align 1, !dbg !607
LOAD [p=*q]:   %45 = load i32* %slen, align 4, !dbg !607
LOAD [p=*q]:   %46 = load i32* %s, align 4, !dbg !607
LOAD [p=*q]:   %51 = load i8* %50, align 1, !dbg !607
LOAD [p=*q]:   %56 = load i32* %slen, align 4, !dbg !608
LOAD [p=*q]:   %59 = load i32* %s, align 4, !dbg !608
LOAD [p=*q]:   %63 = load i8*** %suf, align 8, !dbg !608
LOAD [p=*q]:   %64 = load i8** %63, !dbg !608
CALL [call func]:   %65 = call i32 @strcmp(i8* %62, i8* %64) #4, !dbg !608
LOAD [p=*q]:   %56 = load i32* %slen, align 4, !dbg !608
LOAD [p=*q]:   %59 = load i32* %s, align 4, !dbg !608
LOAD [p=*q]:   %63 = load i8*** %suf, align 8, !dbg !608
LOAD [p=*q]:   %64 = load i8** %63, !dbg !608
CALL [call func]:   %65 = call i32 @strcmp(i8* %62, i8* %64) #4, !dbg !608
LOAD [p=*q]:   %68 = load i8** %2, align 8, !dbg !609
LOAD [p=*q]:   %69 = load i32* %nlen, align 4, !dbg !609
LOAD [p=*q]:   %72 = load i32* %s, align 4, !dbg !609
STORE [*p=q]:   store i8* %75, i8** %1, !dbg !609
LOAD [p=*q]:   %68 = load i8** %2, align 8, !dbg !609
LOAD [p=*q]:   %69 = load i32* %nlen, align 4, !dbg !609
LOAD [p=*q]:   %72 = load i32* %s, align 4, !dbg !609
STORE [*p=q]:   store i8* %75, i8** %1, !dbg !609
LOAD [p=*q]:   %84 = load i8** %1, !dbg !613
Analyzing return instruction for get_suffix
	  %84 = load i8** %1, !dbg !613
LOAD [p=*q]:   %78 = load i8*** %suf, align 8, !dbg !611
STORE [*p=q]:   store i8** %79, i8*** %suf, align 8, !dbg !611
LOAD [p=*q]:   %80 = load i8** %79, !dbg !611
LOAD [p=*q]:   %78 = load i8*** %suf, align 8, !dbg !611
STORE [*p=q]:   store i8** %79, i8*** %suf, align 8, !dbg !611
LOAD [p=*q]:   %80 = load i8** %79, !dbg !611
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %s}, metadata !603), !dbg !605
LOAD [p=*q]:   %37 = load i8*** %suf, align 8, !dbg !606
LOAD [p=*q]:   %38 = load i8** %37, !dbg !606
CALL [call func]:   %39 = call i64 @strlen(i8* %38) #4, !dbg !606
STORE [*p=q]:   store i32 %40, i32* %s, align 4, !dbg !606
LOAD [p=*q]:   %41 = load i32* %slen, align 4, !dbg !607
LOAD [p=*q]:   %42 = load i32* %s, align 4, !dbg !607
STORE [*p=q]:   store i8* null, i8** %1, !dbg !612
STORE [*p=q]:   store i8* null, i8** %1, !dbg !612
LOAD [p=*q]:   %84 = load i8** %1, !dbg !613
Analyzing return instruction for get_suffix
	  %84 = load i8** %1, !dbg !613
LOAD [p=*q]:   %84 = load i8** %1, !dbg !613
Analyzing return instruction for get_suffix
	  %84 = load i8** %1, !dbg !613
[Processing][Function][read_c_len]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !574), !dbg !576
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %c}, metadata !577), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !579), !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %mask}, metadata !581), !dbg !582
CALL [call func]:   %1 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 9), !dbg !583
STORE [*p=q]:   store i32 %1, i32* %n, align 4, !dbg !583
LOAD [p=*q]:   %2 = load i32* %n, align 4, !dbg !584
CALL [call func]:   %5 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 9), !dbg !585
STORE [*p=q]:   store i32 %5, i32* %c, align 4, !dbg !585
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !587
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !596
CALL [call func]:   %5 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 9), !dbg !585
STORE [*p=q]:   store i32 %5, i32* %c, align 4, !dbg !585
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !587
LOAD [p=*q]:   %7 = load i32* %i, align 4, !dbg !587
LOAD [p=*q]:   %7 = load i32* %i, align 4, !dbg !587
LOAD [p=*q]:   %10 = load i32* %i, align 4, !dbg !589
STORE [*p=q]:   store i8 0, i8* %12, align 1, !dbg !589
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !591
LOAD [p=*q]:   %10 = load i32* %i, align 4, !dbg !589
STORE [*p=q]:   store i8 0, i8* %12, align 1, !dbg !589
LOAD [p=*q]:   %14 = load i32* %i, align 4, !dbg !590
STORE [*p=q]:   store i32 %15, i32* %i, align 4, !dbg !590
LOAD [p=*q]:   %14 = load i32* %i, align 4, !dbg !590
STORE [*p=q]:   store i32 %15, i32* %i, align 4, !dbg !590
LOAD [p=*q]:   %7 = load i32* %i, align 4, !dbg !587
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !591
LOAD [p=*q]:   %18 = load i32* %i, align 4, !dbg !591
LOAD [p=*q]:   %18 = load i32* %i, align 4, !dbg !591
LOAD [p=*q]:   %21 = load i32* %c, align 4, !dbg !593
LOAD [p=*q]:   %23 = load i32* %i, align 4, !dbg !593
STORE [*p=q]:   store i16 %22, i16* %25, align 1, !dbg !593
LOAD [p=*q]:   %21 = load i32* %c, align 4, !dbg !593
LOAD [p=*q]:   %23 = load i32* %i, align 4, !dbg !593
STORE [*p=q]:   store i16 %22, i16* %25, align 1, !dbg !593
LOAD [p=*q]:   %27 = load i32* %i, align 4, !dbg !594
STORE [*p=q]:   store i32 %28, i32* %i, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* %i, align 4, !dbg !594
STORE [*p=q]:   store i32 %28, i32* %i, align 4, !dbg !594
LOAD [p=*q]:   %18 = load i32* %i, align 4, !dbg !591
Analyzing return instruction for read_c_len
No return value for: read_c_len
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !596
LOAD [p=*q]:   %32 = load i32* %i, align 4, !dbg !598
LOAD [p=*q]:   %33 = load i32* %n, align 4, !dbg !598
LOAD [p=*q]:   %32 = load i32* %i, align 4, !dbg !598
LOAD [p=*q]:   %33 = load i32* %n, align 4, !dbg !598
LOAD [p=*q]:   %36 = load i16* @bitbuf, align 2, !dbg !599
LOAD [p=*q]:   %41 = load i16* %40, align 2, !dbg !599
STORE [*p=q]:   store i32 %42, i32* %c, align 4, !dbg !599
LOAD [p=*q]:   %43 = load i32* %c, align 4, !dbg !601
LOAD [p=*q]:   %36 = load i16* @bitbuf, align 2, !dbg !599
LOAD [p=*q]:   %41 = load i16* %40, align 2, !dbg !599
STORE [*p=q]:   store i32 %42, i32* %c, align 4, !dbg !599
LOAD [p=*q]:   %43 = load i32* %c, align 4, !dbg !601
STORE [*p=q]:   store i32 128, i32* %mask, align 4, !dbg !602
LOAD [p=*q]:   %72 = load i32* %c, align 4, !dbg !612
LOAD [p=*q]:   %75 = load i8* %74, align 1, !dbg !612
CALL [call func]:   call void (...)* bitcast (void (i32)* @fillbuf to void (...)*)(i32 %76), !dbg !612
LOAD [p=*q]:   %77 = load i32* %c, align 4, !dbg !613
STORE [*p=q]:   store i32 128, i32* %mask, align 4, !dbg !602
LOAD [p=*q]:   %47 = load i16* @bitbuf, align 2, !dbg !605
LOAD [p=*q]:   %49 = load i32* %mask, align 4, !dbg !605
LOAD [p=*q]:   %47 = load i16* @bitbuf, align 2, !dbg !605
LOAD [p=*q]:   %49 = load i32* %mask, align 4, !dbg !605
LOAD [p=*q]:   %53 = load i32* %c, align 4, !dbg !607
LOAD [p=*q]:   %56 = load i16* %55, !dbg !607
STORE [*p=q]:   store i32 %57, i32* %c, align 4, !dbg !607
LOAD [p=*q]:   %59 = load i32* %c, align 4, !dbg !608
LOAD [p=*q]:   %62 = load i16* %61, align 1, !dbg !608
STORE [*p=q]:   store i32 %63, i32* %c, align 4, !dbg !608
LOAD [p=*q]:   %53 = load i32* %c, align 4, !dbg !607
LOAD [p=*q]:   %56 = load i16* %55, !dbg !607
STORE [*p=q]:   store i32 %57, i32* %c, align 4, !dbg !607
LOAD [p=*q]:   %65 = load i32* %mask, align 4, !dbg !609
STORE [*p=q]:   store i32 %66, i32* %mask, align 4, !dbg !609
LOAD [p=*q]:   %59 = load i32* %c, align 4, !dbg !608
LOAD [p=*q]:   %62 = load i16* %61, align 1, !dbg !608
STORE [*p=q]:   store i32 %63, i32* %c, align 4, !dbg !608
LOAD [p=*q]:   %65 = load i32* %mask, align 4, !dbg !609
STORE [*p=q]:   store i32 %66, i32* %mask, align 4, !dbg !609
LOAD [p=*q]:   %65 = load i32* %mask, align 4, !dbg !609
STORE [*p=q]:   store i32 %66, i32* %mask, align 4, !dbg !609
LOAD [p=*q]:   %68 = load i32* %c, align 4, !dbg !610
LOAD [p=*q]:   %68 = load i32* %c, align 4, !dbg !610
LOAD [p=*q]:   %47 = load i16* @bitbuf, align 2, !dbg !605
LOAD [p=*q]:   %49 = load i32* %mask, align 4, !dbg !605
LOAD [p=*q]:   %72 = load i32* %c, align 4, !dbg !612
LOAD [p=*q]:   %75 = load i8* %74, align 1, !dbg !612
CALL [call func]:   call void (...)* bitcast (void (i32)* @fillbuf to void (...)*)(i32 %76), !dbg !612
LOAD [p=*q]:   %77 = load i32* %c, align 4, !dbg !613
LOAD [p=*q]:   %72 = load i32* %c, align 4, !dbg !612
LOAD [p=*q]:   %75 = load i8* %74, align 1, !dbg !612
CALL [call func]:   call void (...)* bitcast (void (i32)* @fillbuf to void (...)*)(i32 %76), !dbg !612
LOAD [p=*q]:   %77 = load i32* %c, align 4, !dbg !613
LOAD [p=*q]:   %80 = load i32* %c, align 4, !dbg !614
LOAD [p=*q]:   %105 = load i32* %c, align 4, !dbg !623
LOAD [p=*q]:   %108 = load i32* %i, align 4, !dbg !623
STORE [*p=q]:   store i32 %109, i32* %i, align 4, !dbg !623
STORE [*p=q]:   store i8 %107, i8* %111, align 1, !dbg !623
LOAD [p=*q]:   %80 = load i32* %c, align 4, !dbg !614
STORE [*p=q]:   store i32 1, i32* %c, align 4, !dbg !616
LOAD [p=*q]:   %84 = load i32* %c, align 4, !dbg !617
STORE [*p=q]:   store i32 1, i32* %c, align 4, !dbg !616
LOAD [p=*q]:   %84 = load i32* %c, align 4, !dbg !617
CALL [call func]:   %87 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 4), !dbg !618
STORE [*p=q]:   store i32 %88, i32* %c, align 4, !dbg !618
CALL [call func]:   %90 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 9), !dbg !619
STORE [*p=q]:   store i32 %91, i32* %c, align 4, !dbg !619
CALL [call func]:   %87 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 4), !dbg !618
STORE [*p=q]:   store i32 %88, i32* %c, align 4, !dbg !618
CALL [call func]:   %90 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 9), !dbg !619
STORE [*p=q]:   store i32 %91, i32* %c, align 4, !dbg !619
LOAD [p=*q]:   %95 = load i32* %c, align 4, !dbg !620
STORE [*p=q]:   store i32 %96, i32* %c, align 4, !dbg !620
LOAD [p=*q]:   %95 = load i32* %c, align 4, !dbg !620
STORE [*p=q]:   store i32 %96, i32* %c, align 4, !dbg !620
LOAD [p=*q]:   %99 = load i32* %i, align 4, !dbg !621
STORE [*p=q]:   store i32 %100, i32* %i, align 4, !dbg !621
STORE [*p=q]:   store i8 0, i8* %102, align 1, !dbg !621
LOAD [p=*q]:   %99 = load i32* %i, align 4, !dbg !621
STORE [*p=q]:   store i32 %100, i32* %i, align 4, !dbg !621
STORE [*p=q]:   store i8 0, i8* %102, align 1, !dbg !621
LOAD [p=*q]:   %95 = load i32* %c, align 4, !dbg !620
STORE [*p=q]:   store i32 %96, i32* %c, align 4, !dbg !620
LOAD [p=*q]:   %105 = load i32* %c, align 4, !dbg !623
LOAD [p=*q]:   %108 = load i32* %i, align 4, !dbg !623
STORE [*p=q]:   store i32 %109, i32* %i, align 4, !dbg !623
STORE [*p=q]:   store i8 %107, i8* %111, align 1, !dbg !623
LOAD [p=*q]:   %32 = load i32* %i, align 4, !dbg !598
LOAD [p=*q]:   %33 = load i32* %n, align 4, !dbg !598
LOAD [p=*q]:   %115 = load i32* %i, align 4, !dbg !625
LOAD [p=*q]:   %115 = load i32* %i, align 4, !dbg !625
LOAD [p=*q]:   %118 = load i32* %i, align 4, !dbg !626
STORE [*p=q]:   store i32 %119, i32* %i, align 4, !dbg !626
STORE [*p=q]:   store i8 0, i8* %121, align 1, !dbg !626
CALL [call func]:   call void (...)* bitcast (void (i32, i8*, i32, i16*)* @make_table to void (...)*)(i32 510, i8* getelementptr inbounds ([18432 x i8]* @outbuf, i32 0, i32 0), i32 12, i16* getelementptr inbounds ([32768 x i16]* @d_buf, i32 0, i32 0)), !dbg !627
LOAD [p=*q]:   %118 = load i32* %i, align 4, !dbg !626
STORE [*p=q]:   store i32 %119, i32* %i, align 4, !dbg !626
STORE [*p=q]:   store i8 0, i8* %121, align 1, !dbg !626
LOAD [p=*q]:   %115 = load i32* %i, align 4, !dbg !625
CALL [call func]:   call void (...)* bitcast (void (i32, i8*, i32, i16*)* @make_table to void (...)*)(i32 510, i8* getelementptr inbounds ([18432 x i8]* @outbuf, i32 0, i32 0), i32 12, i16* getelementptr inbounds ([32768 x i16]* @d_buf, i32 0, i32 0)), !dbg !627
Analyzing return instruction for read_c_len
No return value for: read_c_len
Analyzing return instruction for read_c_len
No return value for: read_c_len
[Processing][Function][read_pt_len]
STORE [*p=q]:   store i32 %nn, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %nbit, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
STORE [*p=q]:   store i32 %i_special, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !580), !dbg !582
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %c}, metadata !583), !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !585), !dbg !586
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %mask}, metadata !587), !dbg !588
LOAD [p=*q]:   %4 = load i32* %2, align 4, !dbg !589
CALL [call func]:   %5 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 %4), !dbg !589
STORE [*p=q]:   store i32 %5, i32* %n, align 4, !dbg !589
LOAD [p=*q]:   %6 = load i32* %n, align 4, !dbg !590
LOAD [p=*q]:   %9 = load i32* %2, align 4, !dbg !591
CALL [call func]:   %10 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 %9), !dbg !591
STORE [*p=q]:   store i32 %10, i32* %c, align 4, !dbg !591
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !593
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !602
LOAD [p=*q]:   %9 = load i32* %2, align 4, !dbg !591
CALL [call func]:   %10 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 %9), !dbg !591
STORE [*p=q]:   store i32 %10, i32* %c, align 4, !dbg !591
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !593
LOAD [p=*q]:   %12 = load i32* %i, align 4, !dbg !593
LOAD [p=*q]:   %13 = load i32* %1, align 4, !dbg !593
LOAD [p=*q]:   %12 = load i32* %i, align 4, !dbg !593
LOAD [p=*q]:   %13 = load i32* %1, align 4, !dbg !593
LOAD [p=*q]:   %16 = load i32* %i, align 4, !dbg !595
STORE [*p=q]:   store i8 0, i8* %18, align 1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !597
LOAD [p=*q]:   %16 = load i32* %i, align 4, !dbg !595
STORE [*p=q]:   store i8 0, i8* %18, align 1, !dbg !595
LOAD [p=*q]:   %20 = load i32* %i, align 4, !dbg !596
STORE [*p=q]:   store i32 %21, i32* %i, align 4, !dbg !596
LOAD [p=*q]:   %20 = load i32* %i, align 4, !dbg !596
STORE [*p=q]:   store i32 %21, i32* %i, align 4, !dbg !596
LOAD [p=*q]:   %12 = load i32* %i, align 4, !dbg !593
LOAD [p=*q]:   %13 = load i32* %1, align 4, !dbg !593
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !597
LOAD [p=*q]:   %24 = load i32* %i, align 4, !dbg !597
LOAD [p=*q]:   %24 = load i32* %i, align 4, !dbg !597
LOAD [p=*q]:   %27 = load i32* %c, align 4, !dbg !599
LOAD [p=*q]:   %29 = load i32* %i, align 4, !dbg !599
STORE [*p=q]:   store i16 %28, i16* %31, align 2, !dbg !599
LOAD [p=*q]:   %27 = load i32* %c, align 4, !dbg !599
LOAD [p=*q]:   %29 = load i32* %i, align 4, !dbg !599
STORE [*p=q]:   store i16 %28, i16* %31, align 2, !dbg !599
LOAD [p=*q]:   %33 = load i32* %i, align 4, !dbg !600
STORE [*p=q]:   store i32 %34, i32* %i, align 4, !dbg !600
LOAD [p=*q]:   %33 = load i32* %i, align 4, !dbg !600
STORE [*p=q]:   store i32 %34, i32* %i, align 4, !dbg !600
LOAD [p=*q]:   %24 = load i32* %i, align 4, !dbg !597
Analyzing return instruction for read_pt_len
No return value for: read_pt_len
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !602
LOAD [p=*q]:   %38 = load i32* %i, align 4, !dbg !604
LOAD [p=*q]:   %39 = load i32* %n, align 4, !dbg !604
LOAD [p=*q]:   %38 = load i32* %i, align 4, !dbg !604
LOAD [p=*q]:   %39 = load i32* %n, align 4, !dbg !604
LOAD [p=*q]:   %42 = load i16* @bitbuf, align 2, !dbg !605
STORE [*p=q]:   store i32 %44, i32* %c, align 4, !dbg !605
LOAD [p=*q]:   %45 = load i32* %c, align 4, !dbg !607
LOAD [p=*q]:   %42 = load i16* @bitbuf, align 2, !dbg !605
STORE [*p=q]:   store i32 %44, i32* %c, align 4, !dbg !605
LOAD [p=*q]:   %45 = load i32* %c, align 4, !dbg !607
STORE [*p=q]:   store i32 4096, i32* %mask, align 4, !dbg !608
LOAD [p=*q]:   %65 = load i32* %c, align 4, !dbg !618
STORE [*p=q]:   store i32 4096, i32* %mask, align 4, !dbg !608
LOAD [p=*q]:   %49 = load i32* %mask, align 4, !dbg !610
LOAD [p=*q]:   %50 = load i16* @bitbuf, align 2, !dbg !610
LOAD [p=*q]:   %49 = load i32* %mask, align 4, !dbg !610
LOAD [p=*q]:   %50 = load i16* @bitbuf, align 2, !dbg !610
LOAD [p=*q]:   %55 = load i32* %mask, align 4, !dbg !611
STORE [*p=q]:   store i32 %56, i32* %mask, align 4, !dbg !611
LOAD [p=*q]:   %57 = load i32* %c, align 4, !dbg !613
STORE [*p=q]:   store i32 %58, i32* %c, align 4, !dbg !613
LOAD [p=*q]:   %60 = load i32* %c, align 4, !dbg !615
LOAD [p=*q]:   %55 = load i32* %mask, align 4, !dbg !611
STORE [*p=q]:   store i32 %56, i32* %mask, align 4, !dbg !611
LOAD [p=*q]:   %57 = load i32* %c, align 4, !dbg !613
STORE [*p=q]:   store i32 %58, i32* %c, align 4, !dbg !613
LOAD [p=*q]:   %49 = load i32* %mask, align 4, !dbg !610
LOAD [p=*q]:   %50 = load i16* @bitbuf, align 2, !dbg !610
LOAD [p=*q]:   %60 = load i32* %c, align 4, !dbg !615
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([11 x i8]* @.str149, i32 0, i32 0)) #7, !dbg !616
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([11 x i8]* @.str149, i32 0, i32 0)) #7, !dbg !616
LOAD [p=*q]:   %65 = load i32* %c, align 4, !dbg !618
LOAD [p=*q]:   %65 = load i32* %c, align 4, !dbg !618
LOAD [p=*q]:   %69 = load i32* %c, align 4, !dbg !618
CALL [call func]:   call void (...)* bitcast (void (i32)* @fillbuf to void (...)*)(i32 %72), !dbg !618
LOAD [p=*q]:   %73 = load i32* %c, align 4, !dbg !619
LOAD [p=*q]:   %75 = load i32* %i, align 4, !dbg !619
STORE [*p=q]:   store i32 %76, i32* %i, align 4, !dbg !619
STORE [*p=q]:   store i8 %74, i8* %78, align 1, !dbg !619
LOAD [p=*q]:   %79 = load i32* %i, align 4, !dbg !620
LOAD [p=*q]:   %80 = load i32* %3, align 4, !dbg !620
LOAD [p=*q]:   %69 = load i32* %c, align 4, !dbg !618
CALL [call func]:   call void (...)* bitcast (void (i32)* @fillbuf to void (...)*)(i32 %72), !dbg !618
LOAD [p=*q]:   %73 = load i32* %c, align 4, !dbg !619
LOAD [p=*q]:   %75 = load i32* %i, align 4, !dbg !619
STORE [*p=q]:   store i32 %76, i32* %i, align 4, !dbg !619
STORE [*p=q]:   store i8 %74, i8* %78, align 1, !dbg !619
LOAD [p=*q]:   %79 = load i32* %i, align 4, !dbg !620
LOAD [p=*q]:   %80 = load i32* %3, align 4, !dbg !620
CALL [call func]:   call void (...)* bitcast (void (i32)* @fillbuf to void (...)*)(i32 %72), !dbg !618
LOAD [p=*q]:   %73 = load i32* %c, align 4, !dbg !619
LOAD [p=*q]:   %75 = load i32* %i, align 4, !dbg !619
STORE [*p=q]:   store i32 %76, i32* %i, align 4, !dbg !619
STORE [*p=q]:   store i8 %74, i8* %78, align 1, !dbg !619
LOAD [p=*q]:   %79 = load i32* %i, align 4, !dbg !620
LOAD [p=*q]:   %80 = load i32* %3, align 4, !dbg !620
CALL [call func]:   %83 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 2), !dbg !621
STORE [*p=q]:   store i32 %83, i32* %c, align 4, !dbg !621
CALL [call func]:   %83 = call i32 (...)* bitcast (i32 (i32)* @getbits to i32 (...)*)(i32 2), !dbg !621
STORE [*p=q]:   store i32 %83, i32* %c, align 4, !dbg !621
LOAD [p=*q]:   %85 = load i32* %c, align 4, !dbg !623
STORE [*p=q]:   store i32 %86, i32* %c, align 4, !dbg !623
LOAD [p=*q]:   %85 = load i32* %c, align 4, !dbg !623
STORE [*p=q]:   store i32 %86, i32* %c, align 4, !dbg !623
LOAD [p=*q]:   %89 = load i32* %i, align 4, !dbg !624
STORE [*p=q]:   store i32 %90, i32* %i, align 4, !dbg !624
STORE [*p=q]:   store i8 0, i8* %92, align 1, !dbg !624
LOAD [p=*q]:   %89 = load i32* %i, align 4, !dbg !624
STORE [*p=q]:   store i32 %90, i32* %i, align 4, !dbg !624
STORE [*p=q]:   store i8 0, i8* %92, align 1, !dbg !624
LOAD [p=*q]:   %85 = load i32* %c, align 4, !dbg !623
STORE [*p=q]:   store i32 %86, i32* %c, align 4, !dbg !623
LOAD [p=*q]:   %38 = load i32* %i, align 4, !dbg !604
LOAD [p=*q]:   %39 = load i32* %n, align 4, !dbg !604
LOAD [p=*q]:   %97 = load i32* %i, align 4, !dbg !627
LOAD [p=*q]:   %98 = load i32* %1, align 4, !dbg !627
LOAD [p=*q]:   %97 = load i32* %i, align 4, !dbg !627
LOAD [p=*q]:   %98 = load i32* %1, align 4, !dbg !627
LOAD [p=*q]:   %101 = load i32* %i, align 4, !dbg !628
STORE [*p=q]:   store i32 %102, i32* %i, align 4, !dbg !628
STORE [*p=q]:   store i8 0, i8* %104, align 1, !dbg !628
LOAD [p=*q]:   %106 = load i32* %1, align 4, !dbg !629
CALL [call func]:   call void (...)* bitcast (void (i32, i8*, i32, i16*)* @make_table to void (...)*)(i32 %106, i8* getelementptr inbounds ([32 x i8]* @pt_len, i32 0, i32 0), i32 8, i16* getelementptr inbounds ([256 x i16]* @pt_table, i32 0, i32 0)), !dbg !629
LOAD [p=*q]:   %101 = load i32* %i, align 4, !dbg !628
STORE [*p=q]:   store i32 %102, i32* %i, align 4, !dbg !628
STORE [*p=q]:   store i8 0, i8* %104, align 1, !dbg !628
LOAD [p=*q]:   %97 = load i32* %i, align 4, !dbg !627
LOAD [p=*q]:   %98 = load i32* %1, align 4, !dbg !627
LOAD [p=*q]:   %106 = load i32* %1, align 4, !dbg !629
CALL [call func]:   call void (...)* bitcast (void (i32, i8*, i32, i16*)* @make_table to void (...)*)(i32 %106, i8* getelementptr inbounds ([32 x i8]* @pt_len, i32 0, i32 0), i32 8, i16* getelementptr inbounds ([256 x i16]* @pt_table, i32 0, i32 0)), !dbg !629
Analyzing return instruction for read_pt_len
No return value for: read_pt_len
Analyzing return instruction for read_pt_len
No return value for: read_pt_len
[Processing][Function][getbits]
STORE [*p=q]:   store i32 %n, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %x}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i16* @bitbuf, align 2, !dbg !579
LOAD [p=*q]:   %4 = load i32* %1, align 4, !dbg !579
STORE [*p=q]:   store i32 %8, i32* %x, align 4, !dbg !579
LOAD [p=*q]:   %9 = load i32* %1, align 4, !dbg !580
CALL [call func]:   call void (...)* bitcast (void (i32)* @fillbuf to void (...)*)(i32 %9), !dbg !580
LOAD [p=*q]:   %10 = load i32* %x, align 4, !dbg !581
Analyzing return instruction for getbits
	  %10 = load i32* %x, align 4, !dbg !581
[Processing][Function][progerror]
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
Analyzing return instruction for progerror
No return value for: progerror
[Processing][Function][check_ofname]
LOAD [p=*q]:   %2 = load i32* @force, align 4, !dbg !574
CALL [call func]:   %37 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !595
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %ok}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* %ok, align 4, !dbg !579
LOAD [p=*q]:   %5 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %6 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %7 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([23 x i8]* @.str42, i32 0, i32 0), i8* %6, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !580
LOAD [p=*q]:   %8 = load i32* @foreground, align 4, !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %ok}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* %ok, align 4, !dbg !579
LOAD [p=*q]:   %5 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %6 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %7 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([23 x i8]* @.str42, i32 0, i32 0), i8* %6, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !580
LOAD [p=*q]:   %8 = load i32* @foreground, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i8* @presume_input_tty, align 1, !dbg !581
LOAD [p=*q]:   %26 = load i32* %ok, align 4, !dbg !588
LOAD [p=*q]:   %11 = load i8* @presume_input_tty, align 1, !dbg !581
LOAD [p=*q]:   %19 = load %struct._IO_FILE** @stderr, align 8, !dbg !583
CALL [call func]:   %20 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([37 x i8]* @.str43, i32 0, i32 0)), !dbg !583
LOAD [p=*q]:   %21 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
CALL [call func]:   %22 = call i32 @rpl_fflush(%struct._IO_FILE* %21), !dbg !585
CALL [call func]:   %23 = call zeroext i1 @yesno(), !dbg !586
STORE [*p=q]:   store i32 %24, i32* %ok, align 4, !dbg !586
LOAD [p=*q]:   %14 = load %struct._IO_FILE** @stdin, align 8, !dbg !582
CALL [call func]:   %15 = call i32 @fileno(%struct._IO_FILE* %14) #3, !dbg !582
CALL [call func]:   %16 = call i32 @isatty(i32 %15) #3, !dbg !582
LOAD [p=*q]:   %14 = load %struct._IO_FILE** @stdin, align 8, !dbg !582
CALL [call func]:   %15 = call i32 @fileno(%struct._IO_FILE* %14) #3, !dbg !582
CALL [call func]:   %16 = call i32 @isatty(i32 %15) #3, !dbg !582
LOAD [p=*q]:   %19 = load %struct._IO_FILE** @stderr, align 8, !dbg !583
CALL [call func]:   %20 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([37 x i8]* @.str43, i32 0, i32 0)), !dbg !583
LOAD [p=*q]:   %21 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
CALL [call func]:   %22 = call i32 @rpl_fflush(%struct._IO_FILE* %21), !dbg !585
CALL [call func]:   %23 = call zeroext i1 @yesno(), !dbg !586
STORE [*p=q]:   store i32 %24, i32* %ok, align 4, !dbg !586
LOAD [p=*q]:   %26 = load i32* %ok, align 4, !dbg !588
LOAD [p=*q]:   %19 = load %struct._IO_FILE** @stderr, align 8, !dbg !583
CALL [call func]:   %20 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([37 x i8]* @.str43, i32 0, i32 0)), !dbg !583
LOAD [p=*q]:   %21 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
CALL [call func]:   %22 = call i32 @rpl_fflush(%struct._IO_FILE* %21), !dbg !585
CALL [call func]:   %23 = call zeroext i1 @yesno(), !dbg !586
STORE [*p=q]:   store i32 %24, i32* %ok, align 4, !dbg !586
LOAD [p=*q]:   %26 = load i32* %ok, align 4, !dbg !588
LOAD [p=*q]:   %26 = load i32* %ok, align 4, !dbg !588
LOAD [p=*q]:   %29 = load %struct._IO_FILE** @stderr, align 8, !dbg !589
CALL [call func]:   %30 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([18 x i8]* @.str44, i32 0, i32 0)), !dbg !589
LOAD [p=*q]:   %31 = load i32* @exit_code, align 4, !dbg !591
LOAD [p=*q]:   %29 = load %struct._IO_FILE** @stderr, align 8, !dbg !589
CALL [call func]:   %30 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([18 x i8]* @.str44, i32 0, i32 0)), !dbg !589
LOAD [p=*q]:   %31 = load i32* @exit_code, align 4, !dbg !591
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !592
STORE [*p=q]:   store i32 1, i32* %1, !dbg !593
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !592
STORE [*p=q]:   store i32 1, i32* %1, !dbg !593
STORE [*p=q]:   store i32 1, i32* %1, !dbg !593
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
Analyzing return instruction for check_ofname
	  %42 = load i32* %1, !dbg !600
CALL [call func]:   %37 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !595
CALL [call func]:   %37 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !595
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !596
STORE [*p=q]:   store i32 1, i32* %1, !dbg !598
STORE [*p=q]:   store i32 0, i32* %1, !dbg !599
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !596
STORE [*p=q]:   store i32 1, i32* %1, !dbg !598
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
Analyzing return instruction for check_ofname
	  %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
Analyzing return instruction for check_ofname
	  %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
Analyzing return instruction for check_ofname
	  %42 = load i32* %1, !dbg !600
[Processing][Function][shorten_name]
STORE [*p=q]:   store i8* %name, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %trunc}, metadata !579), !dbg !580
STORE [*p=q]:   store i8* null, i8** %trunc, align 8, !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %plen}, metadata !582), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %min_part}, metadata !584), !dbg !585
STORE [*p=q]:   store i32 3, i32* %min_part, align 4, !dbg !586
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !587), !dbg !588
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !589
CALL [call func]:   %3 = call i64 @strlen(i8* %2) #4, !dbg !589
STORE [*p=q]:   store i32 %4, i32* %len, align 4, !dbg !589
LOAD [p=*q]:   %5 = load i32* @decompress, align 4, !dbg !590
LOAD [p=*q]:   %8 = load i32* %len, align 4, !dbg !591
LOAD [p=*q]:   %18 = load i8** %1, align 8, !dbg !596
CALL [call func]:   %19 = call i8* (...)* bitcast (i8* (i8*)* @get_suffix to i8* (...)*)(i8* %18), !dbg !596
STORE [*p=q]:   store i8* %19, i8** %p, align 8, !dbg !596
LOAD [p=*q]:   %20 = load i8** %p, align 8, !dbg !597
LOAD [p=*q]:   %8 = load i32* %len, align 4, !dbg !591
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([15 x i8]* @.str45, i32 0, i32 0)) #7, !dbg !593
LOAD [p=*q]:   %12 = load i32* %len, align 4, !dbg !594
LOAD [p=*q]:   %15 = load i8** %1, align 8, !dbg !594
STORE [*p=q]:   store i8 0, i8* %16, !dbg !594
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([15 x i8]* @.str45, i32 0, i32 0)) #7, !dbg !593
LOAD [p=*q]:   %12 = load i32* %len, align 4, !dbg !594
LOAD [p=*q]:   %15 = load i8** %1, align 8, !dbg !594
STORE [*p=q]:   store i8 0, i8* %16, !dbg !594
Analyzing return instruction for shorten_name
No return value for: shorten_name
LOAD [p=*q]:   %18 = load i8** %1, align 8, !dbg !596
CALL [call func]:   %19 = call i8* (...)* bitcast (i8* (i8*)* @get_suffix to i8* (...)*)(i8* %18), !dbg !596
STORE [*p=q]:   store i8* %19, i8** %p, align 8, !dbg !596
LOAD [p=*q]:   %20 = load i8** %p, align 8, !dbg !597
LOAD [p=*q]:   %24 = load i8** %p, align 8, !dbg !599
STORE [*p=q]:   store i8 0, i8* %24, !dbg !599
STORE [*p=q]:   store i32 1, i32* @save_orig_name, align 4, !dbg !600
LOAD [p=*q]:   %25 = load i32* %len, align 4, !dbg !601
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([22 x i8]* @.str46, i32 0, i32 0)) #7, !dbg !598
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([22 x i8]* @.str46, i32 0, i32 0)) #7, !dbg !598
LOAD [p=*q]:   %24 = load i8** %p, align 8, !dbg !599
STORE [*p=q]:   store i8 0, i8* %24, !dbg !599
STORE [*p=q]:   store i32 1, i32* @save_orig_name, align 4, !dbg !600
LOAD [p=*q]:   %25 = load i32* %len, align 4, !dbg !601
LOAD [p=*q]:   %28 = load i8** %p, align 8, !dbg !602
CALL [call func]:   %30 = call i32 @strcmp(i8* %29, i8* getelementptr inbounds ([5 x i8]* @.str47, i32 0, i32 0)) #4, !dbg !602
LOAD [p=*q]:   %28 = load i8** %p, align 8, !dbg !602
CALL [call func]:   %30 = call i32 @strcmp(i8* %29, i8* getelementptr inbounds ([5 x i8]* @.str47, i32 0, i32 0)) #4, !dbg !602
LOAD [p=*q]:   %33 = load i8** %p, align 8, !dbg !603
CALL [call func]:   %35 = call i8* @strcpy(i8* %34, i8* getelementptr inbounds ([5 x i8]* @.str48, i32 0, i32 0)) #3, !dbg !603
LOAD [p=*q]:   %33 = load i8** %p, align 8, !dbg !603
CALL [call func]:   %35 = call i8* @strcpy(i8* %34, i8* getelementptr inbounds ([5 x i8]* @.str48, i32 0, i32 0)) #3, !dbg !603
Analyzing return instruction for shorten_name
No return value for: shorten_name
LOAD [p=*q]:   %38 = load i8** %1, align 8, !dbg !607
CALL [call func]:   %39 = call i8* @strrchr(i8* %38, i32 47) #4, !dbg !607
STORE [*p=q]:   store i8* %39, i8** %p, align 8, !dbg !607
LOAD [p=*q]:   %40 = load i8** %p, align 8, !dbg !609
LOAD [p=*q]:   %38 = load i8** %1, align 8, !dbg !607
CALL [call func]:   %39 = call i8* @strrchr(i8* %38, i32 47) #4, !dbg !607
STORE [*p=q]:   store i8* %39, i8** %p, align 8, !dbg !607
LOAD [p=*q]:   %40 = load i8** %p, align 8, !dbg !609
LOAD [p=*q]:   %43 = load i8** %p, align 8, !dbg !609
LOAD [p=*q]:   %46 = load i8** %1, align 8, !dbg !609
LOAD [p=*q]:   %43 = load i8** %p, align 8, !dbg !609
STORE [*p=q]:   store i8* %48, i8** %p, align 8, !dbg !609
LOAD [p=*q]:   %46 = load i8** %1, align 8, !dbg !609
STORE [*p=q]:   store i8* %48, i8** %p, align 8, !dbg !609
STORE [*p=q]:   store i8* %48, i8** %p, align 8, !dbg !609
LOAD [p=*q]:   %50 = load i8** %p, align 8, !dbg !610
LOAD [p=*q]:   %51 = load i8* %50, !dbg !610
LOAD [p=*q]:   %50 = load i8** %p, align 8, !dbg !610
LOAD [p=*q]:   %51 = load i8* %50, !dbg !610
LOAD [p=*q]:   %54 = load i8** %p, align 8, !dbg !611
CALL [call func]:   %55 = call i64 @strcspn(i8* %54, i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i32 0)) #4, !dbg !611
STORE [*p=q]:   store i32 %56, i32* %plen, align 4, !dbg !611
LOAD [p=*q]:   %57 = load i32* %plen, align 4, !dbg !613
LOAD [p=*q]:   %58 = load i8** %p, align 8, !dbg !613
STORE [*p=q]:   store i8* %60, i8** %p, align 8, !dbg !613
LOAD [p=*q]:   %61 = load i32* %plen, align 4, !dbg !614
LOAD [p=*q]:   %62 = load i32* %min_part, align 4, !dbg !614
LOAD [p=*q]:   %54 = load i8** %p, align 8, !dbg !611
CALL [call func]:   %55 = call i64 @strcspn(i8* %54, i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i32 0)) #4, !dbg !611
STORE [*p=q]:   store i32 %56, i32* %plen, align 4, !dbg !611
LOAD [p=*q]:   %57 = load i32* %plen, align 4, !dbg !613
LOAD [p=*q]:   %58 = load i8** %p, align 8, !dbg !613
STORE [*p=q]:   store i8* %60, i8** %p, align 8, !dbg !613
LOAD [p=*q]:   %61 = load i32* %plen, align 4, !dbg !614
LOAD [p=*q]:   %62 = load i32* %min_part, align 4, !dbg !614
LOAD [p=*q]:   %65 = load i8** %p, align 8, !dbg !615
STORE [*p=q]:   store i8* %66, i8** %trunc, align 8, !dbg !615
LOAD [p=*q]:   %68 = load i8** %p, align 8, !dbg !616
LOAD [p=*q]:   %69 = load i8* %68, !dbg !616
LOAD [p=*q]:   %65 = load i8** %p, align 8, !dbg !615
STORE [*p=q]:   store i8* %66, i8** %trunc, align 8, !dbg !615
LOAD [p=*q]:   %68 = load i8** %p, align 8, !dbg !616
LOAD [p=*q]:   %69 = load i8* %68, !dbg !616
LOAD [p=*q]:   %68 = load i8** %p, align 8, !dbg !616
LOAD [p=*q]:   %69 = load i8* %68, !dbg !616
LOAD [p=*q]:   %72 = load i8** %p, align 8, !dbg !617
STORE [*p=q]:   store i8* %73, i8** %p, align 8, !dbg !617
LOAD [p=*q]:   %72 = load i8** %p, align 8, !dbg !617
STORE [*p=q]:   store i8* %73, i8** %p, align 8, !dbg !617
LOAD [p=*q]:   %50 = load i8** %p, align 8, !dbg !610
LOAD [p=*q]:   %51 = load i8* %50, !dbg !610
LOAD [p=*q]:   %77 = load i8** %trunc, align 8, !dbg !619
LOAD [p=*q]:   %77 = load i8** %trunc, align 8, !dbg !619
LOAD [p=*q]:   %80 = load i32* %min_part, align 4, !dbg !619
STORE [*p=q]:   store i32 %81, i32* %min_part, align 4, !dbg !619
LOAD [p=*q]:   %80 = load i32* %min_part, align 4, !dbg !619
STORE [*p=q]:   store i32 %81, i32* %min_part, align 4, !dbg !619
LOAD [p=*q]:   %38 = load i8** %1, align 8, !dbg !607
CALL [call func]:   %39 = call i8* @strrchr(i8* %38, i32 47) #4, !dbg !607
STORE [*p=q]:   store i8* %39, i8** %p, align 8, !dbg !607
LOAD [p=*q]:   %40 = load i8** %p, align 8, !dbg !609
LOAD [p=*q]:   %86 = load i8** %trunc, align 8, !dbg !620
LOAD [p=*q]:   %86 = load i8** %trunc, align 8, !dbg !620
LOAD [p=*q]:   %104 = load i8** %1, align 8, !dbg !628
LOAD [p=*q]:   %105 = load i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i64 0), !dbg !628
CALL [call func]:   %107 = call i8* @strrchr(i8* %104, i32 %106) #4, !dbg !628
STORE [*p=q]:   store i8* %107, i8** %trunc, align 8, !dbg !628
LOAD [p=*q]:   %108 = load i8** %trunc, align 8, !dbg !630
LOAD [p=*q]:   %90 = load i8** %trunc, align 8, !dbg !623
LOAD [p=*q]:   %92 = load i8* %91, !dbg !623
LOAD [p=*q]:   %93 = load i8** %trunc, align 8, !dbg !623
STORE [*p=q]:   store i8 %92, i8* %94, !dbg !623
LOAD [p=*q]:   %90 = load i8** %trunc, align 8, !dbg !623
LOAD [p=*q]:   %92 = load i8* %91, !dbg !623
LOAD [p=*q]:   %93 = load i8** %trunc, align 8, !dbg !623
STORE [*p=q]:   store i8 %92, i8* %94, !dbg !623
LOAD [p=*q]:   %96 = load i8** %trunc, align 8, !dbg !625
STORE [*p=q]:   store i8* %97, i8** %trunc, align 8, !dbg !625
LOAD [p=*q]:   %98 = load i8* %96, !dbg !625
LOAD [p=*q]:   %96 = load i8** %trunc, align 8, !dbg !625
STORE [*p=q]:   store i8* %97, i8** %trunc, align 8, !dbg !625
LOAD [p=*q]:   %98 = load i8* %96, !dbg !625
LOAD [p=*q]:   %90 = load i8** %trunc, align 8, !dbg !623
LOAD [p=*q]:   %92 = load i8* %91, !dbg !623
LOAD [p=*q]:   %93 = load i8** %trunc, align 8, !dbg !623
STORE [*p=q]:   store i8 %92, i8* %94, !dbg !623
LOAD [p=*q]:   %101 = load i8** %trunc, align 8, !dbg !626
STORE [*p=q]:   store i8* %102, i8** %trunc, align 8, !dbg !626
LOAD [p=*q]:   %101 = load i8** %trunc, align 8, !dbg !626
STORE [*p=q]:   store i8* %102, i8** %trunc, align 8, !dbg !626
LOAD [p=*q]:   %122 = load i8** %trunc, align 8, !dbg !634
LOAD [p=*q]:   %123 = load i8** @z_suffix, align 8, !dbg !634
CALL [call func]:   %124 = call i8* @strcpy(i8* %122, i8* %123) #3, !dbg !634
LOAD [p=*q]:   %104 = load i8** %1, align 8, !dbg !628
LOAD [p=*q]:   %105 = load i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i64 0), !dbg !628
CALL [call func]:   %107 = call i8* @strrchr(i8* %104, i32 %106) #4, !dbg !628
STORE [*p=q]:   store i8* %107, i8** %trunc, align 8, !dbg !628
LOAD [p=*q]:   %108 = load i8** %trunc, align 8, !dbg !630
LOAD [p=*q]:   %112 = load i8** %trunc, align 8, !dbg !632
LOAD [p=*q]:   %114 = load i8* %113, !dbg !632
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([31 x i8]* @.str50, i32 0, i32 0)) #7, !dbg !631
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([31 x i8]* @.str50, i32 0, i32 0)) #7, !dbg !631
LOAD [p=*q]:   %112 = load i8** %trunc, align 8, !dbg !632
LOAD [p=*q]:   %114 = load i8* %113, !dbg !632
LOAD [p=*q]:   %118 = load i8** %trunc, align 8, !dbg !633
STORE [*p=q]:   store i8* %119, i8** %trunc, align 8, !dbg !633
LOAD [p=*q]:   %118 = load i8** %trunc, align 8, !dbg !633
STORE [*p=q]:   store i8* %119, i8** %trunc, align 8, !dbg !633
LOAD [p=*q]:   %122 = load i8** %trunc, align 8, !dbg !634
LOAD [p=*q]:   %123 = load i8** @z_suffix, align 8, !dbg !634
CALL [call func]:   %124 = call i8* @strcpy(i8* %122, i8* %123) #3, !dbg !634
LOAD [p=*q]:   %122 = load i8** %trunc, align 8, !dbg !634
LOAD [p=*q]:   %123 = load i8** @z_suffix, align 8, !dbg !634
CALL [call func]:   %124 = call i8* @strcpy(i8* %122, i8* %123) #3, !dbg !634
Analyzing return instruction for shorten_name
No return value for: shorten_name
Analyzing return instruction for shorten_name
No return value for: shorten_name
[Processing][Function][copy_stat]
STORE [*p=q]:   store %struct.stat* %ifstat, %struct.stat** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.stat** %1}, metadata !574), !dbg !576
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %mode}, metadata !577), !dbg !580
LOAD [p=*q]:   %4 = load %struct.stat** %1, align 8, !dbg !581
LOAD [p=*q]:   %6 = load i32* %5, align 4, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %mode, align 4, !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !582), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x %struct.timespec]* %timespec}, metadata !584), !dbg !588
LOAD [p=*q]:   %9 = load %struct.stat** %1, align 8, !dbg !590
CALL [call func]:   %10 = call { i64, i64 } @get_stat_atime(%struct.stat* %9), !dbg !590
STORE [*p=q]:   store i64 %13, i64* %12, align 1, !dbg !590
STORE [*p=q]:   store i64 %15, i64* %14, align 1, !dbg !590
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 16, i32 8, i1 false), !dbg !590
LOAD [p=*q]:   %19 = load %struct.stat** %1, align 8, !dbg !592
CALL [call func]:   %20 = call { i64, i64 } @get_stat_mtime(%struct.stat* %19), !dbg !592
STORE [*p=q]:   store i64 %23, i64* %22, align 1, !dbg !592
STORE [*p=q]:   store i64 %25, i64* %24, align 1, !dbg !592
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false), !dbg !592
LOAD [p=*q]:   %28 = load i32* @decompress, align 4, !dbg !593
LOAD [p=*q]:   %31 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !593
LOAD [p=*q]:   %55 = load i32* @ofd, align 4, !dbg !601
CALL [call func]:   %57 = call i32 @fdutimens(i32 %55, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), %struct.timespec* %56), !dbg !601
LOAD [p=*q]:   %31 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !593
LOAD [p=*q]:   %36 = load i64* %35, align 8, !dbg !593
LOAD [p=*q]:   %37 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !593
LOAD [p=*q]:   %55 = load i32* @ofd, align 4, !dbg !601
CALL [call func]:   %57 = call i32 @fdutimens(i32 %55, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), %struct.timespec* %56), !dbg !601
LOAD [p=*q]:   %36 = load i64* %35, align 8, !dbg !593
LOAD [p=*q]:   %37 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !593
LOAD [p=*q]:   %42 = load i64* %41, align 8, !dbg !593
LOAD [p=*q]:   %43 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !593
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* bitcast (%struct.timespec* @time_stamp to i8*), i64 16, i32 8, i1 false), !dbg !594
LOAD [p=*q]:   %48 = load i32* @verbose, align 4, !dbg !596
LOAD [p=*q]:   %42 = load i64* %41, align 8, !dbg !593
LOAD [p=*q]:   %43 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !593
LOAD [p=*q]:   %55 = load i32* @ofd, align 4, !dbg !601
CALL [call func]:   %57 = call i32 @fdutimens(i32 %55, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), %struct.timespec* %56), !dbg !601
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* bitcast (%struct.timespec* @time_stamp to i8*), i64 16, i32 8, i1 false), !dbg !594
LOAD [p=*q]:   %48 = load i32* @verbose, align 4, !dbg !596
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* bitcast (%struct.timespec* @time_stamp to i8*), i64 16, i32 8, i1 false), !dbg !594
LOAD [p=*q]:   %48 = load i32* @verbose, align 4, !dbg !596
LOAD [p=*q]:   %51 = load %struct._IO_FILE** @stderr, align 8, !dbg !597
CALL [call func]:   %52 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([25 x i8]* @.str40, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !597
LOAD [p=*q]:   %51 = load %struct._IO_FILE** @stderr, align 8, !dbg !597
CALL [call func]:   %52 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([25 x i8]* @.str40, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !597
LOAD [p=*q]:   %55 = load i32* @ofd, align 4, !dbg !601
CALL [call func]:   %57 = call i32 @fdutimens(i32 %55, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), %struct.timespec* %56), !dbg !601
LOAD [p=*q]:   %55 = load i32* @ofd, align 4, !dbg !601
CALL [call func]:   %57 = call i32 @fdutimens(i32 %55, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), %struct.timespec* %56), !dbg !601
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !602), !dbg !604
CALL [call func]:   %60 = call i32* @__errno_location() #1, !dbg !605
LOAD [p=*q]:   %61 = load i32* %60, !dbg !605
STORE [*p=q]:   store i32 %61, i32* %e, align 4, !dbg !605
LOAD [p=*q]:   %62 = load i32* @quiet, align 4, !dbg !606
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %__x}, metadata !614), !dbg !616
LOAD [p=*q]:   %80 = load i32* @ofd, align 4, !dbg !616
LOAD [p=*q]:   %81 = load %struct.stat** %1, align 8, !dbg !616
LOAD [p=*q]:   %83 = load i32* %82, align 4, !dbg !616
LOAD [p=*q]:   %84 = load %struct.stat** %1, align 8, !dbg !616
LOAD [p=*q]:   %86 = load i32* %85, align 4, !dbg !616
CALL [call func]:   %87 = call i32 @fchown(i32 %80, i32 %83, i32 %86) #3, !dbg !616
STORE [*p=q]:   store i32 %87, i32* %__x, align 4, !dbg !616
LOAD [p=*q]:   %88 = load i32* %__x, align 4, !dbg !616
LOAD [p=*q]:   %89 = load i32* @ofd, align 4, !dbg !617
LOAD [p=*q]:   %90 = load i32* %mode, align 4, !dbg !617
CALL [call func]:   %91 = call i32 @fchmod(i32 %89, i32 %90) #3, !dbg !617
STORE [*p=q]:   store i32 %91, i32* %r, align 4, !dbg !617
LOAD [p=*q]:   %92 = load i32* %r, align 4, !dbg !618
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !602), !dbg !604
CALL [call func]:   %60 = call i32* @__errno_location() #1, !dbg !605
LOAD [p=*q]:   %61 = load i32* %60, !dbg !605
STORE [*p=q]:   store i32 %61, i32* %e, align 4, !dbg !605
LOAD [p=*q]:   %62 = load i32* @quiet, align 4, !dbg !606
LOAD [p=*q]:   %69 = load i32* @exit_code, align 4, !dbg !606
LOAD [p=*q]:   %65 = load %struct._IO_FILE** @stderr, align 8, !dbg !606
LOAD [p=*q]:   %66 = load i8** @program_name, align 8, !dbg !606
CALL [call func]:   %67 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %66), !dbg !606
LOAD [p=*q]:   %65 = load %struct._IO_FILE** @stderr, align 8, !dbg !606
LOAD [p=*q]:   %66 = load i8** @program_name, align 8, !dbg !606
CALL [call func]:   %67 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %66), !dbg !606
LOAD [p=*q]:   %69 = load i32* @exit_code, align 4, !dbg !606
LOAD [p=*q]:   %69 = load i32* @exit_code, align 4, !dbg !606
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !606
LOAD [p=*q]:   %73 = load i32* @quiet, align 4, !dbg !608
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !606
LOAD [p=*q]:   %73 = load i32* @quiet, align 4, !dbg !608
LOAD [p=*q]:   %73 = load i32* @quiet, align 4, !dbg !608
LOAD [p=*q]:   %76 = load i32* %e, align 4, !dbg !609
CALL [call func]:   %77 = call i32* @__errno_location() #1, !dbg !609
STORE [*p=q]:   store i32 %76, i32* %77, !dbg !609
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !611
LOAD [p=*q]:   %76 = load i32* %e, align 4, !dbg !609
CALL [call func]:   %77 = call i32* @__errno_location() #1, !dbg !609
STORE [*p=q]:   store i32 %76, i32* %77, !dbg !609
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !611
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %__x}, metadata !614), !dbg !616
LOAD [p=*q]:   %80 = load i32* @ofd, align 4, !dbg !616
LOAD [p=*q]:   %81 = load %struct.stat** %1, align 8, !dbg !616
LOAD [p=*q]:   %83 = load i32* %82, align 4, !dbg !616
LOAD [p=*q]:   %84 = load %struct.stat** %1, align 8, !dbg !616
LOAD [p=*q]:   %86 = load i32* %85, align 4, !dbg !616
CALL [call func]:   %87 = call i32 @fchown(i32 %80, i32 %83, i32 %86) #3, !dbg !616
STORE [*p=q]:   store i32 %87, i32* %__x, align 4, !dbg !616
LOAD [p=*q]:   %88 = load i32* %__x, align 4, !dbg !616
LOAD [p=*q]:   %89 = load i32* @ofd, align 4, !dbg !617
LOAD [p=*q]:   %90 = load i32* %mode, align 4, !dbg !617
CALL [call func]:   %91 = call i32 @fchmod(i32 %89, i32 %90) #3, !dbg !617
STORE [*p=q]:   store i32 %91, i32* %r, align 4, !dbg !617
LOAD [p=*q]:   %92 = load i32* %r, align 4, !dbg !618
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %__x}, metadata !614), !dbg !616
LOAD [p=*q]:   %80 = load i32* @ofd, align 4, !dbg !616
LOAD [p=*q]:   %81 = load %struct.stat** %1, align 8, !dbg !616
LOAD [p=*q]:   %83 = load i32* %82, align 4, !dbg !616
LOAD [p=*q]:   %84 = load %struct.stat** %1, align 8, !dbg !616
LOAD [p=*q]:   %86 = load i32* %85, align 4, !dbg !616
CALL [call func]:   %87 = call i32 @fchown(i32 %80, i32 %83, i32 %86) #3, !dbg !616
STORE [*p=q]:   store i32 %87, i32* %__x, align 4, !dbg !616
LOAD [p=*q]:   %88 = load i32* %__x, align 4, !dbg !616
LOAD [p=*q]:   %89 = load i32* @ofd, align 4, !dbg !617
LOAD [p=*q]:   %90 = load i32* %mode, align 4, !dbg !617
CALL [call func]:   %91 = call i32 @fchmod(i32 %89, i32 %90) #3, !dbg !617
STORE [*p=q]:   store i32 %91, i32* %r, align 4, !dbg !617
LOAD [p=*q]:   %92 = load i32* %r, align 4, !dbg !618
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e1}, metadata !619), !dbg !621
CALL [call func]:   %95 = call i32* @__errno_location() #1, !dbg !622
LOAD [p=*q]:   %96 = load i32* %95, !dbg !622
STORE [*p=q]:   store i32 %96, i32* %e1, align 4, !dbg !622
LOAD [p=*q]:   %97 = load i32* @quiet, align 4, !dbg !623
Analyzing return instruction for copy_stat
No return value for: copy_stat
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e1}, metadata !619), !dbg !621
CALL [call func]:   %95 = call i32* @__errno_location() #1, !dbg !622
LOAD [p=*q]:   %96 = load i32* %95, !dbg !622
STORE [*p=q]:   store i32 %96, i32* %e1, align 4, !dbg !622
LOAD [p=*q]:   %97 = load i32* @quiet, align 4, !dbg !623
LOAD [p=*q]:   %104 = load i32* @exit_code, align 4, !dbg !623
LOAD [p=*q]:   %100 = load %struct._IO_FILE** @stderr, align 8, !dbg !623
LOAD [p=*q]:   %101 = load i8** @program_name, align 8, !dbg !623
CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %101), !dbg !623
LOAD [p=*q]:   %100 = load %struct._IO_FILE** @stderr, align 8, !dbg !623
LOAD [p=*q]:   %101 = load i8** @program_name, align 8, !dbg !623
CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %101), !dbg !623
LOAD [p=*q]:   %104 = load i32* @exit_code, align 4, !dbg !623
LOAD [p=*q]:   %104 = load i32* @exit_code, align 4, !dbg !623
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !623
LOAD [p=*q]:   %108 = load i32* @quiet, align 4, !dbg !625
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !623
LOAD [p=*q]:   %108 = load i32* @quiet, align 4, !dbg !625
LOAD [p=*q]:   %108 = load i32* @quiet, align 4, !dbg !625
LOAD [p=*q]:   %111 = load i32* %e1, align 4, !dbg !626
CALL [call func]:   %112 = call i32* @__errno_location() #1, !dbg !626
STORE [*p=q]:   store i32 %111, i32* %112, !dbg !626
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !628
LOAD [p=*q]:   %111 = load i32* %e1, align 4, !dbg !626
CALL [call func]:   %112 = call i32* @__errno_location() #1, !dbg !626
STORE [*p=q]:   store i32 %111, i32* %112, !dbg !626
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !628
Analyzing return instruction for copy_stat
No return value for: copy_stat
Analyzing return instruction for copy_stat
No return value for: copy_stat
[Processing][Function][input_eof]
LOAD [p=*q]:   %2 = load i32* @decompress, align 4, !dbg !574
LOAD [p=*q]:   %5 = load i32* @last_member, align 4, !dbg !574
STORE [*p=q]:   store i32 1, i32* %1, !dbg !576
LOAD [p=*q]:   %5 = load i32* @last_member, align 4, !dbg !574
STORE [*p=q]:   store i32 1, i32* %1, !dbg !576
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !577
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !577
STORE [*p=q]:   store i32 1, i32* %1, !dbg !576
LOAD [p=*q]:   %22 = load i32* %1, !dbg !585
Analyzing return instruction for input_eof
	  %22 = load i32* %1, !dbg !585
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !577
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !577
LOAD [p=*q]:   %13 = load i32* @insize, align 4, !dbg !578
STORE [*p=q]:   store i32 0, i32* %1, !dbg !584
LOAD [p=*q]:   %13 = load i32* @insize, align 4, !dbg !578
STORE [*p=q]:   store i32 1, i32* %1, !dbg !581
CALL [call func]:   %16 = call i32 @fill_inbuf(i32 1), !dbg !580
CALL [call func]:   %16 = call i32 @fill_inbuf(i32 1), !dbg !580
STORE [*p=q]:   store i32 1, i32* %1, !dbg !581
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !582
STORE [*p=q]:   store i32 1, i32* %1, !dbg !581
LOAD [p=*q]:   %22 = load i32* %1, !dbg !585
Analyzing return instruction for input_eof
	  %22 = load i32* %1, !dbg !585
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !582
STORE [*p=q]:   store i32 0, i32* %1, !dbg !584
STORE [*p=q]:   store i32 0, i32* %1, !dbg !584
LOAD [p=*q]:   %22 = load i32* %1, !dbg !585
Analyzing return instruction for input_eof
	  %22 = load i32* %1, !dbg !585
LOAD [p=*q]:   %22 = load i32* %1, !dbg !585
Analyzing return instruction for input_eof
	  %22 = load i32* %1, !dbg !585
[Processing][Function][create_outfile]
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %name_shortened}, metadata !574), !dbg !576
STORE [*p=q]:   store i32 0, i32* %name_shortened, align 4, !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %flags}, metadata !578), !dbg !579
LOAD [p=*q]:   %2 = load i32* @ascii, align 4, !dbg !580
LOAD [p=*q]:   %5 = load i32* @decompress, align 4, !dbg !580
STORE [*p=q]:   store i32 %10, i32* %flags, align 4
LOAD [p=*q]:   %5 = load i32* @decompress, align 4, !dbg !580
STORE [*p=q]:   store i32 %10, i32* %flags, align 4
STORE [*p=q]:   store i32 %10, i32* %flags, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %open_errno}, metadata !583), !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.__sigset_t* %oldset}, metadata !586), !dbg !587
CALL [call func]:   %12 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !588
LOAD [p=*q]:   %13 = load i32* %flags, align 4, !dbg !589
CALL [call func]:   %14 = call i32 (i8*, i32, ...)* @open_safer(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i32 %13, i32 384), !dbg !589
STORE [*p=q]:   store i32 %14, i32* @ofd, align 4, !dbg !589
STORE [*p=q]:   store volatile i32 %14, i32* @remove_ofname_fd, align 4, !dbg !589
CALL [call func]:   %15 = call i32* @__errno_location() #1, !dbg !590
LOAD [p=*q]:   %16 = load i32* %15, !dbg !590
STORE [*p=q]:   store i32 %16, i32* %open_errno, align 4, !dbg !590
CALL [call func]:   %17 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !591
LOAD [p=*q]:   %18 = load i32* @ofd, align 4, !dbg !592
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %open_errno}, metadata !583), !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.__sigset_t* %oldset}, metadata !586), !dbg !587
CALL [call func]:   %12 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !588
LOAD [p=*q]:   %13 = load i32* %flags, align 4, !dbg !589
CALL [call func]:   %14 = call i32 (i8*, i32, ...)* @open_safer(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i32 %13, i32 384), !dbg !589
STORE [*p=q]:   store i32 %14, i32* @ofd, align 4, !dbg !589
STORE [*p=q]:   store volatile i32 %14, i32* @remove_ofname_fd, align 4, !dbg !589
CALL [call func]:   %15 = call i32* @__errno_location() #1, !dbg !590
LOAD [p=*q]:   %16 = load i32* %15, !dbg !590
STORE [*p=q]:   store i32 %16, i32* %open_errno, align 4, !dbg !590
CALL [call func]:   %17 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !591
LOAD [p=*q]:   %18 = load i32* @ofd, align 4, !dbg !592
LOAD [p=*q]:   %22 = load i32* %open_errno, align 4, !dbg !594
LOAD [p=*q]:   %36 = load i32* %name_shortened, align 4, !dbg !608
LOAD [p=*q]:   %22 = load i32* %open_errno, align 4, !dbg !594
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !604
LOAD [p=*q]:   %32 = load i32* @ifd, align 4, !dbg !605
CALL [call func]:   %33 = call i32 @close(i32 %32), !dbg !605
STORE [*p=q]:   store i32 1, i32* %1, !dbg !606
CALL [call func]:   call void @shorten_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !595
STORE [*p=q]:   store i32 1, i32* %name_shortened, align 4, !dbg !597
CALL [call func]:   %25 = call i32 @check_ofname(), !dbg !599
CALL [call func]:   call void @shorten_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !595
STORE [*p=q]:   store i32 1, i32* %name_shortened, align 4, !dbg !597
CALL [call func]:   %25 = call i32 @check_ofname(), !dbg !599
LOAD [p=*q]:   %28 = load i32* @ifd, align 4, !dbg !600
CALL [call func]:   %29 = call i32 @close(i32 %28), !dbg !600
STORE [*p=q]:   store i32 1, i32* %1, !dbg !602
LOAD [p=*q]:   %28 = load i32* @ifd, align 4, !dbg !600
CALL [call func]:   %29 = call i32 @close(i32 %28), !dbg !600
STORE [*p=q]:   store i32 1, i32* %1, !dbg !602
LOAD [p=*q]:   %55 = load i32* %1, !dbg !614
Analyzing return instruction for create_outfile
	  %55 = load i32* %1, !dbg !614
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !604
LOAD [p=*q]:   %32 = load i32* @ifd, align 4, !dbg !605
CALL [call func]:   %33 = call i32 @close(i32 %32), !dbg !605
STORE [*p=q]:   store i32 1, i32* %1, !dbg !606
LOAD [p=*q]:   %55 = load i32* %1, !dbg !614
Analyzing return instruction for create_outfile
	  %55 = load i32* %1, !dbg !614
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %open_errno}, metadata !583), !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.__sigset_t* %oldset}, metadata !586), !dbg !587
CALL [call func]:   %12 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !588
LOAD [p=*q]:   %13 = load i32* %flags, align 4, !dbg !589
CALL [call func]:   %14 = call i32 (i8*, i32, ...)* @open_safer(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i32 %13, i32 384), !dbg !589
STORE [*p=q]:   store i32 %14, i32* @ofd, align 4, !dbg !589
STORE [*p=q]:   store volatile i32 %14, i32* @remove_ofname_fd, align 4, !dbg !589
CALL [call func]:   %15 = call i32* @__errno_location() #1, !dbg !590
LOAD [p=*q]:   %16 = load i32* %15, !dbg !590
STORE [*p=q]:   store i32 %16, i32* %open_errno, align 4, !dbg !590
CALL [call func]:   %17 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !591
LOAD [p=*q]:   %18 = load i32* @ofd, align 4, !dbg !592
LOAD [p=*q]:   %36 = load i32* %name_shortened, align 4, !dbg !608
LOAD [p=*q]:   %39 = load i32* @decompress, align 4, !dbg !608
STORE [*p=q]:   store i32 0, i32* %1, !dbg !613
LOAD [p=*q]:   %39 = load i32* @decompress, align 4, !dbg !608
LOAD [p=*q]:   %42 = load i32* @quiet, align 4, !dbg !609
STORE [*p=q]:   store i32 0, i32* %1, !dbg !613
LOAD [p=*q]:   %42 = load i32* @quiet, align 4, !dbg !609
LOAD [p=*q]:   %49 = load i32* @exit_code, align 4, !dbg !609
LOAD [p=*q]:   %45 = load %struct._IO_FILE** @stderr, align 8, !dbg !609
LOAD [p=*q]:   %46 = load i8** @program_name, align 8, !dbg !609
CALL [call func]:   %47 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([33 x i8]* @.str41, i32 0, i32 0), i8* %46, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !609
LOAD [p=*q]:   %45 = load %struct._IO_FILE** @stderr, align 8, !dbg !609
LOAD [p=*q]:   %46 = load i8** @program_name, align 8, !dbg !609
CALL [call func]:   %47 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([33 x i8]* @.str41, i32 0, i32 0), i8* %46, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !609
LOAD [p=*q]:   %49 = load i32* @exit_code, align 4, !dbg !609
LOAD [p=*q]:   %49 = load i32* @exit_code, align 4, !dbg !609
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !609
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !609
STORE [*p=q]:   store i32 0, i32* %1, !dbg !613
STORE [*p=q]:   store i32 0, i32* %1, !dbg !613
LOAD [p=*q]:   %55 = load i32* %1, !dbg !614
Analyzing return instruction for create_outfile
	  %55 = load i32* %1, !dbg !614
LOAD [p=*q]:   %55 = load i32* %1, !dbg !614
Analyzing return instruction for create_outfile
	  %55 = load i32* %1, !dbg !614
[Processing][Function][bi_windup]
LOAD [p=*q]:   %1 = load i32* @bi_valid, align 4, !dbg !574
LOAD [p=*q]:   %4 = load i32* @outcnt, align 4, !dbg !576
LOAD [p=*q]:   %50 = load i32* @bi_valid, align 4, !dbg !587
LOAD [p=*q]:   %4 = load i32* @outcnt, align 4, !dbg !576
LOAD [p=*q]:   %7 = load i16* @bi_buf, align 2, !dbg !579
LOAD [p=*q]:   %11 = load i32* @outcnt, align 4, !dbg !579
STORE [*p=q]:   store i32 %12, i32* @outcnt, align 4, !dbg !579
STORE [*p=q]:   store i8 %10, i8* %14, align 1, !dbg !579
LOAD [p=*q]:   %15 = load i16* @bi_buf, align 2, !dbg !579
LOAD [p=*q]:   %19 = load i32* @outcnt, align 4, !dbg !579
STORE [*p=q]:   store i32 %20, i32* @outcnt, align 4, !dbg !579
STORE [*p=q]:   store i8 %18, i8* %22, align 1, !dbg !579
LOAD [p=*q]:   %24 = load i16* @bi_buf, align 2, !dbg !581
LOAD [p=*q]:   %28 = load i32* @outcnt, align 4, !dbg !581
STORE [*p=q]:   store i32 %29, i32* @outcnt, align 4, !dbg !581
STORE [*p=q]:   store i8 %27, i8* %31, align 1, !dbg !581
LOAD [p=*q]:   %32 = load i32* @outcnt, align 4, !dbg !581
LOAD [p=*q]:   %7 = load i16* @bi_buf, align 2, !dbg !579
LOAD [p=*q]:   %11 = load i32* @outcnt, align 4, !dbg !579
STORE [*p=q]:   store i32 %12, i32* @outcnt, align 4, !dbg !579
STORE [*p=q]:   store i8 %10, i8* %14, align 1, !dbg !579
LOAD [p=*q]:   %15 = load i16* @bi_buf, align 2, !dbg !579
LOAD [p=*q]:   %19 = load i32* @outcnt, align 4, !dbg !579
STORE [*p=q]:   store i32 %20, i32* @outcnt, align 4, !dbg !579
STORE [*p=q]:   store i8 %18, i8* %22, align 1, !dbg !579
LOAD [p=*q]:   %24 = load i16* @bi_buf, align 2, !dbg !581
LOAD [p=*q]:   %28 = load i32* @outcnt, align 4, !dbg !581
STORE [*p=q]:   store i32 %29, i32* @outcnt, align 4, !dbg !581
STORE [*p=q]:   store i8 %27, i8* %31, align 1, !dbg !581
LOAD [p=*q]:   %32 = load i32* @outcnt, align 4, !dbg !581
CALL [call func]:   call void @flush_outbuf(), !dbg !581
LOAD [p=*q]:   %36 = load i16* @bi_buf, align 2, !dbg !584
LOAD [p=*q]:   %40 = load i32* @outcnt, align 4, !dbg !584
STORE [*p=q]:   store i32 %41, i32* @outcnt, align 4, !dbg !584
STORE [*p=q]:   store i8 %39, i8* %43, align 1, !dbg !584
LOAD [p=*q]:   %44 = load i32* @outcnt, align 4, !dbg !584
CALL [call func]:   call void @flush_outbuf(), !dbg !581
LOAD [p=*q]:   %36 = load i16* @bi_buf, align 2, !dbg !584
LOAD [p=*q]:   %40 = load i32* @outcnt, align 4, !dbg !584
STORE [*p=q]:   store i32 %41, i32* @outcnt, align 4, !dbg !584
STORE [*p=q]:   store i8 %39, i8* %43, align 1, !dbg !584
LOAD [p=*q]:   %44 = load i32* @outcnt, align 4, !dbg !584
LOAD [p=*q]:   %36 = load i16* @bi_buf, align 2, !dbg !584
LOAD [p=*q]:   %40 = load i32* @outcnt, align 4, !dbg !584
STORE [*p=q]:   store i32 %41, i32* @outcnt, align 4, !dbg !584
STORE [*p=q]:   store i8 %39, i8* %43, align 1, !dbg !584
LOAD [p=*q]:   %44 = load i32* @outcnt, align 4, !dbg !584
CALL [call func]:   call void @flush_outbuf(), !dbg !584
CALL [call func]:   call void @flush_outbuf(), !dbg !584
STORE [*p=q]:   store i16 0, i16* @bi_buf, align 2, !dbg !592
STORE [*p=q]:   store i32 0, i32* @bi_valid, align 4, !dbg !593
Analyzing return instruction for bi_windup
No return value for: bi_windup
LOAD [p=*q]:   %50 = load i32* @bi_valid, align 4, !dbg !587
LOAD [p=*q]:   %53 = load i16* @bi_buf, align 2, !dbg !588
LOAD [p=*q]:   %55 = load i32* @outcnt, align 4, !dbg !588
STORE [*p=q]:   store i32 %56, i32* @outcnt, align 4, !dbg !588
STORE [*p=q]:   store i8 %54, i8* %58, align 1, !dbg !588
LOAD [p=*q]:   %59 = load i32* @outcnt, align 4, !dbg !588
LOAD [p=*q]:   %53 = load i16* @bi_buf, align 2, !dbg !588
LOAD [p=*q]:   %55 = load i32* @outcnt, align 4, !dbg !588
STORE [*p=q]:   store i32 %56, i32* @outcnt, align 4, !dbg !588
STORE [*p=q]:   store i8 %54, i8* %58, align 1, !dbg !588
LOAD [p=*q]:   %59 = load i32* @outcnt, align 4, !dbg !588
CALL [call func]:   call void @flush_outbuf(), !dbg !588
CALL [call func]:   call void @flush_outbuf(), !dbg !588
STORE [*p=q]:   store i16 0, i16* @bi_buf, align 2, !dbg !592
STORE [*p=q]:   store i32 0, i32* @bi_valid, align 4, !dbg !593
Analyzing return instruction for bi_windup
No return value for: bi_windup
STORE [*p=q]:   store i16 0, i16* @bi_buf, align 2, !dbg !592
STORE [*p=q]:   store i32 0, i32* @bi_valid, align 4, !dbg !593
Analyzing return instruction for bi_windup
No return value for: bi_windup
[Processing][Function][bi_reverse]
STORE [*p=q]:   store i32 %code, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %len, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %res}, metadata !578), !dbg !580
STORE [*p=q]:   store i32 0, i32* %res, align 4, !dbg !581
LOAD [p=*q]:   %4 = load i32* %1, align 4, !dbg !583
LOAD [p=*q]:   %6 = load i32* %res, align 4, !dbg !583
STORE [*p=q]:   store i32 %7, i32* %res, align 4, !dbg !583
LOAD [p=*q]:   %8 = load i32* %1, align 4, !dbg !585
STORE [*p=q]:   store i32 %9, i32* %1, align 4, !dbg !585
LOAD [p=*q]:   %10 = load i32* %res, align 4, !dbg !585
STORE [*p=q]:   store i32 %11, i32* %res, align 4, !dbg !585
LOAD [p=*q]:   %4 = load i32* %1, align 4, !dbg !583
LOAD [p=*q]:   %6 = load i32* %res, align 4, !dbg !583
STORE [*p=q]:   store i32 %7, i32* %res, align 4, !dbg !583
LOAD [p=*q]:   %8 = load i32* %1, align 4, !dbg !585
STORE [*p=q]:   store i32 %9, i32* %1, align 4, !dbg !585
LOAD [p=*q]:   %10 = load i32* %res, align 4, !dbg !585
STORE [*p=q]:   store i32 %11, i32* %res, align 4, !dbg !585
LOAD [p=*q]:   %13 = load i32* %2, align 4, !dbg !586
STORE [*p=q]:   store i32 %14, i32* %2, align 4, !dbg !586
LOAD [p=*q]:   %13 = load i32* %2, align 4, !dbg !586
STORE [*p=q]:   store i32 %14, i32* %2, align 4, !dbg !586
LOAD [p=*q]:   %4 = load i32* %1, align 4, !dbg !583
LOAD [p=*q]:   %6 = load i32* %res, align 4, !dbg !583
STORE [*p=q]:   store i32 %7, i32* %res, align 4, !dbg !583
LOAD [p=*q]:   %8 = load i32* %1, align 4, !dbg !585
STORE [*p=q]:   store i32 %9, i32* %1, align 4, !dbg !585
LOAD [p=*q]:   %10 = load i32* %res, align 4, !dbg !585
STORE [*p=q]:   store i32 %11, i32* %res, align 4, !dbg !585
LOAD [p=*q]:   %17 = load i32* %res, align 4, !dbg !587
Analyzing return instruction for bi_reverse
	  %18 = lshr i32 %17, 1, !dbg !587
LOAD [p=*q]:   %17 = load i32* %res, align 4, !dbg !587
Analyzing return instruction for bi_reverse
	  %18 = lshr i32 %17, 1, !dbg !587
[Processing][Function][send_bits]
STORE [*p=q]:   store i32 %value, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %length, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
LOAD [p=*q]:   %3 = load i32* @bi_valid, align 4, !dbg !578
LOAD [p=*q]:   %4 = load i32* %2, align 4, !dbg !578
LOAD [p=*q]:   %8 = load i32* %1, align 4, !dbg !580
LOAD [p=*q]:   %9 = load i32* @bi_valid, align 4, !dbg !580
LOAD [p=*q]:   %11 = load i16* @bi_buf, align 2, !dbg !580
STORE [*p=q]:   store i16 %14, i16* @bi_buf, align 2, !dbg !580
LOAD [p=*q]:   %15 = load i32* @outcnt, align 4, !dbg !582
LOAD [p=*q]:   %77 = load i32* %1, align 4, !dbg !594
LOAD [p=*q]:   %78 = load i32* @bi_valid, align 4, !dbg !594
LOAD [p=*q]:   %80 = load i16* @bi_buf, align 2, !dbg !594
STORE [*p=q]:   store i16 %83, i16* @bi_buf, align 2, !dbg !594
LOAD [p=*q]:   %84 = load i32* %2, align 4, !dbg !596
LOAD [p=*q]:   %85 = load i32* @bi_valid, align 4, !dbg !596
STORE [*p=q]:   store i32 %86, i32* @bi_valid, align 4, !dbg !596
LOAD [p=*q]:   %8 = load i32* %1, align 4, !dbg !580
LOAD [p=*q]:   %9 = load i32* @bi_valid, align 4, !dbg !580
LOAD [p=*q]:   %11 = load i16* @bi_buf, align 2, !dbg !580
STORE [*p=q]:   store i16 %14, i16* @bi_buf, align 2, !dbg !580
LOAD [p=*q]:   %15 = load i32* @outcnt, align 4, !dbg !582
LOAD [p=*q]:   %18 = load i16* @bi_buf, align 2, !dbg !584
LOAD [p=*q]:   %22 = load i32* @outcnt, align 4, !dbg !584
STORE [*p=q]:   store i32 %23, i32* @outcnt, align 4, !dbg !584
STORE [*p=q]:   store i8 %21, i8* %25, align 1, !dbg !584
LOAD [p=*q]:   %26 = load i16* @bi_buf, align 2, !dbg !584
LOAD [p=*q]:   %30 = load i32* @outcnt, align 4, !dbg !584
STORE [*p=q]:   store i32 %31, i32* @outcnt, align 4, !dbg !584
STORE [*p=q]:   store i8 %29, i8* %33, align 1, !dbg !584
LOAD [p=*q]:   %35 = load i16* @bi_buf, align 2, !dbg !586
LOAD [p=*q]:   %39 = load i32* @outcnt, align 4, !dbg !586
STORE [*p=q]:   store i32 %40, i32* @outcnt, align 4, !dbg !586
STORE [*p=q]:   store i8 %38, i8* %42, align 1, !dbg !586
LOAD [p=*q]:   %43 = load i32* @outcnt, align 4, !dbg !586
LOAD [p=*q]:   %18 = load i16* @bi_buf, align 2, !dbg !584
LOAD [p=*q]:   %22 = load i32* @outcnt, align 4, !dbg !584
STORE [*p=q]:   store i32 %23, i32* @outcnt, align 4, !dbg !584
STORE [*p=q]:   store i8 %21, i8* %25, align 1, !dbg !584
LOAD [p=*q]:   %26 = load i16* @bi_buf, align 2, !dbg !584
LOAD [p=*q]:   %30 = load i32* @outcnt, align 4, !dbg !584
STORE [*p=q]:   store i32 %31, i32* @outcnt, align 4, !dbg !584
STORE [*p=q]:   store i8 %29, i8* %33, align 1, !dbg !584
LOAD [p=*q]:   %60 = load i32* %1, align 4, !dbg !591
LOAD [p=*q]:   %63 = load i32* @bi_valid, align 4, !dbg !591
STORE [*p=q]:   store i16 %68, i16* @bi_buf, align 2, !dbg !591
LOAD [p=*q]:   %69 = load i32* %2, align 4, !dbg !592
LOAD [p=*q]:   %72 = load i32* @bi_valid, align 4, !dbg !592
STORE [*p=q]:   store i32 %75, i32* @bi_valid, align 4, !dbg !592
LOAD [p=*q]:   %35 = load i16* @bi_buf, align 2, !dbg !586
LOAD [p=*q]:   %39 = load i32* @outcnt, align 4, !dbg !586
STORE [*p=q]:   store i32 %40, i32* @outcnt, align 4, !dbg !586
STORE [*p=q]:   store i8 %38, i8* %42, align 1, !dbg !586
LOAD [p=*q]:   %43 = load i32* @outcnt, align 4, !dbg !586
CALL [call func]:   call void @flush_outbuf(), !dbg !586
LOAD [p=*q]:   %47 = load i16* @bi_buf, align 2, !dbg !589
LOAD [p=*q]:   %51 = load i32* @outcnt, align 4, !dbg !589
STORE [*p=q]:   store i32 %52, i32* @outcnt, align 4, !dbg !589
STORE [*p=q]:   store i8 %50, i8* %54, align 1, !dbg !589
LOAD [p=*q]:   %55 = load i32* @outcnt, align 4, !dbg !589
CALL [call func]:   call void @flush_outbuf(), !dbg !586
LOAD [p=*q]:   %47 = load i16* @bi_buf, align 2, !dbg !589
LOAD [p=*q]:   %51 = load i32* @outcnt, align 4, !dbg !589
STORE [*p=q]:   store i32 %52, i32* @outcnt, align 4, !dbg !589
STORE [*p=q]:   store i8 %50, i8* %54, align 1, !dbg !589
LOAD [p=*q]:   %55 = load i32* @outcnt, align 4, !dbg !589
LOAD [p=*q]:   %47 = load i16* @bi_buf, align 2, !dbg !589
LOAD [p=*q]:   %51 = load i32* @outcnt, align 4, !dbg !589
STORE [*p=q]:   store i32 %52, i32* @outcnt, align 4, !dbg !589
STORE [*p=q]:   store i8 %50, i8* %54, align 1, !dbg !589
LOAD [p=*q]:   %55 = load i32* @outcnt, align 4, !dbg !589
CALL [call func]:   call void @flush_outbuf(), !dbg !589
CALL [call func]:   call void @flush_outbuf(), !dbg !589
LOAD [p=*q]:   %60 = load i32* %1, align 4, !dbg !591
LOAD [p=*q]:   %63 = load i32* @bi_valid, align 4, !dbg !591
STORE [*p=q]:   store i16 %68, i16* @bi_buf, align 2, !dbg !591
LOAD [p=*q]:   %69 = load i32* %2, align 4, !dbg !592
LOAD [p=*q]:   %72 = load i32* @bi_valid, align 4, !dbg !592
STORE [*p=q]:   store i32 %75, i32* @bi_valid, align 4, !dbg !592
LOAD [p=*q]:   %60 = load i32* %1, align 4, !dbg !591
LOAD [p=*q]:   %63 = load i32* @bi_valid, align 4, !dbg !591
STORE [*p=q]:   store i16 %68, i16* @bi_buf, align 2, !dbg !591
LOAD [p=*q]:   %69 = load i32* %2, align 4, !dbg !592
LOAD [p=*q]:   %72 = load i32* @bi_valid, align 4, !dbg !592
STORE [*p=q]:   store i32 %75, i32* @bi_valid, align 4, !dbg !592
Analyzing return instruction for send_bits
No return value for: send_bits
LOAD [p=*q]:   %77 = load i32* %1, align 4, !dbg !594
LOAD [p=*q]:   %78 = load i32* @bi_valid, align 4, !dbg !594
LOAD [p=*q]:   %80 = load i16* @bi_buf, align 2, !dbg !594
STORE [*p=q]:   store i16 %83, i16* @bi_buf, align 2, !dbg !594
LOAD [p=*q]:   %84 = load i32* %2, align 4, !dbg !596
LOAD [p=*q]:   %85 = load i32* @bi_valid, align 4, !dbg !596
STORE [*p=q]:   store i32 %86, i32* @bi_valid, align 4, !dbg !596
Analyzing return instruction for send_bits
No return value for: send_bits
Analyzing return instruction for send_bits
No return value for: send_bits
[Processing][Function][bi_init]
STORE [*p=q]:   store i32 %zipfile, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load i32* %1, align 4, !dbg !576
STORE [*p=q]:   store i32 %2, i32* @zfile, align 4, !dbg !576
STORE [*p=q]:   store i16 0, i16* @bi_buf, align 2, !dbg !578
STORE [*p=q]:   store i32 0, i32* @bi_valid, align 4, !dbg !579
LOAD [p=*q]:   %3 = load i32* @zfile, align 4, !dbg !580
STORE [*p=q]:   store i32 (i8*, i32)* @file_read, i32 (i8*, i32)** @read_buf, align 8, !dbg !581
Analyzing return instruction for bi_init
No return value for: bi_init
STORE [*p=q]:   store i32 (i8*, i32)* @file_read, i32 (i8*, i32)** @read_buf, align 8, !dbg !581
Analyzing return instruction for bi_init
No return value for: bi_init
Analyzing return instruction for bi_init
No return value for: bi_init
Analyzing formal parameter buf of function file_read
Analyzing formal parameter size of function file_read
Analyzing formal parameter in of function zip
Analyzing formal parameter out of function zip
Analyzing formal parameter file of function fprint_off
Analyzing formal parameter offset of function fprint_off
Analyzing formal parameter width of function fprint_off
Analyzing formal parameter num of function display_ratio
Analyzing formal parameter den of function display_ratio
Analyzing formal parameter file of function display_ratio
Analyzing formal parameter m of function warning
Analyzing formal parameter m of function gzip_error
Analyzing formal parameter argcp of function add_envopt
Analyzing formal parameter argvp of function add_envopt
Analyzing formal parameter envvar_name of function add_envopt
Analyzing formal parameter name of function make_simple_name
Analyzing formal parameter filename of function xunlink
Analyzing formal parameter fname of function gzip_base_name
Analyzing formal parameter s of function strlwr
Analyzing formal parameter fd of function write_buffer
Analyzing formal parameter buf of function write_buffer
Analyzing formal parameter cnt of function write_buffer
Analyzing formal parameter eof_ok of function fill_inbuf
Analyzing formal parameter s of function updcrc
Analyzing formal parameter n of function updcrc
Analyzing formal parameter fd of function read_buffer
Analyzing formal parameter buf of function read_buffer
Analyzing formal parameter cnt of function read_buffer
Analyzing formal parameter fd of function write_buf
Analyzing formal parameter buf of function write_buf
Analyzing formal parameter cnt of function write_buf
Analyzing formal parameter in of function copy
Analyzing formal parameter out of function copy
Analyzing formal parameter in of function unzip
Analyzing formal parameter out of function unzip
Analyzing formal parameter in of function check_zipfile
Analyzing formal parameter in of function unpack
Analyzing formal parameter out of function unpack
Analyzing formal parameter in of function unlzw
Analyzing formal parameter out of function unlzw
Analyzing formal parameter nchar of function make_table
Analyzing formal parameter bitlen of function make_table
Analyzing formal parameter tablebits of function make_table
Analyzing formal parameter table of function make_table
Analyzing formal parameter n of function fillbuf
Analyzing formal parameter count of function decode
Analyzing formal parameter buffer of function decode
Analyzing formal parameter in of function unlzh
Analyzing formal parameter out of function unlzh
Analyzing formal parameter desc of function gen_bitlen
Analyzing formal parameter tree of function pqdownheap
Analyzing formal parameter k of function pqdownheap
Analyzing formal parameter tree of function scan_tree
Analyzing formal parameter max_code of function scan_tree
Analyzing formal parameter tree of function send_tree
Analyzing formal parameter max_code of function send_tree
Analyzing formal parameter dist of function ct_tally
Analyzing formal parameter lc of function ct_tally
Analyzing formal parameter lcodes of function send_all_trees
Analyzing formal parameter dcodes of function send_all_trees
Analyzing formal parameter blcodes of function send_all_trees
Analyzing formal parameter ltree of function compress_block
Analyzing formal parameter dtree of function compress_block
Analyzing formal parameter desc of function build_tree
Analyzing formal parameter buf of function flush_block
Analyzing formal parameter stored_len of function flush_block
Analyzing formal parameter eof of function flush_block
Analyzing formal parameter tree of function gen_codes
Analyzing formal parameter max_code of function gen_codes
Analyzing formal parameter in of function get_method
Analyzing formal parameter fd of function treat_dir
Analyzing formal parameter dir of function treat_dir
Analyzing formal parameter iname of function open_input_file
Analyzing formal parameter sbuf of function open_input_file
Analyzing formal parameter sig of function abort_gzip_signal
Analyzing formal parameter ifd of function do_list
Analyzing formal parameter method of function do_list
Analyzing formal parameter exitcode of function do_exit
Analyzing formal parameter argc of function main
Analyzing formal parameter argv of function main
Analyzing formal parameter cur_match of function longest_match
Analyzing formal parameter iname of function treat_file
Analyzing formal parameter pack_level of function lm_init
Analyzing formal parameter flags of function lm_init
Analyzing formal parameter buf of function copy_block
Analyzing formal parameter len of function copy_block
Analyzing formal parameter header of function copy_block
Analyzing formal parameter attr of function ct_init
Analyzing formal parameter methodp of function ct_init
Analyzing formal parameter in of function lzw
Analyzing formal parameter out of function lzw
Analyzing formal parameter tl of function inflate_codes
Analyzing formal parameter td of function inflate_codes
Analyzing formal parameter bl of function inflate_codes
Analyzing formal parameter bd of function inflate_codes
Analyzing formal parameter t of function huft_free
Analyzing formal parameter b of function huft_build
Analyzing formal parameter n of function huft_build
Analyzing formal parameter s of function huft_build
Analyzing formal parameter d of function huft_build
Analyzing formal parameter e of function huft_build
Analyzing formal parameter t of function huft_build
Analyzing formal parameter m of function huft_build
Analyzing formal parameter e of function inflate_block
Analyzing formal parameter name of function open_and_stat
Analyzing formal parameter flags of function open_and_stat
Analyzing formal parameter mode of function open_and_stat
Analyzing formal parameter st of function open_and_stat
Analyzing formal parameter nbytes of function discard_input_bytes
Analyzing formal parameter flags of function discard_input_bytes
Analyzing formal parameter name of function get_suffix
Analyzing formal parameter nn of function read_pt_len
Analyzing formal parameter nbit of function read_pt_len
Analyzing formal parameter i_special of function read_pt_len
Analyzing formal parameter n of function getbits
Analyzing formal parameter string of function progerror
Analyzing formal parameter name of function shorten_name
Analyzing formal parameter ifstat of function copy_stat
Analyzing formal parameter code of function bi_reverse
Analyzing formal parameter len of function bi_reverse
Analyzing formal parameter value of function send_bits
Analyzing formal parameter length of function send_bits
Analyzing formal parameter zipfile of function bi_init
## Starting interprocedural analysis
[Processing][Function][main]
STORE [*p=q]:   store i32 0, i32* %1
STORE [*p=q]:   store i32 %argc, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
## main does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8** %argv, i8*** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %3}, metadata !576), !dbg !577
## main does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %file_count}, metadata !578), !dbg !580
## main does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %proglen}, metadata !581), !dbg !582
## main does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %optc}, metadata !583), !dbg !584
## main does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %4 = load i8*** %3, align 8, !dbg !585
LOAD [p=*q]:   %6 = load i8** %5, !dbg !585
CALL [call func]:   %7 = call i8* @gzip_base_name(i8* %6) #4, !dbg !585
CONTEXT CALL [call func]:   %7 = call i8* @gzip_base_name(i8* %6) #4, !dbg !585
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
## gzip_base_name does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
## gzip_base_name does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
CONTEXT CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
	We do not analyze function 'strrchr'
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %7, i8** @program_name, align 8, !dbg !585
LOAD [p=*q]:   %8 = load i8** @program_name, align 8, !dbg !586
CALL [call func]:   %9 = call i64 @strlen(i8* %8) #4, !dbg !586
CONTEXT CALL [call func]:   %9 = call i64 @strlen(i8* %8) #4, !dbg !586
	We do not analyze function 'strlen'
STORE [*p=q]:   store i64 %9, i64* %proglen, align 8, !dbg !586
CALL [call func]:   %10 = call i32 @atexit(void ()* @close_stdin) #3, !dbg !587
CONTEXT CALL [call func]:   %10 = call i32 @atexit(void ()* @close_stdin) #3, !dbg !587
	We do not analyze function 'atexit'
LOAD [p=*q]:   %11 = load i64* %proglen, align 8, !dbg !588
LOAD [p=*q]:   %14 = load i8** @program_name, align 8, !dbg !589
LOAD [p=*q]:   %15 = load i64* %proglen, align 8, !dbg !589
CALL [call func]:   %18 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([5 x i8]* @.str1, i32 0, i32 0)) #4, !dbg !589
CONTEXT CALL [call func]:   %18 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([5 x i8]* @.str1, i32 0, i32 0)) #4, !dbg !589
	We do not analyze function 'strcmp'
CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
CONTEXT CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i32* %argcp, i32** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32** %2}, metadata !574), !dbg !575
## add_envopt does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8*** %argvp, i8**** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8**** %3}, metadata !576), !dbg !578
## add_envopt does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8* %envvar_name, i8** %4, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %4}, metadata !579), !dbg !580
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !581), !dbg !583
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %oargv}, metadata !584), !dbg !585
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %nargv}, metadata !586), !dbg !587
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %oargc}, metadata !588), !dbg !589
## add_envopt does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %5 = load i32** %2, align 8, !dbg !590
LOAD [p=*q]:   %6 = load i32* %5, !dbg !590
STORE [*p=q]:   store i32 %6, i32* %oargc, align 4, !dbg !590
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nargc}, metadata !591), !dbg !592
## add_envopt does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 0, i32* %nargc, align 4, !dbg !593
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %env_val}, metadata !594), !dbg !595
## add_envopt does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %7 = load i8** %4, align 8, !dbg !596
CALL [call func]:   %8 = call i8* @getenv(i8* %7) #3, !dbg !596
CONTEXT CALL [call func]:   %8 = call i8* @getenv(i8* %7) #3, !dbg !596
	We do not analyze function 'getenv'
STORE [*p=q]:   store i8* %8, i8** %env_val, align 8, !dbg !596
LOAD [p=*q]:   %9 = load i8** %env_val, align 8, !dbg !597
STORE [*p=q]:   store i8* null, i8** %1, !dbg !598
LOAD [p=*q]:   %13 = load i8** %env_val, align 8, !dbg !599
CALL [call func]:   %14 = call noalias i8* @xstrdup(i8* %13), !dbg !599
CONTEXT CALL [call func]:   %14 = call noalias i8* @xstrdup(i8* %13), !dbg !599
	We do not analyze function 'xstrdup'
STORE [*p=q]:   store i8* %14, i8** %env_val, align 8, !dbg !599
LOAD [p=*q]:   %15 = load i8** %env_val, align 8, !dbg !600
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !600
LOAD [p=*q]:   %17 = load i8** %p, align 8, !dbg !600
LOAD [p=*q]:   %18 = load i8* %17, !dbg !600
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !602
CALL [call func]:   %22 = call i64 @strspn(i8* %21, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !602
CONTEXT CALL [call func]:   %22 = call i64 @strspn(i8* %21, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !602
	We do not analyze function 'strspn'
LOAD [p=*q]:   %23 = load i8** %p, align 8, !dbg !602
STORE [*p=q]:   store i8* %24, i8** %p, align 8, !dbg !602
LOAD [p=*q]:   %25 = load i8** %p, align 8, !dbg !604
LOAD [p=*q]:   %26 = load i8* %25, !dbg !604
LOAD [p=*q]:   %31 = load i8** %p, align 8, !dbg !606
CALL [call func]:   %32 = call i64 @strcspn(i8* %31, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !606
CONTEXT CALL [call func]:   %32 = call i64 @strcspn(i8* %31, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !606
	We do not analyze function 'strcspn'
LOAD [p=*q]:   %33 = load i8** %p, align 8, !dbg !606
STORE [*p=q]:   store i8* %34, i8** %p, align 8, !dbg !606
LOAD [p=*q]:   %35 = load i8** %p, align 8, !dbg !607
LOAD [p=*q]:   %36 = load i8* %35, !dbg !607
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !608
STORE [*p=q]:   store i8* %40, i8** %p, align 8, !dbg !608
STORE [*p=q]:   store i8 0, i8* %39, !dbg !608
LOAD [p=*q]:   %43 = load i32* %nargc, align 4, !dbg !610
STORE [*p=q]:   store i32 %44, i32* %nargc, align 4, !dbg !610
LOAD [p=*q]:   %46 = load i32* %nargc, align 4, !dbg !611
LOAD [p=*q]:   %49 = load i8** %env_val, align 8, !dbg !612
CALL [call func]:   call void @free(i8* %49) #3, !dbg !612
CONTEXT CALL [call func]:   call void @free(i8* %49) #3, !dbg !612
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** %1, !dbg !614
LOAD [p=*q]:   %51 = load i32* %nargc, align 4, !dbg !615
LOAD [p=*q]:   %52 = load i32** %2, align 8, !dbg !615
LOAD [p=*q]:   %53 = load i32* %52, !dbg !615
STORE [*p=q]:   store i32 %54, i32* %52, !dbg !615
LOAD [p=*q]:   %55 = load i32** %2, align 8, !dbg !616
LOAD [p=*q]:   %56 = load i32* %55, !dbg !616
CALL [call func]:   %59 = call noalias i8* @xcalloc(i64 %58, i64 8), !dbg !616
CONTEXT CALL [call func]:   %59 = call noalias i8* @xcalloc(i64 %58, i64 8), !dbg !616
	We do not analyze function 'xcalloc'
STORE [*p=q]:   store i8** %60, i8*** %nargv, align 8, !dbg !616
LOAD [p=*q]:   %61 = load i8**** %3, align 8, !dbg !617
LOAD [p=*q]:   %62 = load i8*** %61, !dbg !617
STORE [*p=q]:   store i8** %62, i8*** %oargv, align 8, !dbg !617
LOAD [p=*q]:   %63 = load i8*** %nargv, align 8, !dbg !618
LOAD [p=*q]:   %64 = load i8**** %3, align 8, !dbg !618
STORE [*p=q]:   store i8** %63, i8*** %64, !dbg !618
LOAD [p=*q]:   %65 = load i32* %oargc, align 4, !dbg !619
STORE [*p=q]:   store i32 %66, i32* %oargc, align 4, !dbg !619
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([8 x i8]* @.str1183, i32 0, i32 0)) #7, !dbg !620
CONTEXT CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([8 x i8]* @.str1183, i32 0, i32 0)) #7, !dbg !620
STORE [*p=q]:   store i8* %m, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
## gzip_error does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !576
LOAD [p=*q]:   %3 = load i8** @program_name, align 8, !dbg !576
LOAD [p=*q]:   %4 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
CONTEXT CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @abort_gzip() #7, !dbg !578
CONTEXT CALL [call func]:   call void @abort_gzip() #7, !dbg !578
CALL [call func]:   call void @remove_output_file(), !dbg !574
CALL [call func]:   call void (...)* bitcast (void (i32)* @do_exit to void (...)*)(i32 1) #7, !dbg !576
LOAD [p=*q]:   %70 = load i8*** %oargv, align 8, !dbg !621
STORE [*p=q]:   store i8** %71, i8*** %oargv, align 8, !dbg !621
LOAD [p=*q]:   %72 = load i8** %70, !dbg !621
LOAD [p=*q]:   %73 = load i8*** %nargv, align 8, !dbg !621
STORE [*p=q]:   store i8** %74, i8*** %nargv, align 8, !dbg !621
STORE [*p=q]:   store i8* %72, i8** %73, !dbg !621
LOAD [p=*q]:   %75 = load i8** %env_val, align 8, !dbg !622
STORE [*p=q]:   store i8* %75, i8** %p, align 8, !dbg !622
LOAD [p=*q]:   %77 = load i32* %nargc, align 4, !dbg !622
LOAD [p=*q]:   %80 = load i8** %p, align 8, !dbg !624
CALL [call func]:   %81 = call i64 @strspn(i8* %80, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !624
CONTEXT CALL [call func]:   %81 = call i64 @strspn(i8* %80, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !624
	We do not analyze function 'strspn'
LOAD [p=*q]:   %82 = load i8** %p, align 8, !dbg !624
STORE [*p=q]:   store i8* %83, i8** %p, align 8, !dbg !624
LOAD [p=*q]:   %84 = load i8** %p, align 8, !dbg !626
LOAD [p=*q]:   %85 = load i8*** %nargv, align 8, !dbg !626
STORE [*p=q]:   store i8** %86, i8*** %nargv, align 8, !dbg !626
STORE [*p=q]:   store i8* %84, i8** %85, !dbg !626
LOAD [p=*q]:   %88 = load i8** %p, align 8, !dbg !627
STORE [*p=q]:   store i8* %89, i8** %p, align 8, !dbg !627
LOAD [p=*q]:   %90 = load i8* %88, !dbg !627
LOAD [p=*q]:   %95 = load i32* %nargc, align 4, !dbg !629
STORE [*p=q]:   store i32 %96, i32* %nargc, align 4, !dbg !629
LOAD [p=*q]:   %99 = load i32* %oargc, align 4, !dbg !630
STORE [*p=q]:   store i32 %100, i32* %oargc, align 4, !dbg !630
LOAD [p=*q]:   %103 = load i8*** %oargv, align 8, !dbg !631
STORE [*p=q]:   store i8** %104, i8*** %oargv, align 8, !dbg !631
LOAD [p=*q]:   %105 = load i8** %103, !dbg !631
LOAD [p=*q]:   %106 = load i8*** %nargv, align 8, !dbg !631
STORE [*p=q]:   store i8** %107, i8*** %nargv, align 8, !dbg !631
STORE [*p=q]:   store i8* %105, i8** %106, !dbg !631
LOAD [p=*q]:   %109 = load i8*** %nargv, align 8, !dbg !632
STORE [*p=q]:   store i8* null, i8** %109, !dbg !632
LOAD [p=*q]:   %110 = load i8** %env_val, align 8, !dbg !633
STORE [*p=q]:   store i8* %110, i8** %1, !dbg !633
LOAD [p=*q]:   %112 = load i8** %1, !dbg !634
STORE [*p=q]:   store i8* %26, i8** @env, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i8** @env, align 8, !dbg !592
LOAD [p=*q]:   %14 = load i8** @program_name, align 8, !dbg !589
LOAD [p=*q]:   %15 = load i64* %proglen, align 8, !dbg !589
CALL [call func]:   %18 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([5 x i8]* @.str1, i32 0, i32 0)) #4, !dbg !589
CONTEXT CALL [call func]:   %18 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([5 x i8]* @.str1, i32 0, i32 0)) #4, !dbg !589
	We do not analyze function 'strcmp'
LOAD [p=*q]:   %21 = load i64* %proglen, align 8, !dbg !590
LOAD [p=*q]:   %23 = load i8** @program_name, align 8, !dbg !590
STORE [*p=q]:   store i8 0, i8* %24, !dbg !590
CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
CONTEXT CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i32* %argcp, i32** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32** %2}, metadata !574), !dbg !575
## add_envopt does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8*** %argvp, i8**** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8**** %3}, metadata !576), !dbg !578
## add_envopt does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8* %envvar_name, i8** %4, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %4}, metadata !579), !dbg !580
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !581), !dbg !583
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %oargv}, metadata !584), !dbg !585
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %nargv}, metadata !586), !dbg !587
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %oargc}, metadata !588), !dbg !589
## add_envopt does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %5 = load i32** %2, align 8, !dbg !590
LOAD [p=*q]:   %6 = load i32* %5, !dbg !590
STORE [*p=q]:   store i32 %6, i32* %oargc, align 4, !dbg !590
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nargc}, metadata !591), !dbg !592
## add_envopt does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 0, i32* %nargc, align 4, !dbg !593
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %env_val}, metadata !594), !dbg !595
## add_envopt does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %7 = load i8** %4, align 8, !dbg !596
CALL [call func]:   %8 = call i8* @getenv(i8* %7) #3, !dbg !596
CONTEXT CALL [call func]:   %8 = call i8* @getenv(i8* %7) #3, !dbg !596
	We do not analyze function 'getenv'
STORE [*p=q]:   store i8* %8, i8** %env_val, align 8, !dbg !596
LOAD [p=*q]:   %9 = load i8** %env_val, align 8, !dbg !597
STORE [*p=q]:   store i8* null, i8** %1, !dbg !598
LOAD [p=*q]:   %13 = load i8** %env_val, align 8, !dbg !599
CALL [call func]:   %14 = call noalias i8* @xstrdup(i8* %13), !dbg !599
CONTEXT CALL [call func]:   %14 = call noalias i8* @xstrdup(i8* %13), !dbg !599
	We do not analyze function 'xstrdup'
STORE [*p=q]:   store i8* %14, i8** %env_val, align 8, !dbg !599
LOAD [p=*q]:   %15 = load i8** %env_val, align 8, !dbg !600
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !600
LOAD [p=*q]:   %17 = load i8** %p, align 8, !dbg !600
LOAD [p=*q]:   %18 = load i8* %17, !dbg !600
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !602
CALL [call func]:   %22 = call i64 @strspn(i8* %21, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !602
CONTEXT CALL [call func]:   %22 = call i64 @strspn(i8* %21, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !602
	We do not analyze function 'strspn'
LOAD [p=*q]:   %23 = load i8** %p, align 8, !dbg !602
STORE [*p=q]:   store i8* %24, i8** %p, align 8, !dbg !602
LOAD [p=*q]:   %25 = load i8** %p, align 8, !dbg !604
LOAD [p=*q]:   %26 = load i8* %25, !dbg !604
LOAD [p=*q]:   %31 = load i8** %p, align 8, !dbg !606
CALL [call func]:   %32 = call i64 @strcspn(i8* %31, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !606
CONTEXT CALL [call func]:   %32 = call i64 @strcspn(i8* %31, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !606
	We do not analyze function 'strcspn'
LOAD [p=*q]:   %33 = load i8** %p, align 8, !dbg !606
STORE [*p=q]:   store i8* %34, i8** %p, align 8, !dbg !606
LOAD [p=*q]:   %35 = load i8** %p, align 8, !dbg !607
LOAD [p=*q]:   %36 = load i8* %35, !dbg !607
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !608
STORE [*p=q]:   store i8* %40, i8** %p, align 8, !dbg !608
STORE [*p=q]:   store i8 0, i8* %39, !dbg !608
LOAD [p=*q]:   %43 = load i32* %nargc, align 4, !dbg !610
STORE [*p=q]:   store i32 %44, i32* %nargc, align 4, !dbg !610
LOAD [p=*q]:   %46 = load i32* %nargc, align 4, !dbg !611
LOAD [p=*q]:   %49 = load i8** %env_val, align 8, !dbg !612
CALL [call func]:   call void @free(i8* %49) #3, !dbg !612
CONTEXT CALL [call func]:   call void @free(i8* %49) #3, !dbg !612
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** %1, !dbg !614
LOAD [p=*q]:   %51 = load i32* %nargc, align 4, !dbg !615
LOAD [p=*q]:   %52 = load i32** %2, align 8, !dbg !615
LOAD [p=*q]:   %53 = load i32* %52, !dbg !615
STORE [*p=q]:   store i32 %54, i32* %52, !dbg !615
LOAD [p=*q]:   %55 = load i32** %2, align 8, !dbg !616
LOAD [p=*q]:   %56 = load i32* %55, !dbg !616
CALL [call func]:   %59 = call noalias i8* @xcalloc(i64 %58, i64 8), !dbg !616
CONTEXT CALL [call func]:   %59 = call noalias i8* @xcalloc(i64 %58, i64 8), !dbg !616
	We do not analyze function 'xcalloc'
STORE [*p=q]:   store i8** %60, i8*** %nargv, align 8, !dbg !616
LOAD [p=*q]:   %61 = load i8**** %3, align 8, !dbg !617
LOAD [p=*q]:   %62 = load i8*** %61, !dbg !617
STORE [*p=q]:   store i8** %62, i8*** %oargv, align 8, !dbg !617
LOAD [p=*q]:   %63 = load i8*** %nargv, align 8, !dbg !618
LOAD [p=*q]:   %64 = load i8**** %3, align 8, !dbg !618
STORE [*p=q]:   store i8** %63, i8*** %64, !dbg !618
LOAD [p=*q]:   %65 = load i32* %oargc, align 4, !dbg !619
STORE [*p=q]:   store i32 %66, i32* %oargc, align 4, !dbg !619
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([8 x i8]* @.str1183, i32 0, i32 0)) #7, !dbg !620
CONTEXT CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([8 x i8]* @.str1183, i32 0, i32 0)) #7, !dbg !620
STORE [*p=q]:   store i8* %m, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
## gzip_error does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !576
LOAD [p=*q]:   %3 = load i8** @program_name, align 8, !dbg !576
LOAD [p=*q]:   %4 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
CONTEXT CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @abort_gzip() #7, !dbg !578
CONTEXT CALL [call func]:   call void @abort_gzip() #7, !dbg !578
CALL [call func]:   call void @remove_output_file(), !dbg !574
CALL [call func]:   call void (...)* bitcast (void (i32)* @do_exit to void (...)*)(i32 1) #7, !dbg !576
LOAD [p=*q]:   %70 = load i8*** %oargv, align 8, !dbg !621
STORE [*p=q]:   store i8** %71, i8*** %oargv, align 8, !dbg !621
LOAD [p=*q]:   %72 = load i8** %70, !dbg !621
LOAD [p=*q]:   %73 = load i8*** %nargv, align 8, !dbg !621
STORE [*p=q]:   store i8** %74, i8*** %nargv, align 8, !dbg !621
STORE [*p=q]:   store i8* %72, i8** %73, !dbg !621
LOAD [p=*q]:   %75 = load i8** %env_val, align 8, !dbg !622
STORE [*p=q]:   store i8* %75, i8** %p, align 8, !dbg !622
LOAD [p=*q]:   %77 = load i32* %nargc, align 4, !dbg !622
LOAD [p=*q]:   %80 = load i8** %p, align 8, !dbg !624
CALL [call func]:   %81 = call i64 @strspn(i8* %80, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !624
CONTEXT CALL [call func]:   %81 = call i64 @strspn(i8* %80, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !624
	We do not analyze function 'strspn'
LOAD [p=*q]:   %82 = load i8** %p, align 8, !dbg !624
STORE [*p=q]:   store i8* %83, i8** %p, align 8, !dbg !624
LOAD [p=*q]:   %84 = load i8** %p, align 8, !dbg !626
LOAD [p=*q]:   %85 = load i8*** %nargv, align 8, !dbg !626
STORE [*p=q]:   store i8** %86, i8*** %nargv, align 8, !dbg !626
STORE [*p=q]:   store i8* %84, i8** %85, !dbg !626
LOAD [p=*q]:   %88 = load i8** %p, align 8, !dbg !627
STORE [*p=q]:   store i8* %89, i8** %p, align 8, !dbg !627
LOAD [p=*q]:   %90 = load i8* %88, !dbg !627
LOAD [p=*q]:   %95 = load i32* %nargc, align 4, !dbg !629
STORE [*p=q]:   store i32 %96, i32* %nargc, align 4, !dbg !629
LOAD [p=*q]:   %99 = load i32* %oargc, align 4, !dbg !630
STORE [*p=q]:   store i32 %100, i32* %oargc, align 4, !dbg !630
LOAD [p=*q]:   %103 = load i8*** %oargv, align 8, !dbg !631
STORE [*p=q]:   store i8** %104, i8*** %oargv, align 8, !dbg !631
LOAD [p=*q]:   %105 = load i8** %103, !dbg !631
LOAD [p=*q]:   %106 = load i8*** %nargv, align 8, !dbg !631
STORE [*p=q]:   store i8** %107, i8*** %nargv, align 8, !dbg !631
STORE [*p=q]:   store i8* %105, i8** %106, !dbg !631
LOAD [p=*q]:   %109 = load i8*** %nargv, align 8, !dbg !632
STORE [*p=q]:   store i8* null, i8** %109, !dbg !632
LOAD [p=*q]:   %110 = load i8** %env_val, align 8, !dbg !633
STORE [*p=q]:   store i8* %110, i8** %1, !dbg !633
LOAD [p=*q]:   %112 = load i8** %1, !dbg !634
STORE [*p=q]:   store i8* %26, i8** @env, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i8** @env, align 8, !dbg !592
LOAD [p=*q]:   %21 = load i64* %proglen, align 8, !dbg !590
LOAD [p=*q]:   %23 = load i8** @program_name, align 8, !dbg !590
STORE [*p=q]:   store i8 0, i8* %24, !dbg !590
CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
CONTEXT CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i32* %argcp, i32** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32** %2}, metadata !574), !dbg !575
## add_envopt does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8*** %argvp, i8**** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8**** %3}, metadata !576), !dbg !578
## add_envopt does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8* %envvar_name, i8** %4, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %4}, metadata !579), !dbg !580
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !581), !dbg !583
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %oargv}, metadata !584), !dbg !585
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %nargv}, metadata !586), !dbg !587
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %oargc}, metadata !588), !dbg !589
## add_envopt does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %5 = load i32** %2, align 8, !dbg !590
LOAD [p=*q]:   %6 = load i32* %5, !dbg !590
STORE [*p=q]:   store i32 %6, i32* %oargc, align 4, !dbg !590
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nargc}, metadata !591), !dbg !592
## add_envopt does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 0, i32* %nargc, align 4, !dbg !593
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %env_val}, metadata !594), !dbg !595
## add_envopt does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %7 = load i8** %4, align 8, !dbg !596
CALL [call func]:   %8 = call i8* @getenv(i8* %7) #3, !dbg !596
CONTEXT CALL [call func]:   %8 = call i8* @getenv(i8* %7) #3, !dbg !596
	We do not analyze function 'getenv'
STORE [*p=q]:   store i8* %8, i8** %env_val, align 8, !dbg !596
LOAD [p=*q]:   %9 = load i8** %env_val, align 8, !dbg !597
STORE [*p=q]:   store i8* null, i8** %1, !dbg !598
LOAD [p=*q]:   %13 = load i8** %env_val, align 8, !dbg !599
CALL [call func]:   %14 = call noalias i8* @xstrdup(i8* %13), !dbg !599
CONTEXT CALL [call func]:   %14 = call noalias i8* @xstrdup(i8* %13), !dbg !599
	We do not analyze function 'xstrdup'
STORE [*p=q]:   store i8* %14, i8** %env_val, align 8, !dbg !599
LOAD [p=*q]:   %15 = load i8** %env_val, align 8, !dbg !600
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !600
LOAD [p=*q]:   %17 = load i8** %p, align 8, !dbg !600
LOAD [p=*q]:   %18 = load i8* %17, !dbg !600
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !602
CALL [call func]:   %22 = call i64 @strspn(i8* %21, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !602
CONTEXT CALL [call func]:   %22 = call i64 @strspn(i8* %21, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !602
	We do not analyze function 'strspn'
LOAD [p=*q]:   %23 = load i8** %p, align 8, !dbg !602
STORE [*p=q]:   store i8* %24, i8** %p, align 8, !dbg !602
LOAD [p=*q]:   %25 = load i8** %p, align 8, !dbg !604
LOAD [p=*q]:   %26 = load i8* %25, !dbg !604
LOAD [p=*q]:   %31 = load i8** %p, align 8, !dbg !606
CALL [call func]:   %32 = call i64 @strcspn(i8* %31, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !606
CONTEXT CALL [call func]:   %32 = call i64 @strcspn(i8* %31, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !606
	We do not analyze function 'strcspn'
LOAD [p=*q]:   %33 = load i8** %p, align 8, !dbg !606
STORE [*p=q]:   store i8* %34, i8** %p, align 8, !dbg !606
LOAD [p=*q]:   %35 = load i8** %p, align 8, !dbg !607
LOAD [p=*q]:   %36 = load i8* %35, !dbg !607
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !608
STORE [*p=q]:   store i8* %40, i8** %p, align 8, !dbg !608
STORE [*p=q]:   store i8 0, i8* %39, !dbg !608
LOAD [p=*q]:   %43 = load i32* %nargc, align 4, !dbg !610
STORE [*p=q]:   store i32 %44, i32* %nargc, align 4, !dbg !610
LOAD [p=*q]:   %46 = load i32* %nargc, align 4, !dbg !611
LOAD [p=*q]:   %49 = load i8** %env_val, align 8, !dbg !612
CALL [call func]:   call void @free(i8* %49) #3, !dbg !612
CONTEXT CALL [call func]:   call void @free(i8* %49) #3, !dbg !612
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** %1, !dbg !614
LOAD [p=*q]:   %51 = load i32* %nargc, align 4, !dbg !615
LOAD [p=*q]:   %52 = load i32** %2, align 8, !dbg !615
LOAD [p=*q]:   %53 = load i32* %52, !dbg !615
STORE [*p=q]:   store i32 %54, i32* %52, !dbg !615
LOAD [p=*q]:   %55 = load i32** %2, align 8, !dbg !616
LOAD [p=*q]:   %56 = load i32* %55, !dbg !616
CALL [call func]:   %59 = call noalias i8* @xcalloc(i64 %58, i64 8), !dbg !616
CONTEXT CALL [call func]:   %59 = call noalias i8* @xcalloc(i64 %58, i64 8), !dbg !616
	We do not analyze function 'xcalloc'
STORE [*p=q]:   store i8** %60, i8*** %nargv, align 8, !dbg !616
LOAD [p=*q]:   %61 = load i8**** %3, align 8, !dbg !617
LOAD [p=*q]:   %62 = load i8*** %61, !dbg !617
STORE [*p=q]:   store i8** %62, i8*** %oargv, align 8, !dbg !617
LOAD [p=*q]:   %63 = load i8*** %nargv, align 8, !dbg !618
LOAD [p=*q]:   %64 = load i8**** %3, align 8, !dbg !618
STORE [*p=q]:   store i8** %63, i8*** %64, !dbg !618
LOAD [p=*q]:   %65 = load i32* %oargc, align 4, !dbg !619
STORE [*p=q]:   store i32 %66, i32* %oargc, align 4, !dbg !619
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([8 x i8]* @.str1183, i32 0, i32 0)) #7, !dbg !620
CONTEXT CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([8 x i8]* @.str1183, i32 0, i32 0)) #7, !dbg !620
STORE [*p=q]:   store i8* %m, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
## gzip_error does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !576
LOAD [p=*q]:   %3 = load i8** @program_name, align 8, !dbg !576
LOAD [p=*q]:   %4 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
CONTEXT CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @abort_gzip() #7, !dbg !578
CONTEXT CALL [call func]:   call void @abort_gzip() #7, !dbg !578
CALL [call func]:   call void @remove_output_file(), !dbg !574
CALL [call func]:   call void (...)* bitcast (void (i32)* @do_exit to void (...)*)(i32 1) #7, !dbg !576
LOAD [p=*q]:   %70 = load i8*** %oargv, align 8, !dbg !621
STORE [*p=q]:   store i8** %71, i8*** %oargv, align 8, !dbg !621
LOAD [p=*q]:   %72 = load i8** %70, !dbg !621
LOAD [p=*q]:   %73 = load i8*** %nargv, align 8, !dbg !621
STORE [*p=q]:   store i8** %74, i8*** %nargv, align 8, !dbg !621
STORE [*p=q]:   store i8* %72, i8** %73, !dbg !621
LOAD [p=*q]:   %75 = load i8** %env_val, align 8, !dbg !622
STORE [*p=q]:   store i8* %75, i8** %p, align 8, !dbg !622
LOAD [p=*q]:   %77 = load i32* %nargc, align 4, !dbg !622
LOAD [p=*q]:   %80 = load i8** %p, align 8, !dbg !624
CALL [call func]:   %81 = call i64 @strspn(i8* %80, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !624
CONTEXT CALL [call func]:   %81 = call i64 @strspn(i8* %80, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !624
	We do not analyze function 'strspn'
LOAD [p=*q]:   %82 = load i8** %p, align 8, !dbg !624
STORE [*p=q]:   store i8* %83, i8** %p, align 8, !dbg !624
LOAD [p=*q]:   %84 = load i8** %p, align 8, !dbg !626
LOAD [p=*q]:   %85 = load i8*** %nargv, align 8, !dbg !626
STORE [*p=q]:   store i8** %86, i8*** %nargv, align 8, !dbg !626
STORE [*p=q]:   store i8* %84, i8** %85, !dbg !626
LOAD [p=*q]:   %88 = load i8** %p, align 8, !dbg !627
STORE [*p=q]:   store i8* %89, i8** %p, align 8, !dbg !627
LOAD [p=*q]:   %90 = load i8* %88, !dbg !627
LOAD [p=*q]:   %95 = load i32* %nargc, align 4, !dbg !629
STORE [*p=q]:   store i32 %96, i32* %nargc, align 4, !dbg !629
LOAD [p=*q]:   %99 = load i32* %oargc, align 4, !dbg !630
STORE [*p=q]:   store i32 %100, i32* %oargc, align 4, !dbg !630
LOAD [p=*q]:   %103 = load i8*** %oargv, align 8, !dbg !631
STORE [*p=q]:   store i8** %104, i8*** %oargv, align 8, !dbg !631
LOAD [p=*q]:   %105 = load i8** %103, !dbg !631
LOAD [p=*q]:   %106 = load i8*** %nargv, align 8, !dbg !631
STORE [*p=q]:   store i8** %107, i8*** %nargv, align 8, !dbg !631
STORE [*p=q]:   store i8* %105, i8** %106, !dbg !631
LOAD [p=*q]:   %109 = load i8*** %nargv, align 8, !dbg !632
STORE [*p=q]:   store i8* null, i8** %109, !dbg !632
LOAD [p=*q]:   %110 = load i8** %env_val, align 8, !dbg !633
STORE [*p=q]:   store i8* %110, i8** %1, !dbg !633
LOAD [p=*q]:   %112 = load i8** %1, !dbg !634
STORE [*p=q]:   store i8* %26, i8** @env, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i8** @env, align 8, !dbg !592
CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
CONTEXT CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i32* %argcp, i32** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32** %2}, metadata !574), !dbg !575
## add_envopt does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8*** %argvp, i8**** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8**** %3}, metadata !576), !dbg !578
## add_envopt does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8* %envvar_name, i8** %4, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %4}, metadata !579), !dbg !580
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !581), !dbg !583
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %oargv}, metadata !584), !dbg !585
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %nargv}, metadata !586), !dbg !587
## add_envopt does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %oargc}, metadata !588), !dbg !589
## add_envopt does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %5 = load i32** %2, align 8, !dbg !590
LOAD [p=*q]:   %6 = load i32* %5, !dbg !590
STORE [*p=q]:   store i32 %6, i32* %oargc, align 4, !dbg !590
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nargc}, metadata !591), !dbg !592
## add_envopt does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 0, i32* %nargc, align 4, !dbg !593
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %env_val}, metadata !594), !dbg !595
## add_envopt does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %7 = load i8** %4, align 8, !dbg !596
CALL [call func]:   %8 = call i8* @getenv(i8* %7) #3, !dbg !596
CONTEXT CALL [call func]:   %8 = call i8* @getenv(i8* %7) #3, !dbg !596
	We do not analyze function 'getenv'
STORE [*p=q]:   store i8* %8, i8** %env_val, align 8, !dbg !596
LOAD [p=*q]:   %9 = load i8** %env_val, align 8, !dbg !597
STORE [*p=q]:   store i8* null, i8** %1, !dbg !598
LOAD [p=*q]:   %13 = load i8** %env_val, align 8, !dbg !599
CALL [call func]:   %14 = call noalias i8* @xstrdup(i8* %13), !dbg !599
CONTEXT CALL [call func]:   %14 = call noalias i8* @xstrdup(i8* %13), !dbg !599
	We do not analyze function 'xstrdup'
STORE [*p=q]:   store i8* %14, i8** %env_val, align 8, !dbg !599
LOAD [p=*q]:   %15 = load i8** %env_val, align 8, !dbg !600
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !600
LOAD [p=*q]:   %17 = load i8** %p, align 8, !dbg !600
LOAD [p=*q]:   %18 = load i8* %17, !dbg !600
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !602
CALL [call func]:   %22 = call i64 @strspn(i8* %21, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !602
CONTEXT CALL [call func]:   %22 = call i64 @strspn(i8* %21, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !602
	We do not analyze function 'strspn'
LOAD [p=*q]:   %23 = load i8** %p, align 8, !dbg !602
STORE [*p=q]:   store i8* %24, i8** %p, align 8, !dbg !602
LOAD [p=*q]:   %25 = load i8** %p, align 8, !dbg !604
LOAD [p=*q]:   %26 = load i8* %25, !dbg !604
LOAD [p=*q]:   %31 = load i8** %p, align 8, !dbg !606
CALL [call func]:   %32 = call i64 @strcspn(i8* %31, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !606
CONTEXT CALL [call func]:   %32 = call i64 @strcspn(i8* %31, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !606
	We do not analyze function 'strcspn'
LOAD [p=*q]:   %33 = load i8** %p, align 8, !dbg !606
STORE [*p=q]:   store i8* %34, i8** %p, align 8, !dbg !606
LOAD [p=*q]:   %35 = load i8** %p, align 8, !dbg !607
LOAD [p=*q]:   %36 = load i8* %35, !dbg !607
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !608
STORE [*p=q]:   store i8* %40, i8** %p, align 8, !dbg !608
STORE [*p=q]:   store i8 0, i8* %39, !dbg !608
LOAD [p=*q]:   %43 = load i32* %nargc, align 4, !dbg !610
STORE [*p=q]:   store i32 %44, i32* %nargc, align 4, !dbg !610
LOAD [p=*q]:   %46 = load i32* %nargc, align 4, !dbg !611
LOAD [p=*q]:   %49 = load i8** %env_val, align 8, !dbg !612
CALL [call func]:   call void @free(i8* %49) #3, !dbg !612
CONTEXT CALL [call func]:   call void @free(i8* %49) #3, !dbg !612
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** %1, !dbg !614
LOAD [p=*q]:   %51 = load i32* %nargc, align 4, !dbg !615
LOAD [p=*q]:   %52 = load i32** %2, align 8, !dbg !615
LOAD [p=*q]:   %53 = load i32* %52, !dbg !615
STORE [*p=q]:   store i32 %54, i32* %52, !dbg !615
LOAD [p=*q]:   %55 = load i32** %2, align 8, !dbg !616
LOAD [p=*q]:   %56 = load i32* %55, !dbg !616
CALL [call func]:   %59 = call noalias i8* @xcalloc(i64 %58, i64 8), !dbg !616
CONTEXT CALL [call func]:   %59 = call noalias i8* @xcalloc(i64 %58, i64 8), !dbg !616
	We do not analyze function 'xcalloc'
STORE [*p=q]:   store i8** %60, i8*** %nargv, align 8, !dbg !616
LOAD [p=*q]:   %61 = load i8**** %3, align 8, !dbg !617
LOAD [p=*q]:   %62 = load i8*** %61, !dbg !617
STORE [*p=q]:   store i8** %62, i8*** %oargv, align 8, !dbg !617
LOAD [p=*q]:   %63 = load i8*** %nargv, align 8, !dbg !618
LOAD [p=*q]:   %64 = load i8**** %3, align 8, !dbg !618
STORE [*p=q]:   store i8** %63, i8*** %64, !dbg !618
LOAD [p=*q]:   %65 = load i32* %oargc, align 4, !dbg !619
STORE [*p=q]:   store i32 %66, i32* %oargc, align 4, !dbg !619
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([8 x i8]* @.str1183, i32 0, i32 0)) #7, !dbg !620
CONTEXT CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([8 x i8]* @.str1183, i32 0, i32 0)) #7, !dbg !620
STORE [*p=q]:   store i8* %m, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
## gzip_error does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !576
LOAD [p=*q]:   %3 = load i8** @program_name, align 8, !dbg !576
LOAD [p=*q]:   %4 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
CONTEXT CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @abort_gzip() #7, !dbg !578
CONTEXT CALL [call func]:   call void @abort_gzip() #7, !dbg !578
CALL [call func]:   call void @remove_output_file(), !dbg !574
CALL [call func]:   call void (...)* bitcast (void (i32)* @do_exit to void (...)*)(i32 1) #7, !dbg !576
LOAD [p=*q]:   %70 = load i8*** %oargv, align 8, !dbg !621
STORE [*p=q]:   store i8** %71, i8*** %oargv, align 8, !dbg !621
LOAD [p=*q]:   %72 = load i8** %70, !dbg !621
LOAD [p=*q]:   %73 = load i8*** %nargv, align 8, !dbg !621
STORE [*p=q]:   store i8** %74, i8*** %nargv, align 8, !dbg !621
STORE [*p=q]:   store i8* %72, i8** %73, !dbg !621
LOAD [p=*q]:   %75 = load i8** %env_val, align 8, !dbg !622
STORE [*p=q]:   store i8* %75, i8** %p, align 8, !dbg !622
LOAD [p=*q]:   %77 = load i32* %nargc, align 4, !dbg !622
LOAD [p=*q]:   %80 = load i8** %p, align 8, !dbg !624
CALL [call func]:   %81 = call i64 @strspn(i8* %80, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !624
CONTEXT CALL [call func]:   %81 = call i64 @strspn(i8* %80, i8* getelementptr inbounds ([3 x i8]* @.str182, i32 0, i32 0)) #4, !dbg !624
	We do not analyze function 'strspn'
LOAD [p=*q]:   %82 = load i8** %p, align 8, !dbg !624
STORE [*p=q]:   store i8* %83, i8** %p, align 8, !dbg !624
LOAD [p=*q]:   %84 = load i8** %p, align 8, !dbg !626
LOAD [p=*q]:   %85 = load i8*** %nargv, align 8, !dbg !626
STORE [*p=q]:   store i8** %86, i8*** %nargv, align 8, !dbg !626
STORE [*p=q]:   store i8* %84, i8** %85, !dbg !626
LOAD [p=*q]:   %88 = load i8** %p, align 8, !dbg !627
STORE [*p=q]:   store i8* %89, i8** %p, align 8, !dbg !627
LOAD [p=*q]:   %90 = load i8* %88, !dbg !627
LOAD [p=*q]:   %95 = load i32* %nargc, align 4, !dbg !629
STORE [*p=q]:   store i32 %96, i32* %nargc, align 4, !dbg !629
LOAD [p=*q]:   %99 = load i32* %oargc, align 4, !dbg !630
STORE [*p=q]:   store i32 %100, i32* %oargc, align 4, !dbg !630
LOAD [p=*q]:   %103 = load i8*** %oargv, align 8, !dbg !631
STORE [*p=q]:   store i8** %104, i8*** %oargv, align 8, !dbg !631
LOAD [p=*q]:   %105 = load i8** %103, !dbg !631
LOAD [p=*q]:   %106 = load i8*** %nargv, align 8, !dbg !631
STORE [*p=q]:   store i8** %107, i8*** %nargv, align 8, !dbg !631
STORE [*p=q]:   store i8* %105, i8** %106, !dbg !631
LOAD [p=*q]:   %109 = load i8*** %nargv, align 8, !dbg !632
STORE [*p=q]:   store i8* null, i8** %109, !dbg !632
LOAD [p=*q]:   %110 = load i8** %env_val, align 8, !dbg !633
STORE [*p=q]:   store i8* %110, i8** %1, !dbg !633
LOAD [p=*q]:   %112 = load i8** %1, !dbg !634
STORE [*p=q]:   store i8* %26, i8** @env, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i8** @env, align 8, !dbg !592
LOAD [p=*q]:   %30 = load i8*** %3, align 8, !dbg !593
STORE [*p=q]:   store i8** %30, i8*** @args, align 8, !dbg !593
STORE [*p=q]:   store i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i8** @z_suffix, align 8, !dbg !594
LOAD [p=*q]:   %32 = load i8** @z_suffix, align 8, !dbg !595
CALL [call func]:   %33 = call i64 @strlen(i8* %32) #4, !dbg !595
CONTEXT CALL [call func]:   %33 = call i64 @strlen(i8* %32) #4, !dbg !595
	We do not analyze function 'strlen'
STORE [*p=q]:   store i64 %33, i64* @z_len, align 8, !dbg !595
LOAD [p=*q]:   %30 = load i8*** %3, align 8, !dbg !593
STORE [*p=q]:   store i8** %30, i8*** @args, align 8, !dbg !593
STORE [*p=q]:   store i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i8** @z_suffix, align 8, !dbg !594
LOAD [p=*q]:   %32 = load i8** @z_suffix, align 8, !dbg !595
CALL [call func]:   %33 = call i64 @strlen(i8* %32) #4, !dbg !595
CONTEXT CALL [call func]:   %33 = call i64 @strlen(i8* %32) #4, !dbg !595
	We do not analyze function 'strlen'
STORE [*p=q]:   store i64 %33, i64* @z_len, align 8, !dbg !595
STORE [*p=q]:   store i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i8** @z_suffix, align 8, !dbg !594
LOAD [p=*q]:   %32 = load i8** @z_suffix, align 8, !dbg !595
CALL [call func]:   %33 = call i64 @strlen(i8* %32) #4, !dbg !595
CONTEXT CALL [call func]:   %33 = call i64 @strlen(i8* %32) #4, !dbg !595
	We do not analyze function 'strlen'
STORE [*p=q]:   store i64 %33, i64* @z_len, align 8, !dbg !595
LOAD [p=*q]:   %35 = load i32* %2, align 4, !dbg !597
LOAD [p=*q]:   %36 = load i8*** %3, align 8, !dbg !597
CALL [call func]:   %37 = call i32 @rpl_getopt_long(i32 %35, i8** %36, i8* getelementptr inbounds ([34 x i8]* @.str3, i32 0, i32 0), %struct.rpl_option* getelementptr inbounds ([26 x %struct.rpl_option]* bitcast (<{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] } }>* @longopts to [26 x %struct.rpl_option]*), i32 0, i32 0), i32* null) #3, !dbg !597
CONTEXT CALL [call func]:   %37 = call i32 @rpl_getopt_long(i32 %35, i8** %36, i8* getelementptr inbounds ([34 x i8]* @.str3, i32 0, i32 0), %struct.rpl_option* getelementptr inbounds ([26 x %struct.rpl_option]* bitcast (<{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] } }>* @longopts to [26 x %struct.rpl_option]*), i32 0, i32 0), i32* null) #3, !dbg !597
	We do not analyze function 'rpl_getopt_long'
STORE [*p=q]:   store i32 %37, i32* %optc, align 4, !dbg !597
LOAD [p=*q]:   %35 = load i32* %2, align 4, !dbg !597
LOAD [p=*q]:   %36 = load i8*** %3, align 8, !dbg !597
CALL [call func]:   %37 = call i32 @rpl_getopt_long(i32 %35, i8** %36, i8* getelementptr inbounds ([34 x i8]* @.str3, i32 0, i32 0), %struct.rpl_option* getelementptr inbounds ([26 x %struct.rpl_option]* bitcast (<{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] } }>* @longopts to [26 x %struct.rpl_option]*), i32 0, i32 0), i32* null) #3, !dbg !597
CONTEXT CALL [call func]:   %37 = call i32 @rpl_getopt_long(i32 %35, i8** %36, i8* getelementptr inbounds ([34 x i8]* @.str3, i32 0, i32 0), %struct.rpl_option* getelementptr inbounds ([26 x %struct.rpl_option]* bitcast (<{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] } }>* @longopts to [26 x %struct.rpl_option]*), i32 0, i32 0), i32* null) #3, !dbg !597
	We do not analyze function 'rpl_getopt_long'
STORE [*p=q]:   store i32 %37, i32* %optc, align 4, !dbg !597
LOAD [p=*q]:   %40 = load i32* %optc, align 4, !dbg !598
LOAD [p=*q]:   %103 = load i32* @no_time, align 4, !dbg !658
LOAD [p=*q]:   %40 = load i32* %optc, align 4, !dbg !598
CALL [call func]:   call void @try_help() #7, !dbg !656
CONTEXT CALL [call func]:   call void @try_help() #7, !dbg !656
LOAD [p=*q]:   %1 = load %struct._IO_FILE** @stderr, align 8, !dbg !574
LOAD [p=*q]:   %2 = load i8** @program_name, align 8, !dbg !574
CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str115, i32 0, i32 0), i8* %2), !dbg !574
CONTEXT CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str115, i32 0, i32 0), i8* %2), !dbg !574
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !576
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !576
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @ascii, align 4, !dbg !600
LOAD [p=*q]:   %43 = load i8** @rpl_optarg, align 8, !dbg !603
CALL [call func]:   %44 = call i32 @atoi(i8* %43) #4, !dbg !603
CONTEXT CALL [call func]:   %44 = call i32 @atoi(i8* %43) #4, !dbg !603
	We do not analyze function 'atoi'
STORE [*p=q]:   store i32 %44, i32* @maxbits, align 4, !dbg !603
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !613
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !615
LOAD [p=*q]:   %71 = load i32* @force, align 4, !dbg !617
STORE [*p=q]:   store i32 %72, i32* @force, align 4, !dbg !617
CALL [call func]:   call void @help(), !dbg !619
CONTEXT CALL [call func]:   call void @help(), !dbg !619
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %p}, metadata !574), !dbg !577
## help does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8** getelementptr inbounds ([26 x i8*]* @help.help_msg, i32 0, i32 0), i8*** %p, align 8, !dbg !578
LOAD [p=*q]:   %1 = load i8** @program_name, align 8, !dbg !579
CALL [call func]:   %2 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([33 x i8]* @.str114, i32 0, i32 0), i8* %1), !dbg !579
CONTEXT CALL [call func]:   %2 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([33 x i8]* @.str114, i32 0, i32 0), i8* %1), !dbg !579
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %4 = load i8*** %p, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** %4, !dbg !580
LOAD [p=*q]:   %8 = load i8*** %p, align 8, !dbg !581
STORE [*p=q]:   store i8** %9, i8*** %p, align 8, !dbg !581
LOAD [p=*q]:   %10 = load i8** %8, !dbg !581
CALL [call func]:   %11 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %10), !dbg !581
CONTEXT CALL [call func]:   %11 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %10), !dbg !581
	We do not analyze function 'rpl_printf'
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !620
CONTEXT CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !620
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
CALL [call func]:   call void @help(), !dbg !619
CONTEXT CALL [call func]:   call void @help(), !dbg !619
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %p}, metadata !574), !dbg !577
## help does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8** getelementptr inbounds ([26 x i8*]* @help.help_msg, i32 0, i32 0), i8*** %p, align 8, !dbg !578
LOAD [p=*q]:   %1 = load i8** @program_name, align 8, !dbg !579
CALL [call func]:   %2 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([33 x i8]* @.str114, i32 0, i32 0), i8* %1), !dbg !579
CONTEXT CALL [call func]:   %2 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([33 x i8]* @.str114, i32 0, i32 0), i8* %1), !dbg !579
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %4 = load i8*** %p, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** %4, !dbg !580
LOAD [p=*q]:   %8 = load i8*** %p, align 8, !dbg !581
STORE [*p=q]:   store i8** %9, i8*** %p, align 8, !dbg !581
LOAD [p=*q]:   %10 = load i8** %8, !dbg !581
CALL [call func]:   %11 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %10), !dbg !581
CONTEXT CALL [call func]:   %11 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %10), !dbg !581
	We do not analyze function 'rpl_printf'
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !620
CONTEXT CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !620
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @keep, align 4, !dbg !621
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !623
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !623
STORE [*p=q]:   store i32 1, i32* @list, align 4, !dbg !623
CALL [call func]:   call void @license(), !dbg !625
CONTEXT CALL [call func]:   call void @license(), !dbg !625
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %p}, metadata !574), !dbg !577
## license does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8** getelementptr inbounds ([6 x i8*]* @license_msg, i32 0, i32 0), i8*** %p, align 8, !dbg !578
LOAD [p=*q]:   %1 = load i8** @program_name, align 8, !dbg !579
LOAD [p=*q]:   %2 = load i8** @Version, align 8, !dbg !579
CALL [call func]:   %3 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([7 x i8]* @.str86, i32 0, i32 0), i8* %1, i8* %2), !dbg !579
CONTEXT CALL [call func]:   %3 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([7 x i8]* @.str86, i32 0, i32 0), i8* %1, i8* %2), !dbg !579
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %5 = load i8*** %p, align 8, !dbg !580
LOAD [p=*q]:   %6 = load i8** %5, !dbg !580
LOAD [p=*q]:   %9 = load i8*** %p, align 8, !dbg !581
STORE [*p=q]:   store i8** %10, i8*** %p, align 8, !dbg !581
LOAD [p=*q]:   %11 = load i8** %9, !dbg !581
CALL [call func]:   %12 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %11), !dbg !581
CONTEXT CALL [call func]:   %12 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %11), !dbg !581
	We do not analyze function 'rpl_printf'
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !626
CONTEXT CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !626
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @no_time, align 4, !dbg !627
STORE [*p=q]:   store i32 0, i32* @no_time, align 4, !dbg !629
STORE [*p=q]:   store i32 1, i32* @no_time, align 4, !dbg !631
STORE [*p=q]:   store i32 1, i32* @no_name, align 4, !dbg !631
STORE [*p=q]:   store i32 0, i32* @no_time, align 4, !dbg !633
STORE [*p=q]:   store i32 0, i32* @no_name, align 4, !dbg !633
STORE [*p=q]:   store i8 1, i8* @presume_input_tty, align 1, !dbg !635
STORE [*p=q]:   store i32 1, i32* @quiet, align 4, !dbg !637
STORE [*p=q]:   store i32 0, i32* @verbose, align 4, !dbg !638
STORE [*p=q]:   store i32 1, i32* @recursive, align 4, !dbg !640
LOAD [p=*q]:   %85 = load i8** @rpl_optarg, align 8, !dbg !642
CALL [call func]:   %86 = call i64 @strlen(i8* %85) #4, !dbg !642
CONTEXT CALL [call func]:   %86 = call i64 @strlen(i8* %85) #4, !dbg !642
	We do not analyze function 'strlen'
STORE [*p=q]:   store i64 %86, i64* @z_len, align 8, !dbg !642
LOAD [p=*q]:   %87 = load i8** @rpl_optarg, align 8, !dbg !643
STORE [*p=q]:   store i8* %87, i8** @z_suffix, align 8, !dbg !643
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !645
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !645
STORE [*p=q]:   store i32 1, i32* @test, align 4, !dbg !645
LOAD [p=*q]:   %90 = load i32* @verbose, align 4, !dbg !647
STORE [*p=q]:   store i32 %91, i32* @verbose, align 4, !dbg !647
STORE [*p=q]:   store i32 0, i32* @quiet, align 4, !dbg !648
CALL [call func]:   call void @version(), !dbg !650
CONTEXT CALL [call func]:   call void @version(), !dbg !650
CALL [call func]:   call void @license(), !dbg !574
CONTEXT CALL [call func]:   call void @license(), !dbg !574
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %p}, metadata !574), !dbg !577
## license does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8** getelementptr inbounds ([6 x i8*]* @license_msg, i32 0, i32 0), i8*** %p, align 8, !dbg !578
LOAD [p=*q]:   %1 = load i8** @program_name, align 8, !dbg !579
LOAD [p=*q]:   %2 = load i8** @Version, align 8, !dbg !579
CALL [call func]:   %3 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([7 x i8]* @.str86, i32 0, i32 0), i8* %1, i8* %2), !dbg !579
CONTEXT CALL [call func]:   %3 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([7 x i8]* @.str86, i32 0, i32 0), i8* %1, i8* %2), !dbg !579
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %5 = load i8*** %p, align 8, !dbg !580
LOAD [p=*q]:   %6 = load i8** %5, !dbg !580
LOAD [p=*q]:   %9 = load i8*** %p, align 8, !dbg !581
STORE [*p=q]:   store i8** %10, i8*** %p, align 8, !dbg !581
LOAD [p=*q]:   %11 = load i8** %9, !dbg !581
CALL [call func]:   %12 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %11), !dbg !581
CONTEXT CALL [call func]:   %12 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %11), !dbg !581
	We do not analyze function 'rpl_printf'
CALL [call func]:   %1 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !576
CONTEXT CALL [call func]:   %1 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !576
	We do not analyze function 'rpl_printf'
CALL [call func]:   %2 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([30 x i8]* @.str85, i32 0, i32 0)), !dbg !577
CONTEXT CALL [call func]:   %2 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([30 x i8]* @.str85, i32 0, i32 0)), !dbg !577
	We do not analyze function 'rpl_printf'
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !651
CONTEXT CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !651
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %94 = load %struct._IO_FILE** @stderr, align 8, !dbg !652
LOAD [p=*q]:   %95 = load i8** @program_name, align 8, !dbg !652
CALL [call func]:   %96 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([38 x i8]* @.str5, i32 0, i32 0), i8* %95), !dbg !652
CONTEXT CALL [call func]:   %96 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([38 x i8]* @.str5, i32 0, i32 0), i8* %95), !dbg !652
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @try_help() #7, !dbg !653
CONTEXT CALL [call func]:   call void @try_help() #7, !dbg !653
LOAD [p=*q]:   %1 = load %struct._IO_FILE** @stderr, align 8, !dbg !574
LOAD [p=*q]:   %2 = load i8** @program_name, align 8, !dbg !574
CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str115, i32 0, i32 0), i8* %2), !dbg !574
CONTEXT CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str115, i32 0, i32 0), i8* %2), !dbg !574
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !576
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !576
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
STORE [*p=q]:   store i32 1, i32* @ascii, align 4, !dbg !600
LOAD [p=*q]:   %43 = load i8** @rpl_optarg, align 8, !dbg !603
CALL [call func]:   %44 = call i32 @atoi(i8* %43) #4, !dbg !603
CONTEXT CALL [call func]:   %44 = call i32 @atoi(i8* %43) #4, !dbg !603
	We do not analyze function 'atoi'
STORE [*p=q]:   store i32 %44, i32* @maxbits, align 4, !dbg !603
LOAD [p=*q]:   %46 = load i8** @rpl_optarg, align 8, !dbg !604
LOAD [p=*q]:   %47 = load i8* %46, !dbg !604
LOAD [p=*q]:   %46 = load i8** @rpl_optarg, align 8, !dbg !604
LOAD [p=*q]:   %47 = load i8* %46, !dbg !604
LOAD [p=*q]:   %50 = load i8** @rpl_optarg, align 8, !dbg !606
LOAD [p=*q]:   %51 = load i8* %50, !dbg !606
LOAD [p=*q]:   %50 = load i8** @rpl_optarg, align 8, !dbg !606
LOAD [p=*q]:   %51 = load i8* %50, !dbg !606
LOAD [p=*q]:   %55 = load i8** @rpl_optarg, align 8, !dbg !606
LOAD [p=*q]:   %56 = load i8* %55, !dbg !606
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stderr, align 8, !dbg !607
LOAD [p=*q]:   %61 = load i8** @program_name, align 8, !dbg !607
CALL [call func]:   %62 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([34 x i8]* @.str4, i32 0, i32 0), i8* %61), !dbg !607
CONTEXT CALL [call func]:   %62 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([34 x i8]* @.str4, i32 0, i32 0), i8* %61), !dbg !607
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @try_help() #7, !dbg !609
CONTEXT CALL [call func]:   call void @try_help() #7, !dbg !609
LOAD [p=*q]:   %1 = load %struct._IO_FILE** @stderr, align 8, !dbg !574
LOAD [p=*q]:   %2 = load i8** @program_name, align 8, !dbg !574
CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str115, i32 0, i32 0), i8* %2), !dbg !574
CONTEXT CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str115, i32 0, i32 0), i8* %2), !dbg !574
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !576
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !576
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %55 = load i8** @rpl_optarg, align 8, !dbg !606
LOAD [p=*q]:   %56 = load i8* %55, !dbg !606
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stderr, align 8, !dbg !607
LOAD [p=*q]:   %61 = load i8** @program_name, align 8, !dbg !607
CALL [call func]:   %62 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([34 x i8]* @.str4, i32 0, i32 0), i8* %61), !dbg !607
CONTEXT CALL [call func]:   %62 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([34 x i8]* @.str4, i32 0, i32 0), i8* %61), !dbg !607
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @try_help() #7, !dbg !609
CONTEXT CALL [call func]:   call void @try_help() #7, !dbg !609
LOAD [p=*q]:   %1 = load %struct._IO_FILE** @stderr, align 8, !dbg !574
LOAD [p=*q]:   %2 = load i8** @program_name, align 8, !dbg !574
CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str115, i32 0, i32 0), i8* %2), !dbg !574
CONTEXT CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str115, i32 0, i32 0), i8* %2), !dbg !574
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !576
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !576
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stderr, align 8, !dbg !607
LOAD [p=*q]:   %61 = load i8** @program_name, align 8, !dbg !607
CALL [call func]:   %62 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([34 x i8]* @.str4, i32 0, i32 0), i8* %61), !dbg !607
CONTEXT CALL [call func]:   %62 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([34 x i8]* @.str4, i32 0, i32 0), i8* %61), !dbg !607
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @try_help() #7, !dbg !609
CONTEXT CALL [call func]:   call void @try_help() #7, !dbg !609
LOAD [p=*q]:   %1 = load %struct._IO_FILE** @stderr, align 8, !dbg !574
LOAD [p=*q]:   %2 = load i8** @program_name, align 8, !dbg !574
CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str115, i32 0, i32 0), i8* %2), !dbg !574
CONTEXT CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str115, i32 0, i32 0), i8* %2), !dbg !574
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !576
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !576
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %65 = load i8** @rpl_optarg, align 8, !dbg !611
STORE [*p=q]:   store i8* %66, i8** @rpl_optarg, align 8, !dbg !611
LOAD [p=*q]:   %65 = load i8** @rpl_optarg, align 8, !dbg !611
STORE [*p=q]:   store i8* %66, i8** @rpl_optarg, align 8, !dbg !611
LOAD [p=*q]:   %46 = load i8** @rpl_optarg, align 8, !dbg !604
LOAD [p=*q]:   %47 = load i8* %46, !dbg !604
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !613
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !615
LOAD [p=*q]:   %71 = load i32* @force, align 4, !dbg !617
STORE [*p=q]:   store i32 %72, i32* @force, align 4, !dbg !617
CALL [call func]:   call void @help(), !dbg !619
CONTEXT CALL [call func]:   call void @help(), !dbg !619
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %p}, metadata !574), !dbg !577
## help does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8** getelementptr inbounds ([26 x i8*]* @help.help_msg, i32 0, i32 0), i8*** %p, align 8, !dbg !578
LOAD [p=*q]:   %1 = load i8** @program_name, align 8, !dbg !579
CALL [call func]:   %2 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([33 x i8]* @.str114, i32 0, i32 0), i8* %1), !dbg !579
CONTEXT CALL [call func]:   %2 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([33 x i8]* @.str114, i32 0, i32 0), i8* %1), !dbg !579
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %4 = load i8*** %p, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** %4, !dbg !580
LOAD [p=*q]:   %8 = load i8*** %p, align 8, !dbg !581
STORE [*p=q]:   store i8** %9, i8*** %p, align 8, !dbg !581
LOAD [p=*q]:   %10 = load i8** %8, !dbg !581
CALL [call func]:   %11 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %10), !dbg !581
CONTEXT CALL [call func]:   %11 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %10), !dbg !581
	We do not analyze function 'rpl_printf'
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !620
CONTEXT CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !620
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @keep, align 4, !dbg !621
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !623
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !623
STORE [*p=q]:   store i32 1, i32* @list, align 4, !dbg !623
CALL [call func]:   call void @license(), !dbg !625
CONTEXT CALL [call func]:   call void @license(), !dbg !625
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %p}, metadata !574), !dbg !577
## license does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8** getelementptr inbounds ([6 x i8*]* @license_msg, i32 0, i32 0), i8*** %p, align 8, !dbg !578
LOAD [p=*q]:   %1 = load i8** @program_name, align 8, !dbg !579
LOAD [p=*q]:   %2 = load i8** @Version, align 8, !dbg !579
CALL [call func]:   %3 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([7 x i8]* @.str86, i32 0, i32 0), i8* %1, i8* %2), !dbg !579
CONTEXT CALL [call func]:   %3 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([7 x i8]* @.str86, i32 0, i32 0), i8* %1, i8* %2), !dbg !579
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %5 = load i8*** %p, align 8, !dbg !580
LOAD [p=*q]:   %6 = load i8** %5, !dbg !580
LOAD [p=*q]:   %9 = load i8*** %p, align 8, !dbg !581
STORE [*p=q]:   store i8** %10, i8*** %p, align 8, !dbg !581
LOAD [p=*q]:   %11 = load i8** %9, !dbg !581
CALL [call func]:   %12 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %11), !dbg !581
CONTEXT CALL [call func]:   %12 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %11), !dbg !581
	We do not analyze function 'rpl_printf'
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !626
CONTEXT CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !626
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @no_time, align 4, !dbg !627
STORE [*p=q]:   store i32 0, i32* @no_time, align 4, !dbg !629
STORE [*p=q]:   store i32 1, i32* @no_time, align 4, !dbg !631
STORE [*p=q]:   store i32 1, i32* @no_name, align 4, !dbg !631
STORE [*p=q]:   store i32 0, i32* @no_time, align 4, !dbg !633
STORE [*p=q]:   store i32 0, i32* @no_name, align 4, !dbg !633
STORE [*p=q]:   store i8 1, i8* @presume_input_tty, align 1, !dbg !635
STORE [*p=q]:   store i32 1, i32* @quiet, align 4, !dbg !637
STORE [*p=q]:   store i32 0, i32* @verbose, align 4, !dbg !638
STORE [*p=q]:   store i32 1, i32* @recursive, align 4, !dbg !640
LOAD [p=*q]:   %85 = load i8** @rpl_optarg, align 8, !dbg !642
CALL [call func]:   %86 = call i64 @strlen(i8* %85) #4, !dbg !642
CONTEXT CALL [call func]:   %86 = call i64 @strlen(i8* %85) #4, !dbg !642
	We do not analyze function 'strlen'
STORE [*p=q]:   store i64 %86, i64* @z_len, align 8, !dbg !642
LOAD [p=*q]:   %87 = load i8** @rpl_optarg, align 8, !dbg !643
STORE [*p=q]:   store i8* %87, i8** @z_suffix, align 8, !dbg !643
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !645
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !645
STORE [*p=q]:   store i32 1, i32* @test, align 4, !dbg !645
LOAD [p=*q]:   %90 = load i32* @verbose, align 4, !dbg !647
STORE [*p=q]:   store i32 %91, i32* @verbose, align 4, !dbg !647
STORE [*p=q]:   store i32 0, i32* @quiet, align 4, !dbg !648
CALL [call func]:   call void @version(), !dbg !650
CONTEXT CALL [call func]:   call void @version(), !dbg !650
CALL [call func]:   call void @license(), !dbg !574
CONTEXT CALL [call func]:   call void @license(), !dbg !574
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %p}, metadata !574), !dbg !577
## license does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8** getelementptr inbounds ([6 x i8*]* @license_msg, i32 0, i32 0), i8*** %p, align 8, !dbg !578
LOAD [p=*q]:   %1 = load i8** @program_name, align 8, !dbg !579
LOAD [p=*q]:   %2 = load i8** @Version, align 8, !dbg !579
CALL [call func]:   %3 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([7 x i8]* @.str86, i32 0, i32 0), i8* %1, i8* %2), !dbg !579
CONTEXT CALL [call func]:   %3 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([7 x i8]* @.str86, i32 0, i32 0), i8* %1, i8* %2), !dbg !579
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %5 = load i8*** %p, align 8, !dbg !580
LOAD [p=*q]:   %6 = load i8** %5, !dbg !580
LOAD [p=*q]:   %9 = load i8*** %p, align 8, !dbg !581
STORE [*p=q]:   store i8** %10, i8*** %p, align 8, !dbg !581
LOAD [p=*q]:   %11 = load i8** %9, !dbg !581
CALL [call func]:   %12 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %11), !dbg !581
CONTEXT CALL [call func]:   %12 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([4 x i8]* @.str87, i32 0, i32 0), i8* %11), !dbg !581
	We do not analyze function 'rpl_printf'
CALL [call func]:   %1 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !576
CONTEXT CALL [call func]:   %1 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !576
	We do not analyze function 'rpl_printf'
CALL [call func]:   %2 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([30 x i8]* @.str85, i32 0, i32 0)), !dbg !577
CONTEXT CALL [call func]:   %2 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([30 x i8]* @.str85, i32 0, i32 0)), !dbg !577
	We do not analyze function 'rpl_printf'
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !651
CONTEXT CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !651
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %94 = load %struct._IO_FILE** @stderr, align 8, !dbg !652
LOAD [p=*q]:   %95 = load i8** @program_name, align 8, !dbg !652
CALL [call func]:   %96 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([38 x i8]* @.str5, i32 0, i32 0), i8* %95), !dbg !652
CONTEXT CALL [call func]:   %96 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([38 x i8]* @.str5, i32 0, i32 0), i8* %95), !dbg !652
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @try_help() #7, !dbg !653
CONTEXT CALL [call func]:   call void @try_help() #7, !dbg !653
LOAD [p=*q]:   %1 = load %struct._IO_FILE** @stderr, align 8, !dbg !574
LOAD [p=*q]:   %2 = load i8** @program_name, align 8, !dbg !574
CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str115, i32 0, i32 0), i8* %2), !dbg !574
CONTEXT CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str115, i32 0, i32 0), i8* %2), !dbg !574
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !576
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !576
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
CALL [call func]:   call void @try_help() #7, !dbg !656
CONTEXT CALL [call func]:   call void @try_help() #7, !dbg !656
LOAD [p=*q]:   %1 = load %struct._IO_FILE** @stderr, align 8, !dbg !574
LOAD [p=*q]:   %2 = load i8** @program_name, align 8, !dbg !574
CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str115, i32 0, i32 0), i8* %2), !dbg !574
CONTEXT CALL [call func]:   %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([39 x i8]* @.str115, i32 0, i32 0), i8* %2), !dbg !574
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !576
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !576
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %35 = load i32* %2, align 4, !dbg !597
LOAD [p=*q]:   %36 = load i8*** %3, align 8, !dbg !597
CALL [call func]:   %37 = call i32 @rpl_getopt_long(i32 %35, i8** %36, i8* getelementptr inbounds ([34 x i8]* @.str3, i32 0, i32 0), %struct.rpl_option* getelementptr inbounds ([26 x %struct.rpl_option]* bitcast (<{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] } }>* @longopts to [26 x %struct.rpl_option]*), i32 0, i32 0), i32* null) #3, !dbg !597
CONTEXT CALL [call func]:   %37 = call i32 @rpl_getopt_long(i32 %35, i8** %36, i8* getelementptr inbounds ([34 x i8]* @.str3, i32 0, i32 0), %struct.rpl_option* getelementptr inbounds ([26 x %struct.rpl_option]* bitcast (<{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] } }>* @longopts to [26 x %struct.rpl_option]*), i32 0, i32 0), i32* null) #3, !dbg !597
	We do not analyze function 'rpl_getopt_long'
STORE [*p=q]:   store i32 %37, i32* %optc, align 4, !dbg !597
LOAD [p=*q]:   %103 = load i32* @no_time, align 4, !dbg !658
LOAD [p=*q]:   %106 = load i32* @decompress, align 4, !dbg !659
STORE [*p=q]:   store i32 %106, i32* @no_time, align 4, !dbg !659
LOAD [p=*q]:   %108 = load i32* @no_name, align 4, !dbg !660
LOAD [p=*q]:   %106 = load i32* @decompress, align 4, !dbg !659
STORE [*p=q]:   store i32 %106, i32* @no_time, align 4, !dbg !659
LOAD [p=*q]:   %108 = load i32* @no_name, align 4, !dbg !660
LOAD [p=*q]:   %108 = load i32* @no_name, align 4, !dbg !660
LOAD [p=*q]:   %111 = load i32* @decompress, align 4, !dbg !661
STORE [*p=q]:   store i32 %111, i32* @no_name, align 4, !dbg !661
LOAD [p=*q]:   %113 = load i32* %2, align 4, !dbg !662
LOAD [p=*q]:   %114 = load i32* @rpl_optind, align 4, !dbg !662
STORE [*p=q]:   store i32 %115, i32* %file_count, align 4, !dbg !662
LOAD [p=*q]:   %116 = load i32* @ascii, align 4, !dbg !663
LOAD [p=*q]:   %111 = load i32* @decompress, align 4, !dbg !661
STORE [*p=q]:   store i32 %111, i32* @no_name, align 4, !dbg !661
LOAD [p=*q]:   %113 = load i32* %2, align 4, !dbg !662
LOAD [p=*q]:   %114 = load i32* @rpl_optind, align 4, !dbg !662
STORE [*p=q]:   store i32 %115, i32* %file_count, align 4, !dbg !662
LOAD [p=*q]:   %116 = load i32* @ascii, align 4, !dbg !663
LOAD [p=*q]:   %113 = load i32* %2, align 4, !dbg !662
LOAD [p=*q]:   %114 = load i32* @rpl_optind, align 4, !dbg !662
STORE [*p=q]:   store i32 %115, i32* %file_count, align 4, !dbg !662
LOAD [p=*q]:   %116 = load i32* @ascii, align 4, !dbg !663
LOAD [p=*q]:   %119 = load i32* @quiet, align 4, !dbg !663
LOAD [p=*q]:   %126 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %119 = load i32* @quiet, align 4, !dbg !663
LOAD [p=*q]:   %126 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %122 = load %struct._IO_FILE** @stderr, align 8, !dbg !664
LOAD [p=*q]:   %123 = load i8** @program_name, align 8, !dbg !664
CALL [call func]:   %124 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %122, i8* getelementptr inbounds ([43 x i8]* @.str6, i32 0, i32 0), i8* %123), !dbg !664
CONTEXT CALL [call func]:   %124 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %122, i8* getelementptr inbounds ([43 x i8]* @.str6, i32 0, i32 0), i8* %123), !dbg !664
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %122 = load %struct._IO_FILE** @stderr, align 8, !dbg !664
LOAD [p=*q]:   %123 = load i8** @program_name, align 8, !dbg !664
CALL [call func]:   %124 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %122, i8* getelementptr inbounds ([43 x i8]* @.str6, i32 0, i32 0), i8* %123), !dbg !664
CONTEXT CALL [call func]:   %124 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %122, i8* getelementptr inbounds ([43 x i8]* @.str6, i32 0, i32 0), i8* %123), !dbg !664
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %126 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %126 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %132 = load %struct._IO_FILE** @stderr, align 8, !dbg !668
LOAD [p=*q]:   %133 = load i8** @program_name, align 8, !dbg !668
LOAD [p=*q]:   %134 = load i8** @z_suffix, align 8, !dbg !668
CALL [call func]:   %135 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([25 x i8]* @.str7, i32 0, i32 0), i8* %133, i8* %134), !dbg !668
CONTEXT CALL [call func]:   %135 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([25 x i8]* @.str7, i32 0, i32 0), i8* %133, i8* %134), !dbg !668
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !670
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !670
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %129 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %129 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %132 = load %struct._IO_FILE** @stderr, align 8, !dbg !668
LOAD [p=*q]:   %133 = load i8** @program_name, align 8, !dbg !668
LOAD [p=*q]:   %134 = load i8** @z_suffix, align 8, !dbg !668
CALL [call func]:   %135 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([25 x i8]* @.str7, i32 0, i32 0), i8* %133, i8* %134), !dbg !668
CONTEXT CALL [call func]:   %135 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([25 x i8]* @.str7, i32 0, i32 0), i8* %133, i8* %134), !dbg !668
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !670
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !670
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %137 = load i32* @do_lzw, align 4, !dbg !671
LOAD [p=*q]:   %132 = load %struct._IO_FILE** @stderr, align 8, !dbg !668
LOAD [p=*q]:   %133 = load i8** @program_name, align 8, !dbg !668
LOAD [p=*q]:   %134 = load i8** @z_suffix, align 8, !dbg !668
CALL [call func]:   %135 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([25 x i8]* @.str7, i32 0, i32 0), i8* %133, i8* %134), !dbg !668
CONTEXT CALL [call func]:   %135 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([25 x i8]* @.str7, i32 0, i32 0), i8* %133, i8* %134), !dbg !668
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !670
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !670
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %137 = load i32* @do_lzw, align 4, !dbg !671
LOAD [p=*q]:   %140 = load i32* @decompress, align 4, !dbg !671
LOAD [p=*q]:   %144 = load i32* @quiet, align 4, !dbg !673
STORE [*p=q]:   store volatile i32 %146, i32* @exiting_signal, align 4, !dbg !673
CALL [call func]:   call void @install_signal_handlers(), !dbg !674
CONTEXT CALL [call func]:   call void @install_signal_handlers(), !dbg !674
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nsigs}, metadata !574), !dbg !576
## install_signal_handlers does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 6, i32* %nsigs, align 4, !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !578), !dbg !579
## install_signal_handlers does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.sigaction* %act}, metadata !580), !dbg !656
## install_signal_handlers does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %1 = call i32 @sigemptyset(%struct.__sigset_t* @caught_signals) #3, !dbg !657
CONTEXT CALL [call func]:   %1 = call i32 @sigemptyset(%struct.__sigset_t* @caught_signals) #3, !dbg !657
	We do not analyze function 'sigemptyset'
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !658
LOAD [p=*q]:   %3 = load i32* %i, align 4, !dbg !658
LOAD [p=*q]:   %4 = load i32* %nsigs, align 4, !dbg !658
LOAD [p=*q]:   %7 = load i32* %i, align 4, !dbg !660
LOAD [p=*q]:   %10 = load i32* %9, align 4, !dbg !660
CALL [call func]:   %11 = call i32 @sigaction(i32 %10, %struct.sigaction* null, %struct.sigaction* %act) #3, !dbg !660
CONTEXT CALL [call func]:   %11 = call i32 @sigaction(i32 %10, %struct.sigaction* null, %struct.sigaction* %act) #3, !dbg !660
	We do not analyze function 'sigaction'
LOAD [p=*q]:   %14 = load void (i32)** %13, align 8, !dbg !662
LOAD [p=*q]:   %17 = load i32* %i, align 4, !dbg !663
LOAD [p=*q]:   %20 = load i32* %19, align 4, !dbg !663
CALL [call func]:   %21 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %20) #3, !dbg !663
CONTEXT CALL [call func]:   %21 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %20) #3, !dbg !663
	We do not analyze function 'sigaddset'
LOAD [p=*q]:   %24 = load i32* %i, align 4, !dbg !665
STORE [*p=q]:   store i32 %25, i32* %i, align 4, !dbg !665
STORE [*p=q]:   store void (i32)* @abort_gzip_signal, void (i32)** %28, align 8, !dbg !666
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* bitcast (%struct.__sigset_t* @caught_signals to i8*), i64 128, i32 8, i1 false), !dbg !667
## install_signal_handlers does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
STORE [*p=q]:   store i32 0, i32* %31, align 4, !dbg !668
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %33 = load i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %34 = load i32* %nsigs, align 4, !dbg !669
LOAD [p=*q]:   %37 = load i32* %i, align 4, !dbg !671
LOAD [p=*q]:   %40 = load i32* %39, align 4, !dbg !671
CALL [call func]:   %41 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %40) #3, !dbg !671
CONTEXT CALL [call func]:   %41 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %40) #3, !dbg !671
	We do not analyze function 'sigismember'
LOAD [p=*q]:   %44 = load i32* %i, align 4, !dbg !672
STORE [*p=q]:   store i32 1, i32* @foreground, align 4, !dbg !674
LOAD [p=*q]:   %48 = load i32* %i, align 4, !dbg !675
LOAD [p=*q]:   %51 = load i32* %50, align 4, !dbg !675
CALL [call func]:   %52 = call i32 @sigaction(i32 %51, %struct.sigaction* %act, %struct.sigaction* null) #3, !dbg !675
CONTEXT CALL [call func]:   %52 = call i32 @sigaction(i32 %51, %struct.sigaction* %act, %struct.sigaction* null) #3, !dbg !675
	We do not analyze function 'sigaction'
LOAD [p=*q]:   %55 = load i32* %i, align 4, !dbg !677
STORE [*p=q]:   store i32 %56, i32* %i, align 4, !dbg !677
LOAD [p=*q]:   %147 = load i32* %file_count, align 4, !dbg !675
LOAD [p=*q]:   %140 = load i32* @decompress, align 4, !dbg !671
LOAD [p=*q]:   %144 = load i32* @quiet, align 4, !dbg !673
STORE [*p=q]:   store volatile i32 %146, i32* @exiting_signal, align 4, !dbg !673
CALL [call func]:   call void @install_signal_handlers(), !dbg !674
CONTEXT CALL [call func]:   call void @install_signal_handlers(), !dbg !674
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nsigs}, metadata !574), !dbg !576
## install_signal_handlers does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 6, i32* %nsigs, align 4, !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !578), !dbg !579
## install_signal_handlers does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.sigaction* %act}, metadata !580), !dbg !656
## install_signal_handlers does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %1 = call i32 @sigemptyset(%struct.__sigset_t* @caught_signals) #3, !dbg !657
CONTEXT CALL [call func]:   %1 = call i32 @sigemptyset(%struct.__sigset_t* @caught_signals) #3, !dbg !657
	We do not analyze function 'sigemptyset'
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !658
LOAD [p=*q]:   %3 = load i32* %i, align 4, !dbg !658
LOAD [p=*q]:   %4 = load i32* %nsigs, align 4, !dbg !658
LOAD [p=*q]:   %7 = load i32* %i, align 4, !dbg !660
LOAD [p=*q]:   %10 = load i32* %9, align 4, !dbg !660
CALL [call func]:   %11 = call i32 @sigaction(i32 %10, %struct.sigaction* null, %struct.sigaction* %act) #3, !dbg !660
CONTEXT CALL [call func]:   %11 = call i32 @sigaction(i32 %10, %struct.sigaction* null, %struct.sigaction* %act) #3, !dbg !660
	We do not analyze function 'sigaction'
LOAD [p=*q]:   %14 = load void (i32)** %13, align 8, !dbg !662
LOAD [p=*q]:   %17 = load i32* %i, align 4, !dbg !663
LOAD [p=*q]:   %20 = load i32* %19, align 4, !dbg !663
CALL [call func]:   %21 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %20) #3, !dbg !663
CONTEXT CALL [call func]:   %21 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %20) #3, !dbg !663
	We do not analyze function 'sigaddset'
LOAD [p=*q]:   %24 = load i32* %i, align 4, !dbg !665
STORE [*p=q]:   store i32 %25, i32* %i, align 4, !dbg !665
STORE [*p=q]:   store void (i32)* @abort_gzip_signal, void (i32)** %28, align 8, !dbg !666
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* bitcast (%struct.__sigset_t* @caught_signals to i8*), i64 128, i32 8, i1 false), !dbg !667
## install_signal_handlers does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
STORE [*p=q]:   store i32 0, i32* %31, align 4, !dbg !668
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %33 = load i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %34 = load i32* %nsigs, align 4, !dbg !669
LOAD [p=*q]:   %37 = load i32* %i, align 4, !dbg !671
LOAD [p=*q]:   %40 = load i32* %39, align 4, !dbg !671
CALL [call func]:   %41 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %40) #3, !dbg !671
CONTEXT CALL [call func]:   %41 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %40) #3, !dbg !671
	We do not analyze function 'sigismember'
LOAD [p=*q]:   %44 = load i32* %i, align 4, !dbg !672
STORE [*p=q]:   store i32 1, i32* @foreground, align 4, !dbg !674
LOAD [p=*q]:   %48 = load i32* %i, align 4, !dbg !675
LOAD [p=*q]:   %51 = load i32* %50, align 4, !dbg !675
CALL [call func]:   %52 = call i32 @sigaction(i32 %51, %struct.sigaction* %act, %struct.sigaction* null) #3, !dbg !675
CONTEXT CALL [call func]:   %52 = call i32 @sigaction(i32 %51, %struct.sigaction* %act, %struct.sigaction* null) #3, !dbg !675
	We do not analyze function 'sigaction'
LOAD [p=*q]:   %55 = load i32* %i, align 4, !dbg !677
STORE [*p=q]:   store i32 %56, i32* %i, align 4, !dbg !677
LOAD [p=*q]:   %147 = load i32* %file_count, align 4, !dbg !675
STORE [*p=q]:   store i32 (i32, i32)* @lzw, i32 (i32, i32)** @work, align 8, !dbg !672
STORE [*p=q]:   store i32 (i32, i32)* @lzw, i32 (i32, i32)** @work, align 8, !dbg !672
LOAD [p=*q]:   %144 = load i32* @quiet, align 4, !dbg !673
STORE [*p=q]:   store volatile i32 %146, i32* @exiting_signal, align 4, !dbg !673
CALL [call func]:   call void @install_signal_handlers(), !dbg !674
CONTEXT CALL [call func]:   call void @install_signal_handlers(), !dbg !674
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nsigs}, metadata !574), !dbg !576
## install_signal_handlers does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 6, i32* %nsigs, align 4, !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !578), !dbg !579
## install_signal_handlers does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.sigaction* %act}, metadata !580), !dbg !656
## install_signal_handlers does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %1 = call i32 @sigemptyset(%struct.__sigset_t* @caught_signals) #3, !dbg !657
CONTEXT CALL [call func]:   %1 = call i32 @sigemptyset(%struct.__sigset_t* @caught_signals) #3, !dbg !657
	We do not analyze function 'sigemptyset'
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !658
LOAD [p=*q]:   %3 = load i32* %i, align 4, !dbg !658
LOAD [p=*q]:   %4 = load i32* %nsigs, align 4, !dbg !658
LOAD [p=*q]:   %7 = load i32* %i, align 4, !dbg !660
LOAD [p=*q]:   %10 = load i32* %9, align 4, !dbg !660
CALL [call func]:   %11 = call i32 @sigaction(i32 %10, %struct.sigaction* null, %struct.sigaction* %act) #3, !dbg !660
CONTEXT CALL [call func]:   %11 = call i32 @sigaction(i32 %10, %struct.sigaction* null, %struct.sigaction* %act) #3, !dbg !660
	We do not analyze function 'sigaction'
LOAD [p=*q]:   %14 = load void (i32)** %13, align 8, !dbg !662
LOAD [p=*q]:   %17 = load i32* %i, align 4, !dbg !663
LOAD [p=*q]:   %20 = load i32* %19, align 4, !dbg !663
CALL [call func]:   %21 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %20) #3, !dbg !663
CONTEXT CALL [call func]:   %21 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %20) #3, !dbg !663
	We do not analyze function 'sigaddset'
LOAD [p=*q]:   %24 = load i32* %i, align 4, !dbg !665
STORE [*p=q]:   store i32 %25, i32* %i, align 4, !dbg !665
STORE [*p=q]:   store void (i32)* @abort_gzip_signal, void (i32)** %28, align 8, !dbg !666
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* bitcast (%struct.__sigset_t* @caught_signals to i8*), i64 128, i32 8, i1 false), !dbg !667
## install_signal_handlers does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
STORE [*p=q]:   store i32 0, i32* %31, align 4, !dbg !668
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %33 = load i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %34 = load i32* %nsigs, align 4, !dbg !669
LOAD [p=*q]:   %37 = load i32* %i, align 4, !dbg !671
LOAD [p=*q]:   %40 = load i32* %39, align 4, !dbg !671
CALL [call func]:   %41 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %40) #3, !dbg !671
CONTEXT CALL [call func]:   %41 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %40) #3, !dbg !671
	We do not analyze function 'sigismember'
LOAD [p=*q]:   %44 = load i32* %i, align 4, !dbg !672
STORE [*p=q]:   store i32 1, i32* @foreground, align 4, !dbg !674
LOAD [p=*q]:   %48 = load i32* %i, align 4, !dbg !675
LOAD [p=*q]:   %51 = load i32* %50, align 4, !dbg !675
CALL [call func]:   %52 = call i32 @sigaction(i32 %51, %struct.sigaction* %act, %struct.sigaction* null) #3, !dbg !675
CONTEXT CALL [call func]:   %52 = call i32 @sigaction(i32 %51, %struct.sigaction* %act, %struct.sigaction* null) #3, !dbg !675
	We do not analyze function 'sigaction'
LOAD [p=*q]:   %55 = load i32* %i, align 4, !dbg !677
STORE [*p=q]:   store i32 %56, i32* %i, align 4, !dbg !677
LOAD [p=*q]:   %147 = load i32* %file_count, align 4, !dbg !675
LOAD [p=*q]:   %144 = load i32* @quiet, align 4, !dbg !673
STORE [*p=q]:   store volatile i32 %146, i32* @exiting_signal, align 4, !dbg !673
CALL [call func]:   call void @install_signal_handlers(), !dbg !674
CONTEXT CALL [call func]:   call void @install_signal_handlers(), !dbg !674
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %nsigs}, metadata !574), !dbg !576
## install_signal_handlers does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 6, i32* %nsigs, align 4, !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !578), !dbg !579
## install_signal_handlers does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.sigaction* %act}, metadata !580), !dbg !656
## install_signal_handlers does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %1 = call i32 @sigemptyset(%struct.__sigset_t* @caught_signals) #3, !dbg !657
CONTEXT CALL [call func]:   %1 = call i32 @sigemptyset(%struct.__sigset_t* @caught_signals) #3, !dbg !657
	We do not analyze function 'sigemptyset'
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !658
LOAD [p=*q]:   %3 = load i32* %i, align 4, !dbg !658
LOAD [p=*q]:   %4 = load i32* %nsigs, align 4, !dbg !658
LOAD [p=*q]:   %7 = load i32* %i, align 4, !dbg !660
LOAD [p=*q]:   %10 = load i32* %9, align 4, !dbg !660
CALL [call func]:   %11 = call i32 @sigaction(i32 %10, %struct.sigaction* null, %struct.sigaction* %act) #3, !dbg !660
CONTEXT CALL [call func]:   %11 = call i32 @sigaction(i32 %10, %struct.sigaction* null, %struct.sigaction* %act) #3, !dbg !660
	We do not analyze function 'sigaction'
LOAD [p=*q]:   %14 = load void (i32)** %13, align 8, !dbg !662
LOAD [p=*q]:   %17 = load i32* %i, align 4, !dbg !663
LOAD [p=*q]:   %20 = load i32* %19, align 4, !dbg !663
CALL [call func]:   %21 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %20) #3, !dbg !663
CONTEXT CALL [call func]:   %21 = call i32 @sigaddset(%struct.__sigset_t* @caught_signals, i32 %20) #3, !dbg !663
	We do not analyze function 'sigaddset'
LOAD [p=*q]:   %24 = load i32* %i, align 4, !dbg !665
STORE [*p=q]:   store i32 %25, i32* %i, align 4, !dbg !665
STORE [*p=q]:   store void (i32)* @abort_gzip_signal, void (i32)** %28, align 8, !dbg !666
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* bitcast (%struct.__sigset_t* @caught_signals to i8*), i64 128, i32 8, i1 false), !dbg !667
## install_signal_handlers does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
STORE [*p=q]:   store i32 0, i32* %31, align 4, !dbg !668
STORE [*p=q]:   store i32 0, i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %33 = load i32* %i, align 4, !dbg !669
LOAD [p=*q]:   %34 = load i32* %nsigs, align 4, !dbg !669
LOAD [p=*q]:   %37 = load i32* %i, align 4, !dbg !671
LOAD [p=*q]:   %40 = load i32* %39, align 4, !dbg !671
CALL [call func]:   %41 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %40) #3, !dbg !671
CONTEXT CALL [call func]:   %41 = call i32 @sigismember(%struct.__sigset_t* @caught_signals, i32 %40) #3, !dbg !671
	We do not analyze function 'sigismember'
LOAD [p=*q]:   %44 = load i32* %i, align 4, !dbg !672
STORE [*p=q]:   store i32 1, i32* @foreground, align 4, !dbg !674
LOAD [p=*q]:   %48 = load i32* %i, align 4, !dbg !675
LOAD [p=*q]:   %51 = load i32* %50, align 4, !dbg !675
CALL [call func]:   %52 = call i32 @sigaction(i32 %51, %struct.sigaction* %act, %struct.sigaction* null) #3, !dbg !675
CONTEXT CALL [call func]:   %52 = call i32 @sigaction(i32 %51, %struct.sigaction* %act, %struct.sigaction* null) #3, !dbg !675
	We do not analyze function 'sigaction'
LOAD [p=*q]:   %55 = load i32* %i, align 4, !dbg !677
STORE [*p=q]:   store i32 %56, i32* %i, align 4, !dbg !677
LOAD [p=*q]:   %147 = load i32* %file_count, align 4, !dbg !675
LOAD [p=*q]:   %150 = load i32* @to_stdout, align 4, !dbg !676
CALL [call func]:   call void @treat_stdin(), !dbg !685
CONTEXT CALL [call func]:   call void @treat_stdin(), !dbg !685
LOAD [p=*q]:   %2 = load i32* @force, align 4, !dbg !574
LOAD [p=*q]:   %5 = load i32* @list, align 4, !dbg !574
LOAD [p=*q]:   %8 = load i8* @presume_input_tty, align 1, !dbg !574
LOAD [p=*q]:   %11 = load i32* @decompress, align 4, !dbg !576
LOAD [p=*q]:   %14 = load %struct._IO_FILE** @stdin, align 8, !dbg !576
LOAD [p=*q]:   %16 = load %struct._IO_FILE** @stdout, align 8, !dbg !576
CALL [call func]:   %19 = call i32 @fileno(%struct._IO_FILE* %18) #3, !dbg !576
CONTEXT CALL [call func]:   %19 = call i32 @fileno(%struct._IO_FILE* %18) #3, !dbg !576
	We do not analyze function 'fileno'
CALL [call func]:   %20 = call i32 @isatty(i32 %19) #3, !dbg !576
CONTEXT CALL [call func]:   %20 = call i32 @isatty(i32 %19) #3, !dbg !576
	We do not analyze function 'isatty'
LOAD [p=*q]:   %23 = load i32* @quiet, align 4, !dbg !577
LOAD [p=*q]:   %26 = load %struct._IO_FILE** @stderr, align 8, !dbg !579
LOAD [p=*q]:   %27 = load i8** @program_name, align 8, !dbg !579
LOAD [p=*q]:   %28 = load i32* @decompress, align 4, !dbg !579
LOAD [p=*q]:   %31 = load i32* @decompress, align 4, !dbg !579
LOAD [p=*q]:   %34 = load i8** @program_name, align 8, !dbg !579
CALL [call func]:   %35 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([93 x i8]* @.str78, i32 0, i32 0), i8* %27, i8* %30, i8* %33, i8* %34), !dbg !579
CONTEXT CALL [call func]:   %35 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([93 x i8]* @.str78, i32 0, i32 0), i8* %27, i8* %30, i8* %33, i8* %34), !dbg !579
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !580
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !580
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %38 = load i32* @decompress, align 4, !dbg !581
LOAD [p=*q]:   %41 = load i32* @ascii, align 4, !dbg !581
LOAD [p=*q]:   %45 = load i32* @test, align 4, !dbg !584
LOAD [p=*q]:   %48 = load i32* @list, align 4, !dbg !584
LOAD [p=*q]:   %51 = load i32* @decompress, align 4, !dbg !584
LOAD [p=*q]:   %54 = load i32* @ascii, align 4, !dbg !584
CALL [call func]:   %58 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str82, i32 0, i32 0)) #3, !dbg !587
CONTEXT CALL [call func]:   %58 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str82, i32 0, i32 0)) #3, !dbg !587
	We do not analyze function 'strcpy'
CALL [call func]:   %59 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !588
CONTEXT CALL [call func]:   %59 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !588
	We do not analyze function 'strcpy'
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stdin, align 8, !dbg !589
CALL [call func]:   %61 = call i32 @fileno(%struct._IO_FILE* %60) #3, !dbg !589
CONTEXT CALL [call func]:   %61 = call i32 @fileno(%struct._IO_FILE* %60) #3, !dbg !589
	We do not analyze function 'fileno'
CALL [call func]:   %62 = call i32 @fstat(i32 %61, %struct.stat* @istat) #3, !dbg !589
CONTEXT CALL [call func]:   %62 = call i32 @fstat(i32 %61, %struct.stat* @istat) #3, !dbg !589
	We do not analyze function 'fstat'
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([15 x i8]* @.str83, i32 0, i32 0)), !dbg !590
CONTEXT CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([15 x i8]* @.str83, i32 0, i32 0)), !dbg !590
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
## progerror does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
## progerror does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
CONTEXT CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
CONTEXT CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
CONTEXT CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
CONTEXT CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
	We do not analyze function 'rpl_perror'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !592
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !592
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %66 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !593
LOAD [p=*q]:   %70 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 8), align 8, !dbg !593
STORE [*p=q]:   store i64 %73, i64* @ifile_size, align 8, !dbg !593
STORE [*p=q]:   store i64 -1, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !594
LOAD [p=*q]:   %74 = load i32* @no_time, align 4, !dbg !595
LOAD [p=*q]:   %77 = load i32* @list, align 4, !dbg !595
LOAD [p=*q]:   %80 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !596
CALL [call func]:   %84 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !598
CONTEXT CALL [call func]:   %84 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !598
	We do not analyze function 'get_stat_mtime'
STORE [*p=q]:   store i64 %87, i64* %86, align 1, !dbg !598
STORE [*p=q]:   store i64 %89, i64* %88, align 1, !dbg !598
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.timespec* @time_stamp to i8*), i8* %90, i64 16, i32 8, i1 false), !dbg !598
## treat_stdin does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
CALL [call func]:   call void @gettime(%struct.timespec* @time_stamp), !dbg !599
CONTEXT CALL [call func]:   call void @gettime(%struct.timespec* @time_stamp), !dbg !599
	We do not analyze function 'gettime'
CALL [call func]:   call void @clear_bufs(), !dbg !601
CONTEXT CALL [call func]:   call void @clear_bufs(), !dbg !601
STORE [*p=q]:   store i32 0, i32* @outcnt, align 4, !dbg !574
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !576
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !576
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !577
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !577
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !602
STORE [*p=q]:   store i32 0, i32* @part_nb, align 4, !dbg !603
LOAD [p=*q]:   %94 = load %struct._IO_FILE** @stdin, align 8, !dbg !604
CALL [call func]:   %95 = call i32 @fileno(%struct._IO_FILE* %94) #3, !dbg !604
CONTEXT CALL [call func]:   %95 = call i32 @fileno(%struct._IO_FILE* %94) #3, !dbg !604
	We do not analyze function 'fileno'
STORE [*p=q]:   store i32 %95, i32* @ifd, align 4, !dbg !604
LOAD [p=*q]:   %96 = load i32* @decompress, align 4, !dbg !605
LOAD [p=*q]:   %99 = load i32* @ifd, align 4, !dbg !606
CALL [call func]:   %100 = call i32 @get_method(i32 %99), !dbg !606
CONTEXT CALL [call func]:   %100 = call i32 @get_method(i32 %99), !dbg !606
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %flags}, metadata !576), !dbg !578
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[10 x i8]* %magic}, metadata !579), !dbg !581
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic0}, metadata !582), !dbg !583
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic1}, metadata !584), !dbg !585
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %stamp}, metadata !586), !dbg !588
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %3 = load i32* @force, align 4, !dbg !589
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !589
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !590
CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
CONTEXT CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %22, i32* %imagic0, align 4, !dbg !592
LOAD [p=*q]:   %23 = load i32* %imagic0, align 4, !dbg !593
STORE [*p=q]:   store i8 %24, i8* %25, align 1, !dbg !593
LOAD [p=*q]:   %26 = load i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* @insize, align 4, !dbg !594
LOAD [p=*q]:   %30 = load i32* @inptr, align 4, !dbg !594
STORE [*p=q]:   store i32 %31, i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %34 = load i8* %33, align 1, !dbg !594
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
CONTEXT CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %39, i32* %imagic1, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* %imagic1, align 4, !dbg !596
STORE [*p=q]:   store i8 %41, i8* %42, align 1, !dbg !596
LOAD [p=*q]:   %44 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %45 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %48 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %49, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !598
CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
CONTEXT CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %58, i8* %59, align 1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %imagic0, align 4, !dbg !601
LOAD [p=*q]:   %61 = load i8* %60, align 1, !dbg !602
LOAD [p=*q]:   %64 = load i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %65 = load i32* @insize, align 4, !dbg !603
LOAD [p=*q]:   %68 = load i32* @inptr, align 4, !dbg !603
STORE [*p=q]:   store i32 %69, i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %72 = load i8* %71, align 1, !dbg !603
CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
CONTEXT CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %78, i8* %79, align 1, !dbg !605
STORE [*p=q]:   store i32 0, i32* %imagic1, align 4, !dbg !606
LOAD [p=*q]:   %81 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %82 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %85 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %86, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %89 = load i8* %88, align 1, !dbg !608
CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
CONTEXT CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %94, i32* %imagic1, align 4, !dbg !610
LOAD [p=*q]:   %95 = load i32* %imagic1, align 4, !dbg !611
STORE [*p=q]:   store i8 %96, i8* %97, align 1, !dbg !611
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !612
LOAD [p=*q]:   %100 = load i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i32 %101, i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !614
STORE [*p=q]:   store i32 0, i32* @last_member, align 4, !dbg !615
CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
CONTEXT CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
	We do not analyze function 'memcmp'
CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
CONTEXT CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %110 = load i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %111 = load i32* @insize, align 4, !dbg !618
LOAD [p=*q]:   %114 = load i32* @inptr, align 4, !dbg !618
STORE [*p=q]:   store i32 %115, i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %118 = load i8* %117, align 1, !dbg !618
CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
CONTEXT CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %123, i32* @method, align 4, !dbg !620
LOAD [p=*q]:   %124 = load i32* @method, align 4, !dbg !621
LOAD [p=*q]:   %127 = load %struct._IO_FILE** @stderr, align 8, !dbg !622
LOAD [p=*q]:   %128 = load i8** @program_name, align 8, !dbg !622
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !622
CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
CONTEXT CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !624
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !625
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !626
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !627
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !627
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !627
CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
CONTEXT CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %146, i8* %flags, align 1, !dbg !628
LOAD [p=*q]:   %147 = load i8* %flags, align 1, !dbg !629
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !630
LOAD [p=*q]:   %153 = load i8** @program_name, align 8, !dbg !630
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
CONTEXT CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !632
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !633
LOAD [p=*q]:   %156 = load i8* %flags, align 1, !dbg !634
LOAD [p=*q]:   %161 = load %struct._IO_FILE** @stderr, align 8, !dbg !635
LOAD [p=*q]:   %162 = load i8** @program_name, align 8, !dbg !635
LOAD [p=*q]:   %163 = load i8* %flags, align 1, !dbg !635
CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
CONTEXT CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !637
LOAD [p=*q]:   %166 = load i32* @force, align 4, !dbg !638
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !639
LOAD [p=*q]:   %171 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %172 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %175 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %176, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %179 = load i8* %178, align 1, !dbg !641
CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
CONTEXT CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i64 %185, i64* %stamp, align 8, !dbg !642
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !643
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !643
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !643
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
CONTEXT CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %202 = load i64* %stamp, align 8, !dbg !644
STORE [*p=q]:   store i64 %203, i64* %stamp, align 8, !dbg !644
LOAD [p=*q]:   %204 = load i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* @insize, align 4, !dbg !645
LOAD [p=*q]:   %208 = load i32* @inptr, align 4, !dbg !645
STORE [*p=q]:   store i32 %209, i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %212 = load i8* %211, align 1, !dbg !645
CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
CONTEXT CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %220 = load i64* %stamp, align 8, !dbg !646
STORE [*p=q]:   store i64 %221, i64* %stamp, align 8, !dbg !646
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !647
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !647
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !647
CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
CONTEXT CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %238 = load i64* %stamp, align 8, !dbg !648
STORE [*p=q]:   store i64 %239, i64* %stamp, align 8, !dbg !648
LOAD [p=*q]:   %240 = load i64* %stamp, align 8, !dbg !649
LOAD [p=*q]:   %243 = load i32* @no_time, align 4, !dbg !649
LOAD [p=*q]:   %246 = load i64* %stamp, align 8, !dbg !650
STORE [*p=q]:   store i64 %246, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !650
STORE [*p=q]:   store i64 0, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !652
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %252 = load i32* @inptr, align 4, !dbg !654
STORE [*p=q]:   store i32 %253, i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %256 = load i8* %255, align 1, !dbg !654
CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
CONTEXT CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %262, i8* %263, align 1, !dbg !655
LOAD [p=*q]:   %264 = load i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %265 = load i32* @insize, align 4, !dbg !656
LOAD [p=*q]:   %268 = load i32* @inptr, align 4, !dbg !656
STORE [*p=q]:   store i32 %269, i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %272 = load i8* %271, align 1, !dbg !656
CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
CONTEXT CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %278, i8* %279, align 1, !dbg !657
LOAD [p=*q]:   %280 = load i8* %flags, align 1, !dbg !658
STORE [*p=q]:   store i8 8, i8* %285, align 1, !dbg !659
LOAD [p=*q]:   %286 = load i8* %flags, align 1, !dbg !661
STORE [*p=q]:   store i8 %286, i8* %287, align 1, !dbg !661
LOAD [p=*q]:   %288 = load i64* %stamp, align 8, !dbg !662
STORE [*p=q]:   store i8 %290, i8* %291, align 1, !dbg !662
LOAD [p=*q]:   %292 = load i64* %stamp, align 8, !dbg !663
STORE [*p=q]:   store i8 %295, i8* %296, align 1, !dbg !663
LOAD [p=*q]:   %297 = load i64* %stamp, align 8, !dbg !664
STORE [*p=q]:   store i8 %300, i8* %301, align 1, !dbg !664
LOAD [p=*q]:   %302 = load i64* %stamp, align 8, !dbg !665
STORE [*p=q]:   store i8 %304, i8* %305, align 1, !dbg !665
CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
CONTEXT CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
CONTEXT CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %310 = load i8* %flags, align 1, !dbg !669
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x i8]* %lenbuf}, metadata !670), !dbg !675
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !676), !dbg !677
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %315 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %316 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %319 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %320, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %323 = load i8* %322, align 1, !dbg !678
CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
CONTEXT CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %329, i8* %330, align 1, !dbg !679
STORE [*p=q]:   store i32 %331, i32* %len, align 4, !dbg !679
LOAD [p=*q]:   %332 = load i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %333 = load i32* @insize, align 4, !dbg !680
LOAD [p=*q]:   %336 = load i32* @inptr, align 4, !dbg !680
STORE [*p=q]:   store i32 %337, i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %340 = load i8* %339, align 1, !dbg !680
CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
CONTEXT CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %346, i8* %347, align 1, !dbg !681
LOAD [p=*q]:   %350 = load i32* %len, align 4, !dbg !681
STORE [*p=q]:   store i32 %351, i32* %len, align 4, !dbg !681
LOAD [p=*q]:   %352 = load i32* @verbose, align 4, !dbg !682
LOAD [p=*q]:   %355 = load %struct._IO_FILE** @stderr, align 8, !dbg !683
LOAD [p=*q]:   %356 = load i8** @program_name, align 8, !dbg !683
LOAD [p=*q]:   %357 = load i32* %len, align 4, !dbg !683
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
CONTEXT CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %360 = load i8* %flags, align 1, !dbg !686
CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
CONTEXT CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %368 = load i32* %len, align 4, !dbg !688
LOAD [p=*q]:   %370 = load i8* %flags, align 1, !dbg !688
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 %369, i32 %371), !dbg !688
LOAD [p=*q]:   %373 = load i8* %flags, align 1, !dbg !690
LOAD [p=*q]:   %378 = load i32* @no_name, align 4, !dbg !691
LOAD [p=*q]:   %381 = load i32* @to_stdout, align 4, !dbg !691
LOAD [p=*q]:   %384 = load i32* @list, align 4, !dbg !691
LOAD [p=*q]:   %387 = load i32* @part_nb, align 4, !dbg !691
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !696), !dbg !698
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
CONTEXT CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %393, i8** %p, align 8, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %base}, metadata !700), !dbg !701
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %394 = load i8** %p, align 8, !dbg !702
STORE [*p=q]:   store i8* %394, i8** %base, align 8, !dbg !702
LOAD [p=*q]:   %396 = load i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %397 = load i32* @insize, align 4, !dbg !705
LOAD [p=*q]:   %400 = load i32* @inptr, align 4, !dbg !705
STORE [*p=q]:   store i32 %401, i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %404 = load i8* %403, align 1, !dbg !705
CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
CONTEXT CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %411 = load i8** %p, align 8, !dbg !707
STORE [*p=q]:   store i8 %410, i8* %411, !dbg !707
LOAD [p=*q]:   %412 = load i8** %p, align 8, !dbg !708
STORE [*p=q]:   store i8* %413, i8** %p, align 8, !dbg !708
LOAD [p=*q]:   %414 = load i8* %412, !dbg !708
LOAD [p=*q]:   %419 = load i8** %p, align 8, !dbg !710
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
CONTEXT CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
STORE [*p=q]:   store i8* %m, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !576
LOAD [p=*q]:   %3 = load i8** @program_name, align 8, !dbg !576
LOAD [p=*q]:   %4 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
CALL [call func]:   call void @abort_gzip() #7, !dbg !578
LOAD [p=*q]:   %424 = load i8* %flags, align 1, !dbg !714
LOAD [p=*q]:   %429 = load i8** %base, align 8, !dbg !715
LOAD [p=*q]:   %430 = load i8** %p, align 8, !dbg !715
LOAD [p=*q]:   %431 = load i8** %base, align 8, !dbg !715
CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
CONTEXT CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %438 = load i8** %base, align 8, !dbg !716
CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
CONTEXT CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %439, i8** %p, align 8, !dbg !716
LOAD [p=*q]:   %440 = load i8** %base, align 8, !dbg !717
LOAD [p=*q]:   %441 = load i8** %p, align 8, !dbg !717
LOAD [p=*q]:   %442 = load i8** %p, align 8, !dbg !718
CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
CONTEXT CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
	We do not analyze function 'strlen'
CALL [call func]:   call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %441, i64 %444, i32 1, i1 false), !dbg !718
## get_method does not call llvm.memmove.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %445 = load i32* @list, align 4, !dbg !719
LOAD [p=*q]:   %448 = load i8** %base, align 8, !dbg !720
STORE [*p=q]:   store i32 0, i32* @list, align 4, !dbg !722
LOAD [p=*q]:   %455 = load i8* %flags, align 1, !dbg !725
LOAD [p=*q]:   %460 = load i8* %flags, align 1, !dbg !726
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %461), !dbg !726
LOAD [p=*q]:   %463 = load i8* %flags, align 1, !dbg !729
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %crc16}, metadata !730), !dbg !732
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
CONTEXT CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
STORE [*p=q]:   store i32 %471, i32* %crc16, align 4, !dbg !733
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %header16}, metadata !734), !dbg !735
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %472 = load i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %473 = load i32* @insize, align 4, !dbg !736
LOAD [p=*q]:   %476 = load i32* @inptr, align 4, !dbg !736
STORE [*p=q]:   store i32 %477, i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %480 = load i8* %479, align 1, !dbg !736
CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
CONTEXT CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %485, i32* %header16, align 4, !dbg !737
LOAD [p=*q]:   %486 = load i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %487 = load i32* @insize, align 4, !dbg !738
LOAD [p=*q]:   %490 = load i32* @inptr, align 4, !dbg !738
STORE [*p=q]:   store i32 %491, i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %494 = load i8* %493, align 1, !dbg !738
CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
CONTEXT CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %501 = load i32* %header16, align 4, !dbg !739
STORE [*p=q]:   store i32 %502, i32* %header16, align 4, !dbg !739
LOAD [p=*q]:   %503 = load i32* %header16, align 4, !dbg !740
LOAD [p=*q]:   %504 = load i32* %crc16, align 4, !dbg !740
LOAD [p=*q]:   %507 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
LOAD [p=*q]:   %508 = load i8** @program_name, align 8, !dbg !741
LOAD [p=*q]:   %509 = load i32* %header16, align 4, !dbg !741
LOAD [p=*q]:   %510 = load i32* %crc16, align 4, !dbg !741
CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
CONTEXT CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !743
LOAD [p=*q]:   %512 = load i32* @force, align 4, !dbg !744
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !745
LOAD [p=*q]:   %518 = load i32* @part_nb, align 4, !dbg !748
LOAD [p=*q]:   %521 = load i32* @inptr, align 4, !dbg !749
STORE [*p=q]:   store i64 %523, i64* @header_bytes, align 8, !dbg !749
CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
CONTEXT CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %530 = load i32* @inptr, align 4, !dbg !753
CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
CONTEXT CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !755
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !757
LOAD [p=*q]:   %536 = load i32* %2, align 4, !dbg !758
CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
CONTEXT CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %h}, metadata !576), !dbg !580
LOAD [p=*q]:   %3 = load i32* @inptr, align 4, !dbg !581
STORE [*p=q]:   store i8* %5, i8** %h, align 8, !dbg !581
LOAD [p=*q]:   %6 = load i32* %2, align 4, !dbg !582
STORE [*p=q]:   store i32 %6, i32* @ifd, align 4, !dbg !582
LOAD [p=*q]:   %7 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i8* %9, !dbg !583
LOAD [p=*q]:   %13 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %16 = load i8* %15, !dbg !583
LOAD [p=*q]:   %22 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %25 = load i8* %24, !dbg !583
LOAD [p=*q]:   %28 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %31 = load i8* %30, !dbg !583
LOAD [p=*q]:   %37 = load i32* @inptr, align 4, !dbg !583
STORE [*p=q]:   store i32 %38, i32* @inptr, align 4, !dbg !583
LOAD [p=*q]:   %39 = load i32* @inptr, align 4, !dbg !584
LOAD [p=*q]:   %40 = load i32* @insize, align 4, !dbg !584
LOAD [p=*q]:   %43 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %45 = load i8* %44, !dbg !584
LOAD [p=*q]:   %48 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %50 = load i8* %49, !dbg !584
LOAD [p=*q]:   %56 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %59 = load i8* %58, !dbg !584
LOAD [p=*q]:   %62 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %65 = load i8* %64, !dbg !584
LOAD [p=*q]:   %75 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
LOAD [p=*q]:   %76 = load i8** @program_name, align 8, !dbg !585
CALL [call func]:   %77 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([31 x i8]* @.str167, i32 0, i32 0), i8* %76, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !585
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !587
STORE [*p=q]:   store i32 1, i32* %1, !dbg !588
LOAD [p=*q]:   %79 = load i8** %h, align 8, !dbg !589
LOAD [p=*q]:   %81 = load i8* %80, !dbg !589
STORE [*p=q]:   store i32 %82, i32* @method, align 4, !dbg !589
LOAD [p=*q]:   %83 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %86 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %89 = load %struct._IO_FILE** @stderr, align 8, !dbg !591
LOAD [p=*q]:   %90 = load i8** @program_name, align 8, !dbg !591
CALL [call func]:   %91 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([58 x i8]* @.str1168, i32 0, i32 0), i8* %90, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !593
STORE [*p=q]:   store i32 1, i32* %1, !dbg !594
LOAD [p=*q]:   %93 = load i8** %h, align 8, !dbg !595
LOAD [p=*q]:   %95 = load i8* %94, !dbg !595
STORE [*p=q]:   store i32 %97, i32* @decrypt, align 4, !dbg !595
LOAD [p=*q]:   %100 = load %struct._IO_FILE** @stderr, align 8, !dbg !596
LOAD [p=*q]:   %101 = load i8** @program_name, align 8, !dbg !596
CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([38 x i8]* @.str2169, i32 0, i32 0), i8* %101, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !596
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !598
STORE [*p=q]:   store i32 1, i32* %1, !dbg !599
LOAD [p=*q]:   %104 = load i8** %h, align 8, !dbg !600
LOAD [p=*q]:   %106 = load i8* %105, !dbg !600
STORE [*p=q]:   store i32 %110, i32* @ext_header, align 4, !dbg !600
STORE [*p=q]:   store i32 1, i32* @pkzip, align 4, !dbg !601
STORE [*p=q]:   store i32 0, i32* %1, !dbg !602
LOAD [p=*q]:   %112 = load i32* %1, !dbg !603
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !759
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !760
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
CONTEXT CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unpack, i32 (i32, i32)** @work, align 8, !dbg !763
STORE [*p=q]:   store i32 2, i32* @method, align 4, !dbg !765
CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
CONTEXT CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzw, i32 (i32, i32)** @work, align 8, !dbg !768
STORE [*p=q]:   store i32 1, i32* @method, align 4, !dbg !770
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !771
CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
CONTEXT CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzh, i32 (i32, i32)** @work, align 8, !dbg !774
STORE [*p=q]:   store i32 3, i32* @method, align 4, !dbg !776
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !777
LOAD [p=*q]:   %557 = load i32* @force, align 4, !dbg !779
LOAD [p=*q]:   %560 = load i32* @to_stdout, align 4, !dbg !779
LOAD [p=*q]:   %563 = load i32* @list, align 4, !dbg !779
STORE [*p=q]:   store i32 0, i32* @method, align 4, !dbg !780
STORE [*p=q]:   store i32 (i32, i32)* @copy, i32 (i32, i32)** @work, align 8, !dbg !782
LOAD [p=*q]:   %566 = load i32* %imagic1, align 4, !dbg !783
LOAD [p=*q]:   %569 = load i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 %570, i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !785
LOAD [p=*q]:   %572 = load i32* %imagic0, align 4, !dbg !786
LOAD [p=*q]:   %575 = load %struct._IO_FILE** @stdout, align 8, !dbg !787
CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
CONTEXT CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
	We do not analyze function 'fileno'
CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
CONTEXT CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
STORE [*p=q]:   store i32 %fd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i8* %buf, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !576), !dbg !579
STORE [*p=q]:   store i32 %cnt, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !580), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !582), !dbg !584
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !586
LOAD [p=*q]:   %6 = load i8** %2, align 8, !dbg !586
LOAD [p=*q]:   %7 = load i32* %3, align 4, !dbg !586
CALL [call func]:   %8 = call i32 (...)* bitcast (i32 (i32, i8*, i32)* @write_buffer to i32 (...)*)(i32 %5, i8* %6, i32 %7), !dbg !586
STORE [*p=q]:   store i32 %8, i32* %n, align 4, !dbg !586
LOAD [p=*q]:   %9 = load i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %12 = load i32* %n, align 4, !dbg !587
CALL [call func]:   call void @write_error() #7, !dbg !589
LOAD [p=*q]:   %16 = load i32* %n, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %3, align 4, !dbg !591
STORE [*p=q]:   store i32 %18, i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %20 = load i32* %n, align 4, !dbg !592
STORE [*p=q]:   store i8* %22, i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %578 = load i64* @bytes_out, align 8, !dbg !789
STORE [*p=q]:   store i64 %579, i64* @bytes_out, align 8, !dbg !789
LOAD [p=*q]:   %587 = load i32* @method, align 4, !dbg !792
LOAD [p=*q]:   %590 = load i32* @method, align 4, !dbg !793
STORE [*p=q]:   store i32 %590, i32* %1, !dbg !793
LOAD [p=*q]:   %592 = load i32* @part_nb, align 4, !dbg !794
LOAD [p=*q]:   %595 = load %struct._IO_FILE** @stderr, align 8, !dbg !795
LOAD [p=*q]:   %596 = load i8** @program_name, align 8, !dbg !795
CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
CONTEXT CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !797
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !798
LOAD [p=*q]:   %600 = load i8* %599, align 1, !dbg !799
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %inbyte}, metadata !801), !dbg !803
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %604 = load i32* %imagic1, align 4, !dbg !804
STORE [*p=q]:   store i32 %604, i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %606 = load i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %610 = load i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %611 = load i32* @insize, align 4, !dbg !807
LOAD [p=*q]:   %614 = load i32* @inptr, align 4, !dbg !807
STORE [*p=q]:   store i32 %615, i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %618 = load i8* %617, align 1, !dbg !807
CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
CONTEXT CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %623, i32* %inbyte, align 4, !dbg !808
LOAD [p=*q]:   %625 = load i32* %inbyte, align 4, !dbg !809
LOAD [p=*q]:   %628 = load i32* @verbose, align 4, !dbg !810
LOAD [p=*q]:   %631 = load i32* @quiet, align 4, !dbg !812
LOAD [p=*q]:   %634 = load %struct._IO_FILE** @stderr, align 8, !dbg !812
LOAD [p=*q]:   %635 = load i8** @program_name, align 8, !dbg !812
CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
CONTEXT CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %638 = load i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 -3, i32* %1, !dbg !814
LOAD [p=*q]:   %645 = load i32* @quiet, align 4, !dbg !816
LOAD [p=*q]:   %648 = load %struct._IO_FILE** @stderr, align 8, !dbg !816
LOAD [p=*q]:   %649 = load i8** @program_name, align 8, !dbg !816
CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
CONTEXT CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %652 = load i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 -2, i32* %1, !dbg !818
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
STORE [*p=q]:   store i32 %100, i32* @method, align 4, !dbg !606
LOAD [p=*q]:   %101 = load i32* @method, align 4, !dbg !608
LOAD [p=*q]:   %104 = load i32* @exit_code, align 4, !dbg !609
CALL [call func]:   call void @do_exit(i32 %104) #7, !dbg !609
CONTEXT CALL [call func]:   call void @do_exit(i32 %104) #7, !dbg !609
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %107 = load i32* @list, align 4, !dbg !612
LOAD [p=*q]:   %110 = load i32* @ifd, align 4, !dbg !613
LOAD [p=*q]:   %111 = load i32* @method, align 4, !dbg !613
CALL [call func]:   call void @do_list(i32 %110, i32 %111), !dbg !613
CONTEXT CALL [call func]:   call void @do_list(i32 %110, i32 %111), !dbg !613
STORE [*p=q]:   store i32 %ifd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 %method, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %crc}, metadata !578), !dbg !581
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %positive_off_t_width}, metadata !582), !dbg !583
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 1, i32* %positive_off_t_width, align 4, !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %o}, metadata !585), !dbg !586
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 9223372036854775807, i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %4 = load i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %7 = load i32* %positive_off_t_width, align 4, !dbg !589
STORE [*p=q]:   store i32 %8, i32* %positive_off_t_width, align 4, !dbg !589
LOAD [p=*q]:   %10 = load i64* %o, align 8, !dbg !592
STORE [*p=q]:   store i64 %11, i64* %o, align 8, !dbg !592
LOAD [p=*q]:   %13 = load i32* @do_list.first_time, align 4, !dbg !593
LOAD [p=*q]:   %16 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 0, i32* @do_list.first_time, align 4, !dbg !594
LOAD [p=*q]:   %19 = load i32* @verbose, align 4, !dbg !596
CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
CONTEXT CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %24 = load i32* @quiet, align 4, !dbg !600
LOAD [p=*q]:   %27 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %28 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %29 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %30 = load i32* %positive_off_t_width, align 4, !dbg !601
CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
CONTEXT CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %34 = load i32* %2, align 4, !dbg !605
LOAD [p=*q]:   %37 = load i64* @total_in, align 8, !dbg !606
LOAD [p=*q]:   %40 = load i64* @total_out, align 8, !dbg !606
LOAD [p=*q]:   %44 = load i32* @verbose, align 4, !dbg !609
CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
CONTEXT CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %49 = load i32* @verbose, align 4, !dbg !613
LOAD [p=*q]:   %52 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %55 = load %struct._IO_FILE** @stdout, align 8, !dbg !614
LOAD [p=*q]:   %56 = load i64* @total_in, align 8, !dbg !614
LOAD [p=*q]:   %57 = load i32* %positive_off_t_width, align 4, !dbg !614
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
CONTEXT CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %59 = load %struct._IO_FILE** @stdout, align 8, !dbg !617
LOAD [p=*q]:   %60 = load i64* @total_out, align 8, !dbg !617
LOAD [p=*q]:   %61 = load i32* %positive_off_t_width, align 4, !dbg !617
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
CONTEXT CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %64 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %65 = load i64* @total_in, align 8, !dbg !620
LOAD [p=*q]:   %66 = load i64* @header_bytes, align 8, !dbg !620
LOAD [p=*q]:   %69 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %70 = load %struct._IO_FILE** @stdout, align 8, !dbg !620
CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
CONTEXT CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
CONTEXT CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
	We do not analyze function 'rpl_printf'
STORE [*p=q]:   store i64 -1, i64* %crc, align 8, !dbg !623
STORE [*p=q]:   store i64 -1, i64* @bytes_out, align 8, !dbg !624
LOAD [p=*q]:   %74 = load i64* @ifile_size, align 8, !dbg !625
STORE [*p=q]:   store i64 %74, i64* @bytes_in, align 8, !dbg !625
LOAD [p=*q]:   %75 = load i32* %2, align 4, !dbg !626
LOAD [p=*q]:   %78 = load i32* @last_member, align 4, !dbg !626
LOAD [p=*q]:   %81 = load i32* %1, align 4, !dbg !627
CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
CONTEXT CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
	We do not analyze function 'lseek'
STORE [*p=q]:   store i64 %82, i64* @bytes_in, align 8, !dbg !627
LOAD [p=*q]:   %83 = load i64* @bytes_in, align 8, !dbg !629
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[8 x i8]* %buf}, metadata !630), !dbg !635
## do_list does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %86 = load i64* @bytes_in, align 8, !dbg !636
STORE [*p=q]:   store i64 %87, i64* @bytes_in, align 8, !dbg !636
LOAD [p=*q]:   %88 = load i32* %1, align 4, !dbg !637
CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
CONTEXT CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
	We do not analyze function 'read'
CALL [call func]:   call void @read_error() #7, !dbg !638
CONTEXT CALL [call func]:   call void @read_error() #7, !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !574), !dbg !576
CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
LOAD [p=*q]:   %2 = load i32* %1, !dbg !577
STORE [*p=q]:   store i32 %2, i32* %e, align 4, !dbg !577
LOAD [p=*q]:   %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i8** @program_name, align 8, !dbg !578
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
LOAD [p=*q]:   %6 = load i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %9 = load i32* %e, align 4, !dbg !580
CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
STORE [*p=q]:   store i32 %9, i32* %10, !dbg !580
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
LOAD [p=*q]:   %12 = load %struct._IO_FILE** @stderr, align 8, !dbg !584
CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
CALL [call func]:   call void @abort_gzip() #7, !dbg !586
LOAD [p=*q]:   %95 = load i8* %94, align 1, !dbg !640
LOAD [p=*q]:   %99 = load i8* %98, align 1, !dbg !640
LOAD [p=*q]:   %108 = load i8* %107, !dbg !640
LOAD [p=*q]:   %114 = load i8* %113, !dbg !640
STORE [*p=q]:   store i64 %121, i64* %crc, align 8, !dbg !640
LOAD [p=*q]:   %125 = load i8* %124, !dbg !641
LOAD [p=*q]:   %131 = load i8* %130, !dbg !641
LOAD [p=*q]:   %141 = load i8* %140, !dbg !641
LOAD [p=*q]:   %148 = load i8* %147, !dbg !641
STORE [*p=q]:   store i64 %155, i64* @bytes_out, align 8, !dbg !641
LOAD [p=*q]:   %158 = load i32* @verbose, align 4, !dbg !644
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.tm** %tm}, metadata !645), !dbg !661
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
CONTEXT CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
	We do not analyze function 'localtime'
STORE [*p=q]:   store %struct.tm* %161, %struct.tm** %tm, align 8, !dbg !662
LOAD [p=*q]:   %162 = load i32* %2, align 4, !dbg !663
LOAD [p=*q]:   %165 = load i8** %164, align 8, !dbg !663
LOAD [p=*q]:   %166 = load i64* %crc, align 8, !dbg !663
CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
CONTEXT CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %168 = load %struct.tm** %tm, align 8, !dbg !664
LOAD [p=*q]:   %171 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %173 = load i32* %172, align 4, !dbg !665
LOAD [p=*q]:   %177 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %179 = load i32* %178, align 4, !dbg !665
LOAD [p=*q]:   %180 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %182 = load i32* %181, align 4, !dbg !665
LOAD [p=*q]:   %183 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %185 = load i32* %184, align 4, !dbg !665
CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
CONTEXT CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
	We do not analyze function 'rpl_printf'
CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
CONTEXT CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %191 = load %struct._IO_FILE** @stdout, align 8, !dbg !668
LOAD [p=*q]:   %192 = load i64* @bytes_in, align 8, !dbg !668
LOAD [p=*q]:   %193 = load i32* %positive_off_t_width, align 4, !dbg !668
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
CONTEXT CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %195 = load %struct._IO_FILE** @stdout, align 8, !dbg !670
LOAD [p=*q]:   %196 = load i64* @bytes_out, align 8, !dbg !670
LOAD [p=*q]:   %197 = load i32* %positive_off_t_width, align 4, !dbg !670
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
CONTEXT CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %199 = load i64* @bytes_in, align 8, !dbg !672
STORE [*p=q]:   store i64 -1, i64* @total_in, align 8, !dbg !673
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !675
LOAD [p=*q]:   %203 = load i64* @total_in, align 8, !dbg !677
LOAD [p=*q]:   %206 = load i64* @bytes_in, align 8, !dbg !678
LOAD [p=*q]:   %207 = load i64* @total_in, align 8, !dbg !678
STORE [*p=q]:   store i64 %208, i64* @total_in, align 8, !dbg !678
LOAD [p=*q]:   %211 = load i64* @bytes_out, align 8, !dbg !681
STORE [*p=q]:   store i64 -1, i64* @total_out, align 8, !dbg !682
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !684
LOAD [p=*q]:   %215 = load i64* @total_out, align 8, !dbg !686
LOAD [p=*q]:   %218 = load i64* @bytes_out, align 8, !dbg !687
LOAD [p=*q]:   %219 = load i64* @total_out, align 8, !dbg !687
STORE [*p=q]:   store i64 %220, i64* @total_out, align 8, !dbg !687
LOAD [p=*q]:   %223 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %224 = load i64* @bytes_in, align 8, !dbg !690
LOAD [p=*q]:   %225 = load i64* @header_bytes, align 8, !dbg !690
LOAD [p=*q]:   %228 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %229 = load %struct._IO_FILE** @stdout, align 8, !dbg !690
CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
CONTEXT CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
CONTEXT CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %114 = load i32 (i32, i32)** @work, align 8, !dbg !618
LOAD [p=*q]:   %115 = load %struct._IO_FILE** @stdin, align 8, !dbg !620
CALL [call func]:   %116 = call i32 @fileno(%struct._IO_FILE* %115) #3, !dbg !620
CONTEXT CALL [call func]:   %116 = call i32 @fileno(%struct._IO_FILE* %115) #3, !dbg !620
	We do not analyze function 'fileno'
LOAD [p=*q]:   %117 = load %struct._IO_FILE** @stdout, align 8, !dbg !621
CALL [call func]:   %118 = call i32 @fileno(%struct._IO_FILE* %117) #3, !dbg !621
CONTEXT CALL [call func]:   %118 = call i32 @fileno(%struct._IO_FILE* %117) #3, !dbg !621
	We do not analyze function 'fileno'
CALL [call func]:   %119 = call i32 %114(i32 %116, i32 %118), !dbg !621
CALL [call func]:   %123 = call i32 @input_eof(), !dbg !623
CONTEXT CALL [call func]:   %123 = call i32 @input_eof(), !dbg !623
LOAD [p=*q]:   %2 = load i32* @decompress, align 4, !dbg !574
LOAD [p=*q]:   %5 = load i32* @last_member, align 4, !dbg !574
STORE [*p=q]:   store i32 1, i32* %1, !dbg !576
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !577
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !577
LOAD [p=*q]:   %13 = load i32* @insize, align 4, !dbg !578
CALL [call func]:   %16 = call i32 @fill_inbuf(i32 1), !dbg !580
CONTEXT CALL [call func]:   %16 = call i32 @fill_inbuf(i32 1), !dbg !580
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 1, i32* %1, !dbg !581
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !582
STORE [*p=q]:   store i32 0, i32* %1, !dbg !584
LOAD [p=*q]:   %22 = load i32* %1, !dbg !585
LOAD [p=*q]:   %127 = load i32* @ifd, align 4, !dbg !625
CALL [call func]:   %128 = call i32 @get_method(i32 %127), !dbg !625
CONTEXT CALL [call func]:   %128 = call i32 @get_method(i32 %127), !dbg !625
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %flags}, metadata !576), !dbg !578
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[10 x i8]* %magic}, metadata !579), !dbg !581
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic0}, metadata !582), !dbg !583
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic1}, metadata !584), !dbg !585
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %stamp}, metadata !586), !dbg !588
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %3 = load i32* @force, align 4, !dbg !589
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !589
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !590
CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
CONTEXT CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %22, i32* %imagic0, align 4, !dbg !592
LOAD [p=*q]:   %23 = load i32* %imagic0, align 4, !dbg !593
STORE [*p=q]:   store i8 %24, i8* %25, align 1, !dbg !593
LOAD [p=*q]:   %26 = load i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* @insize, align 4, !dbg !594
LOAD [p=*q]:   %30 = load i32* @inptr, align 4, !dbg !594
STORE [*p=q]:   store i32 %31, i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %34 = load i8* %33, align 1, !dbg !594
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
CONTEXT CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %39, i32* %imagic1, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* %imagic1, align 4, !dbg !596
STORE [*p=q]:   store i8 %41, i8* %42, align 1, !dbg !596
LOAD [p=*q]:   %44 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %45 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %48 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %49, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !598
CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
CONTEXT CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %58, i8* %59, align 1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %imagic0, align 4, !dbg !601
LOAD [p=*q]:   %61 = load i8* %60, align 1, !dbg !602
LOAD [p=*q]:   %64 = load i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %65 = load i32* @insize, align 4, !dbg !603
LOAD [p=*q]:   %68 = load i32* @inptr, align 4, !dbg !603
STORE [*p=q]:   store i32 %69, i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %72 = load i8* %71, align 1, !dbg !603
CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
CONTEXT CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %78, i8* %79, align 1, !dbg !605
STORE [*p=q]:   store i32 0, i32* %imagic1, align 4, !dbg !606
LOAD [p=*q]:   %81 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %82 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %85 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %86, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %89 = load i8* %88, align 1, !dbg !608
CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
CONTEXT CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %94, i32* %imagic1, align 4, !dbg !610
LOAD [p=*q]:   %95 = load i32* %imagic1, align 4, !dbg !611
STORE [*p=q]:   store i8 %96, i8* %97, align 1, !dbg !611
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !612
LOAD [p=*q]:   %100 = load i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i32 %101, i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !614
STORE [*p=q]:   store i32 0, i32* @last_member, align 4, !dbg !615
CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
CONTEXT CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
	We do not analyze function 'memcmp'
CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
CONTEXT CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %110 = load i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %111 = load i32* @insize, align 4, !dbg !618
LOAD [p=*q]:   %114 = load i32* @inptr, align 4, !dbg !618
STORE [*p=q]:   store i32 %115, i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %118 = load i8* %117, align 1, !dbg !618
CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
CONTEXT CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %123, i32* @method, align 4, !dbg !620
LOAD [p=*q]:   %124 = load i32* @method, align 4, !dbg !621
LOAD [p=*q]:   %127 = load %struct._IO_FILE** @stderr, align 8, !dbg !622
LOAD [p=*q]:   %128 = load i8** @program_name, align 8, !dbg !622
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !622
CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
CONTEXT CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !624
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !625
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !626
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !627
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !627
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !627
CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
CONTEXT CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %146, i8* %flags, align 1, !dbg !628
LOAD [p=*q]:   %147 = load i8* %flags, align 1, !dbg !629
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !630
LOAD [p=*q]:   %153 = load i8** @program_name, align 8, !dbg !630
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
CONTEXT CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !632
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !633
LOAD [p=*q]:   %156 = load i8* %flags, align 1, !dbg !634
LOAD [p=*q]:   %161 = load %struct._IO_FILE** @stderr, align 8, !dbg !635
LOAD [p=*q]:   %162 = load i8** @program_name, align 8, !dbg !635
LOAD [p=*q]:   %163 = load i8* %flags, align 1, !dbg !635
CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
CONTEXT CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !637
LOAD [p=*q]:   %166 = load i32* @force, align 4, !dbg !638
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !639
LOAD [p=*q]:   %171 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %172 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %175 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %176, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %179 = load i8* %178, align 1, !dbg !641
CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
CONTEXT CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i64 %185, i64* %stamp, align 8, !dbg !642
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !643
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !643
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !643
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
CONTEXT CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %202 = load i64* %stamp, align 8, !dbg !644
STORE [*p=q]:   store i64 %203, i64* %stamp, align 8, !dbg !644
LOAD [p=*q]:   %204 = load i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* @insize, align 4, !dbg !645
LOAD [p=*q]:   %208 = load i32* @inptr, align 4, !dbg !645
STORE [*p=q]:   store i32 %209, i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %212 = load i8* %211, align 1, !dbg !645
CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
CONTEXT CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %220 = load i64* %stamp, align 8, !dbg !646
STORE [*p=q]:   store i64 %221, i64* %stamp, align 8, !dbg !646
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !647
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !647
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !647
CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
CONTEXT CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %238 = load i64* %stamp, align 8, !dbg !648
STORE [*p=q]:   store i64 %239, i64* %stamp, align 8, !dbg !648
LOAD [p=*q]:   %240 = load i64* %stamp, align 8, !dbg !649
LOAD [p=*q]:   %243 = load i32* @no_time, align 4, !dbg !649
LOAD [p=*q]:   %246 = load i64* %stamp, align 8, !dbg !650
STORE [*p=q]:   store i64 %246, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !650
STORE [*p=q]:   store i64 0, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !652
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %252 = load i32* @inptr, align 4, !dbg !654
STORE [*p=q]:   store i32 %253, i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %256 = load i8* %255, align 1, !dbg !654
CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
CONTEXT CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %262, i8* %263, align 1, !dbg !655
LOAD [p=*q]:   %264 = load i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %265 = load i32* @insize, align 4, !dbg !656
LOAD [p=*q]:   %268 = load i32* @inptr, align 4, !dbg !656
STORE [*p=q]:   store i32 %269, i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %272 = load i8* %271, align 1, !dbg !656
CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
CONTEXT CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %278, i8* %279, align 1, !dbg !657
LOAD [p=*q]:   %280 = load i8* %flags, align 1, !dbg !658
STORE [*p=q]:   store i8 8, i8* %285, align 1, !dbg !659
LOAD [p=*q]:   %286 = load i8* %flags, align 1, !dbg !661
STORE [*p=q]:   store i8 %286, i8* %287, align 1, !dbg !661
LOAD [p=*q]:   %288 = load i64* %stamp, align 8, !dbg !662
STORE [*p=q]:   store i8 %290, i8* %291, align 1, !dbg !662
LOAD [p=*q]:   %292 = load i64* %stamp, align 8, !dbg !663
STORE [*p=q]:   store i8 %295, i8* %296, align 1, !dbg !663
LOAD [p=*q]:   %297 = load i64* %stamp, align 8, !dbg !664
STORE [*p=q]:   store i8 %300, i8* %301, align 1, !dbg !664
LOAD [p=*q]:   %302 = load i64* %stamp, align 8, !dbg !665
STORE [*p=q]:   store i8 %304, i8* %305, align 1, !dbg !665
CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
CONTEXT CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
CONTEXT CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %310 = load i8* %flags, align 1, !dbg !669
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x i8]* %lenbuf}, metadata !670), !dbg !675
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !676), !dbg !677
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %315 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %316 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %319 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %320, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %323 = load i8* %322, align 1, !dbg !678
CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
CONTEXT CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %329, i8* %330, align 1, !dbg !679
STORE [*p=q]:   store i32 %331, i32* %len, align 4, !dbg !679
LOAD [p=*q]:   %332 = load i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %333 = load i32* @insize, align 4, !dbg !680
LOAD [p=*q]:   %336 = load i32* @inptr, align 4, !dbg !680
STORE [*p=q]:   store i32 %337, i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %340 = load i8* %339, align 1, !dbg !680
CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
CONTEXT CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %346, i8* %347, align 1, !dbg !681
LOAD [p=*q]:   %350 = load i32* %len, align 4, !dbg !681
STORE [*p=q]:   store i32 %351, i32* %len, align 4, !dbg !681
LOAD [p=*q]:   %352 = load i32* @verbose, align 4, !dbg !682
LOAD [p=*q]:   %355 = load %struct._IO_FILE** @stderr, align 8, !dbg !683
LOAD [p=*q]:   %356 = load i8** @program_name, align 8, !dbg !683
LOAD [p=*q]:   %357 = load i32* %len, align 4, !dbg !683
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
CONTEXT CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %360 = load i8* %flags, align 1, !dbg !686
CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
CONTEXT CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %368 = load i32* %len, align 4, !dbg !688
LOAD [p=*q]:   %370 = load i8* %flags, align 1, !dbg !688
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 %369, i32 %371), !dbg !688
LOAD [p=*q]:   %373 = load i8* %flags, align 1, !dbg !690
LOAD [p=*q]:   %378 = load i32* @no_name, align 4, !dbg !691
LOAD [p=*q]:   %381 = load i32* @to_stdout, align 4, !dbg !691
LOAD [p=*q]:   %384 = load i32* @list, align 4, !dbg !691
LOAD [p=*q]:   %387 = load i32* @part_nb, align 4, !dbg !691
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !696), !dbg !698
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
CONTEXT CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %393, i8** %p, align 8, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %base}, metadata !700), !dbg !701
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %394 = load i8** %p, align 8, !dbg !702
STORE [*p=q]:   store i8* %394, i8** %base, align 8, !dbg !702
LOAD [p=*q]:   %396 = load i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %397 = load i32* @insize, align 4, !dbg !705
LOAD [p=*q]:   %400 = load i32* @inptr, align 4, !dbg !705
STORE [*p=q]:   store i32 %401, i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %404 = load i8* %403, align 1, !dbg !705
CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
CONTEXT CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %411 = load i8** %p, align 8, !dbg !707
STORE [*p=q]:   store i8 %410, i8* %411, !dbg !707
LOAD [p=*q]:   %412 = load i8** %p, align 8, !dbg !708
STORE [*p=q]:   store i8* %413, i8** %p, align 8, !dbg !708
LOAD [p=*q]:   %414 = load i8* %412, !dbg !708
LOAD [p=*q]:   %419 = load i8** %p, align 8, !dbg !710
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
CONTEXT CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
STORE [*p=q]:   store i8* %m, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !576
LOAD [p=*q]:   %3 = load i8** @program_name, align 8, !dbg !576
LOAD [p=*q]:   %4 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
CALL [call func]:   call void @abort_gzip() #7, !dbg !578
LOAD [p=*q]:   %424 = load i8* %flags, align 1, !dbg !714
LOAD [p=*q]:   %429 = load i8** %base, align 8, !dbg !715
LOAD [p=*q]:   %430 = load i8** %p, align 8, !dbg !715
LOAD [p=*q]:   %431 = load i8** %base, align 8, !dbg !715
CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
CONTEXT CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %438 = load i8** %base, align 8, !dbg !716
CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
CONTEXT CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %439, i8** %p, align 8, !dbg !716
LOAD [p=*q]:   %440 = load i8** %base, align 8, !dbg !717
LOAD [p=*q]:   %441 = load i8** %p, align 8, !dbg !717
LOAD [p=*q]:   %442 = load i8** %p, align 8, !dbg !718
CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
CONTEXT CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
	We do not analyze function 'strlen'
CALL [call func]:   call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %441, i64 %444, i32 1, i1 false), !dbg !718
## get_method does not call llvm.memmove.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %445 = load i32* @list, align 4, !dbg !719
LOAD [p=*q]:   %448 = load i8** %base, align 8, !dbg !720
STORE [*p=q]:   store i32 0, i32* @list, align 4, !dbg !722
LOAD [p=*q]:   %455 = load i8* %flags, align 1, !dbg !725
LOAD [p=*q]:   %460 = load i8* %flags, align 1, !dbg !726
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %461), !dbg !726
LOAD [p=*q]:   %463 = load i8* %flags, align 1, !dbg !729
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %crc16}, metadata !730), !dbg !732
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
CONTEXT CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
STORE [*p=q]:   store i32 %471, i32* %crc16, align 4, !dbg !733
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %header16}, metadata !734), !dbg !735
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %472 = load i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %473 = load i32* @insize, align 4, !dbg !736
LOAD [p=*q]:   %476 = load i32* @inptr, align 4, !dbg !736
STORE [*p=q]:   store i32 %477, i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %480 = load i8* %479, align 1, !dbg !736
CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
CONTEXT CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %485, i32* %header16, align 4, !dbg !737
LOAD [p=*q]:   %486 = load i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %487 = load i32* @insize, align 4, !dbg !738
LOAD [p=*q]:   %490 = load i32* @inptr, align 4, !dbg !738
STORE [*p=q]:   store i32 %491, i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %494 = load i8* %493, align 1, !dbg !738
CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
CONTEXT CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %501 = load i32* %header16, align 4, !dbg !739
STORE [*p=q]:   store i32 %502, i32* %header16, align 4, !dbg !739
LOAD [p=*q]:   %503 = load i32* %header16, align 4, !dbg !740
LOAD [p=*q]:   %504 = load i32* %crc16, align 4, !dbg !740
LOAD [p=*q]:   %507 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
LOAD [p=*q]:   %508 = load i8** @program_name, align 8, !dbg !741
LOAD [p=*q]:   %509 = load i32* %header16, align 4, !dbg !741
LOAD [p=*q]:   %510 = load i32* %crc16, align 4, !dbg !741
CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
CONTEXT CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !743
LOAD [p=*q]:   %512 = load i32* @force, align 4, !dbg !744
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !745
LOAD [p=*q]:   %518 = load i32* @part_nb, align 4, !dbg !748
LOAD [p=*q]:   %521 = load i32* @inptr, align 4, !dbg !749
STORE [*p=q]:   store i64 %523, i64* @header_bytes, align 8, !dbg !749
CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
CONTEXT CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %530 = load i32* @inptr, align 4, !dbg !753
CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
CONTEXT CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !755
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !757
LOAD [p=*q]:   %536 = load i32* %2, align 4, !dbg !758
CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
CONTEXT CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %h}, metadata !576), !dbg !580
LOAD [p=*q]:   %3 = load i32* @inptr, align 4, !dbg !581
STORE [*p=q]:   store i8* %5, i8** %h, align 8, !dbg !581
LOAD [p=*q]:   %6 = load i32* %2, align 4, !dbg !582
STORE [*p=q]:   store i32 %6, i32* @ifd, align 4, !dbg !582
LOAD [p=*q]:   %7 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i8* %9, !dbg !583
LOAD [p=*q]:   %13 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %16 = load i8* %15, !dbg !583
LOAD [p=*q]:   %22 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %25 = load i8* %24, !dbg !583
LOAD [p=*q]:   %28 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %31 = load i8* %30, !dbg !583
LOAD [p=*q]:   %37 = load i32* @inptr, align 4, !dbg !583
STORE [*p=q]:   store i32 %38, i32* @inptr, align 4, !dbg !583
LOAD [p=*q]:   %39 = load i32* @inptr, align 4, !dbg !584
LOAD [p=*q]:   %40 = load i32* @insize, align 4, !dbg !584
LOAD [p=*q]:   %43 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %45 = load i8* %44, !dbg !584
LOAD [p=*q]:   %48 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %50 = load i8* %49, !dbg !584
LOAD [p=*q]:   %56 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %59 = load i8* %58, !dbg !584
LOAD [p=*q]:   %62 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %65 = load i8* %64, !dbg !584
LOAD [p=*q]:   %75 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
LOAD [p=*q]:   %76 = load i8** @program_name, align 8, !dbg !585
CALL [call func]:   %77 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([31 x i8]* @.str167, i32 0, i32 0), i8* %76, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !585
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !587
STORE [*p=q]:   store i32 1, i32* %1, !dbg !588
LOAD [p=*q]:   %79 = load i8** %h, align 8, !dbg !589
LOAD [p=*q]:   %81 = load i8* %80, !dbg !589
STORE [*p=q]:   store i32 %82, i32* @method, align 4, !dbg !589
LOAD [p=*q]:   %83 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %86 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %89 = load %struct._IO_FILE** @stderr, align 8, !dbg !591
LOAD [p=*q]:   %90 = load i8** @program_name, align 8, !dbg !591
CALL [call func]:   %91 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([58 x i8]* @.str1168, i32 0, i32 0), i8* %90, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !593
STORE [*p=q]:   store i32 1, i32* %1, !dbg !594
LOAD [p=*q]:   %93 = load i8** %h, align 8, !dbg !595
LOAD [p=*q]:   %95 = load i8* %94, !dbg !595
STORE [*p=q]:   store i32 %97, i32* @decrypt, align 4, !dbg !595
LOAD [p=*q]:   %100 = load %struct._IO_FILE** @stderr, align 8, !dbg !596
LOAD [p=*q]:   %101 = load i8** @program_name, align 8, !dbg !596
CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([38 x i8]* @.str2169, i32 0, i32 0), i8* %101, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !596
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !598
STORE [*p=q]:   store i32 1, i32* %1, !dbg !599
LOAD [p=*q]:   %104 = load i8** %h, align 8, !dbg !600
LOAD [p=*q]:   %106 = load i8* %105, !dbg !600
STORE [*p=q]:   store i32 %110, i32* @ext_header, align 4, !dbg !600
STORE [*p=q]:   store i32 1, i32* @pkzip, align 4, !dbg !601
STORE [*p=q]:   store i32 0, i32* %1, !dbg !602
LOAD [p=*q]:   %112 = load i32* %1, !dbg !603
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !759
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !760
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
CONTEXT CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unpack, i32 (i32, i32)** @work, align 8, !dbg !763
STORE [*p=q]:   store i32 2, i32* @method, align 4, !dbg !765
CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
CONTEXT CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzw, i32 (i32, i32)** @work, align 8, !dbg !768
STORE [*p=q]:   store i32 1, i32* @method, align 4, !dbg !770
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !771
CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
CONTEXT CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzh, i32 (i32, i32)** @work, align 8, !dbg !774
STORE [*p=q]:   store i32 3, i32* @method, align 4, !dbg !776
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !777
LOAD [p=*q]:   %557 = load i32* @force, align 4, !dbg !779
LOAD [p=*q]:   %560 = load i32* @to_stdout, align 4, !dbg !779
LOAD [p=*q]:   %563 = load i32* @list, align 4, !dbg !779
STORE [*p=q]:   store i32 0, i32* @method, align 4, !dbg !780
STORE [*p=q]:   store i32 (i32, i32)* @copy, i32 (i32, i32)** @work, align 8, !dbg !782
LOAD [p=*q]:   %566 = load i32* %imagic1, align 4, !dbg !783
LOAD [p=*q]:   %569 = load i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 %570, i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !785
LOAD [p=*q]:   %572 = load i32* %imagic0, align 4, !dbg !786
LOAD [p=*q]:   %575 = load %struct._IO_FILE** @stdout, align 8, !dbg !787
CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
CONTEXT CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
	We do not analyze function 'fileno'
CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
CONTEXT CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
STORE [*p=q]:   store i32 %fd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i8* %buf, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !576), !dbg !579
STORE [*p=q]:   store i32 %cnt, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !580), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !582), !dbg !584
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !586
LOAD [p=*q]:   %6 = load i8** %2, align 8, !dbg !586
LOAD [p=*q]:   %7 = load i32* %3, align 4, !dbg !586
CALL [call func]:   %8 = call i32 (...)* bitcast (i32 (i32, i8*, i32)* @write_buffer to i32 (...)*)(i32 %5, i8* %6, i32 %7), !dbg !586
STORE [*p=q]:   store i32 %8, i32* %n, align 4, !dbg !586
LOAD [p=*q]:   %9 = load i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %12 = load i32* %n, align 4, !dbg !587
CALL [call func]:   call void @write_error() #7, !dbg !589
LOAD [p=*q]:   %16 = load i32* %n, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %3, align 4, !dbg !591
STORE [*p=q]:   store i32 %18, i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %20 = load i32* %n, align 4, !dbg !592
STORE [*p=q]:   store i8* %22, i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %578 = load i64* @bytes_out, align 8, !dbg !789
STORE [*p=q]:   store i64 %579, i64* @bytes_out, align 8, !dbg !789
LOAD [p=*q]:   %587 = load i32* @method, align 4, !dbg !792
LOAD [p=*q]:   %590 = load i32* @method, align 4, !dbg !793
STORE [*p=q]:   store i32 %590, i32* %1, !dbg !793
LOAD [p=*q]:   %592 = load i32* @part_nb, align 4, !dbg !794
LOAD [p=*q]:   %595 = load %struct._IO_FILE** @stderr, align 8, !dbg !795
LOAD [p=*q]:   %596 = load i8** @program_name, align 8, !dbg !795
CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
CONTEXT CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !797
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !798
LOAD [p=*q]:   %600 = load i8* %599, align 1, !dbg !799
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %inbyte}, metadata !801), !dbg !803
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %604 = load i32* %imagic1, align 4, !dbg !804
STORE [*p=q]:   store i32 %604, i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %606 = load i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %610 = load i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %611 = load i32* @insize, align 4, !dbg !807
LOAD [p=*q]:   %614 = load i32* @inptr, align 4, !dbg !807
STORE [*p=q]:   store i32 %615, i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %618 = load i8* %617, align 1, !dbg !807
CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
CONTEXT CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %623, i32* %inbyte, align 4, !dbg !808
LOAD [p=*q]:   %625 = load i32* %inbyte, align 4, !dbg !809
LOAD [p=*q]:   %628 = load i32* @verbose, align 4, !dbg !810
LOAD [p=*q]:   %631 = load i32* @quiet, align 4, !dbg !812
LOAD [p=*q]:   %634 = load %struct._IO_FILE** @stderr, align 8, !dbg !812
LOAD [p=*q]:   %635 = load i8** @program_name, align 8, !dbg !812
CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
CONTEXT CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %638 = load i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 -3, i32* %1, !dbg !814
LOAD [p=*q]:   %645 = load i32* @quiet, align 4, !dbg !816
LOAD [p=*q]:   %648 = load %struct._IO_FILE** @stderr, align 8, !dbg !816
LOAD [p=*q]:   %649 = load i8** @program_name, align 8, !dbg !816
CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
CONTEXT CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %652 = load i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 -2, i32* %1, !dbg !818
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
STORE [*p=q]:   store i32 %128, i32* @method, align 4, !dbg !625
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !626
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !628
LOAD [p=*q]:   %134 = load i32* @verbose, align 4, !dbg !630
LOAD [p=*q]:   %137 = load i32* @test, align 4, !dbg !631
LOAD [p=*q]:   %140 = load %struct._IO_FILE** @stderr, align 8, !dbg !633
CALL [call func]:   %141 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %140, i8* getelementptr inbounds ([5 x i8]* @.str84, i32 0, i32 0)), !dbg !633
CONTEXT CALL [call func]:   %141 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %140, i8* getelementptr inbounds ([5 x i8]* @.str84, i32 0, i32 0)), !dbg !633
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %143 = load i32* @decompress, align 4, !dbg !636
LOAD [p=*q]:   %146 = load i64* @bytes_in, align 8, !dbg !637
LOAD [p=*q]:   %147 = load i64* @bytes_out, align 8, !dbg !637
LOAD [p=*q]:   %148 = load i64* @header_bytes, align 8, !dbg !637
LOAD [p=*q]:   %151 = load i64* @bytes_in, align 8, !dbg !637
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !637
CALL [call func]:   call void @display_ratio(i64 %150, i64 %151, %struct._IO_FILE* %152), !dbg !637
CONTEXT CALL [call func]:   call void @display_ratio(i64 %150, i64 %151, %struct._IO_FILE* %152), !dbg !637
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
## display_ratio does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CONTEXT CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %153 = load %struct._IO_FILE** @stderr, align 8, !dbg !639
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !639
CONTEXT CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !639
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %150 = load i32* @to_stdout, align 4, !dbg !676
LOAD [p=*q]:   %153 = load i32* @test, align 4, !dbg !676
LOAD [p=*q]:   %153 = load i32* @test, align 4, !dbg !676
LOAD [p=*q]:   %156 = load i32* @list, align 4, !dbg !676
LOAD [p=*q]:   %156 = load i32* @list, align 4, !dbg !676
LOAD [p=*q]:   %159 = load i32* @decompress, align 4, !dbg !676
LOAD [p=*q]:   %159 = load i32* @decompress, align 4, !dbg !676
LOAD [p=*q]:   %162 = load i32* @ascii, align 4, !dbg !676
LOAD [p=*q]:   %162 = load i32* @ascii, align 4, !dbg !676
LOAD [p=*q]:   %167 = load i32* @rpl_optind, align 4, !dbg !680
LOAD [p=*q]:   %168 = load i32* %2, align 4, !dbg !680
LOAD [p=*q]:   %167 = load i32* @rpl_optind, align 4, !dbg !680
LOAD [p=*q]:   %168 = load i32* %2, align 4, !dbg !680
LOAD [p=*q]:   %171 = load i32* @rpl_optind, align 4, !dbg !681
STORE [*p=q]:   store i32 %172, i32* @rpl_optind, align 4, !dbg !681
LOAD [p=*q]:   %174 = load i8*** %3, align 8, !dbg !681
LOAD [p=*q]:   %176 = load i8** %175, !dbg !681
CALL [call func]:   call void @treat_file(i8* %176), !dbg !681
CONTEXT CALL [call func]:   call void @treat_file(i8* %176), !dbg !681
STORE [*p=q]:   store i8* %iname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
## treat_file does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %4 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([2 x i8]* @.str26, i32 0, i32 0)) #4, !dbg !576
CONTEXT CALL [call func]:   %4 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([2 x i8]* @.str26, i32 0, i32 0)) #4, !dbg !576
	We do not analyze function 'strcmp'
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %cflag}, metadata !578), !dbg !580
## treat_file does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %7 = load i32* @to_stdout, align 4, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %cflag, align 4, !dbg !581
CALL [call func]:   call void @treat_stdin(), !dbg !582
CONTEXT CALL [call func]:   call void @treat_stdin(), !dbg !582
LOAD [p=*q]:   %2 = load i32* @force, align 4, !dbg !574
LOAD [p=*q]:   %5 = load i32* @list, align 4, !dbg !574
LOAD [p=*q]:   %8 = load i8* @presume_input_tty, align 1, !dbg !574
LOAD [p=*q]:   %11 = load i32* @decompress, align 4, !dbg !576
LOAD [p=*q]:   %14 = load %struct._IO_FILE** @stdin, align 8, !dbg !576
LOAD [p=*q]:   %16 = load %struct._IO_FILE** @stdout, align 8, !dbg !576
CALL [call func]:   %19 = call i32 @fileno(%struct._IO_FILE* %18) #3, !dbg !576
CONTEXT CALL [call func]:   %19 = call i32 @fileno(%struct._IO_FILE* %18) #3, !dbg !576
	We do not analyze function 'fileno'
CALL [call func]:   %20 = call i32 @isatty(i32 %19) #3, !dbg !576
CONTEXT CALL [call func]:   %20 = call i32 @isatty(i32 %19) #3, !dbg !576
	We do not analyze function 'isatty'
LOAD [p=*q]:   %23 = load i32* @quiet, align 4, !dbg !577
LOAD [p=*q]:   %26 = load %struct._IO_FILE** @stderr, align 8, !dbg !579
LOAD [p=*q]:   %27 = load i8** @program_name, align 8, !dbg !579
LOAD [p=*q]:   %28 = load i32* @decompress, align 4, !dbg !579
LOAD [p=*q]:   %31 = load i32* @decompress, align 4, !dbg !579
LOAD [p=*q]:   %34 = load i8** @program_name, align 8, !dbg !579
CALL [call func]:   %35 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([93 x i8]* @.str78, i32 0, i32 0), i8* %27, i8* %30, i8* %33, i8* %34), !dbg !579
CONTEXT CALL [call func]:   %35 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([93 x i8]* @.str78, i32 0, i32 0), i8* %27, i8* %30, i8* %33, i8* %34), !dbg !579
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !580
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !580
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
LOAD [p=*q]:   %38 = load i32* @decompress, align 4, !dbg !581
LOAD [p=*q]:   %41 = load i32* @ascii, align 4, !dbg !581
LOAD [p=*q]:   %45 = load i32* @test, align 4, !dbg !584
LOAD [p=*q]:   %48 = load i32* @list, align 4, !dbg !584
LOAD [p=*q]:   %51 = load i32* @decompress, align 4, !dbg !584
LOAD [p=*q]:   %54 = load i32* @ascii, align 4, !dbg !584
CALL [call func]:   %58 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str82, i32 0, i32 0)) #3, !dbg !587
CONTEXT CALL [call func]:   %58 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str82, i32 0, i32 0)) #3, !dbg !587
	We do not analyze function 'strcpy'
CALL [call func]:   %59 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !588
CONTEXT CALL [call func]:   %59 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !588
	We do not analyze function 'strcpy'
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stdin, align 8, !dbg !589
CALL [call func]:   %61 = call i32 @fileno(%struct._IO_FILE* %60) #3, !dbg !589
CONTEXT CALL [call func]:   %61 = call i32 @fileno(%struct._IO_FILE* %60) #3, !dbg !589
	We do not analyze function 'fileno'
CALL [call func]:   %62 = call i32 @fstat(i32 %61, %struct.stat* @istat) #3, !dbg !589
CONTEXT CALL [call func]:   %62 = call i32 @fstat(i32 %61, %struct.stat* @istat) #3, !dbg !589
	We do not analyze function 'fstat'
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([15 x i8]* @.str83, i32 0, i32 0)), !dbg !590
CONTEXT CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([15 x i8]* @.str83, i32 0, i32 0)), !dbg !590
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !592
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !592
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
LOAD [p=*q]:   %66 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !593
LOAD [p=*q]:   %70 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 8), align 8, !dbg !593
STORE [*p=q]:   store i64 %73, i64* @ifile_size, align 8, !dbg !593
STORE [*p=q]:   store i64 -1, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !594
LOAD [p=*q]:   %74 = load i32* @no_time, align 4, !dbg !595
LOAD [p=*q]:   %77 = load i32* @list, align 4, !dbg !595
LOAD [p=*q]:   %80 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !596
CALL [call func]:   %84 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !598
CONTEXT CALL [call func]:   %84 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !598
	We do not analyze function 'get_stat_mtime'
STORE [*p=q]:   store i64 %87, i64* %86, align 1, !dbg !598
STORE [*p=q]:   store i64 %89, i64* %88, align 1, !dbg !598
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.timespec* @time_stamp to i8*), i8* %90, i64 16, i32 8, i1 false), !dbg !598
## treat_stdin does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
CALL [call func]:   call void @gettime(%struct.timespec* @time_stamp), !dbg !599
CONTEXT CALL [call func]:   call void @gettime(%struct.timespec* @time_stamp), !dbg !599
	We do not analyze function 'gettime'
CALL [call func]:   call void @clear_bufs(), !dbg !601
CONTEXT CALL [call func]:   call void @clear_bufs(), !dbg !601
STORE [*p=q]:   store i32 0, i32* @outcnt, align 4, !dbg !574
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !576
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !576
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !577
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !577
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !602
STORE [*p=q]:   store i32 0, i32* @part_nb, align 4, !dbg !603
LOAD [p=*q]:   %94 = load %struct._IO_FILE** @stdin, align 8, !dbg !604
CALL [call func]:   %95 = call i32 @fileno(%struct._IO_FILE* %94) #3, !dbg !604
CONTEXT CALL [call func]:   %95 = call i32 @fileno(%struct._IO_FILE* %94) #3, !dbg !604
	We do not analyze function 'fileno'
STORE [*p=q]:   store i32 %95, i32* @ifd, align 4, !dbg !604
LOAD [p=*q]:   %96 = load i32* @decompress, align 4, !dbg !605
LOAD [p=*q]:   %99 = load i32* @ifd, align 4, !dbg !606
CALL [call func]:   %100 = call i32 @get_method(i32 %99), !dbg !606
CONTEXT CALL [call func]:   %100 = call i32 @get_method(i32 %99), !dbg !606
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %flags}, metadata !576), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[10 x i8]* %magic}, metadata !579), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic0}, metadata !582), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic1}, metadata !584), !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %stamp}, metadata !586), !dbg !588
LOAD [p=*q]:   %3 = load i32* @force, align 4, !dbg !589
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !589
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !590
CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
STORE [*p=q]:   store i32 %22, i32* %imagic0, align 4, !dbg !592
LOAD [p=*q]:   %23 = load i32* %imagic0, align 4, !dbg !593
STORE [*p=q]:   store i8 %24, i8* %25, align 1, !dbg !593
LOAD [p=*q]:   %26 = load i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* @insize, align 4, !dbg !594
LOAD [p=*q]:   %30 = load i32* @inptr, align 4, !dbg !594
STORE [*p=q]:   store i32 %31, i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %34 = load i8* %33, align 1, !dbg !594
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
STORE [*p=q]:   store i32 %39, i32* %imagic1, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* %imagic1, align 4, !dbg !596
STORE [*p=q]:   store i8 %41, i8* %42, align 1, !dbg !596
LOAD [p=*q]:   %44 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %45 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %48 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %49, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !598
CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
STORE [*p=q]:   store i8 %58, i8* %59, align 1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %imagic0, align 4, !dbg !601
LOAD [p=*q]:   %61 = load i8* %60, align 1, !dbg !602
LOAD [p=*q]:   %64 = load i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %65 = load i32* @insize, align 4, !dbg !603
LOAD [p=*q]:   %68 = load i32* @inptr, align 4, !dbg !603
STORE [*p=q]:   store i32 %69, i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %72 = load i8* %71, align 1, !dbg !603
CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
STORE [*p=q]:   store i8 %78, i8* %79, align 1, !dbg !605
STORE [*p=q]:   store i32 0, i32* %imagic1, align 4, !dbg !606
LOAD [p=*q]:   %81 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %82 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %85 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %86, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %89 = load i8* %88, align 1, !dbg !608
CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
STORE [*p=q]:   store i32 %94, i32* %imagic1, align 4, !dbg !610
LOAD [p=*q]:   %95 = load i32* %imagic1, align 4, !dbg !611
STORE [*p=q]:   store i8 %96, i8* %97, align 1, !dbg !611
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !612
LOAD [p=*q]:   %100 = load i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i32 %101, i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !614
STORE [*p=q]:   store i32 0, i32* @last_member, align 4, !dbg !615
CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
LOAD [p=*q]:   %110 = load i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %111 = load i32* @insize, align 4, !dbg !618
LOAD [p=*q]:   %114 = load i32* @inptr, align 4, !dbg !618
STORE [*p=q]:   store i32 %115, i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %118 = load i8* %117, align 1, !dbg !618
CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
STORE [*p=q]:   store i32 %123, i32* @method, align 4, !dbg !620
LOAD [p=*q]:   %124 = load i32* @method, align 4, !dbg !621
LOAD [p=*q]:   %127 = load %struct._IO_FILE** @stderr, align 8, !dbg !622
LOAD [p=*q]:   %128 = load i8** @program_name, align 8, !dbg !622
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !622
CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !624
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !625
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !626
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !627
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !627
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !627
CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
STORE [*p=q]:   store i8 %146, i8* %flags, align 1, !dbg !628
LOAD [p=*q]:   %147 = load i8* %flags, align 1, !dbg !629
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !630
LOAD [p=*q]:   %153 = load i8** @program_name, align 8, !dbg !630
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !632
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !633
LOAD [p=*q]:   %156 = load i8* %flags, align 1, !dbg !634
LOAD [p=*q]:   %161 = load %struct._IO_FILE** @stderr, align 8, !dbg !635
LOAD [p=*q]:   %162 = load i8** @program_name, align 8, !dbg !635
LOAD [p=*q]:   %163 = load i8* %flags, align 1, !dbg !635
CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !637
LOAD [p=*q]:   %166 = load i32* @force, align 4, !dbg !638
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !639
LOAD [p=*q]:   %171 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %172 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %175 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %176, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %179 = load i8* %178, align 1, !dbg !641
CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
STORE [*p=q]:   store i64 %185, i64* %stamp, align 8, !dbg !642
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !643
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !643
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !643
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
LOAD [p=*q]:   %202 = load i64* %stamp, align 8, !dbg !644
STORE [*p=q]:   store i64 %203, i64* %stamp, align 8, !dbg !644
LOAD [p=*q]:   %204 = load i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* @insize, align 4, !dbg !645
LOAD [p=*q]:   %208 = load i32* @inptr, align 4, !dbg !645
STORE [*p=q]:   store i32 %209, i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %212 = load i8* %211, align 1, !dbg !645
CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
LOAD [p=*q]:   %220 = load i64* %stamp, align 8, !dbg !646
STORE [*p=q]:   store i64 %221, i64* %stamp, align 8, !dbg !646
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !647
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !647
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !647
CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
LOAD [p=*q]:   %238 = load i64* %stamp, align 8, !dbg !648
STORE [*p=q]:   store i64 %239, i64* %stamp, align 8, !dbg !648
LOAD [p=*q]:   %240 = load i64* %stamp, align 8, !dbg !649
LOAD [p=*q]:   %243 = load i32* @no_time, align 4, !dbg !649
LOAD [p=*q]:   %246 = load i64* %stamp, align 8, !dbg !650
STORE [*p=q]:   store i64 %246, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !650
STORE [*p=q]:   store i64 0, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !652
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %252 = load i32* @inptr, align 4, !dbg !654
STORE [*p=q]:   store i32 %253, i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %256 = load i8* %255, align 1, !dbg !654
CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
STORE [*p=q]:   store i8 %262, i8* %263, align 1, !dbg !655
LOAD [p=*q]:   %264 = load i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %265 = load i32* @insize, align 4, !dbg !656
LOAD [p=*q]:   %268 = load i32* @inptr, align 4, !dbg !656
STORE [*p=q]:   store i32 %269, i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %272 = load i8* %271, align 1, !dbg !656
CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
STORE [*p=q]:   store i8 %278, i8* %279, align 1, !dbg !657
LOAD [p=*q]:   %280 = load i8* %flags, align 1, !dbg !658
STORE [*p=q]:   store i8 8, i8* %285, align 1, !dbg !659
LOAD [p=*q]:   %286 = load i8* %flags, align 1, !dbg !661
STORE [*p=q]:   store i8 %286, i8* %287, align 1, !dbg !661
LOAD [p=*q]:   %288 = load i64* %stamp, align 8, !dbg !662
STORE [*p=q]:   store i8 %290, i8* %291, align 1, !dbg !662
LOAD [p=*q]:   %292 = load i64* %stamp, align 8, !dbg !663
STORE [*p=q]:   store i8 %295, i8* %296, align 1, !dbg !663
LOAD [p=*q]:   %297 = load i64* %stamp, align 8, !dbg !664
STORE [*p=q]:   store i8 %300, i8* %301, align 1, !dbg !664
LOAD [p=*q]:   %302 = load i64* %stamp, align 8, !dbg !665
STORE [*p=q]:   store i8 %304, i8* %305, align 1, !dbg !665
CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
LOAD [p=*q]:   %310 = load i8* %flags, align 1, !dbg !669
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x i8]* %lenbuf}, metadata !670), !dbg !675
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !676), !dbg !677
LOAD [p=*q]:   %315 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %316 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %319 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %320, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %323 = load i8* %322, align 1, !dbg !678
CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
STORE [*p=q]:   store i8 %329, i8* %330, align 1, !dbg !679
STORE [*p=q]:   store i32 %331, i32* %len, align 4, !dbg !679
LOAD [p=*q]:   %332 = load i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %333 = load i32* @insize, align 4, !dbg !680
LOAD [p=*q]:   %336 = load i32* @inptr, align 4, !dbg !680
STORE [*p=q]:   store i32 %337, i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %340 = load i8* %339, align 1, !dbg !680
CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
STORE [*p=q]:   store i8 %346, i8* %347, align 1, !dbg !681
LOAD [p=*q]:   %350 = load i32* %len, align 4, !dbg !681
STORE [*p=q]:   store i32 %351, i32* %len, align 4, !dbg !681
LOAD [p=*q]:   %352 = load i32* @verbose, align 4, !dbg !682
LOAD [p=*q]:   %355 = load %struct._IO_FILE** @stderr, align 8, !dbg !683
LOAD [p=*q]:   %356 = load i8** @program_name, align 8, !dbg !683
LOAD [p=*q]:   %357 = load i32* %len, align 4, !dbg !683
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
LOAD [p=*q]:   %360 = load i8* %flags, align 1, !dbg !686
CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
LOAD [p=*q]:   %368 = load i32* %len, align 4, !dbg !688
LOAD [p=*q]:   %370 = load i8* %flags, align 1, !dbg !688
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 %369, i32 %371), !dbg !688
LOAD [p=*q]:   %373 = load i8* %flags, align 1, !dbg !690
LOAD [p=*q]:   %378 = load i32* @no_name, align 4, !dbg !691
LOAD [p=*q]:   %381 = load i32* @to_stdout, align 4, !dbg !691
LOAD [p=*q]:   %384 = load i32* @list, align 4, !dbg !691
LOAD [p=*q]:   %387 = load i32* @part_nb, align 4, !dbg !691
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !696), !dbg !698
CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
STORE [*p=q]:   store i8* %393, i8** %p, align 8, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %base}, metadata !700), !dbg !701
LOAD [p=*q]:   %394 = load i8** %p, align 8, !dbg !702
STORE [*p=q]:   store i8* %394, i8** %base, align 8, !dbg !702
LOAD [p=*q]:   %396 = load i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %397 = load i32* @insize, align 4, !dbg !705
LOAD [p=*q]:   %400 = load i32* @inptr, align 4, !dbg !705
STORE [*p=q]:   store i32 %401, i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %404 = load i8* %403, align 1, !dbg !705
CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
LOAD [p=*q]:   %411 = load i8** %p, align 8, !dbg !707
STORE [*p=q]:   store i8 %410, i8* %411, !dbg !707
LOAD [p=*q]:   %412 = load i8** %p, align 8, !dbg !708
STORE [*p=q]:   store i8* %413, i8** %p, align 8, !dbg !708
LOAD [p=*q]:   %414 = load i8* %412, !dbg !708
LOAD [p=*q]:   %419 = load i8** %p, align 8, !dbg !710
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
LOAD [p=*q]:   %424 = load i8* %flags, align 1, !dbg !714
LOAD [p=*q]:   %429 = load i8** %base, align 8, !dbg !715
LOAD [p=*q]:   %430 = load i8** %p, align 8, !dbg !715
LOAD [p=*q]:   %431 = load i8** %base, align 8, !dbg !715
CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
LOAD [p=*q]:   %438 = load i8** %base, align 8, !dbg !716
CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
STORE [*p=q]:   store i8* %439, i8** %p, align 8, !dbg !716
LOAD [p=*q]:   %440 = load i8** %base, align 8, !dbg !717
LOAD [p=*q]:   %441 = load i8** %p, align 8, !dbg !717
LOAD [p=*q]:   %442 = load i8** %p, align 8, !dbg !718
CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
CALL [call func]:   call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %441, i64 %444, i32 1, i1 false), !dbg !718
LOAD [p=*q]:   %445 = load i32* @list, align 4, !dbg !719
LOAD [p=*q]:   %448 = load i8** %base, align 8, !dbg !720
STORE [*p=q]:   store i32 0, i32* @list, align 4, !dbg !722
LOAD [p=*q]:   %455 = load i8* %flags, align 1, !dbg !725
LOAD [p=*q]:   %460 = load i8* %flags, align 1, !dbg !726
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %461), !dbg !726
LOAD [p=*q]:   %463 = load i8* %flags, align 1, !dbg !729
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %crc16}, metadata !730), !dbg !732
CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
STORE [*p=q]:   store i32 %471, i32* %crc16, align 4, !dbg !733
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %header16}, metadata !734), !dbg !735
LOAD [p=*q]:   %472 = load i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %473 = load i32* @insize, align 4, !dbg !736
LOAD [p=*q]:   %476 = load i32* @inptr, align 4, !dbg !736
STORE [*p=q]:   store i32 %477, i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %480 = load i8* %479, align 1, !dbg !736
CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
STORE [*p=q]:   store i32 %485, i32* %header16, align 4, !dbg !737
LOAD [p=*q]:   %486 = load i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %487 = load i32* @insize, align 4, !dbg !738
LOAD [p=*q]:   %490 = load i32* @inptr, align 4, !dbg !738
STORE [*p=q]:   store i32 %491, i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %494 = load i8* %493, align 1, !dbg !738
CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
LOAD [p=*q]:   %501 = load i32* %header16, align 4, !dbg !739
STORE [*p=q]:   store i32 %502, i32* %header16, align 4, !dbg !739
LOAD [p=*q]:   %503 = load i32* %header16, align 4, !dbg !740
LOAD [p=*q]:   %504 = load i32* %crc16, align 4, !dbg !740
LOAD [p=*q]:   %507 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
LOAD [p=*q]:   %508 = load i8** @program_name, align 8, !dbg !741
LOAD [p=*q]:   %509 = load i32* %header16, align 4, !dbg !741
LOAD [p=*q]:   %510 = load i32* %crc16, align 4, !dbg !741
CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !743
LOAD [p=*q]:   %512 = load i32* @force, align 4, !dbg !744
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !745
LOAD [p=*q]:   %518 = load i32* @part_nb, align 4, !dbg !748
LOAD [p=*q]:   %521 = load i32* @inptr, align 4, !dbg !749
STORE [*p=q]:   store i64 %523, i64* @header_bytes, align 8, !dbg !749
CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
LOAD [p=*q]:   %530 = load i32* @inptr, align 4, !dbg !753
CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !755
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !757
LOAD [p=*q]:   %536 = load i32* %2, align 4, !dbg !758
CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !759
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !760
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
STORE [*p=q]:   store i32 (i32, i32)* @unpack, i32 (i32, i32)** @work, align 8, !dbg !763
STORE [*p=q]:   store i32 2, i32* @method, align 4, !dbg !765
CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
STORE [*p=q]:   store i32 (i32, i32)* @unlzw, i32 (i32, i32)** @work, align 8, !dbg !768
STORE [*p=q]:   store i32 1, i32* @method, align 4, !dbg !770
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !771
CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
STORE [*p=q]:   store i32 (i32, i32)* @unlzh, i32 (i32, i32)** @work, align 8, !dbg !774
STORE [*p=q]:   store i32 3, i32* @method, align 4, !dbg !776
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !777
LOAD [p=*q]:   %557 = load i32* @force, align 4, !dbg !779
LOAD [p=*q]:   %560 = load i32* @to_stdout, align 4, !dbg !779
LOAD [p=*q]:   %563 = load i32* @list, align 4, !dbg !779
STORE [*p=q]:   store i32 0, i32* @method, align 4, !dbg !780
STORE [*p=q]:   store i32 (i32, i32)* @copy, i32 (i32, i32)** @work, align 8, !dbg !782
LOAD [p=*q]:   %566 = load i32* %imagic1, align 4, !dbg !783
LOAD [p=*q]:   %569 = load i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 %570, i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !785
LOAD [p=*q]:   %572 = load i32* %imagic0, align 4, !dbg !786
LOAD [p=*q]:   %575 = load %struct._IO_FILE** @stdout, align 8, !dbg !787
CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
LOAD [p=*q]:   %578 = load i64* @bytes_out, align 8, !dbg !789
STORE [*p=q]:   store i64 %579, i64* @bytes_out, align 8, !dbg !789
LOAD [p=*q]:   %587 = load i32* @method, align 4, !dbg !792
LOAD [p=*q]:   %590 = load i32* @method, align 4, !dbg !793
STORE [*p=q]:   store i32 %590, i32* %1, !dbg !793
LOAD [p=*q]:   %592 = load i32* @part_nb, align 4, !dbg !794
LOAD [p=*q]:   %595 = load %struct._IO_FILE** @stderr, align 8, !dbg !795
LOAD [p=*q]:   %596 = load i8** @program_name, align 8, !dbg !795
CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !797
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !798
LOAD [p=*q]:   %600 = load i8* %599, align 1, !dbg !799
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %inbyte}, metadata !801), !dbg !803
LOAD [p=*q]:   %604 = load i32* %imagic1, align 4, !dbg !804
STORE [*p=q]:   store i32 %604, i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %606 = load i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %610 = load i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %611 = load i32* @insize, align 4, !dbg !807
LOAD [p=*q]:   %614 = load i32* @inptr, align 4, !dbg !807
STORE [*p=q]:   store i32 %615, i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %618 = load i8* %617, align 1, !dbg !807
CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
STORE [*p=q]:   store i32 %623, i32* %inbyte, align 4, !dbg !808
LOAD [p=*q]:   %625 = load i32* %inbyte, align 4, !dbg !809
LOAD [p=*q]:   %628 = load i32* @verbose, align 4, !dbg !810
LOAD [p=*q]:   %631 = load i32* @quiet, align 4, !dbg !812
LOAD [p=*q]:   %634 = load %struct._IO_FILE** @stderr, align 8, !dbg !812
LOAD [p=*q]:   %635 = load i8** @program_name, align 8, !dbg !812
CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
LOAD [p=*q]:   %638 = load i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 -3, i32* %1, !dbg !814
LOAD [p=*q]:   %645 = load i32* @quiet, align 4, !dbg !816
LOAD [p=*q]:   %648 = load %struct._IO_FILE** @stderr, align 8, !dbg !816
LOAD [p=*q]:   %649 = load i8** @program_name, align 8, !dbg !816
CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
LOAD [p=*q]:   %652 = load i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 -2, i32* %1, !dbg !818
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
STORE [*p=q]:   store i32 %100, i32* @method, align 4, !dbg !606
LOAD [p=*q]:   %101 = load i32* @method, align 4, !dbg !608
LOAD [p=*q]:   %104 = load i32* @exit_code, align 4, !dbg !609
CALL [call func]:   call void @do_exit(i32 %104) #7, !dbg !609
CONTEXT CALL [call func]:   call void @do_exit(i32 %104) #7, !dbg !609
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
LOAD [p=*q]:   %107 = load i32* @list, align 4, !dbg !612
LOAD [p=*q]:   %110 = load i32* @ifd, align 4, !dbg !613
LOAD [p=*q]:   %111 = load i32* @method, align 4, !dbg !613
CALL [call func]:   call void @do_list(i32 %110, i32 %111), !dbg !613
CONTEXT CALL [call func]:   call void @do_list(i32 %110, i32 %111), !dbg !613
STORE [*p=q]:   store i32 %ifd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %method, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %crc}, metadata !578), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %positive_off_t_width}, metadata !582), !dbg !583
STORE [*p=q]:   store i32 1, i32* %positive_off_t_width, align 4, !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %o}, metadata !585), !dbg !586
STORE [*p=q]:   store i64 9223372036854775807, i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %4 = load i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %7 = load i32* %positive_off_t_width, align 4, !dbg !589
STORE [*p=q]:   store i32 %8, i32* %positive_off_t_width, align 4, !dbg !589
LOAD [p=*q]:   %10 = load i64* %o, align 8, !dbg !592
STORE [*p=q]:   store i64 %11, i64* %o, align 8, !dbg !592
LOAD [p=*q]:   %13 = load i32* @do_list.first_time, align 4, !dbg !593
LOAD [p=*q]:   %16 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 0, i32* @do_list.first_time, align 4, !dbg !594
LOAD [p=*q]:   %19 = load i32* @verbose, align 4, !dbg !596
CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
LOAD [p=*q]:   %24 = load i32* @quiet, align 4, !dbg !600
LOAD [p=*q]:   %27 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %28 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %29 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %30 = load i32* %positive_off_t_width, align 4, !dbg !601
CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
LOAD [p=*q]:   %34 = load i32* %2, align 4, !dbg !605
LOAD [p=*q]:   %37 = load i64* @total_in, align 8, !dbg !606
LOAD [p=*q]:   %40 = load i64* @total_out, align 8, !dbg !606
LOAD [p=*q]:   %44 = load i32* @verbose, align 4, !dbg !609
CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
LOAD [p=*q]:   %49 = load i32* @verbose, align 4, !dbg !613
LOAD [p=*q]:   %52 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %55 = load %struct._IO_FILE** @stdout, align 8, !dbg !614
LOAD [p=*q]:   %56 = load i64* @total_in, align 8, !dbg !614
LOAD [p=*q]:   %57 = load i32* %positive_off_t_width, align 4, !dbg !614
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
LOAD [p=*q]:   %59 = load %struct._IO_FILE** @stdout, align 8, !dbg !617
LOAD [p=*q]:   %60 = load i64* @total_out, align 8, !dbg !617
LOAD [p=*q]:   %61 = load i32* %positive_off_t_width, align 4, !dbg !617
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
LOAD [p=*q]:   %64 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %65 = load i64* @total_in, align 8, !dbg !620
LOAD [p=*q]:   %66 = load i64* @header_bytes, align 8, !dbg !620
LOAD [p=*q]:   %69 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %70 = load %struct._IO_FILE** @stdout, align 8, !dbg !620
CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
STORE [*p=q]:   store i64 -1, i64* %crc, align 8, !dbg !623
STORE [*p=q]:   store i64 -1, i64* @bytes_out, align 8, !dbg !624
LOAD [p=*q]:   %74 = load i64* @ifile_size, align 8, !dbg !625
STORE [*p=q]:   store i64 %74, i64* @bytes_in, align 8, !dbg !625
LOAD [p=*q]:   %75 = load i32* %2, align 4, !dbg !626
LOAD [p=*q]:   %78 = load i32* @last_member, align 4, !dbg !626
LOAD [p=*q]:   %81 = load i32* %1, align 4, !dbg !627
CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
STORE [*p=q]:   store i64 %82, i64* @bytes_in, align 8, !dbg !627
LOAD [p=*q]:   %83 = load i64* @bytes_in, align 8, !dbg !629
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[8 x i8]* %buf}, metadata !630), !dbg !635
LOAD [p=*q]:   %86 = load i64* @bytes_in, align 8, !dbg !636
STORE [*p=q]:   store i64 %87, i64* @bytes_in, align 8, !dbg !636
LOAD [p=*q]:   %88 = load i32* %1, align 4, !dbg !637
CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
CALL [call func]:   call void @read_error() #7, !dbg !638
LOAD [p=*q]:   %95 = load i8* %94, align 1, !dbg !640
LOAD [p=*q]:   %99 = load i8* %98, align 1, !dbg !640
LOAD [p=*q]:   %108 = load i8* %107, !dbg !640
LOAD [p=*q]:   %114 = load i8* %113, !dbg !640
STORE [*p=q]:   store i64 %121, i64* %crc, align 8, !dbg !640
LOAD [p=*q]:   %125 = load i8* %124, !dbg !641
LOAD [p=*q]:   %131 = load i8* %130, !dbg !641
LOAD [p=*q]:   %141 = load i8* %140, !dbg !641
LOAD [p=*q]:   %148 = load i8* %147, !dbg !641
STORE [*p=q]:   store i64 %155, i64* @bytes_out, align 8, !dbg !641
LOAD [p=*q]:   %158 = load i32* @verbose, align 4, !dbg !644
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.tm** %tm}, metadata !645), !dbg !661
CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
STORE [*p=q]:   store %struct.tm* %161, %struct.tm** %tm, align 8, !dbg !662
LOAD [p=*q]:   %162 = load i32* %2, align 4, !dbg !663
LOAD [p=*q]:   %165 = load i8** %164, align 8, !dbg !663
LOAD [p=*q]:   %166 = load i64* %crc, align 8, !dbg !663
CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
LOAD [p=*q]:   %168 = load %struct.tm** %tm, align 8, !dbg !664
LOAD [p=*q]:   %171 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %173 = load i32* %172, align 4, !dbg !665
LOAD [p=*q]:   %177 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %179 = load i32* %178, align 4, !dbg !665
LOAD [p=*q]:   %180 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %182 = load i32* %181, align 4, !dbg !665
LOAD [p=*q]:   %183 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %185 = load i32* %184, align 4, !dbg !665
CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
LOAD [p=*q]:   %191 = load %struct._IO_FILE** @stdout, align 8, !dbg !668
LOAD [p=*q]:   %192 = load i64* @bytes_in, align 8, !dbg !668
LOAD [p=*q]:   %193 = load i32* %positive_off_t_width, align 4, !dbg !668
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
LOAD [p=*q]:   %195 = load %struct._IO_FILE** @stdout, align 8, !dbg !670
LOAD [p=*q]:   %196 = load i64* @bytes_out, align 8, !dbg !670
LOAD [p=*q]:   %197 = load i32* %positive_off_t_width, align 4, !dbg !670
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
LOAD [p=*q]:   %199 = load i64* @bytes_in, align 8, !dbg !672
STORE [*p=q]:   store i64 -1, i64* @total_in, align 8, !dbg !673
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !675
LOAD [p=*q]:   %203 = load i64* @total_in, align 8, !dbg !677
LOAD [p=*q]:   %206 = load i64* @bytes_in, align 8, !dbg !678
LOAD [p=*q]:   %207 = load i64* @total_in, align 8, !dbg !678
STORE [*p=q]:   store i64 %208, i64* @total_in, align 8, !dbg !678
LOAD [p=*q]:   %211 = load i64* @bytes_out, align 8, !dbg !681
STORE [*p=q]:   store i64 -1, i64* @total_out, align 8, !dbg !682
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !684
LOAD [p=*q]:   %215 = load i64* @total_out, align 8, !dbg !686
LOAD [p=*q]:   %218 = load i64* @bytes_out, align 8, !dbg !687
LOAD [p=*q]:   %219 = load i64* @total_out, align 8, !dbg !687
STORE [*p=q]:   store i64 %220, i64* @total_out, align 8, !dbg !687
LOAD [p=*q]:   %223 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %224 = load i64* @bytes_in, align 8, !dbg !690
LOAD [p=*q]:   %225 = load i64* @header_bytes, align 8, !dbg !690
LOAD [p=*q]:   %228 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %229 = load %struct._IO_FILE** @stdout, align 8, !dbg !690
CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
LOAD [p=*q]:   %114 = load i32 (i32, i32)** @work, align 8, !dbg !618
LOAD [p=*q]:   %115 = load %struct._IO_FILE** @stdin, align 8, !dbg !620
CALL [call func]:   %116 = call i32 @fileno(%struct._IO_FILE* %115) #3, !dbg !620
CONTEXT CALL [call func]:   %116 = call i32 @fileno(%struct._IO_FILE* %115) #3, !dbg !620
	We do not analyze function 'fileno'
LOAD [p=*q]:   %117 = load %struct._IO_FILE** @stdout, align 8, !dbg !621
CALL [call func]:   %118 = call i32 @fileno(%struct._IO_FILE* %117) #3, !dbg !621
CONTEXT CALL [call func]:   %118 = call i32 @fileno(%struct._IO_FILE* %117) #3, !dbg !621
	We do not analyze function 'fileno'
CALL [call func]:   %119 = call i32 %114(i32 %116, i32 %118), !dbg !621
CALL [call func]:   %123 = call i32 @input_eof(), !dbg !623
CONTEXT CALL [call func]:   %123 = call i32 @input_eof(), !dbg !623
LOAD [p=*q]:   %2 = load i32* @decompress, align 4, !dbg !574
LOAD [p=*q]:   %5 = load i32* @last_member, align 4, !dbg !574
STORE [*p=q]:   store i32 1, i32* %1, !dbg !576
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !577
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !577
LOAD [p=*q]:   %13 = load i32* @insize, align 4, !dbg !578
CALL [call func]:   %16 = call i32 @fill_inbuf(i32 1), !dbg !580
STORE [*p=q]:   store i32 1, i32* %1, !dbg !581
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !582
STORE [*p=q]:   store i32 0, i32* %1, !dbg !584
LOAD [p=*q]:   %22 = load i32* %1, !dbg !585
LOAD [p=*q]:   %127 = load i32* @ifd, align 4, !dbg !625
CALL [call func]:   %128 = call i32 @get_method(i32 %127), !dbg !625
CONTEXT CALL [call func]:   %128 = call i32 @get_method(i32 %127), !dbg !625
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %flags}, metadata !576), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[10 x i8]* %magic}, metadata !579), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic0}, metadata !582), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic1}, metadata !584), !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %stamp}, metadata !586), !dbg !588
LOAD [p=*q]:   %3 = load i32* @force, align 4, !dbg !589
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !589
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !590
CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
STORE [*p=q]:   store i32 %22, i32* %imagic0, align 4, !dbg !592
LOAD [p=*q]:   %23 = load i32* %imagic0, align 4, !dbg !593
STORE [*p=q]:   store i8 %24, i8* %25, align 1, !dbg !593
LOAD [p=*q]:   %26 = load i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* @insize, align 4, !dbg !594
LOAD [p=*q]:   %30 = load i32* @inptr, align 4, !dbg !594
STORE [*p=q]:   store i32 %31, i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %34 = load i8* %33, align 1, !dbg !594
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
STORE [*p=q]:   store i32 %39, i32* %imagic1, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* %imagic1, align 4, !dbg !596
STORE [*p=q]:   store i8 %41, i8* %42, align 1, !dbg !596
LOAD [p=*q]:   %44 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %45 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %48 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %49, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !598
CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
STORE [*p=q]:   store i8 %58, i8* %59, align 1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %imagic0, align 4, !dbg !601
LOAD [p=*q]:   %61 = load i8* %60, align 1, !dbg !602
LOAD [p=*q]:   %64 = load i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %65 = load i32* @insize, align 4, !dbg !603
LOAD [p=*q]:   %68 = load i32* @inptr, align 4, !dbg !603
STORE [*p=q]:   store i32 %69, i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %72 = load i8* %71, align 1, !dbg !603
CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
STORE [*p=q]:   store i8 %78, i8* %79, align 1, !dbg !605
STORE [*p=q]:   store i32 0, i32* %imagic1, align 4, !dbg !606
LOAD [p=*q]:   %81 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %82 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %85 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %86, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %89 = load i8* %88, align 1, !dbg !608
CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
STORE [*p=q]:   store i32 %94, i32* %imagic1, align 4, !dbg !610
LOAD [p=*q]:   %95 = load i32* %imagic1, align 4, !dbg !611
STORE [*p=q]:   store i8 %96, i8* %97, align 1, !dbg !611
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !612
LOAD [p=*q]:   %100 = load i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i32 %101, i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !614
STORE [*p=q]:   store i32 0, i32* @last_member, align 4, !dbg !615
CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
LOAD [p=*q]:   %110 = load i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %111 = load i32* @insize, align 4, !dbg !618
LOAD [p=*q]:   %114 = load i32* @inptr, align 4, !dbg !618
STORE [*p=q]:   store i32 %115, i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %118 = load i8* %117, align 1, !dbg !618
CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
STORE [*p=q]:   store i32 %123, i32* @method, align 4, !dbg !620
LOAD [p=*q]:   %124 = load i32* @method, align 4, !dbg !621
LOAD [p=*q]:   %127 = load %struct._IO_FILE** @stderr, align 8, !dbg !622
LOAD [p=*q]:   %128 = load i8** @program_name, align 8, !dbg !622
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !622
CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !624
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !625
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !626
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !627
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !627
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !627
CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
STORE [*p=q]:   store i8 %146, i8* %flags, align 1, !dbg !628
LOAD [p=*q]:   %147 = load i8* %flags, align 1, !dbg !629
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !630
LOAD [p=*q]:   %153 = load i8** @program_name, align 8, !dbg !630
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !632
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !633
LOAD [p=*q]:   %156 = load i8* %flags, align 1, !dbg !634
LOAD [p=*q]:   %161 = load %struct._IO_FILE** @stderr, align 8, !dbg !635
LOAD [p=*q]:   %162 = load i8** @program_name, align 8, !dbg !635
LOAD [p=*q]:   %163 = load i8* %flags, align 1, !dbg !635
CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !637
LOAD [p=*q]:   %166 = load i32* @force, align 4, !dbg !638
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !639
LOAD [p=*q]:   %171 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %172 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %175 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %176, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %179 = load i8* %178, align 1, !dbg !641
CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
STORE [*p=q]:   store i64 %185, i64* %stamp, align 8, !dbg !642
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !643
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !643
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !643
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
LOAD [p=*q]:   %202 = load i64* %stamp, align 8, !dbg !644
STORE [*p=q]:   store i64 %203, i64* %stamp, align 8, !dbg !644
LOAD [p=*q]:   %204 = load i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* @insize, align 4, !dbg !645
LOAD [p=*q]:   %208 = load i32* @inptr, align 4, !dbg !645
STORE [*p=q]:   store i32 %209, i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %212 = load i8* %211, align 1, !dbg !645
CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
LOAD [p=*q]:   %220 = load i64* %stamp, align 8, !dbg !646
STORE [*p=q]:   store i64 %221, i64* %stamp, align 8, !dbg !646
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !647
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !647
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !647
CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
LOAD [p=*q]:   %238 = load i64* %stamp, align 8, !dbg !648
STORE [*p=q]:   store i64 %239, i64* %stamp, align 8, !dbg !648
LOAD [p=*q]:   %240 = load i64* %stamp, align 8, !dbg !649
LOAD [p=*q]:   %243 = load i32* @no_time, align 4, !dbg !649
LOAD [p=*q]:   %246 = load i64* %stamp, align 8, !dbg !650
STORE [*p=q]:   store i64 %246, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !650
STORE [*p=q]:   store i64 0, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !652
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %252 = load i32* @inptr, align 4, !dbg !654
STORE [*p=q]:   store i32 %253, i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %256 = load i8* %255, align 1, !dbg !654
CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
STORE [*p=q]:   store i8 %262, i8* %263, align 1, !dbg !655
LOAD [p=*q]:   %264 = load i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %265 = load i32* @insize, align 4, !dbg !656
LOAD [p=*q]:   %268 = load i32* @inptr, align 4, !dbg !656
STORE [*p=q]:   store i32 %269, i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %272 = load i8* %271, align 1, !dbg !656
CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
STORE [*p=q]:   store i8 %278, i8* %279, align 1, !dbg !657
LOAD [p=*q]:   %280 = load i8* %flags, align 1, !dbg !658
STORE [*p=q]:   store i8 8, i8* %285, align 1, !dbg !659
LOAD [p=*q]:   %286 = load i8* %flags, align 1, !dbg !661
STORE [*p=q]:   store i8 %286, i8* %287, align 1, !dbg !661
LOAD [p=*q]:   %288 = load i64* %stamp, align 8, !dbg !662
STORE [*p=q]:   store i8 %290, i8* %291, align 1, !dbg !662
LOAD [p=*q]:   %292 = load i64* %stamp, align 8, !dbg !663
STORE [*p=q]:   store i8 %295, i8* %296, align 1, !dbg !663
LOAD [p=*q]:   %297 = load i64* %stamp, align 8, !dbg !664
STORE [*p=q]:   store i8 %300, i8* %301, align 1, !dbg !664
LOAD [p=*q]:   %302 = load i64* %stamp, align 8, !dbg !665
STORE [*p=q]:   store i8 %304, i8* %305, align 1, !dbg !665
CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
LOAD [p=*q]:   %310 = load i8* %flags, align 1, !dbg !669
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x i8]* %lenbuf}, metadata !670), !dbg !675
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !676), !dbg !677
LOAD [p=*q]:   %315 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %316 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %319 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %320, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %323 = load i8* %322, align 1, !dbg !678
CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
STORE [*p=q]:   store i8 %329, i8* %330, align 1, !dbg !679
STORE [*p=q]:   store i32 %331, i32* %len, align 4, !dbg !679
LOAD [p=*q]:   %332 = load i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %333 = load i32* @insize, align 4, !dbg !680
LOAD [p=*q]:   %336 = load i32* @inptr, align 4, !dbg !680
STORE [*p=q]:   store i32 %337, i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %340 = load i8* %339, align 1, !dbg !680
CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
STORE [*p=q]:   store i8 %346, i8* %347, align 1, !dbg !681
LOAD [p=*q]:   %350 = load i32* %len, align 4, !dbg !681
STORE [*p=q]:   store i32 %351, i32* %len, align 4, !dbg !681
LOAD [p=*q]:   %352 = load i32* @verbose, align 4, !dbg !682
LOAD [p=*q]:   %355 = load %struct._IO_FILE** @stderr, align 8, !dbg !683
LOAD [p=*q]:   %356 = load i8** @program_name, align 8, !dbg !683
LOAD [p=*q]:   %357 = load i32* %len, align 4, !dbg !683
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
LOAD [p=*q]:   %360 = load i8* %flags, align 1, !dbg !686
CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
LOAD [p=*q]:   %368 = load i32* %len, align 4, !dbg !688
LOAD [p=*q]:   %370 = load i8* %flags, align 1, !dbg !688
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 %369, i32 %371), !dbg !688
LOAD [p=*q]:   %373 = load i8* %flags, align 1, !dbg !690
LOAD [p=*q]:   %378 = load i32* @no_name, align 4, !dbg !691
LOAD [p=*q]:   %381 = load i32* @to_stdout, align 4, !dbg !691
LOAD [p=*q]:   %384 = load i32* @list, align 4, !dbg !691
LOAD [p=*q]:   %387 = load i32* @part_nb, align 4, !dbg !691
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !696), !dbg !698
CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
STORE [*p=q]:   store i8* %393, i8** %p, align 8, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %base}, metadata !700), !dbg !701
LOAD [p=*q]:   %394 = load i8** %p, align 8, !dbg !702
STORE [*p=q]:   store i8* %394, i8** %base, align 8, !dbg !702
LOAD [p=*q]:   %396 = load i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %397 = load i32* @insize, align 4, !dbg !705
LOAD [p=*q]:   %400 = load i32* @inptr, align 4, !dbg !705
STORE [*p=q]:   store i32 %401, i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %404 = load i8* %403, align 1, !dbg !705
CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
LOAD [p=*q]:   %411 = load i8** %p, align 8, !dbg !707
STORE [*p=q]:   store i8 %410, i8* %411, !dbg !707
LOAD [p=*q]:   %412 = load i8** %p, align 8, !dbg !708
STORE [*p=q]:   store i8* %413, i8** %p, align 8, !dbg !708
LOAD [p=*q]:   %414 = load i8* %412, !dbg !708
LOAD [p=*q]:   %419 = load i8** %p, align 8, !dbg !710
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
LOAD [p=*q]:   %424 = load i8* %flags, align 1, !dbg !714
LOAD [p=*q]:   %429 = load i8** %base, align 8, !dbg !715
LOAD [p=*q]:   %430 = load i8** %p, align 8, !dbg !715
LOAD [p=*q]:   %431 = load i8** %base, align 8, !dbg !715
CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
LOAD [p=*q]:   %438 = load i8** %base, align 8, !dbg !716
CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
STORE [*p=q]:   store i8* %439, i8** %p, align 8, !dbg !716
LOAD [p=*q]:   %440 = load i8** %base, align 8, !dbg !717
LOAD [p=*q]:   %441 = load i8** %p, align 8, !dbg !717
LOAD [p=*q]:   %442 = load i8** %p, align 8, !dbg !718
CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
CALL [call func]:   call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %441, i64 %444, i32 1, i1 false), !dbg !718
LOAD [p=*q]:   %445 = load i32* @list, align 4, !dbg !719
LOAD [p=*q]:   %448 = load i8** %base, align 8, !dbg !720
STORE [*p=q]:   store i32 0, i32* @list, align 4, !dbg !722
LOAD [p=*q]:   %455 = load i8* %flags, align 1, !dbg !725
LOAD [p=*q]:   %460 = load i8* %flags, align 1, !dbg !726
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %461), !dbg !726
LOAD [p=*q]:   %463 = load i8* %flags, align 1, !dbg !729
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %crc16}, metadata !730), !dbg !732
CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
STORE [*p=q]:   store i32 %471, i32* %crc16, align 4, !dbg !733
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %header16}, metadata !734), !dbg !735
LOAD [p=*q]:   %472 = load i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %473 = load i32* @insize, align 4, !dbg !736
LOAD [p=*q]:   %476 = load i32* @inptr, align 4, !dbg !736
STORE [*p=q]:   store i32 %477, i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %480 = load i8* %479, align 1, !dbg !736
CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
STORE [*p=q]:   store i32 %485, i32* %header16, align 4, !dbg !737
LOAD [p=*q]:   %486 = load i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %487 = load i32* @insize, align 4, !dbg !738
LOAD [p=*q]:   %490 = load i32* @inptr, align 4, !dbg !738
STORE [*p=q]:   store i32 %491, i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %494 = load i8* %493, align 1, !dbg !738
CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
LOAD [p=*q]:   %501 = load i32* %header16, align 4, !dbg !739
STORE [*p=q]:   store i32 %502, i32* %header16, align 4, !dbg !739
LOAD [p=*q]:   %503 = load i32* %header16, align 4, !dbg !740
LOAD [p=*q]:   %504 = load i32* %crc16, align 4, !dbg !740
LOAD [p=*q]:   %507 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
LOAD [p=*q]:   %508 = load i8** @program_name, align 8, !dbg !741
LOAD [p=*q]:   %509 = load i32* %header16, align 4, !dbg !741
LOAD [p=*q]:   %510 = load i32* %crc16, align 4, !dbg !741
CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !743
LOAD [p=*q]:   %512 = load i32* @force, align 4, !dbg !744
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !745
LOAD [p=*q]:   %518 = load i32* @part_nb, align 4, !dbg !748
LOAD [p=*q]:   %521 = load i32* @inptr, align 4, !dbg !749
STORE [*p=q]:   store i64 %523, i64* @header_bytes, align 8, !dbg !749
CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
LOAD [p=*q]:   %530 = load i32* @inptr, align 4, !dbg !753
CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !755
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !757
LOAD [p=*q]:   %536 = load i32* %2, align 4, !dbg !758
CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !759
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !760
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
STORE [*p=q]:   store i32 (i32, i32)* @unpack, i32 (i32, i32)** @work, align 8, !dbg !763
STORE [*p=q]:   store i32 2, i32* @method, align 4, !dbg !765
CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
STORE [*p=q]:   store i32 (i32, i32)* @unlzw, i32 (i32, i32)** @work, align 8, !dbg !768
STORE [*p=q]:   store i32 1, i32* @method, align 4, !dbg !770
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !771
CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
STORE [*p=q]:   store i32 (i32, i32)* @unlzh, i32 (i32, i32)** @work, align 8, !dbg !774
STORE [*p=q]:   store i32 3, i32* @method, align 4, !dbg !776
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !777
LOAD [p=*q]:   %557 = load i32* @force, align 4, !dbg !779
LOAD [p=*q]:   %560 = load i32* @to_stdout, align 4, !dbg !779
LOAD [p=*q]:   %563 = load i32* @list, align 4, !dbg !779
STORE [*p=q]:   store i32 0, i32* @method, align 4, !dbg !780
STORE [*p=q]:   store i32 (i32, i32)* @copy, i32 (i32, i32)** @work, align 8, !dbg !782
LOAD [p=*q]:   %566 = load i32* %imagic1, align 4, !dbg !783
LOAD [p=*q]:   %569 = load i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 %570, i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !785
LOAD [p=*q]:   %572 = load i32* %imagic0, align 4, !dbg !786
LOAD [p=*q]:   %575 = load %struct._IO_FILE** @stdout, align 8, !dbg !787
CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
LOAD [p=*q]:   %578 = load i64* @bytes_out, align 8, !dbg !789
STORE [*p=q]:   store i64 %579, i64* @bytes_out, align 8, !dbg !789
LOAD [p=*q]:   %587 = load i32* @method, align 4, !dbg !792
LOAD [p=*q]:   %590 = load i32* @method, align 4, !dbg !793
STORE [*p=q]:   store i32 %590, i32* %1, !dbg !793
LOAD [p=*q]:   %592 = load i32* @part_nb, align 4, !dbg !794
LOAD [p=*q]:   %595 = load %struct._IO_FILE** @stderr, align 8, !dbg !795
LOAD [p=*q]:   %596 = load i8** @program_name, align 8, !dbg !795
CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !797
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !798
LOAD [p=*q]:   %600 = load i8* %599, align 1, !dbg !799
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %inbyte}, metadata !801), !dbg !803
LOAD [p=*q]:   %604 = load i32* %imagic1, align 4, !dbg !804
STORE [*p=q]:   store i32 %604, i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %606 = load i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %610 = load i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %611 = load i32* @insize, align 4, !dbg !807
LOAD [p=*q]:   %614 = load i32* @inptr, align 4, !dbg !807
STORE [*p=q]:   store i32 %615, i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %618 = load i8* %617, align 1, !dbg !807
CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
STORE [*p=q]:   store i32 %623, i32* %inbyte, align 4, !dbg !808
LOAD [p=*q]:   %625 = load i32* %inbyte, align 4, !dbg !809
LOAD [p=*q]:   %628 = load i32* @verbose, align 4, !dbg !810
LOAD [p=*q]:   %631 = load i32* @quiet, align 4, !dbg !812
LOAD [p=*q]:   %634 = load %struct._IO_FILE** @stderr, align 8, !dbg !812
LOAD [p=*q]:   %635 = load i8** @program_name, align 8, !dbg !812
CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
LOAD [p=*q]:   %638 = load i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 -3, i32* %1, !dbg !814
LOAD [p=*q]:   %645 = load i32* @quiet, align 4, !dbg !816
LOAD [p=*q]:   %648 = load %struct._IO_FILE** @stderr, align 8, !dbg !816
LOAD [p=*q]:   %649 = load i8** @program_name, align 8, !dbg !816
CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
LOAD [p=*q]:   %652 = load i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 -2, i32* %1, !dbg !818
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
STORE [*p=q]:   store i32 %128, i32* @method, align 4, !dbg !625
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !626
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !628
LOAD [p=*q]:   %134 = load i32* @verbose, align 4, !dbg !630
LOAD [p=*q]:   %137 = load i32* @test, align 4, !dbg !631
LOAD [p=*q]:   %140 = load %struct._IO_FILE** @stderr, align 8, !dbg !633
CALL [call func]:   %141 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %140, i8* getelementptr inbounds ([5 x i8]* @.str84, i32 0, i32 0)), !dbg !633
CONTEXT CALL [call func]:   %141 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %140, i8* getelementptr inbounds ([5 x i8]* @.str84, i32 0, i32 0)), !dbg !633
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %143 = load i32* @decompress, align 4, !dbg !636
LOAD [p=*q]:   %146 = load i64* @bytes_in, align 8, !dbg !637
LOAD [p=*q]:   %147 = load i64* @bytes_out, align 8, !dbg !637
LOAD [p=*q]:   %148 = load i64* @header_bytes, align 8, !dbg !637
LOAD [p=*q]:   %151 = load i64* @bytes_in, align 8, !dbg !637
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !637
CALL [call func]:   call void @display_ratio(i64 %150, i64 %151, %struct._IO_FILE* %152), !dbg !637
CONTEXT CALL [call func]:   call void @display_ratio(i64 %150, i64 %151, %struct._IO_FILE* %152), !dbg !637
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
LOAD [p=*q]:   %153 = load %struct._IO_FILE** @stderr, align 8, !dbg !639
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !639
CONTEXT CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !639
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %8 = load i32* %cflag, align 4, !dbg !583
STORE [*p=q]:   store i32 %8, i32* @to_stdout, align 4, !dbg !583
LOAD [p=*q]:   %10 = load i8** %1, align 8, !dbg !585
CALL [call func]:   %11 = call i32 @open_input_file(i8* %10, %struct.stat* @istat), !dbg !585
CONTEXT CALL [call func]:   %11 = call i32 @open_input_file(i8* %10, %struct.stat* @istat), !dbg !585
STORE [*p=q]:   store i8* %iname, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !574), !dbg !575
## open_input_file does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store %struct.stat* %sbuf, %struct.stat** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.stat** %3}, metadata !576), !dbg !578
## open_input_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %ilen}, metadata !579), !dbg !581
## open_input_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %z_suffix_errno}, metadata !582), !dbg !583
## open_input_file does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 0, i32* %z_suffix_errno, align 4, !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %suf}, metadata !585), !dbg !587
## open_input_file does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8** getelementptr inbounds ([6 x i8*]* @open_input_file.suffixes, i32 0, i32 0), i8*** %suf, align 8, !dbg !588
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %s}, metadata !589), !dbg !590
## open_input_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %fd}, metadata !591), !dbg !592
## open_input_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %open_flags}, metadata !593), !dbg !594
## open_input_file does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %4 = load i32* @ascii, align 4, !dbg !595
LOAD [p=*q]:   %7 = load i32* @decompress, align 4, !dbg !595
STORE [*p=q]:   store i32 %13, i32* %open_flags, align 4
LOAD [p=*q]:   %14 = load i8** @z_suffix, align 8, !dbg !596
LOAD [p=*q]:   %15 = load i8*** %suf, align 8, !dbg !596
STORE [*p=q]:   store i8* %14, i8** %15, !dbg !596
LOAD [p=*q]:   %16 = load i8** %2, align 8, !dbg !597
CALL [call func]:   %17 = call i64 @strlen(i8* %16) #4, !dbg !597
CONTEXT CALL [call func]:   %17 = call i64 @strlen(i8* %16) #4, !dbg !597
	We do not analyze function 'strlen'
LOAD [p=*q]:   %21 = load i8** %2, align 8, !dbg !599
CALL [call func]:   %22 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %21) #3, !dbg !599
CONTEXT CALL [call func]:   %22 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %21) #3, !dbg !599
	We do not analyze function 'strcpy'
LOAD [p=*q]:   %23 = load i32* %open_flags, align 4, !dbg !600
LOAD [p=*q]:   %24 = load %struct.stat** %3, align 8, !dbg !600
CALL [call func]:   %25 = call i32 @open_and_stat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %23, i32 384, %struct.stat* %24), !dbg !600
CONTEXT CALL [call func]:   %25 = call i32 @open_and_stat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %23, i32 384, %struct.stat* %24), !dbg !600
STORE [*p=q]:   store i8* %name, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %flags, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !576), !dbg !577
STORE [*p=q]:   store i32 %mode, i32* %4, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %4}, metadata !578), !dbg !580
STORE [*p=q]:   store %struct.stat* %st, %struct.stat** %5, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.stat** %5}, metadata !581), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %fd}, metadata !584), !dbg !586
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !587
LOAD [p=*q]:   %9 = load i32* @force, align 4, !dbg !587
LOAD [p=*q]:   %12 = load i32* %3, align 4, !dbg !588
STORE [*p=q]:   store i32 %13, i32* %3, align 4, !dbg !588
LOAD [p=*q]:   %15 = load i8** %2, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %4, align 4, !dbg !591
CALL [call func]:   %18 = call i32 (i8*, i32, ...)* @open_safer(i8* %15, i32 %16, i32 %17), !dbg !591
STORE [*p=q]:   store i32 %18, i32* %fd, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i32* %fd, align 4, !dbg !592
LOAD [p=*q]:   %22 = load i32* %fd, align 4, !dbg !593
LOAD [p=*q]:   %23 = load %struct.stat** %5, align 8, !dbg !593
CALL [call func]:   %24 = call i32 @fstat(i32 %22, %struct.stat* %23) #3, !dbg !593
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !594), !dbg !596
CALL [call func]:   %27 = call i32* @__errno_location() #1, !dbg !597
LOAD [p=*q]:   %28 = load i32* %27, !dbg !597
STORE [*p=q]:   store i32 %28, i32* %e, align 4, !dbg !597
LOAD [p=*q]:   %29 = load i32* %fd, align 4, !dbg !598
CALL [call func]:   %30 = call i32 @close(i32 %29), !dbg !598
LOAD [p=*q]:   %31 = load i32* %e, align 4, !dbg !599
CALL [call func]:   %32 = call i32* @__errno_location() #1, !dbg !599
STORE [*p=q]:   store i32 %31, i32* %32, !dbg !599
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !600
LOAD [p=*q]:   %34 = load i32* %fd, align 4, !dbg !601
STORE [*p=q]:   store i32 %34, i32* %1, !dbg !601
LOAD [p=*q]:   %36 = load i32* %1, !dbg !602
STORE [*p=q]:   store i32 %25, i32* %fd, align 4, !dbg !600
LOAD [p=*q]:   %26 = load i32* %fd, align 4, !dbg !601
LOAD [p=*q]:   %29 = load i32* %fd, align 4, !dbg !602
STORE [*p=q]:   store i32 %29, i32* %1, !dbg !602
LOAD [p=*q]:   %31 = load i32* @decompress, align 4, !dbg !603
CALL [call func]:   %34 = call i32* @__errno_location() #1, !dbg !604
CONTEXT CALL [call func]:   %34 = call i32* @__errno_location() #1, !dbg !604
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %35 = load i32* %34, !dbg !604
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !605
CONTEXT CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !605
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !607
CALL [call func]:   %39 = call i8* (...)* bitcast (i8* (i8*)* @get_suffix to i8* (...)*)(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !608
STORE [*p=q]:   store i8* %39, i8** %s, align 8, !dbg !608
LOAD [p=*q]:   %40 = load i8** %s, align 8, !dbg !609
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !610
CONTEXT CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !610
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !612
CALL [call func]:   %44 = call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)) #4, !dbg !613
CONTEXT CALL [call func]:   %44 = call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)) #4, !dbg !613
	We do not analyze function 'strlen'
STORE [*p=q]:   store i32 %45, i32* %ilen, align 4, !dbg !613
LOAD [p=*q]:   %46 = load i8** @z_suffix, align 8, !dbg !614
CALL [call func]:   %47 = call i32 @strcmp(i8* %46, i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0)) #4, !dbg !614
CONTEXT CALL [call func]:   %47 = call i32 @strcmp(i8* %46, i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0)) #4, !dbg !614
	We do not analyze function 'strcmp'
LOAD [p=*q]:   %50 = load i8*** %suf, align 8, !dbg !615
STORE [*p=q]:   store i8** %51, i8*** %suf, align 8, !dbg !615
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %s0}, metadata !617), !dbg !619
## open_input_file does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %54 = load i8*** %suf, align 8, !dbg !620
LOAD [p=*q]:   %55 = load i8** %54, !dbg !620
STORE [*p=q]:   store i8* %55, i8** %s, align 8, !dbg !620
STORE [*p=q]:   store i8* %55, i8** %s0, align 8, !dbg !620
LOAD [p=*q]:   %56 = load i8** %2, align 8, !dbg !621
CALL [call func]:   %57 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %56) #3, !dbg !621
CONTEXT CALL [call func]:   %57 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %56) #3, !dbg !621
	We do not analyze function 'strcpy'
LOAD [p=*q]:   %58 = load i32* %ilen, align 4, !dbg !622
LOAD [p=*q]:   %60 = load i8** %s, align 8, !dbg !623
CALL [call func]:   %61 = call i64 @strlen(i8* %60) #4, !dbg !623
CONTEXT CALL [call func]:   %61 = call i64 @strlen(i8* %60) #4, !dbg !623
	We do not analyze function 'strlen'
LOAD [p=*q]:   %66 = load i8** %s, align 8, !dbg !625
CALL [call func]:   %67 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %66) #3, !dbg !625
CONTEXT CALL [call func]:   %67 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %66) #3, !dbg !625
	We do not analyze function 'strcat'
LOAD [p=*q]:   %68 = load i32* %open_flags, align 4, !dbg !626
LOAD [p=*q]:   %69 = load %struct.stat** %3, align 8, !dbg !626
CALL [call func]:   %70 = call i32 @open_and_stat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %68, i32 384, %struct.stat* %69), !dbg !626
CONTEXT CALL [call func]:   %70 = call i32 @open_and_stat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %68, i32 384, %struct.stat* %69), !dbg !626
STORE [*p=q]:   store i8* %name, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %flags, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !576), !dbg !577
STORE [*p=q]:   store i32 %mode, i32* %4, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %4}, metadata !578), !dbg !580
STORE [*p=q]:   store %struct.stat* %st, %struct.stat** %5, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.stat** %5}, metadata !581), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %fd}, metadata !584), !dbg !586
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !587
LOAD [p=*q]:   %9 = load i32* @force, align 4, !dbg !587
LOAD [p=*q]:   %12 = load i32* %3, align 4, !dbg !588
STORE [*p=q]:   store i32 %13, i32* %3, align 4, !dbg !588
LOAD [p=*q]:   %15 = load i8** %2, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %4, align 4, !dbg !591
CALL [call func]:   %18 = call i32 (i8*, i32, ...)* @open_safer(i8* %15, i32 %16, i32 %17), !dbg !591
STORE [*p=q]:   store i32 %18, i32* %fd, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i32* %fd, align 4, !dbg !592
LOAD [p=*q]:   %22 = load i32* %fd, align 4, !dbg !593
LOAD [p=*q]:   %23 = load %struct.stat** %5, align 8, !dbg !593
CALL [call func]:   %24 = call i32 @fstat(i32 %22, %struct.stat* %23) #3, !dbg !593
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !594), !dbg !596
CALL [call func]:   %27 = call i32* @__errno_location() #1, !dbg !597
LOAD [p=*q]:   %28 = load i32* %27, !dbg !597
STORE [*p=q]:   store i32 %28, i32* %e, align 4, !dbg !597
LOAD [p=*q]:   %29 = load i32* %fd, align 4, !dbg !598
CALL [call func]:   %30 = call i32 @close(i32 %29), !dbg !598
LOAD [p=*q]:   %31 = load i32* %e, align 4, !dbg !599
CALL [call func]:   %32 = call i32* @__errno_location() #1, !dbg !599
STORE [*p=q]:   store i32 %31, i32* %32, !dbg !599
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !600
LOAD [p=*q]:   %34 = load i32* %fd, align 4, !dbg !601
STORE [*p=q]:   store i32 %34, i32* %1, !dbg !601
LOAD [p=*q]:   %36 = load i32* %1, !dbg !602
STORE [*p=q]:   store i32 %70, i32* %fd, align 4, !dbg !626
LOAD [p=*q]:   %71 = load i32* %fd, align 4, !dbg !627
LOAD [p=*q]:   %74 = load i32* %fd, align 4, !dbg !628
STORE [*p=q]:   store i32 %74, i32* %1, !dbg !628
CALL [call func]:   %76 = call i32* @__errno_location() #1, !dbg !629
CONTEXT CALL [call func]:   %76 = call i32* @__errno_location() #1, !dbg !629
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %77 = load i32* %76, !dbg !629
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
CONTEXT CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !632
LOAD [p=*q]:   %81 = load i8** %s0, align 8, !dbg !633
LOAD [p=*q]:   %82 = load i8** @z_suffix, align 8, !dbg !633
CALL [call func]:   %83 = call i32 @strcmp(i8* %81, i8* %82) #4, !dbg !633
CONTEXT CALL [call func]:   %83 = call i32 @strcmp(i8* %81, i8* %82) #4, !dbg !633
	We do not analyze function 'strcmp'
CALL [call func]:   %86 = call i32* @__errno_location() #1, !dbg !634
CONTEXT CALL [call func]:   %86 = call i32* @__errno_location() #1, !dbg !634
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %87 = load i32* %86, !dbg !634
STORE [*p=q]:   store i32 %87, i32* %z_suffix_errno, align 4, !dbg !634
LOAD [p=*q]:   %90 = load i8*** %suf, align 8, !dbg !635
STORE [*p=q]:   store i8** %91, i8*** %suf, align 8, !dbg !635
LOAD [p=*q]:   %92 = load i8** %91, !dbg !635
LOAD [p=*q]:   %95 = load i8** %2, align 8, !dbg !636
CALL [call func]:   %96 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %95) #3, !dbg !636
CONTEXT CALL [call func]:   %96 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %95) #3, !dbg !636
	We do not analyze function 'strcpy'
LOAD [p=*q]:   %97 = load i8** @z_suffix, align 8, !dbg !637
CALL [call func]:   %98 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %97) #3, !dbg !637
CONTEXT CALL [call func]:   %98 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %97) #3, !dbg !637
	We do not analyze function 'strcat'
LOAD [p=*q]:   %99 = load i32* %z_suffix_errno, align 4, !dbg !638
CALL [call func]:   %100 = call i32* @__errno_location() #1, !dbg !638
CONTEXT CALL [call func]:   %100 = call i32* @__errno_location() #1, !dbg !638
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %99, i32* %100, !dbg !638
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !639
CONTEXT CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !639
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !640
LOAD [p=*q]:   %102 = load %struct._IO_FILE** @stderr, align 8, !dbg !641
LOAD [p=*q]:   %103 = load i8** @program_name, align 8, !dbg !641
LOAD [p=*q]:   %104 = load i8** %2, align 8, !dbg !641
CALL [call func]:   %105 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %102, i8* getelementptr inbounds ([28 x i8]* @.str74, i32 0, i32 0), i8* %103, i8* %104), !dbg !641
CONTEXT CALL [call func]:   %105 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %102, i8* getelementptr inbounds ([28 x i8]* @.str74, i32 0, i32 0), i8* %103, i8* %104), !dbg !641
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !642
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !643
LOAD [p=*q]:   %107 = load i32* %1, !dbg !644
STORE [*p=q]:   store i32 %11, i32* @ifd, align 4, !dbg !585
LOAD [p=*q]:   %12 = load i32* @ifd, align 4, !dbg !586
LOAD [p=*q]:   %16 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @recursive, align 4, !dbg !589
LOAD [p=*q]:   %23 = load i32* @ifd, align 4, !dbg !591
LOAD [p=*q]:   %24 = load i8** %1, align 8, !dbg !591
CALL [call func]:   call void @treat_dir(i32 %23, i8* %24), !dbg !591
CONTEXT CALL [call func]:   call void @treat_dir(i32 %23, i8* %24), !dbg !591
STORE [*p=q]:   store i32 %fd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## treat_dir does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8* %dir, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !576), !dbg !577
## treat_dir does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.__dirstream** %dirp}, metadata !578), !dbg !584
## treat_dir does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[1024 x i8]* %nbuf}, metadata !585), !dbg !586
## treat_dir does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %entries}, metadata !587), !dbg !588
## treat_dir does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %entry}, metadata !589), !dbg !590
## treat_dir does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %entrylen}, metadata !591), !dbg !592
## treat_dir does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %3 = load i32* %1, align 4, !dbg !593
CALL [call func]:   %4 = call %struct.__dirstream* @fdopendir(i32 %3), !dbg !593
CONTEXT CALL [call func]:   %4 = call %struct.__dirstream* @fdopendir(i32 %3), !dbg !593
	We do not analyze function 'fdopendir'
STORE [*p=q]:   store %struct.__dirstream* %4, %struct.__dirstream** %dirp, align 8, !dbg !593
LOAD [p=*q]:   %5 = load %struct.__dirstream** %dirp, align 8, !dbg !594
LOAD [p=*q]:   %8 = load i8** %2, align 8, !dbg !595
CALL [call func]:   call void @progerror(i8* %8), !dbg !595
CONTEXT CALL [call func]:   call void @progerror(i8* %8), !dbg !595
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
LOAD [p=*q]:   %9 = load i32* %1, align 4, !dbg !597
CALL [call func]:   %10 = call i32 @close(i32 %9), !dbg !597
CONTEXT CALL [call func]:   %10 = call i32 @close(i32 %9), !dbg !597
	We do not analyze function 'close'
LOAD [p=*q]:   %12 = load %struct.__dirstream** %dirp, align 8, !dbg !599
CALL [call func]:   %13 = call i8* @streamsavedir(%struct.__dirstream* %12), !dbg !599
CONTEXT CALL [call func]:   %13 = call i8* @streamsavedir(%struct.__dirstream* %12), !dbg !599
	We do not analyze function 'streamsavedir'
STORE [*p=q]:   store i8* %13, i8** %entries, align 8, !dbg !599
LOAD [p=*q]:   %14 = load i8** %entries, align 8, !dbg !600
LOAD [p=*q]:   %17 = load i8** %2, align 8, !dbg !601
CALL [call func]:   call void @progerror(i8* %17), !dbg !601
CONTEXT CALL [call func]:   call void @progerror(i8* %17), !dbg !601
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
LOAD [p=*q]:   %19 = load %struct.__dirstream** %dirp, align 8, !dbg !602
CALL [call func]:   %20 = call i32 @closedir(%struct.__dirstream* %19), !dbg !602
CONTEXT CALL [call func]:   %20 = call i32 @closedir(%struct.__dirstream* %19), !dbg !602
	We do not analyze function 'closedir'
LOAD [p=*q]:   %23 = load i8** %2, align 8, !dbg !603
CALL [call func]:   call void @progerror(i8* %23), !dbg !603
CONTEXT CALL [call func]:   call void @progerror(i8* %23), !dbg !603
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
LOAD [p=*q]:   %25 = load i8** %entries, align 8, !dbg !604
LOAD [p=*q]:   %29 = load i8** %entries, align 8, !dbg !606
STORE [*p=q]:   store i8* %29, i8** %entry, align 8, !dbg !606
LOAD [p=*q]:   %31 = load i8** %entry, align 8, !dbg !606
LOAD [p=*q]:   %32 = load i8* %31, !dbg !606
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %len}, metadata !608), !dbg !610
## treat_dir does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %35 = load i8** %2, align 8, !dbg !611
CALL [call func]:   %36 = call i64 @strlen(i8* %35) #4, !dbg !611
CONTEXT CALL [call func]:   %36 = call i64 @strlen(i8* %35) #4, !dbg !611
	We do not analyze function 'strlen'
STORE [*p=q]:   store i64 %36, i64* %len, align 8, !dbg !611
LOAD [p=*q]:   %37 = load i8** %entry, align 8, !dbg !612
CALL [call func]:   %38 = call i64 @strlen(i8* %37) #4, !dbg !612
CONTEXT CALL [call func]:   %38 = call i64 @strlen(i8* %37) #4, !dbg !612
	We do not analyze function 'strlen'
STORE [*p=q]:   store i64 %38, i64* %entrylen, align 8, !dbg !612
LOAD [p=*q]:   %39 = load i8** %entry, align 8, !dbg !613
CALL [call func]:   %40 = call i32 @strcmp(i8* %39, i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i32 0)) #4, !dbg !613
CONTEXT CALL [call func]:   %40 = call i32 @strcmp(i8* %39, i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i32 0)) #4, !dbg !613
	We do not analyze function 'strcmp'
LOAD [p=*q]:   %43 = load i8** %entry, align 8, !dbg !614
CALL [call func]:   %44 = call i32 @strcmp(i8* %43, i8* getelementptr inbounds ([3 x i8]* @.str75, i32 0, i32 0)) #4, !dbg !614
CONTEXT CALL [call func]:   %44 = call i32 @strcmp(i8* %43, i8* getelementptr inbounds ([3 x i8]* @.str75, i32 0, i32 0)) #4, !dbg !614
	We do not analyze function 'strcmp'
LOAD [p=*q]:   %48 = load i64* %len, align 8, !dbg !616
LOAD [p=*q]:   %49 = load i64* %entrylen, align 8, !dbg !616
LOAD [p=*q]:   %54 = load i8** %2, align 8, !dbg !617
CALL [call func]:   %55 = call i8* @strcpy(i8* %53, i8* %54) #3, !dbg !617
CONTEXT CALL [call func]:   %55 = call i8* @strcpy(i8* %53, i8* %54) #3, !dbg !617
	We do not analyze function 'strcpy'
LOAD [p=*q]:   %56 = load i64* %len, align 8, !dbg !619
LOAD [p=*q]:   %59 = load i64* %len, align 8, !dbg !620
STORE [*p=q]:   store i64 %60, i64* %len, align 8, !dbg !620
STORE [*p=q]:   store i8 47, i8* %61, align 1, !dbg !620
LOAD [p=*q]:   %64 = load i64* %len, align 8, !dbg !623
LOAD [p=*q]:   %66 = load i8** %entry, align 8, !dbg !623
CALL [call func]:   %67 = call i8* @strcpy(i8* %65, i8* %66) #3, !dbg !623
CONTEXT CALL [call func]:   %67 = call i8* @strcpy(i8* %65, i8* %66) #3, !dbg !623
	We do not analyze function 'strcpy'
CALL [call func]:   call void (...)* bitcast (void (i8*)* @treat_file to void (...)*)(i8* %68), !dbg !624
LOAD [p=*q]:   %70 = load %struct._IO_FILE** @stderr, align 8, !dbg !626
LOAD [p=*q]:   %71 = load i8** @program_name, align 8, !dbg !626
LOAD [p=*q]:   %72 = load i8** %2, align 8, !dbg !626
LOAD [p=*q]:   %73 = load i8** %entry, align 8, !dbg !626
CALL [call func]:   %74 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([30 x i8]* @.str76, i32 0, i32 0), i8* %71, i8* %72, i8* %73), !dbg !626
CONTEXT CALL [call func]:   %74 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([30 x i8]* @.str76, i32 0, i32 0), i8* %71, i8* %72, i8* %73), !dbg !626
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !628
LOAD [p=*q]:   %77 = load i64* %entrylen, align 8, !dbg !630
LOAD [p=*q]:   %79 = load i8** %entry, align 8, !dbg !630
STORE [*p=q]:   store i8* %80, i8** %entry, align 8, !dbg !630
LOAD [p=*q]:   %82 = load i8** %entries, align 8, !dbg !631
CALL [call func]:   call void @free(i8* %82) #3, !dbg !631
CONTEXT CALL [call func]:   call void @free(i8* %82) #3, !dbg !631
	We do not analyze function 'free'
LOAD [p=*q]:   %26 = load i32* @ifd, align 4, !dbg !594
CALL [call func]:   %27 = call i32 @close(i32 %26), !dbg !594
CONTEXT CALL [call func]:   %27 = call i32 @close(i32 %26), !dbg !594
	We do not analyze function 'close'
LOAD [p=*q]:   %28 = load i32* @quiet, align 4, !dbg !595
LOAD [p=*q]:   %31 = load %struct._IO_FILE** @stderr, align 8, !dbg !595
LOAD [p=*q]:   %32 = load i8** @program_name, align 8, !dbg !595
CALL [call func]:   %33 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([34 x i8]* @.str27, i32 0, i32 0), i8* %32, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !595
CONTEXT CALL [call func]:   %33 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([34 x i8]* @.str27, i32 0, i32 0), i8* %32, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !595
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %35 = load i32* @exit_code, align 4, !dbg !595
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* @to_stdout, align 4, !dbg !598
LOAD [p=*q]:   %43 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !599
LOAD [p=*q]:   %47 = load i32* @quiet, align 4, !dbg !601
LOAD [p=*q]:   %50 = load %struct._IO_FILE** @stderr, align 8, !dbg !601
LOAD [p=*q]:   %51 = load i8** @program_name, align 8, !dbg !601
CALL [call func]:   %52 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([55 x i8]* @.str28, i32 0, i32 0), i8* %51, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !601
CONTEXT CALL [call func]:   %52 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([55 x i8]* @.str28, i32 0, i32 0), i8* %51, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !601
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %54 = load i32* @exit_code, align 4, !dbg !601
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !601
LOAD [p=*q]:   %58 = load i32* @ifd, align 4, !dbg !604
CALL [call func]:   %59 = call i32 @close(i32 %58), !dbg !604
CONTEXT CALL [call func]:   %59 = call i32 @close(i32 %58), !dbg !604
	We do not analyze function 'close'
LOAD [p=*q]:   %61 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !606
LOAD [p=*q]:   %65 = load i32* @quiet, align 4, !dbg !607
LOAD [p=*q]:   %68 = load %struct._IO_FILE** @stderr, align 8, !dbg !607
LOAD [p=*q]:   %69 = load i8** @program_name, align 8, !dbg !607
CALL [call func]:   %70 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([46 x i8]* @.str29, i32 0, i32 0), i8* %69, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !607
CONTEXT CALL [call func]:   %70 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([46 x i8]* @.str29, i32 0, i32 0), i8* %69, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !607
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %72 = load i32* @exit_code, align 4, !dbg !607
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !607
LOAD [p=*q]:   %76 = load i32* @ifd, align 4, !dbg !610
CALL [call func]:   %77 = call i32 @close(i32 %76), !dbg !610
CONTEXT CALL [call func]:   %77 = call i32 @close(i32 %76), !dbg !610
	We do not analyze function 'close'
LOAD [p=*q]:   %79 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !612
LOAD [p=*q]:   %83 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %86 = load %struct._IO_FILE** @stderr, align 8, !dbg !613
LOAD [p=*q]:   %87 = load i8** @program_name, align 8, !dbg !613
CALL [call func]:   %88 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([47 x i8]* @.str30, i32 0, i32 0), i8* %87, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !613
CONTEXT CALL [call func]:   %88 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([47 x i8]* @.str30, i32 0, i32 0), i8* %87, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !613
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %90 = load i32* @exit_code, align 4, !dbg !613
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !613
LOAD [p=*q]:   %94 = load i32* @ifd, align 4, !dbg !616
CALL [call func]:   %95 = call i32 @close(i32 %94), !dbg !616
CONTEXT CALL [call func]:   %95 = call i32 @close(i32 %94), !dbg !616
	We do not analyze function 'close'
LOAD [p=*q]:   %97 = load i32* @force, align 4, !dbg !618
LOAD [p=*q]:   %100 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !619
LOAD [p=*q]:   %104 = load i32* @quiet, align 4, !dbg !621
LOAD [p=*q]:   %107 = load %struct._IO_FILE** @stderr, align 8, !dbg !621
LOAD [p=*q]:   %108 = load i8** @program_name, align 8, !dbg !621
CALL [call func]:   %109 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %107, i8* getelementptr inbounds ([46 x i8]* @.str31, i32 0, i32 0), i8* %108, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !621
CONTEXT CALL [call func]:   %109 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %107, i8* getelementptr inbounds ([46 x i8]* @.str31, i32 0, i32 0), i8* %108, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !621
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %111 = load i32* @exit_code, align 4, !dbg !621
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !621
LOAD [p=*q]:   %115 = load i32* @ifd, align 4, !dbg !624
CALL [call func]:   %116 = call i32 @close(i32 %115), !dbg !624
CONTEXT CALL [call func]:   %116 = call i32 @close(i32 %115), !dbg !624
	We do not analyze function 'close'
LOAD [p=*q]:   %118 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 2), align 8, !dbg !626
LOAD [p=*q]:   %121 = load i32* @quiet, align 4, !dbg !627
LOAD [p=*q]:   %124 = load %struct._IO_FILE** @stderr, align 8, !dbg !627
LOAD [p=*q]:   %125 = load i8** @program_name, align 8, !dbg !627
LOAD [p=*q]:   %126 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 2), align 8, !dbg !627
LOAD [p=*q]:   %128 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 2), align 8, !dbg !627
CALL [call func]:   %131 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %124, i8* getelementptr inbounds ([42 x i8]* @.str32, i32 0, i32 0), i8* %125, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i64 %127, i32 %130), !dbg !627
CONTEXT CALL [call func]:   %131 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %124, i8* getelementptr inbounds ([42 x i8]* @.str32, i32 0, i32 0), i8* %125, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i64 %127, i32 %130), !dbg !627
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %133 = load i32* @exit_code, align 4, !dbg !627
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !627
LOAD [p=*q]:   %137 = load i32* @ifd, align 4, !dbg !630
CALL [call func]:   %138 = call i32 @close(i32 %137), !dbg !630
CONTEXT CALL [call func]:   %138 = call i32 @close(i32 %137), !dbg !630
	We do not analyze function 'close'
LOAD [p=*q]:   %142 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !634
LOAD [p=*q]:   %146 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 8), align 8, !dbg !634
STORE [*p=q]:   store i64 %149, i64* @ifile_size, align 8, !dbg !634
STORE [*p=q]:   store i64 -1, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !635
LOAD [p=*q]:   %150 = load i32* @no_time, align 4, !dbg !636
LOAD [p=*q]:   %153 = load i32* @list, align 4, !dbg !636
CALL [call func]:   %156 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !637
CONTEXT CALL [call func]:   %156 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !637
	We do not analyze function 'get_stat_mtime'
STORE [*p=q]:   store i64 %159, i64* %158, align 1, !dbg !637
STORE [*p=q]:   store i64 %161, i64* %160, align 1, !dbg !637
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.timespec* @time_stamp to i8*), i8* %162, i64 16, i32 8, i1 false), !dbg !637
## treat_file does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %164 = load i32* @to_stdout, align 4, !dbg !638
LOAD [p=*q]:   %167 = load i32* @list, align 4, !dbg !638
LOAD [p=*q]:   %170 = load i32* @test, align 4, !dbg !638
CALL [call func]:   %173 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !639
CONTEXT CALL [call func]:   %173 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !639
	We do not analyze function 'strcpy'
CALL [call func]:   %175 = call i32 @make_ofname(), !dbg !642
CONTEXT CALL [call func]:   %175 = call i32 @make_ofname(), !dbg !642
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %suff}, metadata !574), !dbg !576
## make_ofname does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %2 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)) #3, !dbg !577
CONTEXT CALL [call func]:   %2 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)) #3, !dbg !577
	We do not analyze function 'strcpy'
CALL [call func]:   %3 = call i8* (...)* bitcast (i8* (i8*)* @get_suffix to i8* (...)*)(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !578
STORE [*p=q]:   store i8* %3, i8** %suff, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i32* @decompress, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** %suff, align 8, !dbg !580
LOAD [p=*q]:   %10 = load i32* @recursive, align 4, !dbg !582
LOAD [p=*q]:   %13 = load i32* @list, align 4, !dbg !582
LOAD [p=*q]:   %16 = load i32* @test, align 4, !dbg !582
STORE [*p=q]:   store i32 0, i32* %1, !dbg !584
LOAD [p=*q]:   %20 = load i32* @verbose, align 4, !dbg !585
LOAD [p=*q]:   %23 = load i32* @recursive, align 4, !dbg !585
LOAD [p=*q]:   %26 = load i32* @quiet, align 4, !dbg !585
LOAD [p=*q]:   %29 = load i32* @quiet, align 4, !dbg !586
LOAD [p=*q]:   %32 = load %struct._IO_FILE** @stderr, align 8, !dbg !586
LOAD [p=*q]:   %33 = load i8** @program_name, align 8, !dbg !586
CALL [call func]:   %34 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([35 x i8]* @.str72, i32 0, i32 0), i8* %33, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !586
CONTEXT CALL [call func]:   %34 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([35 x i8]* @.str72, i32 0, i32 0), i8* %33, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !586
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %36 = load i32* @exit_code, align 4, !dbg !586
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !586
STORE [*p=q]:   store i32 2, i32* %1, !dbg !590
LOAD [p=*q]:   %42 = load i8** %suff, align 8, !dbg !591
CALL [call func]:   %43 = call i8* @strlwr(i8* %42), !dbg !591
CONTEXT CALL [call func]:   %43 = call i8* @strlwr(i8* %42), !dbg !591
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %t}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
STORE [*p=q]:   store i8* %2, i8** %t, align 8, !dbg !579
LOAD [p=*q]:   %4 = load i8** %t, align 8, !dbg !579
LOAD [p=*q]:   %5 = load i8* %4, !dbg !579
LOAD [p=*q]:   %8 = load i8** %t, align 8, !dbg !581
LOAD [p=*q]:   %9 = load i8* %8, !dbg !581
CALL [call func]:   %12 = call i16** @__ctype_b_loc() #1, !dbg !582
LOAD [p=*q]:   %13 = load i16** %12, !dbg !582
LOAD [p=*q]:   %15 = load i16* %14, !dbg !582
LOAD [p=*q]:   %20 = load i8** %t, align 8, !dbg !582
LOAD [p=*q]:   %21 = load i8* %20, !dbg !582
CALL [call func]:   %23 = call i32 @tolower(i32 %22) #3, !dbg !582
LOAD [p=*q]:   %25 = load i8** %t, align 8, !dbg !582
LOAD [p=*q]:   %26 = load i8* %25, !dbg !582
LOAD [p=*q]:   %31 = load i8** %t, align 8, !dbg !582
STORE [*p=q]:   store i8 %30, i8* %31, !dbg !582
LOAD [p=*q]:   %33 = load i8** %t, align 8, !dbg !583
STORE [*p=q]:   store i8* %34, i8** %t, align 8, !dbg !583
LOAD [p=*q]:   %36 = load i8** %1, align 8, !dbg !584
LOAD [p=*q]:   %44 = load i8** %suff, align 8, !dbg !592
CALL [call func]:   %45 = call i32 @strcmp(i8* %44, i8* getelementptr inbounds ([5 x i8]* @.str48, i32 0, i32 0)) #4, !dbg !592
CONTEXT CALL [call func]:   %45 = call i32 @strcmp(i8* %44, i8* getelementptr inbounds ([5 x i8]* @.str48, i32 0, i32 0)) #4, !dbg !592
	We do not analyze function 'strcmp'
LOAD [p=*q]:   %48 = load i8** %suff, align 8, !dbg !593
CALL [call func]:   %49 = call i32 @strcmp(i8* %48, i8* getelementptr inbounds ([5 x i8]* @.str52, i32 0, i32 0)) #4, !dbg !593
CONTEXT CALL [call func]:   %49 = call i32 @strcmp(i8* %48, i8* getelementptr inbounds ([5 x i8]* @.str52, i32 0, i32 0)) #4, !dbg !593
	We do not analyze function 'strcmp'
LOAD [p=*q]:   %52 = load i8** %suff, align 8, !dbg !594
CALL [call func]:   %53 = call i8* @strcpy(i8* %52, i8* getelementptr inbounds ([5 x i8]* @.str47, i32 0, i32 0)) #3, !dbg !594
CONTEXT CALL [call func]:   %53 = call i8* @strcpy(i8* %52, i8* getelementptr inbounds ([5 x i8]* @.str47, i32 0, i32 0)) #3, !dbg !594
	We do not analyze function 'strcpy'
LOAD [p=*q]:   %55 = load i8** %suff, align 8, !dbg !597
STORE [*p=q]:   store i8 0, i8* %55, !dbg !597
LOAD [p=*q]:   %58 = load i8** %suff, align 8, !dbg !600
LOAD [p=*q]:   %61 = load i32* @force, align 4, !dbg !600
LOAD [p=*q]:   %64 = load i32* @verbose, align 4, !dbg !601
LOAD [p=*q]:   %67 = load i32* @recursive, align 4, !dbg !601
LOAD [p=*q]:   %70 = load i32* @quiet, align 4, !dbg !601
LOAD [p=*q]:   %73 = load %struct._IO_FILE** @stderr, align 8, !dbg !603
LOAD [p=*q]:   %74 = load i8** @program_name, align 8, !dbg !603
LOAD [p=*q]:   %75 = load i8** %suff, align 8, !dbg !603
CALL [call func]:   %76 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([43 x i8]* @.str73, i32 0, i32 0), i8* %74, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %75), !dbg !603
CONTEXT CALL [call func]:   %76 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([43 x i8]* @.str73, i32 0, i32 0), i8* %74, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %75), !dbg !603
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 2, i32* %1, !dbg !606
STORE [*p=q]:   store i32 0, i32* @save_orig_name, align 4, !dbg !607
CALL [call func]:   %79 = call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !609
CONTEXT CALL [call func]:   %79 = call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !609
	We do not analyze function 'strlen'
LOAD [p=*q]:   %80 = load i64* @z_len, align 8, !dbg !609
LOAD [p=*q]:   %85 = load i8** @z_suffix, align 8, !dbg !611
CALL [call func]:   %86 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* %85) #3, !dbg !611
CONTEXT CALL [call func]:   %86 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* %85) #3, !dbg !611
	We do not analyze function 'strcat'
STORE [*p=q]:   store i32 0, i32* %1, !dbg !612
LOAD [p=*q]:   %90 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %93 = load %struct._IO_FILE** @stderr, align 8, !dbg !613
LOAD [p=*q]:   %94 = load i8** @program_name, align 8, !dbg !613
CALL [call func]:   %95 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %93, i8* getelementptr inbounds ([28 x i8]* @.str74, i32 0, i32 0), i8* %94, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !613
CONTEXT CALL [call func]:   %95 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %93, i8* getelementptr inbounds ([28 x i8]* @.str74, i32 0, i32 0), i8* %94, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !613
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %97 = load i32* @exit_code, align 4, !dbg !613
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !613
STORE [*p=q]:   store i32 2, i32* %1, !dbg !615
LOAD [p=*q]:   %102 = load i32* %1, !dbg !616
LOAD [p=*q]:   %178 = load i32* @ifd, align 4, !dbg !643
CALL [call func]:   %179 = call i32 @close(i32 %178), !dbg !643
CONTEXT CALL [call func]:   %179 = call i32 @close(i32 %178), !dbg !643
	We do not analyze function 'close'
CALL [call func]:   call void @clear_bufs(), !dbg !646
CONTEXT CALL [call func]:   call void @clear_bufs(), !dbg !646
STORE [*p=q]:   store i32 0, i32* @outcnt, align 4, !dbg !574
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !576
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !576
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !577
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !577
STORE [*p=q]:   store i32 0, i32* @part_nb, align 4, !dbg !647
LOAD [p=*q]:   %182 = load i32* @decompress, align 4, !dbg !648
LOAD [p=*q]:   %185 = load i32* @ifd, align 4, !dbg !649
CALL [call func]:   %186 = call i32 @get_method(i32 %185), !dbg !649
CONTEXT CALL [call func]:   %186 = call i32 @get_method(i32 %185), !dbg !649
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %flags}, metadata !576), !dbg !578
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[10 x i8]* %magic}, metadata !579), !dbg !581
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic0}, metadata !582), !dbg !583
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic1}, metadata !584), !dbg !585
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %stamp}, metadata !586), !dbg !588
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %3 = load i32* @force, align 4, !dbg !589
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !589
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !590
CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
CONTEXT CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %22, i32* %imagic0, align 4, !dbg !592
LOAD [p=*q]:   %23 = load i32* %imagic0, align 4, !dbg !593
STORE [*p=q]:   store i8 %24, i8* %25, align 1, !dbg !593
LOAD [p=*q]:   %26 = load i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* @insize, align 4, !dbg !594
LOAD [p=*q]:   %30 = load i32* @inptr, align 4, !dbg !594
STORE [*p=q]:   store i32 %31, i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %34 = load i8* %33, align 1, !dbg !594
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
CONTEXT CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %39, i32* %imagic1, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* %imagic1, align 4, !dbg !596
STORE [*p=q]:   store i8 %41, i8* %42, align 1, !dbg !596
LOAD [p=*q]:   %44 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %45 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %48 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %49, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !598
CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
CONTEXT CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %58, i8* %59, align 1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %imagic0, align 4, !dbg !601
LOAD [p=*q]:   %61 = load i8* %60, align 1, !dbg !602
LOAD [p=*q]:   %64 = load i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %65 = load i32* @insize, align 4, !dbg !603
LOAD [p=*q]:   %68 = load i32* @inptr, align 4, !dbg !603
STORE [*p=q]:   store i32 %69, i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %72 = load i8* %71, align 1, !dbg !603
CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
CONTEXT CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %78, i8* %79, align 1, !dbg !605
STORE [*p=q]:   store i32 0, i32* %imagic1, align 4, !dbg !606
LOAD [p=*q]:   %81 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %82 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %85 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %86, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %89 = load i8* %88, align 1, !dbg !608
CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
CONTEXT CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %94, i32* %imagic1, align 4, !dbg !610
LOAD [p=*q]:   %95 = load i32* %imagic1, align 4, !dbg !611
STORE [*p=q]:   store i8 %96, i8* %97, align 1, !dbg !611
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !612
LOAD [p=*q]:   %100 = load i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i32 %101, i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !614
STORE [*p=q]:   store i32 0, i32* @last_member, align 4, !dbg !615
CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
CONTEXT CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
	We do not analyze function 'memcmp'
CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
CONTEXT CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %110 = load i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %111 = load i32* @insize, align 4, !dbg !618
LOAD [p=*q]:   %114 = load i32* @inptr, align 4, !dbg !618
STORE [*p=q]:   store i32 %115, i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %118 = load i8* %117, align 1, !dbg !618
CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
CONTEXT CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %123, i32* @method, align 4, !dbg !620
LOAD [p=*q]:   %124 = load i32* @method, align 4, !dbg !621
LOAD [p=*q]:   %127 = load %struct._IO_FILE** @stderr, align 8, !dbg !622
LOAD [p=*q]:   %128 = load i8** @program_name, align 8, !dbg !622
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !622
CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
CONTEXT CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !624
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !625
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !626
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !627
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !627
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !627
CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
CONTEXT CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %146, i8* %flags, align 1, !dbg !628
LOAD [p=*q]:   %147 = load i8* %flags, align 1, !dbg !629
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !630
LOAD [p=*q]:   %153 = load i8** @program_name, align 8, !dbg !630
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
CONTEXT CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !632
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !633
LOAD [p=*q]:   %156 = load i8* %flags, align 1, !dbg !634
LOAD [p=*q]:   %161 = load %struct._IO_FILE** @stderr, align 8, !dbg !635
LOAD [p=*q]:   %162 = load i8** @program_name, align 8, !dbg !635
LOAD [p=*q]:   %163 = load i8* %flags, align 1, !dbg !635
CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
CONTEXT CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !637
LOAD [p=*q]:   %166 = load i32* @force, align 4, !dbg !638
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !639
LOAD [p=*q]:   %171 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %172 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %175 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %176, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %179 = load i8* %178, align 1, !dbg !641
CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
CONTEXT CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i64 %185, i64* %stamp, align 8, !dbg !642
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !643
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !643
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !643
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
CONTEXT CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %202 = load i64* %stamp, align 8, !dbg !644
STORE [*p=q]:   store i64 %203, i64* %stamp, align 8, !dbg !644
LOAD [p=*q]:   %204 = load i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* @insize, align 4, !dbg !645
LOAD [p=*q]:   %208 = load i32* @inptr, align 4, !dbg !645
STORE [*p=q]:   store i32 %209, i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %212 = load i8* %211, align 1, !dbg !645
CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
CONTEXT CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %220 = load i64* %stamp, align 8, !dbg !646
STORE [*p=q]:   store i64 %221, i64* %stamp, align 8, !dbg !646
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !647
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !647
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !647
CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
CONTEXT CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %238 = load i64* %stamp, align 8, !dbg !648
STORE [*p=q]:   store i64 %239, i64* %stamp, align 8, !dbg !648
LOAD [p=*q]:   %240 = load i64* %stamp, align 8, !dbg !649
LOAD [p=*q]:   %243 = load i32* @no_time, align 4, !dbg !649
LOAD [p=*q]:   %246 = load i64* %stamp, align 8, !dbg !650
STORE [*p=q]:   store i64 %246, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !650
STORE [*p=q]:   store i64 0, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !652
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %252 = load i32* @inptr, align 4, !dbg !654
STORE [*p=q]:   store i32 %253, i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %256 = load i8* %255, align 1, !dbg !654
CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
CONTEXT CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %262, i8* %263, align 1, !dbg !655
LOAD [p=*q]:   %264 = load i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %265 = load i32* @insize, align 4, !dbg !656
LOAD [p=*q]:   %268 = load i32* @inptr, align 4, !dbg !656
STORE [*p=q]:   store i32 %269, i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %272 = load i8* %271, align 1, !dbg !656
CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
CONTEXT CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %278, i8* %279, align 1, !dbg !657
LOAD [p=*q]:   %280 = load i8* %flags, align 1, !dbg !658
STORE [*p=q]:   store i8 8, i8* %285, align 1, !dbg !659
LOAD [p=*q]:   %286 = load i8* %flags, align 1, !dbg !661
STORE [*p=q]:   store i8 %286, i8* %287, align 1, !dbg !661
LOAD [p=*q]:   %288 = load i64* %stamp, align 8, !dbg !662
STORE [*p=q]:   store i8 %290, i8* %291, align 1, !dbg !662
LOAD [p=*q]:   %292 = load i64* %stamp, align 8, !dbg !663
STORE [*p=q]:   store i8 %295, i8* %296, align 1, !dbg !663
LOAD [p=*q]:   %297 = load i64* %stamp, align 8, !dbg !664
STORE [*p=q]:   store i8 %300, i8* %301, align 1, !dbg !664
LOAD [p=*q]:   %302 = load i64* %stamp, align 8, !dbg !665
STORE [*p=q]:   store i8 %304, i8* %305, align 1, !dbg !665
CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
CONTEXT CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
CONTEXT CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %310 = load i8* %flags, align 1, !dbg !669
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x i8]* %lenbuf}, metadata !670), !dbg !675
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !676), !dbg !677
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %315 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %316 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %319 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %320, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %323 = load i8* %322, align 1, !dbg !678
CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
CONTEXT CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %329, i8* %330, align 1, !dbg !679
STORE [*p=q]:   store i32 %331, i32* %len, align 4, !dbg !679
LOAD [p=*q]:   %332 = load i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %333 = load i32* @insize, align 4, !dbg !680
LOAD [p=*q]:   %336 = load i32* @inptr, align 4, !dbg !680
STORE [*p=q]:   store i32 %337, i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %340 = load i8* %339, align 1, !dbg !680
CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
CONTEXT CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %346, i8* %347, align 1, !dbg !681
LOAD [p=*q]:   %350 = load i32* %len, align 4, !dbg !681
STORE [*p=q]:   store i32 %351, i32* %len, align 4, !dbg !681
LOAD [p=*q]:   %352 = load i32* @verbose, align 4, !dbg !682
LOAD [p=*q]:   %355 = load %struct._IO_FILE** @stderr, align 8, !dbg !683
LOAD [p=*q]:   %356 = load i8** @program_name, align 8, !dbg !683
LOAD [p=*q]:   %357 = load i32* %len, align 4, !dbg !683
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
CONTEXT CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %360 = load i8* %flags, align 1, !dbg !686
CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
CONTEXT CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %368 = load i32* %len, align 4, !dbg !688
LOAD [p=*q]:   %370 = load i8* %flags, align 1, !dbg !688
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 %369, i32 %371), !dbg !688
LOAD [p=*q]:   %373 = load i8* %flags, align 1, !dbg !690
LOAD [p=*q]:   %378 = load i32* @no_name, align 4, !dbg !691
LOAD [p=*q]:   %381 = load i32* @to_stdout, align 4, !dbg !691
LOAD [p=*q]:   %384 = load i32* @list, align 4, !dbg !691
LOAD [p=*q]:   %387 = load i32* @part_nb, align 4, !dbg !691
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !696), !dbg !698
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
CONTEXT CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %393, i8** %p, align 8, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %base}, metadata !700), !dbg !701
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %394 = load i8** %p, align 8, !dbg !702
STORE [*p=q]:   store i8* %394, i8** %base, align 8, !dbg !702
LOAD [p=*q]:   %396 = load i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %397 = load i32* @insize, align 4, !dbg !705
LOAD [p=*q]:   %400 = load i32* @inptr, align 4, !dbg !705
STORE [*p=q]:   store i32 %401, i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %404 = load i8* %403, align 1, !dbg !705
CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
CONTEXT CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %411 = load i8** %p, align 8, !dbg !707
STORE [*p=q]:   store i8 %410, i8* %411, !dbg !707
LOAD [p=*q]:   %412 = load i8** %p, align 8, !dbg !708
STORE [*p=q]:   store i8* %413, i8** %p, align 8, !dbg !708
LOAD [p=*q]:   %414 = load i8* %412, !dbg !708
LOAD [p=*q]:   %419 = load i8** %p, align 8, !dbg !710
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
CONTEXT CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
STORE [*p=q]:   store i8* %m, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !576
LOAD [p=*q]:   %3 = load i8** @program_name, align 8, !dbg !576
LOAD [p=*q]:   %4 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
CALL [call func]:   call void @abort_gzip() #7, !dbg !578
LOAD [p=*q]:   %424 = load i8* %flags, align 1, !dbg !714
LOAD [p=*q]:   %429 = load i8** %base, align 8, !dbg !715
LOAD [p=*q]:   %430 = load i8** %p, align 8, !dbg !715
LOAD [p=*q]:   %431 = load i8** %base, align 8, !dbg !715
CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
CONTEXT CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %438 = load i8** %base, align 8, !dbg !716
CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
CONTEXT CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %439, i8** %p, align 8, !dbg !716
LOAD [p=*q]:   %440 = load i8** %base, align 8, !dbg !717
LOAD [p=*q]:   %441 = load i8** %p, align 8, !dbg !717
LOAD [p=*q]:   %442 = load i8** %p, align 8, !dbg !718
CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
CONTEXT CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
	We do not analyze function 'strlen'
CALL [call func]:   call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %441, i64 %444, i32 1, i1 false), !dbg !718
## get_method does not call llvm.memmove.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %445 = load i32* @list, align 4, !dbg !719
LOAD [p=*q]:   %448 = load i8** %base, align 8, !dbg !720
STORE [*p=q]:   store i32 0, i32* @list, align 4, !dbg !722
LOAD [p=*q]:   %455 = load i8* %flags, align 1, !dbg !725
LOAD [p=*q]:   %460 = load i8* %flags, align 1, !dbg !726
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %461), !dbg !726
LOAD [p=*q]:   %463 = load i8* %flags, align 1, !dbg !729
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %crc16}, metadata !730), !dbg !732
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
CONTEXT CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
STORE [*p=q]:   store i32 %471, i32* %crc16, align 4, !dbg !733
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %header16}, metadata !734), !dbg !735
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %472 = load i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %473 = load i32* @insize, align 4, !dbg !736
LOAD [p=*q]:   %476 = load i32* @inptr, align 4, !dbg !736
STORE [*p=q]:   store i32 %477, i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %480 = load i8* %479, align 1, !dbg !736
CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
CONTEXT CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %485, i32* %header16, align 4, !dbg !737
LOAD [p=*q]:   %486 = load i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %487 = load i32* @insize, align 4, !dbg !738
LOAD [p=*q]:   %490 = load i32* @inptr, align 4, !dbg !738
STORE [*p=q]:   store i32 %491, i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %494 = load i8* %493, align 1, !dbg !738
CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
CONTEXT CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %501 = load i32* %header16, align 4, !dbg !739
STORE [*p=q]:   store i32 %502, i32* %header16, align 4, !dbg !739
LOAD [p=*q]:   %503 = load i32* %header16, align 4, !dbg !740
LOAD [p=*q]:   %504 = load i32* %crc16, align 4, !dbg !740
LOAD [p=*q]:   %507 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
LOAD [p=*q]:   %508 = load i8** @program_name, align 8, !dbg !741
LOAD [p=*q]:   %509 = load i32* %header16, align 4, !dbg !741
LOAD [p=*q]:   %510 = load i32* %crc16, align 4, !dbg !741
CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
CONTEXT CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !743
LOAD [p=*q]:   %512 = load i32* @force, align 4, !dbg !744
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !745
LOAD [p=*q]:   %518 = load i32* @part_nb, align 4, !dbg !748
LOAD [p=*q]:   %521 = load i32* @inptr, align 4, !dbg !749
STORE [*p=q]:   store i64 %523, i64* @header_bytes, align 8, !dbg !749
CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
CONTEXT CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %530 = load i32* @inptr, align 4, !dbg !753
CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
CONTEXT CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !755
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !757
LOAD [p=*q]:   %536 = load i32* %2, align 4, !dbg !758
CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
CONTEXT CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %h}, metadata !576), !dbg !580
LOAD [p=*q]:   %3 = load i32* @inptr, align 4, !dbg !581
STORE [*p=q]:   store i8* %5, i8** %h, align 8, !dbg !581
LOAD [p=*q]:   %6 = load i32* %2, align 4, !dbg !582
STORE [*p=q]:   store i32 %6, i32* @ifd, align 4, !dbg !582
LOAD [p=*q]:   %7 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i8* %9, !dbg !583
LOAD [p=*q]:   %13 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %16 = load i8* %15, !dbg !583
LOAD [p=*q]:   %22 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %25 = load i8* %24, !dbg !583
LOAD [p=*q]:   %28 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %31 = load i8* %30, !dbg !583
LOAD [p=*q]:   %37 = load i32* @inptr, align 4, !dbg !583
STORE [*p=q]:   store i32 %38, i32* @inptr, align 4, !dbg !583
LOAD [p=*q]:   %39 = load i32* @inptr, align 4, !dbg !584
LOAD [p=*q]:   %40 = load i32* @insize, align 4, !dbg !584
LOAD [p=*q]:   %43 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %45 = load i8* %44, !dbg !584
LOAD [p=*q]:   %48 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %50 = load i8* %49, !dbg !584
LOAD [p=*q]:   %56 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %59 = load i8* %58, !dbg !584
LOAD [p=*q]:   %62 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %65 = load i8* %64, !dbg !584
LOAD [p=*q]:   %75 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
LOAD [p=*q]:   %76 = load i8** @program_name, align 8, !dbg !585
CALL [call func]:   %77 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([31 x i8]* @.str167, i32 0, i32 0), i8* %76, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !585
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !587
STORE [*p=q]:   store i32 1, i32* %1, !dbg !588
LOAD [p=*q]:   %79 = load i8** %h, align 8, !dbg !589
LOAD [p=*q]:   %81 = load i8* %80, !dbg !589
STORE [*p=q]:   store i32 %82, i32* @method, align 4, !dbg !589
LOAD [p=*q]:   %83 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %86 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %89 = load %struct._IO_FILE** @stderr, align 8, !dbg !591
LOAD [p=*q]:   %90 = load i8** @program_name, align 8, !dbg !591
CALL [call func]:   %91 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([58 x i8]* @.str1168, i32 0, i32 0), i8* %90, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !593
STORE [*p=q]:   store i32 1, i32* %1, !dbg !594
LOAD [p=*q]:   %93 = load i8** %h, align 8, !dbg !595
LOAD [p=*q]:   %95 = load i8* %94, !dbg !595
STORE [*p=q]:   store i32 %97, i32* @decrypt, align 4, !dbg !595
LOAD [p=*q]:   %100 = load %struct._IO_FILE** @stderr, align 8, !dbg !596
LOAD [p=*q]:   %101 = load i8** @program_name, align 8, !dbg !596
CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([38 x i8]* @.str2169, i32 0, i32 0), i8* %101, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !596
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !598
STORE [*p=q]:   store i32 1, i32* %1, !dbg !599
LOAD [p=*q]:   %104 = load i8** %h, align 8, !dbg !600
LOAD [p=*q]:   %106 = load i8* %105, !dbg !600
STORE [*p=q]:   store i32 %110, i32* @ext_header, align 4, !dbg !600
STORE [*p=q]:   store i32 1, i32* @pkzip, align 4, !dbg !601
STORE [*p=q]:   store i32 0, i32* %1, !dbg !602
LOAD [p=*q]:   %112 = load i32* %1, !dbg !603
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !759
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !760
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
CONTEXT CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unpack, i32 (i32, i32)** @work, align 8, !dbg !763
STORE [*p=q]:   store i32 2, i32* @method, align 4, !dbg !765
CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
CONTEXT CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzw, i32 (i32, i32)** @work, align 8, !dbg !768
STORE [*p=q]:   store i32 1, i32* @method, align 4, !dbg !770
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !771
CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
CONTEXT CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzh, i32 (i32, i32)** @work, align 8, !dbg !774
STORE [*p=q]:   store i32 3, i32* @method, align 4, !dbg !776
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !777
LOAD [p=*q]:   %557 = load i32* @force, align 4, !dbg !779
LOAD [p=*q]:   %560 = load i32* @to_stdout, align 4, !dbg !779
LOAD [p=*q]:   %563 = load i32* @list, align 4, !dbg !779
STORE [*p=q]:   store i32 0, i32* @method, align 4, !dbg !780
STORE [*p=q]:   store i32 (i32, i32)* @copy, i32 (i32, i32)** @work, align 8, !dbg !782
LOAD [p=*q]:   %566 = load i32* %imagic1, align 4, !dbg !783
LOAD [p=*q]:   %569 = load i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 %570, i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !785
LOAD [p=*q]:   %572 = load i32* %imagic0, align 4, !dbg !786
LOAD [p=*q]:   %575 = load %struct._IO_FILE** @stdout, align 8, !dbg !787
CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
CONTEXT CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
	We do not analyze function 'fileno'
CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
CONTEXT CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
STORE [*p=q]:   store i32 %fd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i8* %buf, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !576), !dbg !579
STORE [*p=q]:   store i32 %cnt, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !580), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !582), !dbg !584
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !586
LOAD [p=*q]:   %6 = load i8** %2, align 8, !dbg !586
LOAD [p=*q]:   %7 = load i32* %3, align 4, !dbg !586
CALL [call func]:   %8 = call i32 (...)* bitcast (i32 (i32, i8*, i32)* @write_buffer to i32 (...)*)(i32 %5, i8* %6, i32 %7), !dbg !586
STORE [*p=q]:   store i32 %8, i32* %n, align 4, !dbg !586
LOAD [p=*q]:   %9 = load i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %12 = load i32* %n, align 4, !dbg !587
CALL [call func]:   call void @write_error() #7, !dbg !589
LOAD [p=*q]:   %16 = load i32* %n, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %3, align 4, !dbg !591
STORE [*p=q]:   store i32 %18, i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %20 = load i32* %n, align 4, !dbg !592
STORE [*p=q]:   store i8* %22, i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %578 = load i64* @bytes_out, align 8, !dbg !789
STORE [*p=q]:   store i64 %579, i64* @bytes_out, align 8, !dbg !789
LOAD [p=*q]:   %587 = load i32* @method, align 4, !dbg !792
LOAD [p=*q]:   %590 = load i32* @method, align 4, !dbg !793
STORE [*p=q]:   store i32 %590, i32* %1, !dbg !793
LOAD [p=*q]:   %592 = load i32* @part_nb, align 4, !dbg !794
LOAD [p=*q]:   %595 = load %struct._IO_FILE** @stderr, align 8, !dbg !795
LOAD [p=*q]:   %596 = load i8** @program_name, align 8, !dbg !795
CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
CONTEXT CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !797
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !798
LOAD [p=*q]:   %600 = load i8* %599, align 1, !dbg !799
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %inbyte}, metadata !801), !dbg !803
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %604 = load i32* %imagic1, align 4, !dbg !804
STORE [*p=q]:   store i32 %604, i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %606 = load i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %610 = load i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %611 = load i32* @insize, align 4, !dbg !807
LOAD [p=*q]:   %614 = load i32* @inptr, align 4, !dbg !807
STORE [*p=q]:   store i32 %615, i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %618 = load i8* %617, align 1, !dbg !807
CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
CONTEXT CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %623, i32* %inbyte, align 4, !dbg !808
LOAD [p=*q]:   %625 = load i32* %inbyte, align 4, !dbg !809
LOAD [p=*q]:   %628 = load i32* @verbose, align 4, !dbg !810
LOAD [p=*q]:   %631 = load i32* @quiet, align 4, !dbg !812
LOAD [p=*q]:   %634 = load %struct._IO_FILE** @stderr, align 8, !dbg !812
LOAD [p=*q]:   %635 = load i8** @program_name, align 8, !dbg !812
CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
CONTEXT CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %638 = load i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 -3, i32* %1, !dbg !814
LOAD [p=*q]:   %645 = load i32* @quiet, align 4, !dbg !816
LOAD [p=*q]:   %648 = load %struct._IO_FILE** @stderr, align 8, !dbg !816
LOAD [p=*q]:   %649 = load i8** @program_name, align 8, !dbg !816
CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
CONTEXT CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %652 = load i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 -2, i32* %1, !dbg !818
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
STORE [*p=q]:   store i32 %186, i32* @method, align 4, !dbg !649
LOAD [p=*q]:   %187 = load i32* @method, align 4, !dbg !651
LOAD [p=*q]:   %190 = load i32* @ifd, align 4, !dbg !652
CALL [call func]:   %191 = call i32 @close(i32 %190), !dbg !652
CONTEXT CALL [call func]:   %191 = call i32 @close(i32 %190), !dbg !652
	We do not analyze function 'close'
LOAD [p=*q]:   %194 = load i32* @list, align 4, !dbg !656
LOAD [p=*q]:   %197 = load i32* @ifd, align 4, !dbg !657
LOAD [p=*q]:   %198 = load i32* @method, align 4, !dbg !657
CALL [call func]:   call void @do_list(i32 %197, i32 %198), !dbg !657
CONTEXT CALL [call func]:   call void @do_list(i32 %197, i32 %198), !dbg !657
STORE [*p=q]:   store i32 %ifd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 %method, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %crc}, metadata !578), !dbg !581
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %positive_off_t_width}, metadata !582), !dbg !583
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 1, i32* %positive_off_t_width, align 4, !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %o}, metadata !585), !dbg !586
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 9223372036854775807, i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %4 = load i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %7 = load i32* %positive_off_t_width, align 4, !dbg !589
STORE [*p=q]:   store i32 %8, i32* %positive_off_t_width, align 4, !dbg !589
LOAD [p=*q]:   %10 = load i64* %o, align 8, !dbg !592
STORE [*p=q]:   store i64 %11, i64* %o, align 8, !dbg !592
LOAD [p=*q]:   %13 = load i32* @do_list.first_time, align 4, !dbg !593
LOAD [p=*q]:   %16 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 0, i32* @do_list.first_time, align 4, !dbg !594
LOAD [p=*q]:   %19 = load i32* @verbose, align 4, !dbg !596
CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
CONTEXT CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %24 = load i32* @quiet, align 4, !dbg !600
LOAD [p=*q]:   %27 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %28 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %29 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %30 = load i32* %positive_off_t_width, align 4, !dbg !601
CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
CONTEXT CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %34 = load i32* %2, align 4, !dbg !605
LOAD [p=*q]:   %37 = load i64* @total_in, align 8, !dbg !606
LOAD [p=*q]:   %40 = load i64* @total_out, align 8, !dbg !606
LOAD [p=*q]:   %44 = load i32* @verbose, align 4, !dbg !609
CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
CONTEXT CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %49 = load i32* @verbose, align 4, !dbg !613
LOAD [p=*q]:   %52 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %55 = load %struct._IO_FILE** @stdout, align 8, !dbg !614
LOAD [p=*q]:   %56 = load i64* @total_in, align 8, !dbg !614
LOAD [p=*q]:   %57 = load i32* %positive_off_t_width, align 4, !dbg !614
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
CONTEXT CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %59 = load %struct._IO_FILE** @stdout, align 8, !dbg !617
LOAD [p=*q]:   %60 = load i64* @total_out, align 8, !dbg !617
LOAD [p=*q]:   %61 = load i32* %positive_off_t_width, align 4, !dbg !617
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
CONTEXT CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %64 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %65 = load i64* @total_in, align 8, !dbg !620
LOAD [p=*q]:   %66 = load i64* @header_bytes, align 8, !dbg !620
LOAD [p=*q]:   %69 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %70 = load %struct._IO_FILE** @stdout, align 8, !dbg !620
CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
CONTEXT CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
CONTEXT CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
	We do not analyze function 'rpl_printf'
STORE [*p=q]:   store i64 -1, i64* %crc, align 8, !dbg !623
STORE [*p=q]:   store i64 -1, i64* @bytes_out, align 8, !dbg !624
LOAD [p=*q]:   %74 = load i64* @ifile_size, align 8, !dbg !625
STORE [*p=q]:   store i64 %74, i64* @bytes_in, align 8, !dbg !625
LOAD [p=*q]:   %75 = load i32* %2, align 4, !dbg !626
LOAD [p=*q]:   %78 = load i32* @last_member, align 4, !dbg !626
LOAD [p=*q]:   %81 = load i32* %1, align 4, !dbg !627
CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
CONTEXT CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
	We do not analyze function 'lseek'
STORE [*p=q]:   store i64 %82, i64* @bytes_in, align 8, !dbg !627
LOAD [p=*q]:   %83 = load i64* @bytes_in, align 8, !dbg !629
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[8 x i8]* %buf}, metadata !630), !dbg !635
## do_list does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %86 = load i64* @bytes_in, align 8, !dbg !636
STORE [*p=q]:   store i64 %87, i64* @bytes_in, align 8, !dbg !636
LOAD [p=*q]:   %88 = load i32* %1, align 4, !dbg !637
CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
CONTEXT CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
	We do not analyze function 'read'
CALL [call func]:   call void @read_error() #7, !dbg !638
CONTEXT CALL [call func]:   call void @read_error() #7, !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !574), !dbg !576
CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
LOAD [p=*q]:   %2 = load i32* %1, !dbg !577
STORE [*p=q]:   store i32 %2, i32* %e, align 4, !dbg !577
LOAD [p=*q]:   %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i8** @program_name, align 8, !dbg !578
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
LOAD [p=*q]:   %6 = load i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %9 = load i32* %e, align 4, !dbg !580
CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
STORE [*p=q]:   store i32 %9, i32* %10, !dbg !580
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
LOAD [p=*q]:   %12 = load %struct._IO_FILE** @stderr, align 8, !dbg !584
CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
CALL [call func]:   call void @abort_gzip() #7, !dbg !586
LOAD [p=*q]:   %95 = load i8* %94, align 1, !dbg !640
LOAD [p=*q]:   %99 = load i8* %98, align 1, !dbg !640
LOAD [p=*q]:   %108 = load i8* %107, !dbg !640
LOAD [p=*q]:   %114 = load i8* %113, !dbg !640
STORE [*p=q]:   store i64 %121, i64* %crc, align 8, !dbg !640
LOAD [p=*q]:   %125 = load i8* %124, !dbg !641
LOAD [p=*q]:   %131 = load i8* %130, !dbg !641
LOAD [p=*q]:   %141 = load i8* %140, !dbg !641
LOAD [p=*q]:   %148 = load i8* %147, !dbg !641
STORE [*p=q]:   store i64 %155, i64* @bytes_out, align 8, !dbg !641
LOAD [p=*q]:   %158 = load i32* @verbose, align 4, !dbg !644
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.tm** %tm}, metadata !645), !dbg !661
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
CONTEXT CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
	We do not analyze function 'localtime'
STORE [*p=q]:   store %struct.tm* %161, %struct.tm** %tm, align 8, !dbg !662
LOAD [p=*q]:   %162 = load i32* %2, align 4, !dbg !663
LOAD [p=*q]:   %165 = load i8** %164, align 8, !dbg !663
LOAD [p=*q]:   %166 = load i64* %crc, align 8, !dbg !663
CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
CONTEXT CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %168 = load %struct.tm** %tm, align 8, !dbg !664
LOAD [p=*q]:   %171 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %173 = load i32* %172, align 4, !dbg !665
LOAD [p=*q]:   %177 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %179 = load i32* %178, align 4, !dbg !665
LOAD [p=*q]:   %180 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %182 = load i32* %181, align 4, !dbg !665
LOAD [p=*q]:   %183 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %185 = load i32* %184, align 4, !dbg !665
CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
CONTEXT CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
	We do not analyze function 'rpl_printf'
CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
CONTEXT CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %191 = load %struct._IO_FILE** @stdout, align 8, !dbg !668
LOAD [p=*q]:   %192 = load i64* @bytes_in, align 8, !dbg !668
LOAD [p=*q]:   %193 = load i32* %positive_off_t_width, align 4, !dbg !668
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
CONTEXT CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %195 = load %struct._IO_FILE** @stdout, align 8, !dbg !670
LOAD [p=*q]:   %196 = load i64* @bytes_out, align 8, !dbg !670
LOAD [p=*q]:   %197 = load i32* %positive_off_t_width, align 4, !dbg !670
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
CONTEXT CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %199 = load i64* @bytes_in, align 8, !dbg !672
STORE [*p=q]:   store i64 -1, i64* @total_in, align 8, !dbg !673
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !675
LOAD [p=*q]:   %203 = load i64* @total_in, align 8, !dbg !677
LOAD [p=*q]:   %206 = load i64* @bytes_in, align 8, !dbg !678
LOAD [p=*q]:   %207 = load i64* @total_in, align 8, !dbg !678
STORE [*p=q]:   store i64 %208, i64* @total_in, align 8, !dbg !678
LOAD [p=*q]:   %211 = load i64* @bytes_out, align 8, !dbg !681
STORE [*p=q]:   store i64 -1, i64* @total_out, align 8, !dbg !682
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !684
LOAD [p=*q]:   %215 = load i64* @total_out, align 8, !dbg !686
LOAD [p=*q]:   %218 = load i64* @bytes_out, align 8, !dbg !687
LOAD [p=*q]:   %219 = load i64* @total_out, align 8, !dbg !687
STORE [*p=q]:   store i64 %220, i64* @total_out, align 8, !dbg !687
LOAD [p=*q]:   %223 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %224 = load i64* @bytes_in, align 8, !dbg !690
LOAD [p=*q]:   %225 = load i64* @header_bytes, align 8, !dbg !690
LOAD [p=*q]:   %228 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %229 = load %struct._IO_FILE** @stdout, align 8, !dbg !690
CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
CONTEXT CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
CONTEXT CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %199 = load i32* @ifd, align 4, !dbg !659
CALL [call func]:   %200 = call i32 @close(i32 %199), !dbg !659
CONTEXT CALL [call func]:   %200 = call i32 @close(i32 %199), !dbg !659
	We do not analyze function 'close'
CALL [call func]:   call void @read_error() #7, !dbg !660
CONTEXT CALL [call func]:   call void @read_error() #7, !dbg !660
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !574), !dbg !576
## read_error does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
CONTEXT CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %2 = load i32* %1, !dbg !577
STORE [*p=q]:   store i32 %2, i32* %e, align 4, !dbg !577
LOAD [p=*q]:   %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i8** @program_name, align 8, !dbg !578
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
CONTEXT CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %6 = load i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %9 = load i32* %e, align 4, !dbg !580
CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
CONTEXT CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %9, i32* %10, !dbg !580
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
CONTEXT CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
	We do not analyze function 'rpl_perror'
LOAD [p=*q]:   %12 = load %struct._IO_FILE** @stderr, align 8, !dbg !584
CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
CONTEXT CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @abort_gzip() #7, !dbg !586
CONTEXT CALL [call func]:   call void @abort_gzip() #7, !dbg !586
CALL [call func]:   call void @remove_output_file(), !dbg !574
CALL [call func]:   call void (...)* bitcast (void (i32)* @do_exit to void (...)*)(i32 1) #7, !dbg !576
LOAD [p=*q]:   %205 = load i32* @to_stdout, align 4, !dbg !662
LOAD [p=*q]:   %208 = load %struct._IO_FILE** @stdout, align 8, !dbg !663
CALL [call func]:   %209 = call i32 @fileno(%struct._IO_FILE* %208) #3, !dbg !663
CONTEXT CALL [call func]:   %209 = call i32 @fileno(%struct._IO_FILE* %208) #3, !dbg !663
	We do not analyze function 'fileno'
STORE [*p=q]:   store i32 %209, i32* @ofd, align 4, !dbg !663
CALL [call func]:   %211 = call i32 @create_outfile(), !dbg !666
CONTEXT CALL [call func]:   %211 = call i32 @create_outfile(), !dbg !666
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %name_shortened}, metadata !574), !dbg !576
## create_outfile does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 0, i32* %name_shortened, align 4, !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %flags}, metadata !578), !dbg !579
## create_outfile does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @ascii, align 4, !dbg !580
LOAD [p=*q]:   %5 = load i32* @decompress, align 4, !dbg !580
STORE [*p=q]:   store i32 %10, i32* %flags, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %open_errno}, metadata !583), !dbg !585
## create_outfile does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.__sigset_t* %oldset}, metadata !586), !dbg !587
## create_outfile does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %12 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !588
CONTEXT CALL [call func]:   %12 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !588
	We do not analyze function 'sigprocmask'
LOAD [p=*q]:   %13 = load i32* %flags, align 4, !dbg !589
CALL [call func]:   %14 = call i32 (i8*, i32, ...)* @open_safer(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i32 %13, i32 384), !dbg !589
CONTEXT CALL [call func]:   %14 = call i32 (i8*, i32, ...)* @open_safer(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i32 %13, i32 384), !dbg !589
	We do not analyze function 'open_safer'
STORE [*p=q]:   store i32 %14, i32* @ofd, align 4, !dbg !589
STORE [*p=q]:   store volatile i32 %14, i32* @remove_ofname_fd, align 4, !dbg !589
CALL [call func]:   %15 = call i32* @__errno_location() #1, !dbg !590
CONTEXT CALL [call func]:   %15 = call i32* @__errno_location() #1, !dbg !590
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %16 = load i32* %15, !dbg !590
STORE [*p=q]:   store i32 %16, i32* %open_errno, align 4, !dbg !590
CALL [call func]:   %17 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !591
CONTEXT CALL [call func]:   %17 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !591
	We do not analyze function 'sigprocmask'
LOAD [p=*q]:   %18 = load i32* @ofd, align 4, !dbg !592
LOAD [p=*q]:   %22 = load i32* %open_errno, align 4, !dbg !594
CALL [call func]:   call void @shorten_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !595
CONTEXT CALL [call func]:   call void @shorten_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !595
STORE [*p=q]:   store i8* %name, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %trunc}, metadata !579), !dbg !580
STORE [*p=q]:   store i8* null, i8** %trunc, align 8, !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %plen}, metadata !582), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %min_part}, metadata !584), !dbg !585
STORE [*p=q]:   store i32 3, i32* %min_part, align 4, !dbg !586
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !587), !dbg !588
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !589
CALL [call func]:   %3 = call i64 @strlen(i8* %2) #4, !dbg !589
STORE [*p=q]:   store i32 %4, i32* %len, align 4, !dbg !589
LOAD [p=*q]:   %5 = load i32* @decompress, align 4, !dbg !590
LOAD [p=*q]:   %8 = load i32* %len, align 4, !dbg !591
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([15 x i8]* @.str45, i32 0, i32 0)) #7, !dbg !593
LOAD [p=*q]:   %12 = load i32* %len, align 4, !dbg !594
LOAD [p=*q]:   %15 = load i8** %1, align 8, !dbg !594
STORE [*p=q]:   store i8 0, i8* %16, !dbg !594
LOAD [p=*q]:   %18 = load i8** %1, align 8, !dbg !596
CALL [call func]:   %19 = call i8* (...)* bitcast (i8* (i8*)* @get_suffix to i8* (...)*)(i8* %18), !dbg !596
STORE [*p=q]:   store i8* %19, i8** %p, align 8, !dbg !596
LOAD [p=*q]:   %20 = load i8** %p, align 8, !dbg !597
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([22 x i8]* @.str46, i32 0, i32 0)) #7, !dbg !598
LOAD [p=*q]:   %24 = load i8** %p, align 8, !dbg !599
STORE [*p=q]:   store i8 0, i8* %24, !dbg !599
STORE [*p=q]:   store i32 1, i32* @save_orig_name, align 4, !dbg !600
LOAD [p=*q]:   %25 = load i32* %len, align 4, !dbg !601
LOAD [p=*q]:   %28 = load i8** %p, align 8, !dbg !602
CALL [call func]:   %30 = call i32 @strcmp(i8* %29, i8* getelementptr inbounds ([5 x i8]* @.str47, i32 0, i32 0)) #4, !dbg !602
LOAD [p=*q]:   %33 = load i8** %p, align 8, !dbg !603
CALL [call func]:   %35 = call i8* @strcpy(i8* %34, i8* getelementptr inbounds ([5 x i8]* @.str48, i32 0, i32 0)) #3, !dbg !603
LOAD [p=*q]:   %38 = load i8** %1, align 8, !dbg !607
CALL [call func]:   %39 = call i8* @strrchr(i8* %38, i32 47) #4, !dbg !607
STORE [*p=q]:   store i8* %39, i8** %p, align 8, !dbg !607
LOAD [p=*q]:   %40 = load i8** %p, align 8, !dbg !609
LOAD [p=*q]:   %43 = load i8** %p, align 8, !dbg !609
LOAD [p=*q]:   %46 = load i8** %1, align 8, !dbg !609
STORE [*p=q]:   store i8* %48, i8** %p, align 8, !dbg !609
LOAD [p=*q]:   %50 = load i8** %p, align 8, !dbg !610
LOAD [p=*q]:   %51 = load i8* %50, !dbg !610
LOAD [p=*q]:   %54 = load i8** %p, align 8, !dbg !611
CALL [call func]:   %55 = call i64 @strcspn(i8* %54, i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i32 0)) #4, !dbg !611
STORE [*p=q]:   store i32 %56, i32* %plen, align 4, !dbg !611
LOAD [p=*q]:   %57 = load i32* %plen, align 4, !dbg !613
LOAD [p=*q]:   %58 = load i8** %p, align 8, !dbg !613
STORE [*p=q]:   store i8* %60, i8** %p, align 8, !dbg !613
LOAD [p=*q]:   %61 = load i32* %plen, align 4, !dbg !614
LOAD [p=*q]:   %62 = load i32* %min_part, align 4, !dbg !614
LOAD [p=*q]:   %65 = load i8** %p, align 8, !dbg !615
STORE [*p=q]:   store i8* %66, i8** %trunc, align 8, !dbg !615
LOAD [p=*q]:   %68 = load i8** %p, align 8, !dbg !616
LOAD [p=*q]:   %69 = load i8* %68, !dbg !616
LOAD [p=*q]:   %72 = load i8** %p, align 8, !dbg !617
STORE [*p=q]:   store i8* %73, i8** %p, align 8, !dbg !617
LOAD [p=*q]:   %77 = load i8** %trunc, align 8, !dbg !619
LOAD [p=*q]:   %80 = load i32* %min_part, align 4, !dbg !619
STORE [*p=q]:   store i32 %81, i32* %min_part, align 4, !dbg !619
LOAD [p=*q]:   %86 = load i8** %trunc, align 8, !dbg !620
LOAD [p=*q]:   %90 = load i8** %trunc, align 8, !dbg !623
LOAD [p=*q]:   %92 = load i8* %91, !dbg !623
LOAD [p=*q]:   %93 = load i8** %trunc, align 8, !dbg !623
STORE [*p=q]:   store i8 %92, i8* %94, !dbg !623
LOAD [p=*q]:   %96 = load i8** %trunc, align 8, !dbg !625
STORE [*p=q]:   store i8* %97, i8** %trunc, align 8, !dbg !625
LOAD [p=*q]:   %98 = load i8* %96, !dbg !625
LOAD [p=*q]:   %101 = load i8** %trunc, align 8, !dbg !626
STORE [*p=q]:   store i8* %102, i8** %trunc, align 8, !dbg !626
LOAD [p=*q]:   %104 = load i8** %1, align 8, !dbg !628
LOAD [p=*q]:   %105 = load i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i64 0), !dbg !628
CALL [call func]:   %107 = call i8* @strrchr(i8* %104, i32 %106) #4, !dbg !628
STORE [*p=q]:   store i8* %107, i8** %trunc, align 8, !dbg !628
LOAD [p=*q]:   %108 = load i8** %trunc, align 8, !dbg !630
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([31 x i8]* @.str50, i32 0, i32 0)) #7, !dbg !631
LOAD [p=*q]:   %112 = load i8** %trunc, align 8, !dbg !632
LOAD [p=*q]:   %114 = load i8* %113, !dbg !632
LOAD [p=*q]:   %118 = load i8** %trunc, align 8, !dbg !633
STORE [*p=q]:   store i8* %119, i8** %trunc, align 8, !dbg !633
LOAD [p=*q]:   %122 = load i8** %trunc, align 8, !dbg !634
LOAD [p=*q]:   %123 = load i8** @z_suffix, align 8, !dbg !634
CALL [call func]:   %124 = call i8* @strcpy(i8* %122, i8* %123) #3, !dbg !634
STORE [*p=q]:   store i32 1, i32* %name_shortened, align 4, !dbg !597
CALL [call func]:   %25 = call i32 @check_ofname(), !dbg !599
CONTEXT CALL [call func]:   %25 = call i32 @check_ofname(), !dbg !599
LOAD [p=*q]:   %2 = load i32* @force, align 4, !dbg !574
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %ok}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* %ok, align 4, !dbg !579
LOAD [p=*q]:   %5 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %6 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %7 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([23 x i8]* @.str42, i32 0, i32 0), i8* %6, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !580
LOAD [p=*q]:   %8 = load i32* @foreground, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i8* @presume_input_tty, align 1, !dbg !581
LOAD [p=*q]:   %14 = load %struct._IO_FILE** @stdin, align 8, !dbg !582
CALL [call func]:   %15 = call i32 @fileno(%struct._IO_FILE* %14) #3, !dbg !582
CALL [call func]:   %16 = call i32 @isatty(i32 %15) #3, !dbg !582
LOAD [p=*q]:   %19 = load %struct._IO_FILE** @stderr, align 8, !dbg !583
CALL [call func]:   %20 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([37 x i8]* @.str43, i32 0, i32 0)), !dbg !583
LOAD [p=*q]:   %21 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
CALL [call func]:   %22 = call i32 @rpl_fflush(%struct._IO_FILE* %21), !dbg !585
CALL [call func]:   %23 = call zeroext i1 @yesno(), !dbg !586
STORE [*p=q]:   store i32 %24, i32* %ok, align 4, !dbg !586
LOAD [p=*q]:   %26 = load i32* %ok, align 4, !dbg !588
LOAD [p=*q]:   %29 = load %struct._IO_FILE** @stderr, align 8, !dbg !589
CALL [call func]:   %30 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([18 x i8]* @.str44, i32 0, i32 0)), !dbg !589
LOAD [p=*q]:   %31 = load i32* @exit_code, align 4, !dbg !591
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !592
STORE [*p=q]:   store i32 1, i32* %1, !dbg !593
CALL [call func]:   %37 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !595
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !596
STORE [*p=q]:   store i32 1, i32* %1, !dbg !598
STORE [*p=q]:   store i32 0, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %28 = load i32* @ifd, align 4, !dbg !600
CALL [call func]:   %29 = call i32 @close(i32 %28), !dbg !600
CONTEXT CALL [call func]:   %29 = call i32 @close(i32 %28), !dbg !600
	We do not analyze function 'close'
STORE [*p=q]:   store i32 1, i32* %1, !dbg !602
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !604
CONTEXT CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !604
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
LOAD [p=*q]:   %32 = load i32* @ifd, align 4, !dbg !605
CALL [call func]:   %33 = call i32 @close(i32 %32), !dbg !605
CONTEXT CALL [call func]:   %33 = call i32 @close(i32 %32), !dbg !605
	We do not analyze function 'close'
STORE [*p=q]:   store i32 1, i32* %1, !dbg !606
LOAD [p=*q]:   %36 = load i32* %name_shortened, align 4, !dbg !608
LOAD [p=*q]:   %39 = load i32* @decompress, align 4, !dbg !608
LOAD [p=*q]:   %42 = load i32* @quiet, align 4, !dbg !609
LOAD [p=*q]:   %45 = load %struct._IO_FILE** @stderr, align 8, !dbg !609
LOAD [p=*q]:   %46 = load i8** @program_name, align 8, !dbg !609
CALL [call func]:   %47 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([33 x i8]* @.str41, i32 0, i32 0), i8* %46, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !609
CONTEXT CALL [call func]:   %47 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([33 x i8]* @.str41, i32 0, i32 0), i8* %46, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !609
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %49 = load i32* @exit_code, align 4, !dbg !609
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !609
STORE [*p=q]:   store i32 0, i32* %1, !dbg !613
LOAD [p=*q]:   %55 = load i32* %1, !dbg !614
LOAD [p=*q]:   %215 = load i32* @decompress, align 4, !dbg !669
LOAD [p=*q]:   %218 = load i32* @save_orig_name, align 4, !dbg !669
LOAD [p=*q]:   %221 = load i32* @verbose, align 4, !dbg !669
LOAD [p=*q]:   %224 = load i32* @quiet, align 4, !dbg !669
LOAD [p=*q]:   %227 = load %struct._IO_FILE** @stderr, align 8, !dbg !670
LOAD [p=*q]:   %228 = load i8** @program_name, align 8, !dbg !670
CALL [call func]:   %229 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %227, i8* getelementptr inbounds ([25 x i8]* @.str34, i32 0, i32 0), i8* %228, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !670
CONTEXT CALL [call func]:   %229 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %227, i8* getelementptr inbounds ([25 x i8]* @.str34, i32 0, i32 0), i8* %228, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !670
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %232 = load i32* @save_orig_name, align 4, !dbg !673
LOAD [p=*q]:   %235 = load i32* @no_name, align 4, !dbg !674
STORE [*p=q]:   store i32 %238, i32* @save_orig_name, align 4, !dbg !674
LOAD [p=*q]:   %240 = load i32* @verbose, align 4, !dbg !675
LOAD [p=*q]:   %243 = load %struct._IO_FILE** @stderr, align 8, !dbg !676
CALL [call func]:   %244 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %243, i8* getelementptr inbounds ([5 x i8]* @.str35, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !676
CONTEXT CALL [call func]:   %244 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %243, i8* getelementptr inbounds ([5 x i8]* @.str35, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !676
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %247 = load i32 (i32, i32)** @work, align 8, !dbg !681
LOAD [p=*q]:   %248 = load i32* @ifd, align 4, !dbg !681
LOAD [p=*q]:   %249 = load i32* @ofd, align 4, !dbg !681
CALL [call func]:   %250 = call i32 %247(i32 %248, i32 %249), !dbg !681
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !683
CALL [call func]:   %254 = call i32 @input_eof(), !dbg !686
CONTEXT CALL [call func]:   %254 = call i32 @input_eof(), !dbg !686
LOAD [p=*q]:   %2 = load i32* @decompress, align 4, !dbg !574
LOAD [p=*q]:   %5 = load i32* @last_member, align 4, !dbg !574
STORE [*p=q]:   store i32 1, i32* %1, !dbg !576
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !577
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !577
LOAD [p=*q]:   %13 = load i32* @insize, align 4, !dbg !578
CALL [call func]:   %16 = call i32 @fill_inbuf(i32 1), !dbg !580
CONTEXT CALL [call func]:   %16 = call i32 @fill_inbuf(i32 1), !dbg !580
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 1, i32* %1, !dbg !581
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !582
STORE [*p=q]:   store i32 0, i32* %1, !dbg !584
LOAD [p=*q]:   %22 = load i32* %1, !dbg !585
LOAD [p=*q]:   %258 = load i32* @ifd, align 4, !dbg !688
CALL [call func]:   %259 = call i32 @get_method(i32 %258), !dbg !688
CONTEXT CALL [call func]:   %259 = call i32 @get_method(i32 %258), !dbg !688
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %flags}, metadata !576), !dbg !578
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[10 x i8]* %magic}, metadata !579), !dbg !581
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic0}, metadata !582), !dbg !583
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic1}, metadata !584), !dbg !585
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %stamp}, metadata !586), !dbg !588
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %3 = load i32* @force, align 4, !dbg !589
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !589
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !590
CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
CONTEXT CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %22, i32* %imagic0, align 4, !dbg !592
LOAD [p=*q]:   %23 = load i32* %imagic0, align 4, !dbg !593
STORE [*p=q]:   store i8 %24, i8* %25, align 1, !dbg !593
LOAD [p=*q]:   %26 = load i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* @insize, align 4, !dbg !594
LOAD [p=*q]:   %30 = load i32* @inptr, align 4, !dbg !594
STORE [*p=q]:   store i32 %31, i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %34 = load i8* %33, align 1, !dbg !594
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
CONTEXT CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %39, i32* %imagic1, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* %imagic1, align 4, !dbg !596
STORE [*p=q]:   store i8 %41, i8* %42, align 1, !dbg !596
LOAD [p=*q]:   %44 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %45 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %48 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %49, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !598
CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
CONTEXT CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %58, i8* %59, align 1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %imagic0, align 4, !dbg !601
LOAD [p=*q]:   %61 = load i8* %60, align 1, !dbg !602
LOAD [p=*q]:   %64 = load i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %65 = load i32* @insize, align 4, !dbg !603
LOAD [p=*q]:   %68 = load i32* @inptr, align 4, !dbg !603
STORE [*p=q]:   store i32 %69, i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %72 = load i8* %71, align 1, !dbg !603
CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
CONTEXT CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %78, i8* %79, align 1, !dbg !605
STORE [*p=q]:   store i32 0, i32* %imagic1, align 4, !dbg !606
LOAD [p=*q]:   %81 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %82 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %85 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %86, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %89 = load i8* %88, align 1, !dbg !608
CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
CONTEXT CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %94, i32* %imagic1, align 4, !dbg !610
LOAD [p=*q]:   %95 = load i32* %imagic1, align 4, !dbg !611
STORE [*p=q]:   store i8 %96, i8* %97, align 1, !dbg !611
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !612
LOAD [p=*q]:   %100 = load i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i32 %101, i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !614
STORE [*p=q]:   store i32 0, i32* @last_member, align 4, !dbg !615
CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
CONTEXT CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
	We do not analyze function 'memcmp'
CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
CONTEXT CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %110 = load i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %111 = load i32* @insize, align 4, !dbg !618
LOAD [p=*q]:   %114 = load i32* @inptr, align 4, !dbg !618
STORE [*p=q]:   store i32 %115, i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %118 = load i8* %117, align 1, !dbg !618
CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
CONTEXT CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %123, i32* @method, align 4, !dbg !620
LOAD [p=*q]:   %124 = load i32* @method, align 4, !dbg !621
LOAD [p=*q]:   %127 = load %struct._IO_FILE** @stderr, align 8, !dbg !622
LOAD [p=*q]:   %128 = load i8** @program_name, align 8, !dbg !622
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !622
CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
CONTEXT CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !624
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !625
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !626
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !627
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !627
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !627
CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
CONTEXT CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %146, i8* %flags, align 1, !dbg !628
LOAD [p=*q]:   %147 = load i8* %flags, align 1, !dbg !629
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !630
LOAD [p=*q]:   %153 = load i8** @program_name, align 8, !dbg !630
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
CONTEXT CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !632
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !633
LOAD [p=*q]:   %156 = load i8* %flags, align 1, !dbg !634
LOAD [p=*q]:   %161 = load %struct._IO_FILE** @stderr, align 8, !dbg !635
LOAD [p=*q]:   %162 = load i8** @program_name, align 8, !dbg !635
LOAD [p=*q]:   %163 = load i8* %flags, align 1, !dbg !635
CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
CONTEXT CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !637
LOAD [p=*q]:   %166 = load i32* @force, align 4, !dbg !638
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !639
LOAD [p=*q]:   %171 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %172 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %175 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %176, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %179 = load i8* %178, align 1, !dbg !641
CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
CONTEXT CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i64 %185, i64* %stamp, align 8, !dbg !642
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !643
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !643
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !643
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
CONTEXT CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %202 = load i64* %stamp, align 8, !dbg !644
STORE [*p=q]:   store i64 %203, i64* %stamp, align 8, !dbg !644
LOAD [p=*q]:   %204 = load i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* @insize, align 4, !dbg !645
LOAD [p=*q]:   %208 = load i32* @inptr, align 4, !dbg !645
STORE [*p=q]:   store i32 %209, i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %212 = load i8* %211, align 1, !dbg !645
CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
CONTEXT CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %220 = load i64* %stamp, align 8, !dbg !646
STORE [*p=q]:   store i64 %221, i64* %stamp, align 8, !dbg !646
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !647
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !647
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !647
CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
CONTEXT CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %238 = load i64* %stamp, align 8, !dbg !648
STORE [*p=q]:   store i64 %239, i64* %stamp, align 8, !dbg !648
LOAD [p=*q]:   %240 = load i64* %stamp, align 8, !dbg !649
LOAD [p=*q]:   %243 = load i32* @no_time, align 4, !dbg !649
LOAD [p=*q]:   %246 = load i64* %stamp, align 8, !dbg !650
STORE [*p=q]:   store i64 %246, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !650
STORE [*p=q]:   store i64 0, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !652
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %252 = load i32* @inptr, align 4, !dbg !654
STORE [*p=q]:   store i32 %253, i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %256 = load i8* %255, align 1, !dbg !654
CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
CONTEXT CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %262, i8* %263, align 1, !dbg !655
LOAD [p=*q]:   %264 = load i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %265 = load i32* @insize, align 4, !dbg !656
LOAD [p=*q]:   %268 = load i32* @inptr, align 4, !dbg !656
STORE [*p=q]:   store i32 %269, i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %272 = load i8* %271, align 1, !dbg !656
CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
CONTEXT CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %278, i8* %279, align 1, !dbg !657
LOAD [p=*q]:   %280 = load i8* %flags, align 1, !dbg !658
STORE [*p=q]:   store i8 8, i8* %285, align 1, !dbg !659
LOAD [p=*q]:   %286 = load i8* %flags, align 1, !dbg !661
STORE [*p=q]:   store i8 %286, i8* %287, align 1, !dbg !661
LOAD [p=*q]:   %288 = load i64* %stamp, align 8, !dbg !662
STORE [*p=q]:   store i8 %290, i8* %291, align 1, !dbg !662
LOAD [p=*q]:   %292 = load i64* %stamp, align 8, !dbg !663
STORE [*p=q]:   store i8 %295, i8* %296, align 1, !dbg !663
LOAD [p=*q]:   %297 = load i64* %stamp, align 8, !dbg !664
STORE [*p=q]:   store i8 %300, i8* %301, align 1, !dbg !664
LOAD [p=*q]:   %302 = load i64* %stamp, align 8, !dbg !665
STORE [*p=q]:   store i8 %304, i8* %305, align 1, !dbg !665
CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
CONTEXT CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
CONTEXT CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %310 = load i8* %flags, align 1, !dbg !669
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x i8]* %lenbuf}, metadata !670), !dbg !675
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !676), !dbg !677
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %315 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %316 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %319 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %320, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %323 = load i8* %322, align 1, !dbg !678
CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
CONTEXT CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %329, i8* %330, align 1, !dbg !679
STORE [*p=q]:   store i32 %331, i32* %len, align 4, !dbg !679
LOAD [p=*q]:   %332 = load i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %333 = load i32* @insize, align 4, !dbg !680
LOAD [p=*q]:   %336 = load i32* @inptr, align 4, !dbg !680
STORE [*p=q]:   store i32 %337, i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %340 = load i8* %339, align 1, !dbg !680
CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
CONTEXT CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %346, i8* %347, align 1, !dbg !681
LOAD [p=*q]:   %350 = load i32* %len, align 4, !dbg !681
STORE [*p=q]:   store i32 %351, i32* %len, align 4, !dbg !681
LOAD [p=*q]:   %352 = load i32* @verbose, align 4, !dbg !682
LOAD [p=*q]:   %355 = load %struct._IO_FILE** @stderr, align 8, !dbg !683
LOAD [p=*q]:   %356 = load i8** @program_name, align 8, !dbg !683
LOAD [p=*q]:   %357 = load i32* %len, align 4, !dbg !683
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
CONTEXT CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %360 = load i8* %flags, align 1, !dbg !686
CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
CONTEXT CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %368 = load i32* %len, align 4, !dbg !688
LOAD [p=*q]:   %370 = load i8* %flags, align 1, !dbg !688
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 %369, i32 %371), !dbg !688
LOAD [p=*q]:   %373 = load i8* %flags, align 1, !dbg !690
LOAD [p=*q]:   %378 = load i32* @no_name, align 4, !dbg !691
LOAD [p=*q]:   %381 = load i32* @to_stdout, align 4, !dbg !691
LOAD [p=*q]:   %384 = load i32* @list, align 4, !dbg !691
LOAD [p=*q]:   %387 = load i32* @part_nb, align 4, !dbg !691
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !696), !dbg !698
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
CONTEXT CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %393, i8** %p, align 8, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %base}, metadata !700), !dbg !701
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %394 = load i8** %p, align 8, !dbg !702
STORE [*p=q]:   store i8* %394, i8** %base, align 8, !dbg !702
LOAD [p=*q]:   %396 = load i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %397 = load i32* @insize, align 4, !dbg !705
LOAD [p=*q]:   %400 = load i32* @inptr, align 4, !dbg !705
STORE [*p=q]:   store i32 %401, i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %404 = load i8* %403, align 1, !dbg !705
CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
CONTEXT CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %411 = load i8** %p, align 8, !dbg !707
STORE [*p=q]:   store i8 %410, i8* %411, !dbg !707
LOAD [p=*q]:   %412 = load i8** %p, align 8, !dbg !708
STORE [*p=q]:   store i8* %413, i8** %p, align 8, !dbg !708
LOAD [p=*q]:   %414 = load i8* %412, !dbg !708
LOAD [p=*q]:   %419 = load i8** %p, align 8, !dbg !710
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
CONTEXT CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
STORE [*p=q]:   store i8* %m, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !576
LOAD [p=*q]:   %3 = load i8** @program_name, align 8, !dbg !576
LOAD [p=*q]:   %4 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
CALL [call func]:   call void @abort_gzip() #7, !dbg !578
LOAD [p=*q]:   %424 = load i8* %flags, align 1, !dbg !714
LOAD [p=*q]:   %429 = load i8** %base, align 8, !dbg !715
LOAD [p=*q]:   %430 = load i8** %p, align 8, !dbg !715
LOAD [p=*q]:   %431 = load i8** %base, align 8, !dbg !715
CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
CONTEXT CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %438 = load i8** %base, align 8, !dbg !716
CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
CONTEXT CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %439, i8** %p, align 8, !dbg !716
LOAD [p=*q]:   %440 = load i8** %base, align 8, !dbg !717
LOAD [p=*q]:   %441 = load i8** %p, align 8, !dbg !717
LOAD [p=*q]:   %442 = load i8** %p, align 8, !dbg !718
CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
CONTEXT CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
	We do not analyze function 'strlen'
CALL [call func]:   call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %441, i64 %444, i32 1, i1 false), !dbg !718
## get_method does not call llvm.memmove.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %445 = load i32* @list, align 4, !dbg !719
LOAD [p=*q]:   %448 = load i8** %base, align 8, !dbg !720
STORE [*p=q]:   store i32 0, i32* @list, align 4, !dbg !722
LOAD [p=*q]:   %455 = load i8* %flags, align 1, !dbg !725
LOAD [p=*q]:   %460 = load i8* %flags, align 1, !dbg !726
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %461), !dbg !726
LOAD [p=*q]:   %463 = load i8* %flags, align 1, !dbg !729
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %crc16}, metadata !730), !dbg !732
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
CONTEXT CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
STORE [*p=q]:   store i32 %471, i32* %crc16, align 4, !dbg !733
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %header16}, metadata !734), !dbg !735
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %472 = load i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %473 = load i32* @insize, align 4, !dbg !736
LOAD [p=*q]:   %476 = load i32* @inptr, align 4, !dbg !736
STORE [*p=q]:   store i32 %477, i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %480 = load i8* %479, align 1, !dbg !736
CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
CONTEXT CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %485, i32* %header16, align 4, !dbg !737
LOAD [p=*q]:   %486 = load i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %487 = load i32* @insize, align 4, !dbg !738
LOAD [p=*q]:   %490 = load i32* @inptr, align 4, !dbg !738
STORE [*p=q]:   store i32 %491, i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %494 = load i8* %493, align 1, !dbg !738
CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
CONTEXT CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %501 = load i32* %header16, align 4, !dbg !739
STORE [*p=q]:   store i32 %502, i32* %header16, align 4, !dbg !739
LOAD [p=*q]:   %503 = load i32* %header16, align 4, !dbg !740
LOAD [p=*q]:   %504 = load i32* %crc16, align 4, !dbg !740
LOAD [p=*q]:   %507 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
LOAD [p=*q]:   %508 = load i8** @program_name, align 8, !dbg !741
LOAD [p=*q]:   %509 = load i32* %header16, align 4, !dbg !741
LOAD [p=*q]:   %510 = load i32* %crc16, align 4, !dbg !741
CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
CONTEXT CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !743
LOAD [p=*q]:   %512 = load i32* @force, align 4, !dbg !744
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !745
LOAD [p=*q]:   %518 = load i32* @part_nb, align 4, !dbg !748
LOAD [p=*q]:   %521 = load i32* @inptr, align 4, !dbg !749
STORE [*p=q]:   store i64 %523, i64* @header_bytes, align 8, !dbg !749
CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
CONTEXT CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %530 = load i32* @inptr, align 4, !dbg !753
CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
CONTEXT CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !755
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !757
LOAD [p=*q]:   %536 = load i32* %2, align 4, !dbg !758
CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
CONTEXT CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %h}, metadata !576), !dbg !580
LOAD [p=*q]:   %3 = load i32* @inptr, align 4, !dbg !581
STORE [*p=q]:   store i8* %5, i8** %h, align 8, !dbg !581
LOAD [p=*q]:   %6 = load i32* %2, align 4, !dbg !582
STORE [*p=q]:   store i32 %6, i32* @ifd, align 4, !dbg !582
LOAD [p=*q]:   %7 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i8* %9, !dbg !583
LOAD [p=*q]:   %13 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %16 = load i8* %15, !dbg !583
LOAD [p=*q]:   %22 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %25 = load i8* %24, !dbg !583
LOAD [p=*q]:   %28 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %31 = load i8* %30, !dbg !583
LOAD [p=*q]:   %37 = load i32* @inptr, align 4, !dbg !583
STORE [*p=q]:   store i32 %38, i32* @inptr, align 4, !dbg !583
LOAD [p=*q]:   %39 = load i32* @inptr, align 4, !dbg !584
LOAD [p=*q]:   %40 = load i32* @insize, align 4, !dbg !584
LOAD [p=*q]:   %43 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %45 = load i8* %44, !dbg !584
LOAD [p=*q]:   %48 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %50 = load i8* %49, !dbg !584
LOAD [p=*q]:   %56 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %59 = load i8* %58, !dbg !584
LOAD [p=*q]:   %62 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %65 = load i8* %64, !dbg !584
LOAD [p=*q]:   %75 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
LOAD [p=*q]:   %76 = load i8** @program_name, align 8, !dbg !585
CALL [call func]:   %77 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([31 x i8]* @.str167, i32 0, i32 0), i8* %76, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !585
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !587
STORE [*p=q]:   store i32 1, i32* %1, !dbg !588
LOAD [p=*q]:   %79 = load i8** %h, align 8, !dbg !589
LOAD [p=*q]:   %81 = load i8* %80, !dbg !589
STORE [*p=q]:   store i32 %82, i32* @method, align 4, !dbg !589
LOAD [p=*q]:   %83 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %86 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %89 = load %struct._IO_FILE** @stderr, align 8, !dbg !591
LOAD [p=*q]:   %90 = load i8** @program_name, align 8, !dbg !591
CALL [call func]:   %91 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([58 x i8]* @.str1168, i32 0, i32 0), i8* %90, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !593
STORE [*p=q]:   store i32 1, i32* %1, !dbg !594
LOAD [p=*q]:   %93 = load i8** %h, align 8, !dbg !595
LOAD [p=*q]:   %95 = load i8* %94, !dbg !595
STORE [*p=q]:   store i32 %97, i32* @decrypt, align 4, !dbg !595
LOAD [p=*q]:   %100 = load %struct._IO_FILE** @stderr, align 8, !dbg !596
LOAD [p=*q]:   %101 = load i8** @program_name, align 8, !dbg !596
CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([38 x i8]* @.str2169, i32 0, i32 0), i8* %101, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !596
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !598
STORE [*p=q]:   store i32 1, i32* %1, !dbg !599
LOAD [p=*q]:   %104 = load i8** %h, align 8, !dbg !600
LOAD [p=*q]:   %106 = load i8* %105, !dbg !600
STORE [*p=q]:   store i32 %110, i32* @ext_header, align 4, !dbg !600
STORE [*p=q]:   store i32 1, i32* @pkzip, align 4, !dbg !601
STORE [*p=q]:   store i32 0, i32* %1, !dbg !602
LOAD [p=*q]:   %112 = load i32* %1, !dbg !603
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !759
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !760
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
CONTEXT CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unpack, i32 (i32, i32)** @work, align 8, !dbg !763
STORE [*p=q]:   store i32 2, i32* @method, align 4, !dbg !765
CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
CONTEXT CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzw, i32 (i32, i32)** @work, align 8, !dbg !768
STORE [*p=q]:   store i32 1, i32* @method, align 4, !dbg !770
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !771
CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
CONTEXT CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzh, i32 (i32, i32)** @work, align 8, !dbg !774
STORE [*p=q]:   store i32 3, i32* @method, align 4, !dbg !776
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !777
LOAD [p=*q]:   %557 = load i32* @force, align 4, !dbg !779
LOAD [p=*q]:   %560 = load i32* @to_stdout, align 4, !dbg !779
LOAD [p=*q]:   %563 = load i32* @list, align 4, !dbg !779
STORE [*p=q]:   store i32 0, i32* @method, align 4, !dbg !780
STORE [*p=q]:   store i32 (i32, i32)* @copy, i32 (i32, i32)** @work, align 8, !dbg !782
LOAD [p=*q]:   %566 = load i32* %imagic1, align 4, !dbg !783
LOAD [p=*q]:   %569 = load i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 %570, i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !785
LOAD [p=*q]:   %572 = load i32* %imagic0, align 4, !dbg !786
LOAD [p=*q]:   %575 = load %struct._IO_FILE** @stdout, align 8, !dbg !787
CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
CONTEXT CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
	We do not analyze function 'fileno'
CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
CONTEXT CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
STORE [*p=q]:   store i32 %fd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i8* %buf, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !576), !dbg !579
STORE [*p=q]:   store i32 %cnt, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !580), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !582), !dbg !584
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !586
LOAD [p=*q]:   %6 = load i8** %2, align 8, !dbg !586
LOAD [p=*q]:   %7 = load i32* %3, align 4, !dbg !586
CALL [call func]:   %8 = call i32 (...)* bitcast (i32 (i32, i8*, i32)* @write_buffer to i32 (...)*)(i32 %5, i8* %6, i32 %7), !dbg !586
STORE [*p=q]:   store i32 %8, i32* %n, align 4, !dbg !586
LOAD [p=*q]:   %9 = load i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %12 = load i32* %n, align 4, !dbg !587
CALL [call func]:   call void @write_error() #7, !dbg !589
LOAD [p=*q]:   %16 = load i32* %n, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %3, align 4, !dbg !591
STORE [*p=q]:   store i32 %18, i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %20 = load i32* %n, align 4, !dbg !592
STORE [*p=q]:   store i8* %22, i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %578 = load i64* @bytes_out, align 8, !dbg !789
STORE [*p=q]:   store i64 %579, i64* @bytes_out, align 8, !dbg !789
LOAD [p=*q]:   %587 = load i32* @method, align 4, !dbg !792
LOAD [p=*q]:   %590 = load i32* @method, align 4, !dbg !793
STORE [*p=q]:   store i32 %590, i32* %1, !dbg !793
LOAD [p=*q]:   %592 = load i32* @part_nb, align 4, !dbg !794
LOAD [p=*q]:   %595 = load %struct._IO_FILE** @stderr, align 8, !dbg !795
LOAD [p=*q]:   %596 = load i8** @program_name, align 8, !dbg !795
CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
CONTEXT CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !797
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !798
LOAD [p=*q]:   %600 = load i8* %599, align 1, !dbg !799
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %inbyte}, metadata !801), !dbg !803
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %604 = load i32* %imagic1, align 4, !dbg !804
STORE [*p=q]:   store i32 %604, i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %606 = load i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %610 = load i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %611 = load i32* @insize, align 4, !dbg !807
LOAD [p=*q]:   %614 = load i32* @inptr, align 4, !dbg !807
STORE [*p=q]:   store i32 %615, i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %618 = load i8* %617, align 1, !dbg !807
CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
CONTEXT CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %623, i32* %inbyte, align 4, !dbg !808
LOAD [p=*q]:   %625 = load i32* %inbyte, align 4, !dbg !809
LOAD [p=*q]:   %628 = load i32* @verbose, align 4, !dbg !810
LOAD [p=*q]:   %631 = load i32* @quiet, align 4, !dbg !812
LOAD [p=*q]:   %634 = load %struct._IO_FILE** @stderr, align 8, !dbg !812
LOAD [p=*q]:   %635 = load i8** @program_name, align 8, !dbg !812
CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
CONTEXT CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %638 = load i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 -3, i32* %1, !dbg !814
LOAD [p=*q]:   %645 = load i32* @quiet, align 4, !dbg !816
LOAD [p=*q]:   %648 = load %struct._IO_FILE** @stderr, align 8, !dbg !816
LOAD [p=*q]:   %649 = load i8** @program_name, align 8, !dbg !816
CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
CONTEXT CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %652 = load i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 -2, i32* %1, !dbg !818
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
STORE [*p=q]:   store i32 %259, i32* @method, align 4, !dbg !688
LOAD [p=*q]:   %260 = load i32* @method, align 4, !dbg !689
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !691
LOAD [p=*q]:   %265 = load i32* @ifd, align 4, !dbg !693
CALL [call func]:   %266 = call i32 @close(i32 %265), !dbg !693
CONTEXT CALL [call func]:   %266 = call i32 @close(i32 %265), !dbg !693
	We do not analyze function 'close'
CALL [call func]:   call void @read_error() #7, !dbg !694
CONTEXT CALL [call func]:   call void @read_error() #7, !dbg !694
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !574), !dbg !576
## read_error does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
CONTEXT CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %2 = load i32* %1, !dbg !577
STORE [*p=q]:   store i32 %2, i32* %e, align 4, !dbg !577
LOAD [p=*q]:   %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i8** @program_name, align 8, !dbg !578
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
CONTEXT CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %6 = load i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %9 = load i32* %e, align 4, !dbg !580
CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
CONTEXT CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %9, i32* %10, !dbg !580
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
CONTEXT CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
	We do not analyze function 'rpl_perror'
LOAD [p=*q]:   %12 = load %struct._IO_FILE** @stderr, align 8, !dbg !584
CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
CONTEXT CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @abort_gzip() #7, !dbg !586
CONTEXT CALL [call func]:   call void @abort_gzip() #7, !dbg !586
CALL [call func]:   call void @remove_output_file(), !dbg !574
CALL [call func]:   call void (...)* bitcast (void (i32)* @do_exit to void (...)*)(i32 1) #7, !dbg !576
LOAD [p=*q]:   %270 = load i32* @to_stdout, align 4, !dbg !695
CALL [call func]:   call void @copy_stat(%struct.stat* @istat), !dbg !696
CONTEXT CALL [call func]:   call void @copy_stat(%struct.stat* @istat), !dbg !696
STORE [*p=q]:   store %struct.stat* %ifstat, %struct.stat** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.stat** %1}, metadata !574), !dbg !576
## copy_stat does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %mode}, metadata !577), !dbg !580
## copy_stat does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %4 = load %struct.stat** %1, align 8, !dbg !581
LOAD [p=*q]:   %6 = load i32* %5, align 4, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %mode, align 4, !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !582), !dbg !583
## copy_stat does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x %struct.timespec]* %timespec}, metadata !584), !dbg !588
## copy_stat does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %9 = load %struct.stat** %1, align 8, !dbg !590
CALL [call func]:   %10 = call { i64, i64 } @get_stat_atime(%struct.stat* %9), !dbg !590
CONTEXT CALL [call func]:   %10 = call { i64, i64 } @get_stat_atime(%struct.stat* %9), !dbg !590
	We do not analyze function 'get_stat_atime'
STORE [*p=q]:   store i64 %13, i64* %12, align 1, !dbg !590
STORE [*p=q]:   store i64 %15, i64* %14, align 1, !dbg !590
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 16, i32 8, i1 false), !dbg !590
## copy_stat does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %19 = load %struct.stat** %1, align 8, !dbg !592
CALL [call func]:   %20 = call { i64, i64 } @get_stat_mtime(%struct.stat* %19), !dbg !592
CONTEXT CALL [call func]:   %20 = call { i64, i64 } @get_stat_mtime(%struct.stat* %19), !dbg !592
	We do not analyze function 'get_stat_mtime'
STORE [*p=q]:   store i64 %23, i64* %22, align 1, !dbg !592
STORE [*p=q]:   store i64 %25, i64* %24, align 1, !dbg !592
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false), !dbg !592
## copy_stat does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %28 = load i32* @decompress, align 4, !dbg !593
LOAD [p=*q]:   %31 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !593
LOAD [p=*q]:   %36 = load i64* %35, align 8, !dbg !593
LOAD [p=*q]:   %37 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !593
LOAD [p=*q]:   %42 = load i64* %41, align 8, !dbg !593
LOAD [p=*q]:   %43 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !593
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* bitcast (%struct.timespec* @time_stamp to i8*), i64 16, i32 8, i1 false), !dbg !594
## copy_stat does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %48 = load i32* @verbose, align 4, !dbg !596
LOAD [p=*q]:   %51 = load %struct._IO_FILE** @stderr, align 8, !dbg !597
CALL [call func]:   %52 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([25 x i8]* @.str40, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !597
CONTEXT CALL [call func]:   %52 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([25 x i8]* @.str40, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !597
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %55 = load i32* @ofd, align 4, !dbg !601
CALL [call func]:   %57 = call i32 @fdutimens(i32 %55, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), %struct.timespec* %56), !dbg !601
CONTEXT CALL [call func]:   %57 = call i32 @fdutimens(i32 %55, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), %struct.timespec* %56), !dbg !601
	We do not analyze function 'fdutimens'
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !602), !dbg !604
## copy_stat does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %60 = call i32* @__errno_location() #1, !dbg !605
CONTEXT CALL [call func]:   %60 = call i32* @__errno_location() #1, !dbg !605
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %61 = load i32* %60, !dbg !605
STORE [*p=q]:   store i32 %61, i32* %e, align 4, !dbg !605
LOAD [p=*q]:   %62 = load i32* @quiet, align 4, !dbg !606
LOAD [p=*q]:   %65 = load %struct._IO_FILE** @stderr, align 8, !dbg !606
LOAD [p=*q]:   %66 = load i8** @program_name, align 8, !dbg !606
CALL [call func]:   %67 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %66), !dbg !606
CONTEXT CALL [call func]:   %67 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %66), !dbg !606
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %69 = load i32* @exit_code, align 4, !dbg !606
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !606
LOAD [p=*q]:   %73 = load i32* @quiet, align 4, !dbg !608
LOAD [p=*q]:   %76 = load i32* %e, align 4, !dbg !609
CALL [call func]:   %77 = call i32* @__errno_location() #1, !dbg !609
CONTEXT CALL [call func]:   %77 = call i32* @__errno_location() #1, !dbg !609
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %76, i32* %77, !dbg !609
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !611
CONTEXT CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !611
	We do not analyze function 'rpl_perror'
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %__x}, metadata !614), !dbg !616
## copy_stat does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %80 = load i32* @ofd, align 4, !dbg !616
LOAD [p=*q]:   %81 = load %struct.stat** %1, align 8, !dbg !616
LOAD [p=*q]:   %83 = load i32* %82, align 4, !dbg !616
LOAD [p=*q]:   %84 = load %struct.stat** %1, align 8, !dbg !616
LOAD [p=*q]:   %86 = load i32* %85, align 4, !dbg !616
CALL [call func]:   %87 = call i32 @fchown(i32 %80, i32 %83, i32 %86) #3, !dbg !616
CONTEXT CALL [call func]:   %87 = call i32 @fchown(i32 %80, i32 %83, i32 %86) #3, !dbg !616
	We do not analyze function 'fchown'
STORE [*p=q]:   store i32 %87, i32* %__x, align 4, !dbg !616
LOAD [p=*q]:   %88 = load i32* %__x, align 4, !dbg !616
LOAD [p=*q]:   %89 = load i32* @ofd, align 4, !dbg !617
LOAD [p=*q]:   %90 = load i32* %mode, align 4, !dbg !617
CALL [call func]:   %91 = call i32 @fchmod(i32 %89, i32 %90) #3, !dbg !617
CONTEXT CALL [call func]:   %91 = call i32 @fchmod(i32 %89, i32 %90) #3, !dbg !617
	We do not analyze function 'fchmod'
STORE [*p=q]:   store i32 %91, i32* %r, align 4, !dbg !617
LOAD [p=*q]:   %92 = load i32* %r, align 4, !dbg !618
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e1}, metadata !619), !dbg !621
## copy_stat does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %95 = call i32* @__errno_location() #1, !dbg !622
CONTEXT CALL [call func]:   %95 = call i32* @__errno_location() #1, !dbg !622
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %96 = load i32* %95, !dbg !622
STORE [*p=q]:   store i32 %96, i32* %e1, align 4, !dbg !622
LOAD [p=*q]:   %97 = load i32* @quiet, align 4, !dbg !623
LOAD [p=*q]:   %100 = load %struct._IO_FILE** @stderr, align 8, !dbg !623
LOAD [p=*q]:   %101 = load i8** @program_name, align 8, !dbg !623
CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %101), !dbg !623
CONTEXT CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %101), !dbg !623
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %104 = load i32* @exit_code, align 4, !dbg !623
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !623
LOAD [p=*q]:   %108 = load i32* @quiet, align 4, !dbg !625
LOAD [p=*q]:   %111 = load i32* %e1, align 4, !dbg !626
CALL [call func]:   %112 = call i32* @__errno_location() #1, !dbg !626
CONTEXT CALL [call func]:   %112 = call i32* @__errno_location() #1, !dbg !626
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %111, i32* %112, !dbg !626
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !628
CONTEXT CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !628
	We do not analyze function 'rpl_perror'
LOAD [p=*q]:   %273 = load i32* @ofd, align 4, !dbg !698
CALL [call func]:   %274 = call i32 @close(i32 %273), !dbg !698
CONTEXT CALL [call func]:   %274 = call i32 @close(i32 %273), !dbg !698
	We do not analyze function 'close'
CALL [call func]:   call void @write_error() #7, !dbg !699
CONTEXT CALL [call func]:   call void @write_error() #7, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !574), !dbg !576
## write_error does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
CONTEXT CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %2 = load i32* %1, !dbg !577
STORE [*p=q]:   store i32 %2, i32* %e, align 4, !dbg !577
LOAD [p=*q]:   %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i8** @program_name, align 8, !dbg !578
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
CONTEXT CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %6 = load i32* %e, align 4, !dbg !579
CALL [call func]:   %7 = call i32* @__errno_location() #1, !dbg !579
CONTEXT CALL [call func]:   %7 = call i32* @__errno_location() #1, !dbg !579
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %6, i32* %7, !dbg !579
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !580
CONTEXT CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !580
	We do not analyze function 'rpl_perror'
CALL [call func]:   call void @abort_gzip() #7, !dbg !581
CONTEXT CALL [call func]:   call void @abort_gzip() #7, !dbg !581
CALL [call func]:   call void @remove_output_file(), !dbg !574
CALL [call func]:   call void (...)* bitcast (void (i32)* @do_exit to void (...)*)(i32 1) #7, !dbg !576
LOAD [p=*q]:   %278 = load i32* @keep, align 4, !dbg !700
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.__sigset_t* %oldset}, metadata !701), !dbg !703
## treat_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %unlink_errno}, metadata !704), !dbg !705
## treat_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %281 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !706
CONTEXT CALL [call func]:   %281 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !706
	We do not analyze function 'sigprocmask'
STORE [*p=q]:   store volatile i32 -1, i32* @remove_ofname_fd, align 4, !dbg !707
CALL [call func]:   %282 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !708
CONTEXT CALL [call func]:   %282 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !708
STORE [*p=q]:   store i8* %filename, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
## xunlink does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !576), !dbg !578
## xunlink does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i32 @unlink(i8* %2) #3, !dbg !579
CONTEXT CALL [call func]:   %3 = call i32 @unlink(i8* %2) #3, !dbg !579
	We do not analyze function 'unlink'
STORE [*p=q]:   store i32 %3, i32* %r, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* %r, align 4, !dbg !580
CALL [call func]:   %286 = call i32* @__errno_location() #1, !dbg !709
CONTEXT CALL [call func]:   %286 = call i32* @__errno_location() #1, !dbg !709
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %287 = load i32* %286, !dbg !709
STORE [*p=q]:   store i32 %289, i32* %unlink_errno, align 4, !dbg !709
CALL [call func]:   %290 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !710
CONTEXT CALL [call func]:   %290 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !710
	We do not analyze function 'sigprocmask'
LOAD [p=*q]:   %291 = load i32* %unlink_errno, align 4, !dbg !711
LOAD [p=*q]:   %294 = load i32* @quiet, align 4, !dbg !712
LOAD [p=*q]:   %297 = load %struct._IO_FILE** @stderr, align 8, !dbg !712
LOAD [p=*q]:   %298 = load i8** @program_name, align 8, !dbg !712
CALL [call func]:   %299 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %297, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %298), !dbg !712
CONTEXT CALL [call func]:   %299 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %297, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %298), !dbg !712
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %301 = load i32* @exit_code, align 4, !dbg !712
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !712
LOAD [p=*q]:   %305 = load i32* @quiet, align 4, !dbg !715
LOAD [p=*q]:   %308 = load i32* %unlink_errno, align 4, !dbg !716
CALL [call func]:   %309 = call i32* @__errno_location() #1, !dbg !716
CONTEXT CALL [call func]:   %309 = call i32* @__errno_location() #1, !dbg !716
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %308, i32* %309, !dbg !716
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !718
CONTEXT CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !718
	We do not analyze function 'rpl_perror'
LOAD [p=*q]:   %314 = load i32* @method, align 4, !dbg !723
LOAD [p=*q]:   %317 = load i32* @to_stdout, align 4, !dbg !724
CALL [call func]:   call void @remove_output_file(), !dbg !726
CONTEXT CALL [call func]:   call void @remove_output_file(), !dbg !726
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %fd}, metadata !574), !dbg !576
## remove_output_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.__sigset_t* %oldset}, metadata !577), !dbg !578
## remove_output_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %1 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !579
CONTEXT CALL [call func]:   %1 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !579
	We do not analyze function 'sigprocmask'
LOAD [p=*q]:   %2 = load volatile i32* @remove_ofname_fd, align 4, !dbg !580
STORE [*p=q]:   store i32 %2, i32* %fd, align 4, !dbg !580
LOAD [p=*q]:   %3 = load i32* %fd, align 4, !dbg !581
STORE [*p=q]:   store volatile i32 -1, i32* @remove_ofname_fd, align 4, !dbg !582
LOAD [p=*q]:   %6 = load i32* %fd, align 4, !dbg !584
CALL [call func]:   %7 = call i32 @close(i32 %6), !dbg !584
CONTEXT CALL [call func]:   %7 = call i32 @close(i32 %6), !dbg !584
	We do not analyze function 'close'
CALL [call func]:   %8 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !585
CONTEXT CALL [call func]:   %8 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !585
STORE [*p=q]:   store i8* %filename, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i32 @unlink(i8* %2) #3, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %r, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* %r, align 4, !dbg !580
CALL [call func]:   %10 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !587
CONTEXT CALL [call func]:   %10 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !587
	We do not analyze function 'sigprocmask'
LOAD [p=*q]:   %322 = load i32* @verbose, align 4, !dbg !728
LOAD [p=*q]:   %325 = load i32* @test, align 4, !dbg !729
LOAD [p=*q]:   %328 = load %struct._IO_FILE** @stderr, align 8, !dbg !731
CALL [call func]:   %329 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %328, i8* getelementptr inbounds ([4 x i8]* @.str37, i32 0, i32 0)), !dbg !731
CONTEXT CALL [call func]:   %329 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %328, i8* getelementptr inbounds ([4 x i8]* @.str37, i32 0, i32 0)), !dbg !731
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %331 = load i32* @decompress, align 4, !dbg !734
LOAD [p=*q]:   %334 = load i64* @bytes_out, align 8, !dbg !735
LOAD [p=*q]:   %335 = load i64* @bytes_in, align 8, !dbg !735
LOAD [p=*q]:   %336 = load i64* @header_bytes, align 8, !dbg !735
LOAD [p=*q]:   %339 = load i64* @bytes_out, align 8, !dbg !735
LOAD [p=*q]:   %340 = load %struct._IO_FILE** @stderr, align 8, !dbg !735
CALL [call func]:   call void @display_ratio(i64 %338, i64 %339, %struct._IO_FILE* %340), !dbg !735
CONTEXT CALL [call func]:   call void @display_ratio(i64 %338, i64 %339, %struct._IO_FILE* %340), !dbg !735
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
## display_ratio does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CONTEXT CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %342 = load i64* @bytes_in, align 8, !dbg !738
LOAD [p=*q]:   %343 = load i64* @bytes_out, align 8, !dbg !738
LOAD [p=*q]:   %344 = load i64* @header_bytes, align 8, !dbg !738
LOAD [p=*q]:   %347 = load i64* @bytes_in, align 8, !dbg !738
LOAD [p=*q]:   %348 = load %struct._IO_FILE** @stderr, align 8, !dbg !738
CALL [call func]:   call void @display_ratio(i64 %346, i64 %347, %struct._IO_FILE* %348), !dbg !738
CONTEXT CALL [call func]:   call void @display_ratio(i64 %346, i64 %347, %struct._IO_FILE* %348), !dbg !738
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
## display_ratio does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CONTEXT CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %351 = load i32* @test, align 4, !dbg !740
LOAD [p=*q]:   %354 = load i32* @to_stdout, align 4, !dbg !740
LOAD [p=*q]:   %357 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %357, i8* getelementptr inbounds ([21 x i8]* @.str38, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !741
CONTEXT CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %357, i8* getelementptr inbounds ([21 x i8]* @.str38, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !741
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %360 = load %struct._IO_FILE** @stderr, align 8, !dbg !744
CALL [call func]:   %361 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %360, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !744
CONTEXT CALL [call func]:   %361 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %360, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !744
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %171 = load i32* @rpl_optind, align 4, !dbg !681
STORE [*p=q]:   store i32 %172, i32* @rpl_optind, align 4, !dbg !681
LOAD [p=*q]:   %174 = load i8*** %3, align 8, !dbg !681
LOAD [p=*q]:   %176 = load i8** %175, !dbg !681
CALL [call func]:   call void @treat_file(i8* %176), !dbg !681
CONTEXT CALL [call func]:   call void @treat_file(i8* %176), !dbg !681
STORE [*p=q]:   store i8* %iname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
## treat_file does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %4 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([2 x i8]* @.str26, i32 0, i32 0)) #4, !dbg !576
CONTEXT CALL [call func]:   %4 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([2 x i8]* @.str26, i32 0, i32 0)) #4, !dbg !576
	We do not analyze function 'strcmp'
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %cflag}, metadata !578), !dbg !580
## treat_file does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %7 = load i32* @to_stdout, align 4, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %cflag, align 4, !dbg !581
CALL [call func]:   call void @treat_stdin(), !dbg !582
CONTEXT CALL [call func]:   call void @treat_stdin(), !dbg !582
LOAD [p=*q]:   %2 = load i32* @force, align 4, !dbg !574
LOAD [p=*q]:   %5 = load i32* @list, align 4, !dbg !574
LOAD [p=*q]:   %8 = load i8* @presume_input_tty, align 1, !dbg !574
LOAD [p=*q]:   %11 = load i32* @decompress, align 4, !dbg !576
LOAD [p=*q]:   %14 = load %struct._IO_FILE** @stdin, align 8, !dbg !576
LOAD [p=*q]:   %16 = load %struct._IO_FILE** @stdout, align 8, !dbg !576
CALL [call func]:   %19 = call i32 @fileno(%struct._IO_FILE* %18) #3, !dbg !576
CONTEXT CALL [call func]:   %19 = call i32 @fileno(%struct._IO_FILE* %18) #3, !dbg !576
	We do not analyze function 'fileno'
CALL [call func]:   %20 = call i32 @isatty(i32 %19) #3, !dbg !576
CONTEXT CALL [call func]:   %20 = call i32 @isatty(i32 %19) #3, !dbg !576
	We do not analyze function 'isatty'
LOAD [p=*q]:   %23 = load i32* @quiet, align 4, !dbg !577
LOAD [p=*q]:   %26 = load %struct._IO_FILE** @stderr, align 8, !dbg !579
LOAD [p=*q]:   %27 = load i8** @program_name, align 8, !dbg !579
LOAD [p=*q]:   %28 = load i32* @decompress, align 4, !dbg !579
LOAD [p=*q]:   %31 = load i32* @decompress, align 4, !dbg !579
LOAD [p=*q]:   %34 = load i8** @program_name, align 8, !dbg !579
CALL [call func]:   %35 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([93 x i8]* @.str78, i32 0, i32 0), i8* %27, i8* %30, i8* %33, i8* %34), !dbg !579
CONTEXT CALL [call func]:   %35 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([93 x i8]* @.str78, i32 0, i32 0), i8* %27, i8* %30, i8* %33, i8* %34), !dbg !579
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !580
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !580
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
LOAD [p=*q]:   %38 = load i32* @decompress, align 4, !dbg !581
LOAD [p=*q]:   %41 = load i32* @ascii, align 4, !dbg !581
LOAD [p=*q]:   %45 = load i32* @test, align 4, !dbg !584
LOAD [p=*q]:   %48 = load i32* @list, align 4, !dbg !584
LOAD [p=*q]:   %51 = load i32* @decompress, align 4, !dbg !584
LOAD [p=*q]:   %54 = load i32* @ascii, align 4, !dbg !584
CALL [call func]:   %58 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str82, i32 0, i32 0)) #3, !dbg !587
CONTEXT CALL [call func]:   %58 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str82, i32 0, i32 0)) #3, !dbg !587
	We do not analyze function 'strcpy'
CALL [call func]:   %59 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !588
CONTEXT CALL [call func]:   %59 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !588
	We do not analyze function 'strcpy'
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stdin, align 8, !dbg !589
CALL [call func]:   %61 = call i32 @fileno(%struct._IO_FILE* %60) #3, !dbg !589
CONTEXT CALL [call func]:   %61 = call i32 @fileno(%struct._IO_FILE* %60) #3, !dbg !589
	We do not analyze function 'fileno'
CALL [call func]:   %62 = call i32 @fstat(i32 %61, %struct.stat* @istat) #3, !dbg !589
CONTEXT CALL [call func]:   %62 = call i32 @fstat(i32 %61, %struct.stat* @istat) #3, !dbg !589
	We do not analyze function 'fstat'
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([15 x i8]* @.str83, i32 0, i32 0)), !dbg !590
CONTEXT CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([15 x i8]* @.str83, i32 0, i32 0)), !dbg !590
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !592
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !592
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
LOAD [p=*q]:   %66 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !593
LOAD [p=*q]:   %70 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 8), align 8, !dbg !593
STORE [*p=q]:   store i64 %73, i64* @ifile_size, align 8, !dbg !593
STORE [*p=q]:   store i64 -1, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !594
LOAD [p=*q]:   %74 = load i32* @no_time, align 4, !dbg !595
LOAD [p=*q]:   %77 = load i32* @list, align 4, !dbg !595
LOAD [p=*q]:   %80 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !596
CALL [call func]:   %84 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !598
CONTEXT CALL [call func]:   %84 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !598
	We do not analyze function 'get_stat_mtime'
STORE [*p=q]:   store i64 %87, i64* %86, align 1, !dbg !598
STORE [*p=q]:   store i64 %89, i64* %88, align 1, !dbg !598
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.timespec* @time_stamp to i8*), i8* %90, i64 16, i32 8, i1 false), !dbg !598
## treat_stdin does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
CALL [call func]:   call void @gettime(%struct.timespec* @time_stamp), !dbg !599
CONTEXT CALL [call func]:   call void @gettime(%struct.timespec* @time_stamp), !dbg !599
	We do not analyze function 'gettime'
CALL [call func]:   call void @clear_bufs(), !dbg !601
CONTEXT CALL [call func]:   call void @clear_bufs(), !dbg !601
STORE [*p=q]:   store i32 0, i32* @outcnt, align 4, !dbg !574
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !576
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !576
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !577
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !577
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !602
STORE [*p=q]:   store i32 0, i32* @part_nb, align 4, !dbg !603
LOAD [p=*q]:   %94 = load %struct._IO_FILE** @stdin, align 8, !dbg !604
CALL [call func]:   %95 = call i32 @fileno(%struct._IO_FILE* %94) #3, !dbg !604
CONTEXT CALL [call func]:   %95 = call i32 @fileno(%struct._IO_FILE* %94) #3, !dbg !604
	We do not analyze function 'fileno'
STORE [*p=q]:   store i32 %95, i32* @ifd, align 4, !dbg !604
LOAD [p=*q]:   %96 = load i32* @decompress, align 4, !dbg !605
LOAD [p=*q]:   %99 = load i32* @ifd, align 4, !dbg !606
CALL [call func]:   %100 = call i32 @get_method(i32 %99), !dbg !606
CONTEXT CALL [call func]:   %100 = call i32 @get_method(i32 %99), !dbg !606
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %flags}, metadata !576), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[10 x i8]* %magic}, metadata !579), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic0}, metadata !582), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic1}, metadata !584), !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %stamp}, metadata !586), !dbg !588
LOAD [p=*q]:   %3 = load i32* @force, align 4, !dbg !589
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !589
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !590
CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
STORE [*p=q]:   store i32 %22, i32* %imagic0, align 4, !dbg !592
LOAD [p=*q]:   %23 = load i32* %imagic0, align 4, !dbg !593
STORE [*p=q]:   store i8 %24, i8* %25, align 1, !dbg !593
LOAD [p=*q]:   %26 = load i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* @insize, align 4, !dbg !594
LOAD [p=*q]:   %30 = load i32* @inptr, align 4, !dbg !594
STORE [*p=q]:   store i32 %31, i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %34 = load i8* %33, align 1, !dbg !594
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
STORE [*p=q]:   store i32 %39, i32* %imagic1, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* %imagic1, align 4, !dbg !596
STORE [*p=q]:   store i8 %41, i8* %42, align 1, !dbg !596
LOAD [p=*q]:   %44 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %45 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %48 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %49, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !598
CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
STORE [*p=q]:   store i8 %58, i8* %59, align 1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %imagic0, align 4, !dbg !601
LOAD [p=*q]:   %61 = load i8* %60, align 1, !dbg !602
LOAD [p=*q]:   %64 = load i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %65 = load i32* @insize, align 4, !dbg !603
LOAD [p=*q]:   %68 = load i32* @inptr, align 4, !dbg !603
STORE [*p=q]:   store i32 %69, i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %72 = load i8* %71, align 1, !dbg !603
CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
STORE [*p=q]:   store i8 %78, i8* %79, align 1, !dbg !605
STORE [*p=q]:   store i32 0, i32* %imagic1, align 4, !dbg !606
LOAD [p=*q]:   %81 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %82 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %85 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %86, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %89 = load i8* %88, align 1, !dbg !608
CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
STORE [*p=q]:   store i32 %94, i32* %imagic1, align 4, !dbg !610
LOAD [p=*q]:   %95 = load i32* %imagic1, align 4, !dbg !611
STORE [*p=q]:   store i8 %96, i8* %97, align 1, !dbg !611
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !612
LOAD [p=*q]:   %100 = load i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i32 %101, i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !614
STORE [*p=q]:   store i32 0, i32* @last_member, align 4, !dbg !615
CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
LOAD [p=*q]:   %110 = load i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %111 = load i32* @insize, align 4, !dbg !618
LOAD [p=*q]:   %114 = load i32* @inptr, align 4, !dbg !618
STORE [*p=q]:   store i32 %115, i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %118 = load i8* %117, align 1, !dbg !618
CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
STORE [*p=q]:   store i32 %123, i32* @method, align 4, !dbg !620
LOAD [p=*q]:   %124 = load i32* @method, align 4, !dbg !621
LOAD [p=*q]:   %127 = load %struct._IO_FILE** @stderr, align 8, !dbg !622
LOAD [p=*q]:   %128 = load i8** @program_name, align 8, !dbg !622
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !622
CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !624
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !625
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !626
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !627
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !627
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !627
CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
STORE [*p=q]:   store i8 %146, i8* %flags, align 1, !dbg !628
LOAD [p=*q]:   %147 = load i8* %flags, align 1, !dbg !629
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !630
LOAD [p=*q]:   %153 = load i8** @program_name, align 8, !dbg !630
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !632
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !633
LOAD [p=*q]:   %156 = load i8* %flags, align 1, !dbg !634
LOAD [p=*q]:   %161 = load %struct._IO_FILE** @stderr, align 8, !dbg !635
LOAD [p=*q]:   %162 = load i8** @program_name, align 8, !dbg !635
LOAD [p=*q]:   %163 = load i8* %flags, align 1, !dbg !635
CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !637
LOAD [p=*q]:   %166 = load i32* @force, align 4, !dbg !638
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !639
LOAD [p=*q]:   %171 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %172 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %175 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %176, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %179 = load i8* %178, align 1, !dbg !641
CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
STORE [*p=q]:   store i64 %185, i64* %stamp, align 8, !dbg !642
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !643
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !643
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !643
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
LOAD [p=*q]:   %202 = load i64* %stamp, align 8, !dbg !644
STORE [*p=q]:   store i64 %203, i64* %stamp, align 8, !dbg !644
LOAD [p=*q]:   %204 = load i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* @insize, align 4, !dbg !645
LOAD [p=*q]:   %208 = load i32* @inptr, align 4, !dbg !645
STORE [*p=q]:   store i32 %209, i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %212 = load i8* %211, align 1, !dbg !645
CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
LOAD [p=*q]:   %220 = load i64* %stamp, align 8, !dbg !646
STORE [*p=q]:   store i64 %221, i64* %stamp, align 8, !dbg !646
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !647
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !647
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !647
CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
LOAD [p=*q]:   %238 = load i64* %stamp, align 8, !dbg !648
STORE [*p=q]:   store i64 %239, i64* %stamp, align 8, !dbg !648
LOAD [p=*q]:   %240 = load i64* %stamp, align 8, !dbg !649
LOAD [p=*q]:   %243 = load i32* @no_time, align 4, !dbg !649
LOAD [p=*q]:   %246 = load i64* %stamp, align 8, !dbg !650
STORE [*p=q]:   store i64 %246, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !650
STORE [*p=q]:   store i64 0, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !652
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %252 = load i32* @inptr, align 4, !dbg !654
STORE [*p=q]:   store i32 %253, i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %256 = load i8* %255, align 1, !dbg !654
CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
STORE [*p=q]:   store i8 %262, i8* %263, align 1, !dbg !655
LOAD [p=*q]:   %264 = load i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %265 = load i32* @insize, align 4, !dbg !656
LOAD [p=*q]:   %268 = load i32* @inptr, align 4, !dbg !656
STORE [*p=q]:   store i32 %269, i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %272 = load i8* %271, align 1, !dbg !656
CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
STORE [*p=q]:   store i8 %278, i8* %279, align 1, !dbg !657
LOAD [p=*q]:   %280 = load i8* %flags, align 1, !dbg !658
STORE [*p=q]:   store i8 8, i8* %285, align 1, !dbg !659
LOAD [p=*q]:   %286 = load i8* %flags, align 1, !dbg !661
STORE [*p=q]:   store i8 %286, i8* %287, align 1, !dbg !661
LOAD [p=*q]:   %288 = load i64* %stamp, align 8, !dbg !662
STORE [*p=q]:   store i8 %290, i8* %291, align 1, !dbg !662
LOAD [p=*q]:   %292 = load i64* %stamp, align 8, !dbg !663
STORE [*p=q]:   store i8 %295, i8* %296, align 1, !dbg !663
LOAD [p=*q]:   %297 = load i64* %stamp, align 8, !dbg !664
STORE [*p=q]:   store i8 %300, i8* %301, align 1, !dbg !664
LOAD [p=*q]:   %302 = load i64* %stamp, align 8, !dbg !665
STORE [*p=q]:   store i8 %304, i8* %305, align 1, !dbg !665
CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
LOAD [p=*q]:   %310 = load i8* %flags, align 1, !dbg !669
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x i8]* %lenbuf}, metadata !670), !dbg !675
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !676), !dbg !677
LOAD [p=*q]:   %315 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %316 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %319 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %320, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %323 = load i8* %322, align 1, !dbg !678
CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
STORE [*p=q]:   store i8 %329, i8* %330, align 1, !dbg !679
STORE [*p=q]:   store i32 %331, i32* %len, align 4, !dbg !679
LOAD [p=*q]:   %332 = load i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %333 = load i32* @insize, align 4, !dbg !680
LOAD [p=*q]:   %336 = load i32* @inptr, align 4, !dbg !680
STORE [*p=q]:   store i32 %337, i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %340 = load i8* %339, align 1, !dbg !680
CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
STORE [*p=q]:   store i8 %346, i8* %347, align 1, !dbg !681
LOAD [p=*q]:   %350 = load i32* %len, align 4, !dbg !681
STORE [*p=q]:   store i32 %351, i32* %len, align 4, !dbg !681
LOAD [p=*q]:   %352 = load i32* @verbose, align 4, !dbg !682
LOAD [p=*q]:   %355 = load %struct._IO_FILE** @stderr, align 8, !dbg !683
LOAD [p=*q]:   %356 = load i8** @program_name, align 8, !dbg !683
LOAD [p=*q]:   %357 = load i32* %len, align 4, !dbg !683
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
LOAD [p=*q]:   %360 = load i8* %flags, align 1, !dbg !686
CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
LOAD [p=*q]:   %368 = load i32* %len, align 4, !dbg !688
LOAD [p=*q]:   %370 = load i8* %flags, align 1, !dbg !688
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 %369, i32 %371), !dbg !688
LOAD [p=*q]:   %373 = load i8* %flags, align 1, !dbg !690
LOAD [p=*q]:   %378 = load i32* @no_name, align 4, !dbg !691
LOAD [p=*q]:   %381 = load i32* @to_stdout, align 4, !dbg !691
LOAD [p=*q]:   %384 = load i32* @list, align 4, !dbg !691
LOAD [p=*q]:   %387 = load i32* @part_nb, align 4, !dbg !691
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !696), !dbg !698
CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
STORE [*p=q]:   store i8* %393, i8** %p, align 8, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %base}, metadata !700), !dbg !701
LOAD [p=*q]:   %394 = load i8** %p, align 8, !dbg !702
STORE [*p=q]:   store i8* %394, i8** %base, align 8, !dbg !702
LOAD [p=*q]:   %396 = load i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %397 = load i32* @insize, align 4, !dbg !705
LOAD [p=*q]:   %400 = load i32* @inptr, align 4, !dbg !705
STORE [*p=q]:   store i32 %401, i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %404 = load i8* %403, align 1, !dbg !705
CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
LOAD [p=*q]:   %411 = load i8** %p, align 8, !dbg !707
STORE [*p=q]:   store i8 %410, i8* %411, !dbg !707
LOAD [p=*q]:   %412 = load i8** %p, align 8, !dbg !708
STORE [*p=q]:   store i8* %413, i8** %p, align 8, !dbg !708
LOAD [p=*q]:   %414 = load i8* %412, !dbg !708
LOAD [p=*q]:   %419 = load i8** %p, align 8, !dbg !710
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
LOAD [p=*q]:   %424 = load i8* %flags, align 1, !dbg !714
LOAD [p=*q]:   %429 = load i8** %base, align 8, !dbg !715
LOAD [p=*q]:   %430 = load i8** %p, align 8, !dbg !715
LOAD [p=*q]:   %431 = load i8** %base, align 8, !dbg !715
CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
LOAD [p=*q]:   %438 = load i8** %base, align 8, !dbg !716
CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
STORE [*p=q]:   store i8* %439, i8** %p, align 8, !dbg !716
LOAD [p=*q]:   %440 = load i8** %base, align 8, !dbg !717
LOAD [p=*q]:   %441 = load i8** %p, align 8, !dbg !717
LOAD [p=*q]:   %442 = load i8** %p, align 8, !dbg !718
CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
CALL [call func]:   call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %441, i64 %444, i32 1, i1 false), !dbg !718
LOAD [p=*q]:   %445 = load i32* @list, align 4, !dbg !719
LOAD [p=*q]:   %448 = load i8** %base, align 8, !dbg !720
STORE [*p=q]:   store i32 0, i32* @list, align 4, !dbg !722
LOAD [p=*q]:   %455 = load i8* %flags, align 1, !dbg !725
LOAD [p=*q]:   %460 = load i8* %flags, align 1, !dbg !726
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %461), !dbg !726
LOAD [p=*q]:   %463 = load i8* %flags, align 1, !dbg !729
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %crc16}, metadata !730), !dbg !732
CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
STORE [*p=q]:   store i32 %471, i32* %crc16, align 4, !dbg !733
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %header16}, metadata !734), !dbg !735
LOAD [p=*q]:   %472 = load i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %473 = load i32* @insize, align 4, !dbg !736
LOAD [p=*q]:   %476 = load i32* @inptr, align 4, !dbg !736
STORE [*p=q]:   store i32 %477, i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %480 = load i8* %479, align 1, !dbg !736
CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
STORE [*p=q]:   store i32 %485, i32* %header16, align 4, !dbg !737
LOAD [p=*q]:   %486 = load i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %487 = load i32* @insize, align 4, !dbg !738
LOAD [p=*q]:   %490 = load i32* @inptr, align 4, !dbg !738
STORE [*p=q]:   store i32 %491, i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %494 = load i8* %493, align 1, !dbg !738
CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
LOAD [p=*q]:   %501 = load i32* %header16, align 4, !dbg !739
STORE [*p=q]:   store i32 %502, i32* %header16, align 4, !dbg !739
LOAD [p=*q]:   %503 = load i32* %header16, align 4, !dbg !740
LOAD [p=*q]:   %504 = load i32* %crc16, align 4, !dbg !740
LOAD [p=*q]:   %507 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
LOAD [p=*q]:   %508 = load i8** @program_name, align 8, !dbg !741
LOAD [p=*q]:   %509 = load i32* %header16, align 4, !dbg !741
LOAD [p=*q]:   %510 = load i32* %crc16, align 4, !dbg !741
CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !743
LOAD [p=*q]:   %512 = load i32* @force, align 4, !dbg !744
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !745
LOAD [p=*q]:   %518 = load i32* @part_nb, align 4, !dbg !748
LOAD [p=*q]:   %521 = load i32* @inptr, align 4, !dbg !749
STORE [*p=q]:   store i64 %523, i64* @header_bytes, align 8, !dbg !749
CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
LOAD [p=*q]:   %530 = load i32* @inptr, align 4, !dbg !753
CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !755
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !757
LOAD [p=*q]:   %536 = load i32* %2, align 4, !dbg !758
CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !759
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !760
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
STORE [*p=q]:   store i32 (i32, i32)* @unpack, i32 (i32, i32)** @work, align 8, !dbg !763
STORE [*p=q]:   store i32 2, i32* @method, align 4, !dbg !765
CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
STORE [*p=q]:   store i32 (i32, i32)* @unlzw, i32 (i32, i32)** @work, align 8, !dbg !768
STORE [*p=q]:   store i32 1, i32* @method, align 4, !dbg !770
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !771
CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
STORE [*p=q]:   store i32 (i32, i32)* @unlzh, i32 (i32, i32)** @work, align 8, !dbg !774
STORE [*p=q]:   store i32 3, i32* @method, align 4, !dbg !776
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !777
LOAD [p=*q]:   %557 = load i32* @force, align 4, !dbg !779
LOAD [p=*q]:   %560 = load i32* @to_stdout, align 4, !dbg !779
LOAD [p=*q]:   %563 = load i32* @list, align 4, !dbg !779
STORE [*p=q]:   store i32 0, i32* @method, align 4, !dbg !780
STORE [*p=q]:   store i32 (i32, i32)* @copy, i32 (i32, i32)** @work, align 8, !dbg !782
LOAD [p=*q]:   %566 = load i32* %imagic1, align 4, !dbg !783
LOAD [p=*q]:   %569 = load i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 %570, i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !785
LOAD [p=*q]:   %572 = load i32* %imagic0, align 4, !dbg !786
LOAD [p=*q]:   %575 = load %struct._IO_FILE** @stdout, align 8, !dbg !787
CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
LOAD [p=*q]:   %578 = load i64* @bytes_out, align 8, !dbg !789
STORE [*p=q]:   store i64 %579, i64* @bytes_out, align 8, !dbg !789
LOAD [p=*q]:   %587 = load i32* @method, align 4, !dbg !792
LOAD [p=*q]:   %590 = load i32* @method, align 4, !dbg !793
STORE [*p=q]:   store i32 %590, i32* %1, !dbg !793
LOAD [p=*q]:   %592 = load i32* @part_nb, align 4, !dbg !794
LOAD [p=*q]:   %595 = load %struct._IO_FILE** @stderr, align 8, !dbg !795
LOAD [p=*q]:   %596 = load i8** @program_name, align 8, !dbg !795
CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !797
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !798
LOAD [p=*q]:   %600 = load i8* %599, align 1, !dbg !799
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %inbyte}, metadata !801), !dbg !803
LOAD [p=*q]:   %604 = load i32* %imagic1, align 4, !dbg !804
STORE [*p=q]:   store i32 %604, i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %606 = load i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %610 = load i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %611 = load i32* @insize, align 4, !dbg !807
LOAD [p=*q]:   %614 = load i32* @inptr, align 4, !dbg !807
STORE [*p=q]:   store i32 %615, i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %618 = load i8* %617, align 1, !dbg !807
CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
STORE [*p=q]:   store i32 %623, i32* %inbyte, align 4, !dbg !808
LOAD [p=*q]:   %625 = load i32* %inbyte, align 4, !dbg !809
LOAD [p=*q]:   %628 = load i32* @verbose, align 4, !dbg !810
LOAD [p=*q]:   %631 = load i32* @quiet, align 4, !dbg !812
LOAD [p=*q]:   %634 = load %struct._IO_FILE** @stderr, align 8, !dbg !812
LOAD [p=*q]:   %635 = load i8** @program_name, align 8, !dbg !812
CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
LOAD [p=*q]:   %638 = load i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 -3, i32* %1, !dbg !814
LOAD [p=*q]:   %645 = load i32* @quiet, align 4, !dbg !816
LOAD [p=*q]:   %648 = load %struct._IO_FILE** @stderr, align 8, !dbg !816
LOAD [p=*q]:   %649 = load i8** @program_name, align 8, !dbg !816
CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
LOAD [p=*q]:   %652 = load i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 -2, i32* %1, !dbg !818
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
STORE [*p=q]:   store i32 %100, i32* @method, align 4, !dbg !606
LOAD [p=*q]:   %101 = load i32* @method, align 4, !dbg !608
LOAD [p=*q]:   %104 = load i32* @exit_code, align 4, !dbg !609
CALL [call func]:   call void @do_exit(i32 %104) #7, !dbg !609
CONTEXT CALL [call func]:   call void @do_exit(i32 %104) #7, !dbg !609
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
LOAD [p=*q]:   %107 = load i32* @list, align 4, !dbg !612
LOAD [p=*q]:   %110 = load i32* @ifd, align 4, !dbg !613
LOAD [p=*q]:   %111 = load i32* @method, align 4, !dbg !613
CALL [call func]:   call void @do_list(i32 %110, i32 %111), !dbg !613
CONTEXT CALL [call func]:   call void @do_list(i32 %110, i32 %111), !dbg !613
STORE [*p=q]:   store i32 %ifd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %method, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %crc}, metadata !578), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %positive_off_t_width}, metadata !582), !dbg !583
STORE [*p=q]:   store i32 1, i32* %positive_off_t_width, align 4, !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %o}, metadata !585), !dbg !586
STORE [*p=q]:   store i64 9223372036854775807, i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %4 = load i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %7 = load i32* %positive_off_t_width, align 4, !dbg !589
STORE [*p=q]:   store i32 %8, i32* %positive_off_t_width, align 4, !dbg !589
LOAD [p=*q]:   %10 = load i64* %o, align 8, !dbg !592
STORE [*p=q]:   store i64 %11, i64* %o, align 8, !dbg !592
LOAD [p=*q]:   %13 = load i32* @do_list.first_time, align 4, !dbg !593
LOAD [p=*q]:   %16 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 0, i32* @do_list.first_time, align 4, !dbg !594
LOAD [p=*q]:   %19 = load i32* @verbose, align 4, !dbg !596
CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
LOAD [p=*q]:   %24 = load i32* @quiet, align 4, !dbg !600
LOAD [p=*q]:   %27 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %28 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %29 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %30 = load i32* %positive_off_t_width, align 4, !dbg !601
CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
LOAD [p=*q]:   %34 = load i32* %2, align 4, !dbg !605
LOAD [p=*q]:   %37 = load i64* @total_in, align 8, !dbg !606
LOAD [p=*q]:   %40 = load i64* @total_out, align 8, !dbg !606
LOAD [p=*q]:   %44 = load i32* @verbose, align 4, !dbg !609
CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
LOAD [p=*q]:   %49 = load i32* @verbose, align 4, !dbg !613
LOAD [p=*q]:   %52 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %55 = load %struct._IO_FILE** @stdout, align 8, !dbg !614
LOAD [p=*q]:   %56 = load i64* @total_in, align 8, !dbg !614
LOAD [p=*q]:   %57 = load i32* %positive_off_t_width, align 4, !dbg !614
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
LOAD [p=*q]:   %59 = load %struct._IO_FILE** @stdout, align 8, !dbg !617
LOAD [p=*q]:   %60 = load i64* @total_out, align 8, !dbg !617
LOAD [p=*q]:   %61 = load i32* %positive_off_t_width, align 4, !dbg !617
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
LOAD [p=*q]:   %64 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %65 = load i64* @total_in, align 8, !dbg !620
LOAD [p=*q]:   %66 = load i64* @header_bytes, align 8, !dbg !620
LOAD [p=*q]:   %69 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %70 = load %struct._IO_FILE** @stdout, align 8, !dbg !620
CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
STORE [*p=q]:   store i64 -1, i64* %crc, align 8, !dbg !623
STORE [*p=q]:   store i64 -1, i64* @bytes_out, align 8, !dbg !624
LOAD [p=*q]:   %74 = load i64* @ifile_size, align 8, !dbg !625
STORE [*p=q]:   store i64 %74, i64* @bytes_in, align 8, !dbg !625
LOAD [p=*q]:   %75 = load i32* %2, align 4, !dbg !626
LOAD [p=*q]:   %78 = load i32* @last_member, align 4, !dbg !626
LOAD [p=*q]:   %81 = load i32* %1, align 4, !dbg !627
CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
STORE [*p=q]:   store i64 %82, i64* @bytes_in, align 8, !dbg !627
LOAD [p=*q]:   %83 = load i64* @bytes_in, align 8, !dbg !629
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[8 x i8]* %buf}, metadata !630), !dbg !635
LOAD [p=*q]:   %86 = load i64* @bytes_in, align 8, !dbg !636
STORE [*p=q]:   store i64 %87, i64* @bytes_in, align 8, !dbg !636
LOAD [p=*q]:   %88 = load i32* %1, align 4, !dbg !637
CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
CALL [call func]:   call void @read_error() #7, !dbg !638
LOAD [p=*q]:   %95 = load i8* %94, align 1, !dbg !640
LOAD [p=*q]:   %99 = load i8* %98, align 1, !dbg !640
LOAD [p=*q]:   %108 = load i8* %107, !dbg !640
LOAD [p=*q]:   %114 = load i8* %113, !dbg !640
STORE [*p=q]:   store i64 %121, i64* %crc, align 8, !dbg !640
LOAD [p=*q]:   %125 = load i8* %124, !dbg !641
LOAD [p=*q]:   %131 = load i8* %130, !dbg !641
LOAD [p=*q]:   %141 = load i8* %140, !dbg !641
LOAD [p=*q]:   %148 = load i8* %147, !dbg !641
STORE [*p=q]:   store i64 %155, i64* @bytes_out, align 8, !dbg !641
LOAD [p=*q]:   %158 = load i32* @verbose, align 4, !dbg !644
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.tm** %tm}, metadata !645), !dbg !661
CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
STORE [*p=q]:   store %struct.tm* %161, %struct.tm** %tm, align 8, !dbg !662
LOAD [p=*q]:   %162 = load i32* %2, align 4, !dbg !663
LOAD [p=*q]:   %165 = load i8** %164, align 8, !dbg !663
LOAD [p=*q]:   %166 = load i64* %crc, align 8, !dbg !663
CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
LOAD [p=*q]:   %168 = load %struct.tm** %tm, align 8, !dbg !664
LOAD [p=*q]:   %171 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %173 = load i32* %172, align 4, !dbg !665
LOAD [p=*q]:   %177 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %179 = load i32* %178, align 4, !dbg !665
LOAD [p=*q]:   %180 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %182 = load i32* %181, align 4, !dbg !665
LOAD [p=*q]:   %183 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %185 = load i32* %184, align 4, !dbg !665
CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
LOAD [p=*q]:   %191 = load %struct._IO_FILE** @stdout, align 8, !dbg !668
LOAD [p=*q]:   %192 = load i64* @bytes_in, align 8, !dbg !668
LOAD [p=*q]:   %193 = load i32* %positive_off_t_width, align 4, !dbg !668
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
LOAD [p=*q]:   %195 = load %struct._IO_FILE** @stdout, align 8, !dbg !670
LOAD [p=*q]:   %196 = load i64* @bytes_out, align 8, !dbg !670
LOAD [p=*q]:   %197 = load i32* %positive_off_t_width, align 4, !dbg !670
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
LOAD [p=*q]:   %199 = load i64* @bytes_in, align 8, !dbg !672
STORE [*p=q]:   store i64 -1, i64* @total_in, align 8, !dbg !673
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !675
LOAD [p=*q]:   %203 = load i64* @total_in, align 8, !dbg !677
LOAD [p=*q]:   %206 = load i64* @bytes_in, align 8, !dbg !678
LOAD [p=*q]:   %207 = load i64* @total_in, align 8, !dbg !678
STORE [*p=q]:   store i64 %208, i64* @total_in, align 8, !dbg !678
LOAD [p=*q]:   %211 = load i64* @bytes_out, align 8, !dbg !681
STORE [*p=q]:   store i64 -1, i64* @total_out, align 8, !dbg !682
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !684
LOAD [p=*q]:   %215 = load i64* @total_out, align 8, !dbg !686
LOAD [p=*q]:   %218 = load i64* @bytes_out, align 8, !dbg !687
LOAD [p=*q]:   %219 = load i64* @total_out, align 8, !dbg !687
STORE [*p=q]:   store i64 %220, i64* @total_out, align 8, !dbg !687
LOAD [p=*q]:   %223 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %224 = load i64* @bytes_in, align 8, !dbg !690
LOAD [p=*q]:   %225 = load i64* @header_bytes, align 8, !dbg !690
LOAD [p=*q]:   %228 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %229 = load %struct._IO_FILE** @stdout, align 8, !dbg !690
CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
LOAD [p=*q]:   %114 = load i32 (i32, i32)** @work, align 8, !dbg !618
LOAD [p=*q]:   %115 = load %struct._IO_FILE** @stdin, align 8, !dbg !620
CALL [call func]:   %116 = call i32 @fileno(%struct._IO_FILE* %115) #3, !dbg !620
CONTEXT CALL [call func]:   %116 = call i32 @fileno(%struct._IO_FILE* %115) #3, !dbg !620
	We do not analyze function 'fileno'
LOAD [p=*q]:   %117 = load %struct._IO_FILE** @stdout, align 8, !dbg !621
CALL [call func]:   %118 = call i32 @fileno(%struct._IO_FILE* %117) #3, !dbg !621
CONTEXT CALL [call func]:   %118 = call i32 @fileno(%struct._IO_FILE* %117) #3, !dbg !621
	We do not analyze function 'fileno'
CALL [call func]:   %119 = call i32 %114(i32 %116, i32 %118), !dbg !621
CALL [call func]:   %123 = call i32 @input_eof(), !dbg !623
CONTEXT CALL [call func]:   %123 = call i32 @input_eof(), !dbg !623
LOAD [p=*q]:   %2 = load i32* @decompress, align 4, !dbg !574
LOAD [p=*q]:   %5 = load i32* @last_member, align 4, !dbg !574
STORE [*p=q]:   store i32 1, i32* %1, !dbg !576
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !577
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !577
LOAD [p=*q]:   %13 = load i32* @insize, align 4, !dbg !578
CALL [call func]:   %16 = call i32 @fill_inbuf(i32 1), !dbg !580
STORE [*p=q]:   store i32 1, i32* %1, !dbg !581
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !582
STORE [*p=q]:   store i32 0, i32* %1, !dbg !584
LOAD [p=*q]:   %22 = load i32* %1, !dbg !585
LOAD [p=*q]:   %127 = load i32* @ifd, align 4, !dbg !625
CALL [call func]:   %128 = call i32 @get_method(i32 %127), !dbg !625
CONTEXT CALL [call func]:   %128 = call i32 @get_method(i32 %127), !dbg !625
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %flags}, metadata !576), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[10 x i8]* %magic}, metadata !579), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic0}, metadata !582), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic1}, metadata !584), !dbg !585
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %stamp}, metadata !586), !dbg !588
LOAD [p=*q]:   %3 = load i32* @force, align 4, !dbg !589
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !589
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !590
CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
STORE [*p=q]:   store i32 %22, i32* %imagic0, align 4, !dbg !592
LOAD [p=*q]:   %23 = load i32* %imagic0, align 4, !dbg !593
STORE [*p=q]:   store i8 %24, i8* %25, align 1, !dbg !593
LOAD [p=*q]:   %26 = load i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* @insize, align 4, !dbg !594
LOAD [p=*q]:   %30 = load i32* @inptr, align 4, !dbg !594
STORE [*p=q]:   store i32 %31, i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %34 = load i8* %33, align 1, !dbg !594
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
STORE [*p=q]:   store i32 %39, i32* %imagic1, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* %imagic1, align 4, !dbg !596
STORE [*p=q]:   store i8 %41, i8* %42, align 1, !dbg !596
LOAD [p=*q]:   %44 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %45 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %48 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %49, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !598
CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
STORE [*p=q]:   store i8 %58, i8* %59, align 1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %imagic0, align 4, !dbg !601
LOAD [p=*q]:   %61 = load i8* %60, align 1, !dbg !602
LOAD [p=*q]:   %64 = load i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %65 = load i32* @insize, align 4, !dbg !603
LOAD [p=*q]:   %68 = load i32* @inptr, align 4, !dbg !603
STORE [*p=q]:   store i32 %69, i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %72 = load i8* %71, align 1, !dbg !603
CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
STORE [*p=q]:   store i8 %78, i8* %79, align 1, !dbg !605
STORE [*p=q]:   store i32 0, i32* %imagic1, align 4, !dbg !606
LOAD [p=*q]:   %81 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %82 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %85 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %86, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %89 = load i8* %88, align 1, !dbg !608
CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
STORE [*p=q]:   store i32 %94, i32* %imagic1, align 4, !dbg !610
LOAD [p=*q]:   %95 = load i32* %imagic1, align 4, !dbg !611
STORE [*p=q]:   store i8 %96, i8* %97, align 1, !dbg !611
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !612
LOAD [p=*q]:   %100 = load i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i32 %101, i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !614
STORE [*p=q]:   store i32 0, i32* @last_member, align 4, !dbg !615
CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
LOAD [p=*q]:   %110 = load i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %111 = load i32* @insize, align 4, !dbg !618
LOAD [p=*q]:   %114 = load i32* @inptr, align 4, !dbg !618
STORE [*p=q]:   store i32 %115, i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %118 = load i8* %117, align 1, !dbg !618
CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
STORE [*p=q]:   store i32 %123, i32* @method, align 4, !dbg !620
LOAD [p=*q]:   %124 = load i32* @method, align 4, !dbg !621
LOAD [p=*q]:   %127 = load %struct._IO_FILE** @stderr, align 8, !dbg !622
LOAD [p=*q]:   %128 = load i8** @program_name, align 8, !dbg !622
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !622
CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !624
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !625
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !626
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !627
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !627
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !627
CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
STORE [*p=q]:   store i8 %146, i8* %flags, align 1, !dbg !628
LOAD [p=*q]:   %147 = load i8* %flags, align 1, !dbg !629
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !630
LOAD [p=*q]:   %153 = load i8** @program_name, align 8, !dbg !630
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !632
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !633
LOAD [p=*q]:   %156 = load i8* %flags, align 1, !dbg !634
LOAD [p=*q]:   %161 = load %struct._IO_FILE** @stderr, align 8, !dbg !635
LOAD [p=*q]:   %162 = load i8** @program_name, align 8, !dbg !635
LOAD [p=*q]:   %163 = load i8* %flags, align 1, !dbg !635
CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !637
LOAD [p=*q]:   %166 = load i32* @force, align 4, !dbg !638
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !639
LOAD [p=*q]:   %171 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %172 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %175 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %176, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %179 = load i8* %178, align 1, !dbg !641
CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
STORE [*p=q]:   store i64 %185, i64* %stamp, align 8, !dbg !642
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !643
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !643
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !643
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
LOAD [p=*q]:   %202 = load i64* %stamp, align 8, !dbg !644
STORE [*p=q]:   store i64 %203, i64* %stamp, align 8, !dbg !644
LOAD [p=*q]:   %204 = load i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* @insize, align 4, !dbg !645
LOAD [p=*q]:   %208 = load i32* @inptr, align 4, !dbg !645
STORE [*p=q]:   store i32 %209, i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %212 = load i8* %211, align 1, !dbg !645
CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
LOAD [p=*q]:   %220 = load i64* %stamp, align 8, !dbg !646
STORE [*p=q]:   store i64 %221, i64* %stamp, align 8, !dbg !646
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !647
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !647
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !647
CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
LOAD [p=*q]:   %238 = load i64* %stamp, align 8, !dbg !648
STORE [*p=q]:   store i64 %239, i64* %stamp, align 8, !dbg !648
LOAD [p=*q]:   %240 = load i64* %stamp, align 8, !dbg !649
LOAD [p=*q]:   %243 = load i32* @no_time, align 4, !dbg !649
LOAD [p=*q]:   %246 = load i64* %stamp, align 8, !dbg !650
STORE [*p=q]:   store i64 %246, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !650
STORE [*p=q]:   store i64 0, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !652
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %252 = load i32* @inptr, align 4, !dbg !654
STORE [*p=q]:   store i32 %253, i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %256 = load i8* %255, align 1, !dbg !654
CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
STORE [*p=q]:   store i8 %262, i8* %263, align 1, !dbg !655
LOAD [p=*q]:   %264 = load i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %265 = load i32* @insize, align 4, !dbg !656
LOAD [p=*q]:   %268 = load i32* @inptr, align 4, !dbg !656
STORE [*p=q]:   store i32 %269, i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %272 = load i8* %271, align 1, !dbg !656
CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
STORE [*p=q]:   store i8 %278, i8* %279, align 1, !dbg !657
LOAD [p=*q]:   %280 = load i8* %flags, align 1, !dbg !658
STORE [*p=q]:   store i8 8, i8* %285, align 1, !dbg !659
LOAD [p=*q]:   %286 = load i8* %flags, align 1, !dbg !661
STORE [*p=q]:   store i8 %286, i8* %287, align 1, !dbg !661
LOAD [p=*q]:   %288 = load i64* %stamp, align 8, !dbg !662
STORE [*p=q]:   store i8 %290, i8* %291, align 1, !dbg !662
LOAD [p=*q]:   %292 = load i64* %stamp, align 8, !dbg !663
STORE [*p=q]:   store i8 %295, i8* %296, align 1, !dbg !663
LOAD [p=*q]:   %297 = load i64* %stamp, align 8, !dbg !664
STORE [*p=q]:   store i8 %300, i8* %301, align 1, !dbg !664
LOAD [p=*q]:   %302 = load i64* %stamp, align 8, !dbg !665
STORE [*p=q]:   store i8 %304, i8* %305, align 1, !dbg !665
CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
LOAD [p=*q]:   %310 = load i8* %flags, align 1, !dbg !669
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x i8]* %lenbuf}, metadata !670), !dbg !675
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !676), !dbg !677
LOAD [p=*q]:   %315 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %316 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %319 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %320, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %323 = load i8* %322, align 1, !dbg !678
CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
STORE [*p=q]:   store i8 %329, i8* %330, align 1, !dbg !679
STORE [*p=q]:   store i32 %331, i32* %len, align 4, !dbg !679
LOAD [p=*q]:   %332 = load i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %333 = load i32* @insize, align 4, !dbg !680
LOAD [p=*q]:   %336 = load i32* @inptr, align 4, !dbg !680
STORE [*p=q]:   store i32 %337, i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %340 = load i8* %339, align 1, !dbg !680
CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
STORE [*p=q]:   store i8 %346, i8* %347, align 1, !dbg !681
LOAD [p=*q]:   %350 = load i32* %len, align 4, !dbg !681
STORE [*p=q]:   store i32 %351, i32* %len, align 4, !dbg !681
LOAD [p=*q]:   %352 = load i32* @verbose, align 4, !dbg !682
LOAD [p=*q]:   %355 = load %struct._IO_FILE** @stderr, align 8, !dbg !683
LOAD [p=*q]:   %356 = load i8** @program_name, align 8, !dbg !683
LOAD [p=*q]:   %357 = load i32* %len, align 4, !dbg !683
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
LOAD [p=*q]:   %360 = load i8* %flags, align 1, !dbg !686
CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
LOAD [p=*q]:   %368 = load i32* %len, align 4, !dbg !688
LOAD [p=*q]:   %370 = load i8* %flags, align 1, !dbg !688
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 %369, i32 %371), !dbg !688
LOAD [p=*q]:   %373 = load i8* %flags, align 1, !dbg !690
LOAD [p=*q]:   %378 = load i32* @no_name, align 4, !dbg !691
LOAD [p=*q]:   %381 = load i32* @to_stdout, align 4, !dbg !691
LOAD [p=*q]:   %384 = load i32* @list, align 4, !dbg !691
LOAD [p=*q]:   %387 = load i32* @part_nb, align 4, !dbg !691
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !696), !dbg !698
CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
STORE [*p=q]:   store i8* %393, i8** %p, align 8, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %base}, metadata !700), !dbg !701
LOAD [p=*q]:   %394 = load i8** %p, align 8, !dbg !702
STORE [*p=q]:   store i8* %394, i8** %base, align 8, !dbg !702
LOAD [p=*q]:   %396 = load i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %397 = load i32* @insize, align 4, !dbg !705
LOAD [p=*q]:   %400 = load i32* @inptr, align 4, !dbg !705
STORE [*p=q]:   store i32 %401, i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %404 = load i8* %403, align 1, !dbg !705
CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
LOAD [p=*q]:   %411 = load i8** %p, align 8, !dbg !707
STORE [*p=q]:   store i8 %410, i8* %411, !dbg !707
LOAD [p=*q]:   %412 = load i8** %p, align 8, !dbg !708
STORE [*p=q]:   store i8* %413, i8** %p, align 8, !dbg !708
LOAD [p=*q]:   %414 = load i8* %412, !dbg !708
LOAD [p=*q]:   %419 = load i8** %p, align 8, !dbg !710
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
LOAD [p=*q]:   %424 = load i8* %flags, align 1, !dbg !714
LOAD [p=*q]:   %429 = load i8** %base, align 8, !dbg !715
LOAD [p=*q]:   %430 = load i8** %p, align 8, !dbg !715
LOAD [p=*q]:   %431 = load i8** %base, align 8, !dbg !715
CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
LOAD [p=*q]:   %438 = load i8** %base, align 8, !dbg !716
CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
STORE [*p=q]:   store i8* %439, i8** %p, align 8, !dbg !716
LOAD [p=*q]:   %440 = load i8** %base, align 8, !dbg !717
LOAD [p=*q]:   %441 = load i8** %p, align 8, !dbg !717
LOAD [p=*q]:   %442 = load i8** %p, align 8, !dbg !718
CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
CALL [call func]:   call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %441, i64 %444, i32 1, i1 false), !dbg !718
LOAD [p=*q]:   %445 = load i32* @list, align 4, !dbg !719
LOAD [p=*q]:   %448 = load i8** %base, align 8, !dbg !720
STORE [*p=q]:   store i32 0, i32* @list, align 4, !dbg !722
LOAD [p=*q]:   %455 = load i8* %flags, align 1, !dbg !725
LOAD [p=*q]:   %460 = load i8* %flags, align 1, !dbg !726
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %461), !dbg !726
LOAD [p=*q]:   %463 = load i8* %flags, align 1, !dbg !729
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %crc16}, metadata !730), !dbg !732
CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
STORE [*p=q]:   store i32 %471, i32* %crc16, align 4, !dbg !733
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %header16}, metadata !734), !dbg !735
LOAD [p=*q]:   %472 = load i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %473 = load i32* @insize, align 4, !dbg !736
LOAD [p=*q]:   %476 = load i32* @inptr, align 4, !dbg !736
STORE [*p=q]:   store i32 %477, i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %480 = load i8* %479, align 1, !dbg !736
CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
STORE [*p=q]:   store i32 %485, i32* %header16, align 4, !dbg !737
LOAD [p=*q]:   %486 = load i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %487 = load i32* @insize, align 4, !dbg !738
LOAD [p=*q]:   %490 = load i32* @inptr, align 4, !dbg !738
STORE [*p=q]:   store i32 %491, i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %494 = load i8* %493, align 1, !dbg !738
CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
LOAD [p=*q]:   %501 = load i32* %header16, align 4, !dbg !739
STORE [*p=q]:   store i32 %502, i32* %header16, align 4, !dbg !739
LOAD [p=*q]:   %503 = load i32* %header16, align 4, !dbg !740
LOAD [p=*q]:   %504 = load i32* %crc16, align 4, !dbg !740
LOAD [p=*q]:   %507 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
LOAD [p=*q]:   %508 = load i8** @program_name, align 8, !dbg !741
LOAD [p=*q]:   %509 = load i32* %header16, align 4, !dbg !741
LOAD [p=*q]:   %510 = load i32* %crc16, align 4, !dbg !741
CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !743
LOAD [p=*q]:   %512 = load i32* @force, align 4, !dbg !744
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !745
LOAD [p=*q]:   %518 = load i32* @part_nb, align 4, !dbg !748
LOAD [p=*q]:   %521 = load i32* @inptr, align 4, !dbg !749
STORE [*p=q]:   store i64 %523, i64* @header_bytes, align 8, !dbg !749
CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
LOAD [p=*q]:   %530 = load i32* @inptr, align 4, !dbg !753
CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !755
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !757
LOAD [p=*q]:   %536 = load i32* %2, align 4, !dbg !758
CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !759
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !760
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
STORE [*p=q]:   store i32 (i32, i32)* @unpack, i32 (i32, i32)** @work, align 8, !dbg !763
STORE [*p=q]:   store i32 2, i32* @method, align 4, !dbg !765
CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
STORE [*p=q]:   store i32 (i32, i32)* @unlzw, i32 (i32, i32)** @work, align 8, !dbg !768
STORE [*p=q]:   store i32 1, i32* @method, align 4, !dbg !770
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !771
CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
STORE [*p=q]:   store i32 (i32, i32)* @unlzh, i32 (i32, i32)** @work, align 8, !dbg !774
STORE [*p=q]:   store i32 3, i32* @method, align 4, !dbg !776
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !777
LOAD [p=*q]:   %557 = load i32* @force, align 4, !dbg !779
LOAD [p=*q]:   %560 = load i32* @to_stdout, align 4, !dbg !779
LOAD [p=*q]:   %563 = load i32* @list, align 4, !dbg !779
STORE [*p=q]:   store i32 0, i32* @method, align 4, !dbg !780
STORE [*p=q]:   store i32 (i32, i32)* @copy, i32 (i32, i32)** @work, align 8, !dbg !782
LOAD [p=*q]:   %566 = load i32* %imagic1, align 4, !dbg !783
LOAD [p=*q]:   %569 = load i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 %570, i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !785
LOAD [p=*q]:   %572 = load i32* %imagic0, align 4, !dbg !786
LOAD [p=*q]:   %575 = load %struct._IO_FILE** @stdout, align 8, !dbg !787
CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
LOAD [p=*q]:   %578 = load i64* @bytes_out, align 8, !dbg !789
STORE [*p=q]:   store i64 %579, i64* @bytes_out, align 8, !dbg !789
LOAD [p=*q]:   %587 = load i32* @method, align 4, !dbg !792
LOAD [p=*q]:   %590 = load i32* @method, align 4, !dbg !793
STORE [*p=q]:   store i32 %590, i32* %1, !dbg !793
LOAD [p=*q]:   %592 = load i32* @part_nb, align 4, !dbg !794
LOAD [p=*q]:   %595 = load %struct._IO_FILE** @stderr, align 8, !dbg !795
LOAD [p=*q]:   %596 = load i8** @program_name, align 8, !dbg !795
CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !797
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !798
LOAD [p=*q]:   %600 = load i8* %599, align 1, !dbg !799
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %inbyte}, metadata !801), !dbg !803
LOAD [p=*q]:   %604 = load i32* %imagic1, align 4, !dbg !804
STORE [*p=q]:   store i32 %604, i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %606 = load i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %610 = load i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %611 = load i32* @insize, align 4, !dbg !807
LOAD [p=*q]:   %614 = load i32* @inptr, align 4, !dbg !807
STORE [*p=q]:   store i32 %615, i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %618 = load i8* %617, align 1, !dbg !807
CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
STORE [*p=q]:   store i32 %623, i32* %inbyte, align 4, !dbg !808
LOAD [p=*q]:   %625 = load i32* %inbyte, align 4, !dbg !809
LOAD [p=*q]:   %628 = load i32* @verbose, align 4, !dbg !810
LOAD [p=*q]:   %631 = load i32* @quiet, align 4, !dbg !812
LOAD [p=*q]:   %634 = load %struct._IO_FILE** @stderr, align 8, !dbg !812
LOAD [p=*q]:   %635 = load i8** @program_name, align 8, !dbg !812
CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
LOAD [p=*q]:   %638 = load i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 -3, i32* %1, !dbg !814
LOAD [p=*q]:   %645 = load i32* @quiet, align 4, !dbg !816
LOAD [p=*q]:   %648 = load %struct._IO_FILE** @stderr, align 8, !dbg !816
LOAD [p=*q]:   %649 = load i8** @program_name, align 8, !dbg !816
CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
LOAD [p=*q]:   %652 = load i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 -2, i32* %1, !dbg !818
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
STORE [*p=q]:   store i32 %128, i32* @method, align 4, !dbg !625
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !626
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !628
LOAD [p=*q]:   %134 = load i32* @verbose, align 4, !dbg !630
LOAD [p=*q]:   %137 = load i32* @test, align 4, !dbg !631
LOAD [p=*q]:   %140 = load %struct._IO_FILE** @stderr, align 8, !dbg !633
CALL [call func]:   %141 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %140, i8* getelementptr inbounds ([5 x i8]* @.str84, i32 0, i32 0)), !dbg !633
CONTEXT CALL [call func]:   %141 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %140, i8* getelementptr inbounds ([5 x i8]* @.str84, i32 0, i32 0)), !dbg !633
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %143 = load i32* @decompress, align 4, !dbg !636
LOAD [p=*q]:   %146 = load i64* @bytes_in, align 8, !dbg !637
LOAD [p=*q]:   %147 = load i64* @bytes_out, align 8, !dbg !637
LOAD [p=*q]:   %148 = load i64* @header_bytes, align 8, !dbg !637
LOAD [p=*q]:   %151 = load i64* @bytes_in, align 8, !dbg !637
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !637
CALL [call func]:   call void @display_ratio(i64 %150, i64 %151, %struct._IO_FILE* %152), !dbg !637
CONTEXT CALL [call func]:   call void @display_ratio(i64 %150, i64 %151, %struct._IO_FILE* %152), !dbg !637
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
LOAD [p=*q]:   %153 = load %struct._IO_FILE** @stderr, align 8, !dbg !639
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !639
CONTEXT CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !639
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %8 = load i32* %cflag, align 4, !dbg !583
STORE [*p=q]:   store i32 %8, i32* @to_stdout, align 4, !dbg !583
LOAD [p=*q]:   %10 = load i8** %1, align 8, !dbg !585
CALL [call func]:   %11 = call i32 @open_input_file(i8* %10, %struct.stat* @istat), !dbg !585
CONTEXT CALL [call func]:   %11 = call i32 @open_input_file(i8* %10, %struct.stat* @istat), !dbg !585
STORE [*p=q]:   store i8* %iname, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !574), !dbg !575
## open_input_file does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store %struct.stat* %sbuf, %struct.stat** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.stat** %3}, metadata !576), !dbg !578
## open_input_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %ilen}, metadata !579), !dbg !581
## open_input_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %z_suffix_errno}, metadata !582), !dbg !583
## open_input_file does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 0, i32* %z_suffix_errno, align 4, !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %suf}, metadata !585), !dbg !587
## open_input_file does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8** getelementptr inbounds ([6 x i8*]* @open_input_file.suffixes, i32 0, i32 0), i8*** %suf, align 8, !dbg !588
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %s}, metadata !589), !dbg !590
## open_input_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %fd}, metadata !591), !dbg !592
## open_input_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %open_flags}, metadata !593), !dbg !594
## open_input_file does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %4 = load i32* @ascii, align 4, !dbg !595
LOAD [p=*q]:   %7 = load i32* @decompress, align 4, !dbg !595
STORE [*p=q]:   store i32 %13, i32* %open_flags, align 4
LOAD [p=*q]:   %14 = load i8** @z_suffix, align 8, !dbg !596
LOAD [p=*q]:   %15 = load i8*** %suf, align 8, !dbg !596
STORE [*p=q]:   store i8* %14, i8** %15, !dbg !596
LOAD [p=*q]:   %16 = load i8** %2, align 8, !dbg !597
CALL [call func]:   %17 = call i64 @strlen(i8* %16) #4, !dbg !597
CONTEXT CALL [call func]:   %17 = call i64 @strlen(i8* %16) #4, !dbg !597
	We do not analyze function 'strlen'
LOAD [p=*q]:   %21 = load i8** %2, align 8, !dbg !599
CALL [call func]:   %22 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %21) #3, !dbg !599
CONTEXT CALL [call func]:   %22 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %21) #3, !dbg !599
	We do not analyze function 'strcpy'
LOAD [p=*q]:   %23 = load i32* %open_flags, align 4, !dbg !600
LOAD [p=*q]:   %24 = load %struct.stat** %3, align 8, !dbg !600
CALL [call func]:   %25 = call i32 @open_and_stat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %23, i32 384, %struct.stat* %24), !dbg !600
CONTEXT CALL [call func]:   %25 = call i32 @open_and_stat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %23, i32 384, %struct.stat* %24), !dbg !600
STORE [*p=q]:   store i8* %name, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %flags, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !576), !dbg !577
STORE [*p=q]:   store i32 %mode, i32* %4, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %4}, metadata !578), !dbg !580
STORE [*p=q]:   store %struct.stat* %st, %struct.stat** %5, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.stat** %5}, metadata !581), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %fd}, metadata !584), !dbg !586
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !587
LOAD [p=*q]:   %9 = load i32* @force, align 4, !dbg !587
LOAD [p=*q]:   %12 = load i32* %3, align 4, !dbg !588
STORE [*p=q]:   store i32 %13, i32* %3, align 4, !dbg !588
LOAD [p=*q]:   %15 = load i8** %2, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %4, align 4, !dbg !591
CALL [call func]:   %18 = call i32 (i8*, i32, ...)* @open_safer(i8* %15, i32 %16, i32 %17), !dbg !591
STORE [*p=q]:   store i32 %18, i32* %fd, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i32* %fd, align 4, !dbg !592
LOAD [p=*q]:   %22 = load i32* %fd, align 4, !dbg !593
LOAD [p=*q]:   %23 = load %struct.stat** %5, align 8, !dbg !593
CALL [call func]:   %24 = call i32 @fstat(i32 %22, %struct.stat* %23) #3, !dbg !593
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !594), !dbg !596
CALL [call func]:   %27 = call i32* @__errno_location() #1, !dbg !597
LOAD [p=*q]:   %28 = load i32* %27, !dbg !597
STORE [*p=q]:   store i32 %28, i32* %e, align 4, !dbg !597
LOAD [p=*q]:   %29 = load i32* %fd, align 4, !dbg !598
CALL [call func]:   %30 = call i32 @close(i32 %29), !dbg !598
LOAD [p=*q]:   %31 = load i32* %e, align 4, !dbg !599
CALL [call func]:   %32 = call i32* @__errno_location() #1, !dbg !599
STORE [*p=q]:   store i32 %31, i32* %32, !dbg !599
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !600
LOAD [p=*q]:   %34 = load i32* %fd, align 4, !dbg !601
STORE [*p=q]:   store i32 %34, i32* %1, !dbg !601
LOAD [p=*q]:   %36 = load i32* %1, !dbg !602
STORE [*p=q]:   store i32 %25, i32* %fd, align 4, !dbg !600
LOAD [p=*q]:   %26 = load i32* %fd, align 4, !dbg !601
LOAD [p=*q]:   %29 = load i32* %fd, align 4, !dbg !602
STORE [*p=q]:   store i32 %29, i32* %1, !dbg !602
LOAD [p=*q]:   %31 = load i32* @decompress, align 4, !dbg !603
CALL [call func]:   %34 = call i32* @__errno_location() #1, !dbg !604
CONTEXT CALL [call func]:   %34 = call i32* @__errno_location() #1, !dbg !604
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %35 = load i32* %34, !dbg !604
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !605
CONTEXT CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !605
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !607
CALL [call func]:   %39 = call i8* (...)* bitcast (i8* (i8*)* @get_suffix to i8* (...)*)(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !608
STORE [*p=q]:   store i8* %39, i8** %s, align 8, !dbg !608
LOAD [p=*q]:   %40 = load i8** %s, align 8, !dbg !609
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !610
CONTEXT CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !610
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !612
CALL [call func]:   %44 = call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)) #4, !dbg !613
CONTEXT CALL [call func]:   %44 = call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)) #4, !dbg !613
	We do not analyze function 'strlen'
STORE [*p=q]:   store i32 %45, i32* %ilen, align 4, !dbg !613
LOAD [p=*q]:   %46 = load i8** @z_suffix, align 8, !dbg !614
CALL [call func]:   %47 = call i32 @strcmp(i8* %46, i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0)) #4, !dbg !614
CONTEXT CALL [call func]:   %47 = call i32 @strcmp(i8* %46, i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0)) #4, !dbg !614
	We do not analyze function 'strcmp'
LOAD [p=*q]:   %50 = load i8*** %suf, align 8, !dbg !615
STORE [*p=q]:   store i8** %51, i8*** %suf, align 8, !dbg !615
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %s0}, metadata !617), !dbg !619
## open_input_file does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %54 = load i8*** %suf, align 8, !dbg !620
LOAD [p=*q]:   %55 = load i8** %54, !dbg !620
STORE [*p=q]:   store i8* %55, i8** %s, align 8, !dbg !620
STORE [*p=q]:   store i8* %55, i8** %s0, align 8, !dbg !620
LOAD [p=*q]:   %56 = load i8** %2, align 8, !dbg !621
CALL [call func]:   %57 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %56) #3, !dbg !621
CONTEXT CALL [call func]:   %57 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %56) #3, !dbg !621
	We do not analyze function 'strcpy'
LOAD [p=*q]:   %58 = load i32* %ilen, align 4, !dbg !622
LOAD [p=*q]:   %60 = load i8** %s, align 8, !dbg !623
CALL [call func]:   %61 = call i64 @strlen(i8* %60) #4, !dbg !623
CONTEXT CALL [call func]:   %61 = call i64 @strlen(i8* %60) #4, !dbg !623
	We do not analyze function 'strlen'
LOAD [p=*q]:   %66 = load i8** %s, align 8, !dbg !625
CALL [call func]:   %67 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %66) #3, !dbg !625
CONTEXT CALL [call func]:   %67 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %66) #3, !dbg !625
	We do not analyze function 'strcat'
LOAD [p=*q]:   %68 = load i32* %open_flags, align 4, !dbg !626
LOAD [p=*q]:   %69 = load %struct.stat** %3, align 8, !dbg !626
CALL [call func]:   %70 = call i32 @open_and_stat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %68, i32 384, %struct.stat* %69), !dbg !626
CONTEXT CALL [call func]:   %70 = call i32 @open_and_stat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %68, i32 384, %struct.stat* %69), !dbg !626
STORE [*p=q]:   store i8* %name, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !574), !dbg !575
STORE [*p=q]:   store i32 %flags, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !576), !dbg !577
STORE [*p=q]:   store i32 %mode, i32* %4, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %4}, metadata !578), !dbg !580
STORE [*p=q]:   store %struct.stat* %st, %struct.stat** %5, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.stat** %5}, metadata !581), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %fd}, metadata !584), !dbg !586
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !587
LOAD [p=*q]:   %9 = load i32* @force, align 4, !dbg !587
LOAD [p=*q]:   %12 = load i32* %3, align 4, !dbg !588
STORE [*p=q]:   store i32 %13, i32* %3, align 4, !dbg !588
LOAD [p=*q]:   %15 = load i8** %2, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %4, align 4, !dbg !591
CALL [call func]:   %18 = call i32 (i8*, i32, ...)* @open_safer(i8* %15, i32 %16, i32 %17), !dbg !591
STORE [*p=q]:   store i32 %18, i32* %fd, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i32* %fd, align 4, !dbg !592
LOAD [p=*q]:   %22 = load i32* %fd, align 4, !dbg !593
LOAD [p=*q]:   %23 = load %struct.stat** %5, align 8, !dbg !593
CALL [call func]:   %24 = call i32 @fstat(i32 %22, %struct.stat* %23) #3, !dbg !593
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !594), !dbg !596
CALL [call func]:   %27 = call i32* @__errno_location() #1, !dbg !597
LOAD [p=*q]:   %28 = load i32* %27, !dbg !597
STORE [*p=q]:   store i32 %28, i32* %e, align 4, !dbg !597
LOAD [p=*q]:   %29 = load i32* %fd, align 4, !dbg !598
CALL [call func]:   %30 = call i32 @close(i32 %29), !dbg !598
LOAD [p=*q]:   %31 = load i32* %e, align 4, !dbg !599
CALL [call func]:   %32 = call i32* @__errno_location() #1, !dbg !599
STORE [*p=q]:   store i32 %31, i32* %32, !dbg !599
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !600
LOAD [p=*q]:   %34 = load i32* %fd, align 4, !dbg !601
STORE [*p=q]:   store i32 %34, i32* %1, !dbg !601
LOAD [p=*q]:   %36 = load i32* %1, !dbg !602
STORE [*p=q]:   store i32 %70, i32* %fd, align 4, !dbg !626
LOAD [p=*q]:   %71 = load i32* %fd, align 4, !dbg !627
LOAD [p=*q]:   %74 = load i32* %fd, align 4, !dbg !628
STORE [*p=q]:   store i32 %74, i32* %1, !dbg !628
CALL [call func]:   %76 = call i32* @__errno_location() #1, !dbg !629
CONTEXT CALL [call func]:   %76 = call i32* @__errno_location() #1, !dbg !629
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %77 = load i32* %76, !dbg !629
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
CONTEXT CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !632
LOAD [p=*q]:   %81 = load i8** %s0, align 8, !dbg !633
LOAD [p=*q]:   %82 = load i8** @z_suffix, align 8, !dbg !633
CALL [call func]:   %83 = call i32 @strcmp(i8* %81, i8* %82) #4, !dbg !633
CONTEXT CALL [call func]:   %83 = call i32 @strcmp(i8* %81, i8* %82) #4, !dbg !633
	We do not analyze function 'strcmp'
CALL [call func]:   %86 = call i32* @__errno_location() #1, !dbg !634
CONTEXT CALL [call func]:   %86 = call i32* @__errno_location() #1, !dbg !634
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %87 = load i32* %86, !dbg !634
STORE [*p=q]:   store i32 %87, i32* %z_suffix_errno, align 4, !dbg !634
LOAD [p=*q]:   %90 = load i8*** %suf, align 8, !dbg !635
STORE [*p=q]:   store i8** %91, i8*** %suf, align 8, !dbg !635
LOAD [p=*q]:   %92 = load i8** %91, !dbg !635
LOAD [p=*q]:   %95 = load i8** %2, align 8, !dbg !636
CALL [call func]:   %96 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %95) #3, !dbg !636
CONTEXT CALL [call func]:   %96 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %95) #3, !dbg !636
	We do not analyze function 'strcpy'
LOAD [p=*q]:   %97 = load i8** @z_suffix, align 8, !dbg !637
CALL [call func]:   %98 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %97) #3, !dbg !637
CONTEXT CALL [call func]:   %98 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %97) #3, !dbg !637
	We do not analyze function 'strcat'
LOAD [p=*q]:   %99 = load i32* %z_suffix_errno, align 4, !dbg !638
CALL [call func]:   %100 = call i32* @__errno_location() #1, !dbg !638
CONTEXT CALL [call func]:   %100 = call i32* @__errno_location() #1, !dbg !638
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %99, i32* %100, !dbg !638
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !639
CONTEXT CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !639
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !640
LOAD [p=*q]:   %102 = load %struct._IO_FILE** @stderr, align 8, !dbg !641
LOAD [p=*q]:   %103 = load i8** @program_name, align 8, !dbg !641
LOAD [p=*q]:   %104 = load i8** %2, align 8, !dbg !641
CALL [call func]:   %105 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %102, i8* getelementptr inbounds ([28 x i8]* @.str74, i32 0, i32 0), i8* %103, i8* %104), !dbg !641
CONTEXT CALL [call func]:   %105 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %102, i8* getelementptr inbounds ([28 x i8]* @.str74, i32 0, i32 0), i8* %103, i8* %104), !dbg !641
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !642
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !643
LOAD [p=*q]:   %107 = load i32* %1, !dbg !644
STORE [*p=q]:   store i32 %11, i32* @ifd, align 4, !dbg !585
LOAD [p=*q]:   %12 = load i32* @ifd, align 4, !dbg !586
LOAD [p=*q]:   %16 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @recursive, align 4, !dbg !589
LOAD [p=*q]:   %23 = load i32* @ifd, align 4, !dbg !591
LOAD [p=*q]:   %24 = load i8** %1, align 8, !dbg !591
CALL [call func]:   call void @treat_dir(i32 %23, i8* %24), !dbg !591
CONTEXT CALL [call func]:   call void @treat_dir(i32 %23, i8* %24), !dbg !591
STORE [*p=q]:   store i32 %fd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## treat_dir does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8* %dir, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !576), !dbg !577
## treat_dir does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.__dirstream** %dirp}, metadata !578), !dbg !584
## treat_dir does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[1024 x i8]* %nbuf}, metadata !585), !dbg !586
## treat_dir does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %entries}, metadata !587), !dbg !588
## treat_dir does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %entry}, metadata !589), !dbg !590
## treat_dir does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %entrylen}, metadata !591), !dbg !592
## treat_dir does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %3 = load i32* %1, align 4, !dbg !593
CALL [call func]:   %4 = call %struct.__dirstream* @fdopendir(i32 %3), !dbg !593
CONTEXT CALL [call func]:   %4 = call %struct.__dirstream* @fdopendir(i32 %3), !dbg !593
	We do not analyze function 'fdopendir'
STORE [*p=q]:   store %struct.__dirstream* %4, %struct.__dirstream** %dirp, align 8, !dbg !593
LOAD [p=*q]:   %5 = load %struct.__dirstream** %dirp, align 8, !dbg !594
LOAD [p=*q]:   %8 = load i8** %2, align 8, !dbg !595
CALL [call func]:   call void @progerror(i8* %8), !dbg !595
CONTEXT CALL [call func]:   call void @progerror(i8* %8), !dbg !595
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
LOAD [p=*q]:   %9 = load i32* %1, align 4, !dbg !597
CALL [call func]:   %10 = call i32 @close(i32 %9), !dbg !597
CONTEXT CALL [call func]:   %10 = call i32 @close(i32 %9), !dbg !597
	We do not analyze function 'close'
LOAD [p=*q]:   %12 = load %struct.__dirstream** %dirp, align 8, !dbg !599
CALL [call func]:   %13 = call i8* @streamsavedir(%struct.__dirstream* %12), !dbg !599
CONTEXT CALL [call func]:   %13 = call i8* @streamsavedir(%struct.__dirstream* %12), !dbg !599
	We do not analyze function 'streamsavedir'
STORE [*p=q]:   store i8* %13, i8** %entries, align 8, !dbg !599
LOAD [p=*q]:   %14 = load i8** %entries, align 8, !dbg !600
LOAD [p=*q]:   %17 = load i8** %2, align 8, !dbg !601
CALL [call func]:   call void @progerror(i8* %17), !dbg !601
CONTEXT CALL [call func]:   call void @progerror(i8* %17), !dbg !601
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
LOAD [p=*q]:   %19 = load %struct.__dirstream** %dirp, align 8, !dbg !602
CALL [call func]:   %20 = call i32 @closedir(%struct.__dirstream* %19), !dbg !602
CONTEXT CALL [call func]:   %20 = call i32 @closedir(%struct.__dirstream* %19), !dbg !602
	We do not analyze function 'closedir'
LOAD [p=*q]:   %23 = load i8** %2, align 8, !dbg !603
CALL [call func]:   call void @progerror(i8* %23), !dbg !603
CONTEXT CALL [call func]:   call void @progerror(i8* %23), !dbg !603
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
LOAD [p=*q]:   %25 = load i8** %entries, align 8, !dbg !604
LOAD [p=*q]:   %29 = load i8** %entries, align 8, !dbg !606
STORE [*p=q]:   store i8* %29, i8** %entry, align 8, !dbg !606
LOAD [p=*q]:   %31 = load i8** %entry, align 8, !dbg !606
LOAD [p=*q]:   %32 = load i8* %31, !dbg !606
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %len}, metadata !608), !dbg !610
## treat_dir does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %35 = load i8** %2, align 8, !dbg !611
CALL [call func]:   %36 = call i64 @strlen(i8* %35) #4, !dbg !611
CONTEXT CALL [call func]:   %36 = call i64 @strlen(i8* %35) #4, !dbg !611
	We do not analyze function 'strlen'
STORE [*p=q]:   store i64 %36, i64* %len, align 8, !dbg !611
LOAD [p=*q]:   %37 = load i8** %entry, align 8, !dbg !612
CALL [call func]:   %38 = call i64 @strlen(i8* %37) #4, !dbg !612
CONTEXT CALL [call func]:   %38 = call i64 @strlen(i8* %37) #4, !dbg !612
	We do not analyze function 'strlen'
STORE [*p=q]:   store i64 %38, i64* %entrylen, align 8, !dbg !612
LOAD [p=*q]:   %39 = load i8** %entry, align 8, !dbg !613
CALL [call func]:   %40 = call i32 @strcmp(i8* %39, i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i32 0)) #4, !dbg !613
CONTEXT CALL [call func]:   %40 = call i32 @strcmp(i8* %39, i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i32 0)) #4, !dbg !613
	We do not analyze function 'strcmp'
LOAD [p=*q]:   %43 = load i8** %entry, align 8, !dbg !614
CALL [call func]:   %44 = call i32 @strcmp(i8* %43, i8* getelementptr inbounds ([3 x i8]* @.str75, i32 0, i32 0)) #4, !dbg !614
CONTEXT CALL [call func]:   %44 = call i32 @strcmp(i8* %43, i8* getelementptr inbounds ([3 x i8]* @.str75, i32 0, i32 0)) #4, !dbg !614
	We do not analyze function 'strcmp'
LOAD [p=*q]:   %48 = load i64* %len, align 8, !dbg !616
LOAD [p=*q]:   %49 = load i64* %entrylen, align 8, !dbg !616
LOAD [p=*q]:   %54 = load i8** %2, align 8, !dbg !617
CALL [call func]:   %55 = call i8* @strcpy(i8* %53, i8* %54) #3, !dbg !617
CONTEXT CALL [call func]:   %55 = call i8* @strcpy(i8* %53, i8* %54) #3, !dbg !617
	We do not analyze function 'strcpy'
LOAD [p=*q]:   %56 = load i64* %len, align 8, !dbg !619
LOAD [p=*q]:   %59 = load i64* %len, align 8, !dbg !620
STORE [*p=q]:   store i64 %60, i64* %len, align 8, !dbg !620
STORE [*p=q]:   store i8 47, i8* %61, align 1, !dbg !620
LOAD [p=*q]:   %64 = load i64* %len, align 8, !dbg !623
LOAD [p=*q]:   %66 = load i8** %entry, align 8, !dbg !623
CALL [call func]:   %67 = call i8* @strcpy(i8* %65, i8* %66) #3, !dbg !623
CONTEXT CALL [call func]:   %67 = call i8* @strcpy(i8* %65, i8* %66) #3, !dbg !623
	We do not analyze function 'strcpy'
CALL [call func]:   call void (...)* bitcast (void (i8*)* @treat_file to void (...)*)(i8* %68), !dbg !624
LOAD [p=*q]:   %70 = load %struct._IO_FILE** @stderr, align 8, !dbg !626
LOAD [p=*q]:   %71 = load i8** @program_name, align 8, !dbg !626
LOAD [p=*q]:   %72 = load i8** %2, align 8, !dbg !626
LOAD [p=*q]:   %73 = load i8** %entry, align 8, !dbg !626
CALL [call func]:   %74 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([30 x i8]* @.str76, i32 0, i32 0), i8* %71, i8* %72, i8* %73), !dbg !626
CONTEXT CALL [call func]:   %74 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([30 x i8]* @.str76, i32 0, i32 0), i8* %71, i8* %72, i8* %73), !dbg !626
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !628
LOAD [p=*q]:   %77 = load i64* %entrylen, align 8, !dbg !630
LOAD [p=*q]:   %79 = load i8** %entry, align 8, !dbg !630
STORE [*p=q]:   store i8* %80, i8** %entry, align 8, !dbg !630
LOAD [p=*q]:   %82 = load i8** %entries, align 8, !dbg !631
CALL [call func]:   call void @free(i8* %82) #3, !dbg !631
CONTEXT CALL [call func]:   call void @free(i8* %82) #3, !dbg !631
	We do not analyze function 'free'
LOAD [p=*q]:   %26 = load i32* @ifd, align 4, !dbg !594
CALL [call func]:   %27 = call i32 @close(i32 %26), !dbg !594
CONTEXT CALL [call func]:   %27 = call i32 @close(i32 %26), !dbg !594
	We do not analyze function 'close'
LOAD [p=*q]:   %28 = load i32* @quiet, align 4, !dbg !595
LOAD [p=*q]:   %31 = load %struct._IO_FILE** @stderr, align 8, !dbg !595
LOAD [p=*q]:   %32 = load i8** @program_name, align 8, !dbg !595
CALL [call func]:   %33 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([34 x i8]* @.str27, i32 0, i32 0), i8* %32, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !595
CONTEXT CALL [call func]:   %33 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([34 x i8]* @.str27, i32 0, i32 0), i8* %32, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !595
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %35 = load i32* @exit_code, align 4, !dbg !595
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* @to_stdout, align 4, !dbg !598
LOAD [p=*q]:   %43 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !599
LOAD [p=*q]:   %47 = load i32* @quiet, align 4, !dbg !601
LOAD [p=*q]:   %50 = load %struct._IO_FILE** @stderr, align 8, !dbg !601
LOAD [p=*q]:   %51 = load i8** @program_name, align 8, !dbg !601
CALL [call func]:   %52 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([55 x i8]* @.str28, i32 0, i32 0), i8* %51, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !601
CONTEXT CALL [call func]:   %52 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([55 x i8]* @.str28, i32 0, i32 0), i8* %51, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !601
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %54 = load i32* @exit_code, align 4, !dbg !601
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !601
LOAD [p=*q]:   %58 = load i32* @ifd, align 4, !dbg !604
CALL [call func]:   %59 = call i32 @close(i32 %58), !dbg !604
CONTEXT CALL [call func]:   %59 = call i32 @close(i32 %58), !dbg !604
	We do not analyze function 'close'
LOAD [p=*q]:   %61 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !606
LOAD [p=*q]:   %65 = load i32* @quiet, align 4, !dbg !607
LOAD [p=*q]:   %68 = load %struct._IO_FILE** @stderr, align 8, !dbg !607
LOAD [p=*q]:   %69 = load i8** @program_name, align 8, !dbg !607
CALL [call func]:   %70 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([46 x i8]* @.str29, i32 0, i32 0), i8* %69, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !607
CONTEXT CALL [call func]:   %70 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([46 x i8]* @.str29, i32 0, i32 0), i8* %69, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !607
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %72 = load i32* @exit_code, align 4, !dbg !607
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !607
LOAD [p=*q]:   %76 = load i32* @ifd, align 4, !dbg !610
CALL [call func]:   %77 = call i32 @close(i32 %76), !dbg !610
CONTEXT CALL [call func]:   %77 = call i32 @close(i32 %76), !dbg !610
	We do not analyze function 'close'
LOAD [p=*q]:   %79 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !612
LOAD [p=*q]:   %83 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %86 = load %struct._IO_FILE** @stderr, align 8, !dbg !613
LOAD [p=*q]:   %87 = load i8** @program_name, align 8, !dbg !613
CALL [call func]:   %88 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([47 x i8]* @.str30, i32 0, i32 0), i8* %87, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !613
CONTEXT CALL [call func]:   %88 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([47 x i8]* @.str30, i32 0, i32 0), i8* %87, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !613
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %90 = load i32* @exit_code, align 4, !dbg !613
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !613
LOAD [p=*q]:   %94 = load i32* @ifd, align 4, !dbg !616
CALL [call func]:   %95 = call i32 @close(i32 %94), !dbg !616
CONTEXT CALL [call func]:   %95 = call i32 @close(i32 %94), !dbg !616
	We do not analyze function 'close'
LOAD [p=*q]:   %97 = load i32* @force, align 4, !dbg !618
LOAD [p=*q]:   %100 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !619
LOAD [p=*q]:   %104 = load i32* @quiet, align 4, !dbg !621
LOAD [p=*q]:   %107 = load %struct._IO_FILE** @stderr, align 8, !dbg !621
LOAD [p=*q]:   %108 = load i8** @program_name, align 8, !dbg !621
CALL [call func]:   %109 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %107, i8* getelementptr inbounds ([46 x i8]* @.str31, i32 0, i32 0), i8* %108, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !621
CONTEXT CALL [call func]:   %109 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %107, i8* getelementptr inbounds ([46 x i8]* @.str31, i32 0, i32 0), i8* %108, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !621
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %111 = load i32* @exit_code, align 4, !dbg !621
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !621
LOAD [p=*q]:   %115 = load i32* @ifd, align 4, !dbg !624
CALL [call func]:   %116 = call i32 @close(i32 %115), !dbg !624
CONTEXT CALL [call func]:   %116 = call i32 @close(i32 %115), !dbg !624
	We do not analyze function 'close'
LOAD [p=*q]:   %118 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 2), align 8, !dbg !626
LOAD [p=*q]:   %121 = load i32* @quiet, align 4, !dbg !627
LOAD [p=*q]:   %124 = load %struct._IO_FILE** @stderr, align 8, !dbg !627
LOAD [p=*q]:   %125 = load i8** @program_name, align 8, !dbg !627
LOAD [p=*q]:   %126 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 2), align 8, !dbg !627
LOAD [p=*q]:   %128 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 2), align 8, !dbg !627
CALL [call func]:   %131 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %124, i8* getelementptr inbounds ([42 x i8]* @.str32, i32 0, i32 0), i8* %125, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i64 %127, i32 %130), !dbg !627
CONTEXT CALL [call func]:   %131 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %124, i8* getelementptr inbounds ([42 x i8]* @.str32, i32 0, i32 0), i8* %125, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i64 %127, i32 %130), !dbg !627
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %133 = load i32* @exit_code, align 4, !dbg !627
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !627
LOAD [p=*q]:   %137 = load i32* @ifd, align 4, !dbg !630
CALL [call func]:   %138 = call i32 @close(i32 %137), !dbg !630
CONTEXT CALL [call func]:   %138 = call i32 @close(i32 %137), !dbg !630
	We do not analyze function 'close'
LOAD [p=*q]:   %142 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !634
LOAD [p=*q]:   %146 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 8), align 8, !dbg !634
STORE [*p=q]:   store i64 %149, i64* @ifile_size, align 8, !dbg !634
STORE [*p=q]:   store i64 -1, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !635
LOAD [p=*q]:   %150 = load i32* @no_time, align 4, !dbg !636
LOAD [p=*q]:   %153 = load i32* @list, align 4, !dbg !636
CALL [call func]:   %156 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !637
CONTEXT CALL [call func]:   %156 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !637
	We do not analyze function 'get_stat_mtime'
STORE [*p=q]:   store i64 %159, i64* %158, align 1, !dbg !637
STORE [*p=q]:   store i64 %161, i64* %160, align 1, !dbg !637
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.timespec* @time_stamp to i8*), i8* %162, i64 16, i32 8, i1 false), !dbg !637
## treat_file does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %164 = load i32* @to_stdout, align 4, !dbg !638
LOAD [p=*q]:   %167 = load i32* @list, align 4, !dbg !638
LOAD [p=*q]:   %170 = load i32* @test, align 4, !dbg !638
CALL [call func]:   %173 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !639
CONTEXT CALL [call func]:   %173 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !639
	We do not analyze function 'strcpy'
CALL [call func]:   %175 = call i32 @make_ofname(), !dbg !642
CONTEXT CALL [call func]:   %175 = call i32 @make_ofname(), !dbg !642
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %suff}, metadata !574), !dbg !576
## make_ofname does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %2 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)) #3, !dbg !577
CONTEXT CALL [call func]:   %2 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)) #3, !dbg !577
	We do not analyze function 'strcpy'
CALL [call func]:   %3 = call i8* (...)* bitcast (i8* (i8*)* @get_suffix to i8* (...)*)(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !578
STORE [*p=q]:   store i8* %3, i8** %suff, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i32* @decompress, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** %suff, align 8, !dbg !580
LOAD [p=*q]:   %10 = load i32* @recursive, align 4, !dbg !582
LOAD [p=*q]:   %13 = load i32* @list, align 4, !dbg !582
LOAD [p=*q]:   %16 = load i32* @test, align 4, !dbg !582
STORE [*p=q]:   store i32 0, i32* %1, !dbg !584
LOAD [p=*q]:   %20 = load i32* @verbose, align 4, !dbg !585
LOAD [p=*q]:   %23 = load i32* @recursive, align 4, !dbg !585
LOAD [p=*q]:   %26 = load i32* @quiet, align 4, !dbg !585
LOAD [p=*q]:   %29 = load i32* @quiet, align 4, !dbg !586
LOAD [p=*q]:   %32 = load %struct._IO_FILE** @stderr, align 8, !dbg !586
LOAD [p=*q]:   %33 = load i8** @program_name, align 8, !dbg !586
CALL [call func]:   %34 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([35 x i8]* @.str72, i32 0, i32 0), i8* %33, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !586
CONTEXT CALL [call func]:   %34 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([35 x i8]* @.str72, i32 0, i32 0), i8* %33, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !586
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %36 = load i32* @exit_code, align 4, !dbg !586
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !586
STORE [*p=q]:   store i32 2, i32* %1, !dbg !590
LOAD [p=*q]:   %42 = load i8** %suff, align 8, !dbg !591
CALL [call func]:   %43 = call i8* @strlwr(i8* %42), !dbg !591
CONTEXT CALL [call func]:   %43 = call i8* @strlwr(i8* %42), !dbg !591
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %t}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
STORE [*p=q]:   store i8* %2, i8** %t, align 8, !dbg !579
LOAD [p=*q]:   %4 = load i8** %t, align 8, !dbg !579
LOAD [p=*q]:   %5 = load i8* %4, !dbg !579
LOAD [p=*q]:   %8 = load i8** %t, align 8, !dbg !581
LOAD [p=*q]:   %9 = load i8* %8, !dbg !581
CALL [call func]:   %12 = call i16** @__ctype_b_loc() #1, !dbg !582
LOAD [p=*q]:   %13 = load i16** %12, !dbg !582
LOAD [p=*q]:   %15 = load i16* %14, !dbg !582
LOAD [p=*q]:   %20 = load i8** %t, align 8, !dbg !582
LOAD [p=*q]:   %21 = load i8* %20, !dbg !582
CALL [call func]:   %23 = call i32 @tolower(i32 %22) #3, !dbg !582
LOAD [p=*q]:   %25 = load i8** %t, align 8, !dbg !582
LOAD [p=*q]:   %26 = load i8* %25, !dbg !582
LOAD [p=*q]:   %31 = load i8** %t, align 8, !dbg !582
STORE [*p=q]:   store i8 %30, i8* %31, !dbg !582
LOAD [p=*q]:   %33 = load i8** %t, align 8, !dbg !583
STORE [*p=q]:   store i8* %34, i8** %t, align 8, !dbg !583
LOAD [p=*q]:   %36 = load i8** %1, align 8, !dbg !584
LOAD [p=*q]:   %44 = load i8** %suff, align 8, !dbg !592
CALL [call func]:   %45 = call i32 @strcmp(i8* %44, i8* getelementptr inbounds ([5 x i8]* @.str48, i32 0, i32 0)) #4, !dbg !592
CONTEXT CALL [call func]:   %45 = call i32 @strcmp(i8* %44, i8* getelementptr inbounds ([5 x i8]* @.str48, i32 0, i32 0)) #4, !dbg !592
	We do not analyze function 'strcmp'
LOAD [p=*q]:   %48 = load i8** %suff, align 8, !dbg !593
CALL [call func]:   %49 = call i32 @strcmp(i8* %48, i8* getelementptr inbounds ([5 x i8]* @.str52, i32 0, i32 0)) #4, !dbg !593
CONTEXT CALL [call func]:   %49 = call i32 @strcmp(i8* %48, i8* getelementptr inbounds ([5 x i8]* @.str52, i32 0, i32 0)) #4, !dbg !593
	We do not analyze function 'strcmp'
LOAD [p=*q]:   %52 = load i8** %suff, align 8, !dbg !594
CALL [call func]:   %53 = call i8* @strcpy(i8* %52, i8* getelementptr inbounds ([5 x i8]* @.str47, i32 0, i32 0)) #3, !dbg !594
CONTEXT CALL [call func]:   %53 = call i8* @strcpy(i8* %52, i8* getelementptr inbounds ([5 x i8]* @.str47, i32 0, i32 0)) #3, !dbg !594
	We do not analyze function 'strcpy'
LOAD [p=*q]:   %55 = load i8** %suff, align 8, !dbg !597
STORE [*p=q]:   store i8 0, i8* %55, !dbg !597
LOAD [p=*q]:   %58 = load i8** %suff, align 8, !dbg !600
LOAD [p=*q]:   %61 = load i32* @force, align 4, !dbg !600
LOAD [p=*q]:   %64 = load i32* @verbose, align 4, !dbg !601
LOAD [p=*q]:   %67 = load i32* @recursive, align 4, !dbg !601
LOAD [p=*q]:   %70 = load i32* @quiet, align 4, !dbg !601
LOAD [p=*q]:   %73 = load %struct._IO_FILE** @stderr, align 8, !dbg !603
LOAD [p=*q]:   %74 = load i8** @program_name, align 8, !dbg !603
LOAD [p=*q]:   %75 = load i8** %suff, align 8, !dbg !603
CALL [call func]:   %76 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([43 x i8]* @.str73, i32 0, i32 0), i8* %74, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %75), !dbg !603
CONTEXT CALL [call func]:   %76 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([43 x i8]* @.str73, i32 0, i32 0), i8* %74, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %75), !dbg !603
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 2, i32* %1, !dbg !606
STORE [*p=q]:   store i32 0, i32* @save_orig_name, align 4, !dbg !607
CALL [call func]:   %79 = call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !609
CONTEXT CALL [call func]:   %79 = call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !609
	We do not analyze function 'strlen'
LOAD [p=*q]:   %80 = load i64* @z_len, align 8, !dbg !609
LOAD [p=*q]:   %85 = load i8** @z_suffix, align 8, !dbg !611
CALL [call func]:   %86 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* %85) #3, !dbg !611
CONTEXT CALL [call func]:   %86 = call i8* @strcat(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* %85) #3, !dbg !611
	We do not analyze function 'strcat'
STORE [*p=q]:   store i32 0, i32* %1, !dbg !612
LOAD [p=*q]:   %90 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %93 = load %struct._IO_FILE** @stderr, align 8, !dbg !613
LOAD [p=*q]:   %94 = load i8** @program_name, align 8, !dbg !613
CALL [call func]:   %95 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %93, i8* getelementptr inbounds ([28 x i8]* @.str74, i32 0, i32 0), i8* %94, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !613
CONTEXT CALL [call func]:   %95 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %93, i8* getelementptr inbounds ([28 x i8]* @.str74, i32 0, i32 0), i8* %94, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !613
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %97 = load i32* @exit_code, align 4, !dbg !613
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !613
STORE [*p=q]:   store i32 2, i32* %1, !dbg !615
LOAD [p=*q]:   %102 = load i32* %1, !dbg !616
LOAD [p=*q]:   %178 = load i32* @ifd, align 4, !dbg !643
CALL [call func]:   %179 = call i32 @close(i32 %178), !dbg !643
CONTEXT CALL [call func]:   %179 = call i32 @close(i32 %178), !dbg !643
	We do not analyze function 'close'
CALL [call func]:   call void @clear_bufs(), !dbg !646
CONTEXT CALL [call func]:   call void @clear_bufs(), !dbg !646
STORE [*p=q]:   store i32 0, i32* @outcnt, align 4, !dbg !574
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !576
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !576
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !577
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !577
STORE [*p=q]:   store i32 0, i32* @part_nb, align 4, !dbg !647
LOAD [p=*q]:   %182 = load i32* @decompress, align 4, !dbg !648
LOAD [p=*q]:   %185 = load i32* @ifd, align 4, !dbg !649
CALL [call func]:   %186 = call i32 @get_method(i32 %185), !dbg !649
CONTEXT CALL [call func]:   %186 = call i32 @get_method(i32 %185), !dbg !649
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %flags}, metadata !576), !dbg !578
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[10 x i8]* %magic}, metadata !579), !dbg !581
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic0}, metadata !582), !dbg !583
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic1}, metadata !584), !dbg !585
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %stamp}, metadata !586), !dbg !588
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %3 = load i32* @force, align 4, !dbg !589
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !589
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !590
CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
CONTEXT CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %22, i32* %imagic0, align 4, !dbg !592
LOAD [p=*q]:   %23 = load i32* %imagic0, align 4, !dbg !593
STORE [*p=q]:   store i8 %24, i8* %25, align 1, !dbg !593
LOAD [p=*q]:   %26 = load i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* @insize, align 4, !dbg !594
LOAD [p=*q]:   %30 = load i32* @inptr, align 4, !dbg !594
STORE [*p=q]:   store i32 %31, i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %34 = load i8* %33, align 1, !dbg !594
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
CONTEXT CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %39, i32* %imagic1, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* %imagic1, align 4, !dbg !596
STORE [*p=q]:   store i8 %41, i8* %42, align 1, !dbg !596
LOAD [p=*q]:   %44 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %45 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %48 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %49, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !598
CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
CONTEXT CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %58, i8* %59, align 1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %imagic0, align 4, !dbg !601
LOAD [p=*q]:   %61 = load i8* %60, align 1, !dbg !602
LOAD [p=*q]:   %64 = load i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %65 = load i32* @insize, align 4, !dbg !603
LOAD [p=*q]:   %68 = load i32* @inptr, align 4, !dbg !603
STORE [*p=q]:   store i32 %69, i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %72 = load i8* %71, align 1, !dbg !603
CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
CONTEXT CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %78, i8* %79, align 1, !dbg !605
STORE [*p=q]:   store i32 0, i32* %imagic1, align 4, !dbg !606
LOAD [p=*q]:   %81 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %82 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %85 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %86, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %89 = load i8* %88, align 1, !dbg !608
CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
CONTEXT CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %94, i32* %imagic1, align 4, !dbg !610
LOAD [p=*q]:   %95 = load i32* %imagic1, align 4, !dbg !611
STORE [*p=q]:   store i8 %96, i8* %97, align 1, !dbg !611
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !612
LOAD [p=*q]:   %100 = load i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i32 %101, i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !614
STORE [*p=q]:   store i32 0, i32* @last_member, align 4, !dbg !615
CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
CONTEXT CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
	We do not analyze function 'memcmp'
CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
CONTEXT CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %110 = load i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %111 = load i32* @insize, align 4, !dbg !618
LOAD [p=*q]:   %114 = load i32* @inptr, align 4, !dbg !618
STORE [*p=q]:   store i32 %115, i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %118 = load i8* %117, align 1, !dbg !618
CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
CONTEXT CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %123, i32* @method, align 4, !dbg !620
LOAD [p=*q]:   %124 = load i32* @method, align 4, !dbg !621
LOAD [p=*q]:   %127 = load %struct._IO_FILE** @stderr, align 8, !dbg !622
LOAD [p=*q]:   %128 = load i8** @program_name, align 8, !dbg !622
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !622
CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
CONTEXT CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !624
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !625
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !626
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !627
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !627
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !627
CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
CONTEXT CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %146, i8* %flags, align 1, !dbg !628
LOAD [p=*q]:   %147 = load i8* %flags, align 1, !dbg !629
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !630
LOAD [p=*q]:   %153 = load i8** @program_name, align 8, !dbg !630
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
CONTEXT CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !632
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !633
LOAD [p=*q]:   %156 = load i8* %flags, align 1, !dbg !634
LOAD [p=*q]:   %161 = load %struct._IO_FILE** @stderr, align 8, !dbg !635
LOAD [p=*q]:   %162 = load i8** @program_name, align 8, !dbg !635
LOAD [p=*q]:   %163 = load i8* %flags, align 1, !dbg !635
CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
CONTEXT CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !637
LOAD [p=*q]:   %166 = load i32* @force, align 4, !dbg !638
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !639
LOAD [p=*q]:   %171 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %172 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %175 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %176, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %179 = load i8* %178, align 1, !dbg !641
CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
CONTEXT CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i64 %185, i64* %stamp, align 8, !dbg !642
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !643
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !643
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !643
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
CONTEXT CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %202 = load i64* %stamp, align 8, !dbg !644
STORE [*p=q]:   store i64 %203, i64* %stamp, align 8, !dbg !644
LOAD [p=*q]:   %204 = load i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* @insize, align 4, !dbg !645
LOAD [p=*q]:   %208 = load i32* @inptr, align 4, !dbg !645
STORE [*p=q]:   store i32 %209, i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %212 = load i8* %211, align 1, !dbg !645
CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
CONTEXT CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %220 = load i64* %stamp, align 8, !dbg !646
STORE [*p=q]:   store i64 %221, i64* %stamp, align 8, !dbg !646
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !647
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !647
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !647
CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
CONTEXT CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %238 = load i64* %stamp, align 8, !dbg !648
STORE [*p=q]:   store i64 %239, i64* %stamp, align 8, !dbg !648
LOAD [p=*q]:   %240 = load i64* %stamp, align 8, !dbg !649
LOAD [p=*q]:   %243 = load i32* @no_time, align 4, !dbg !649
LOAD [p=*q]:   %246 = load i64* %stamp, align 8, !dbg !650
STORE [*p=q]:   store i64 %246, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !650
STORE [*p=q]:   store i64 0, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !652
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %252 = load i32* @inptr, align 4, !dbg !654
STORE [*p=q]:   store i32 %253, i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %256 = load i8* %255, align 1, !dbg !654
CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
CONTEXT CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %262, i8* %263, align 1, !dbg !655
LOAD [p=*q]:   %264 = load i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %265 = load i32* @insize, align 4, !dbg !656
LOAD [p=*q]:   %268 = load i32* @inptr, align 4, !dbg !656
STORE [*p=q]:   store i32 %269, i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %272 = load i8* %271, align 1, !dbg !656
CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
CONTEXT CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %278, i8* %279, align 1, !dbg !657
LOAD [p=*q]:   %280 = load i8* %flags, align 1, !dbg !658
STORE [*p=q]:   store i8 8, i8* %285, align 1, !dbg !659
LOAD [p=*q]:   %286 = load i8* %flags, align 1, !dbg !661
STORE [*p=q]:   store i8 %286, i8* %287, align 1, !dbg !661
LOAD [p=*q]:   %288 = load i64* %stamp, align 8, !dbg !662
STORE [*p=q]:   store i8 %290, i8* %291, align 1, !dbg !662
LOAD [p=*q]:   %292 = load i64* %stamp, align 8, !dbg !663
STORE [*p=q]:   store i8 %295, i8* %296, align 1, !dbg !663
LOAD [p=*q]:   %297 = load i64* %stamp, align 8, !dbg !664
STORE [*p=q]:   store i8 %300, i8* %301, align 1, !dbg !664
LOAD [p=*q]:   %302 = load i64* %stamp, align 8, !dbg !665
STORE [*p=q]:   store i8 %304, i8* %305, align 1, !dbg !665
CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
CONTEXT CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
CONTEXT CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %310 = load i8* %flags, align 1, !dbg !669
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x i8]* %lenbuf}, metadata !670), !dbg !675
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !676), !dbg !677
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %315 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %316 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %319 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %320, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %323 = load i8* %322, align 1, !dbg !678
CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
CONTEXT CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %329, i8* %330, align 1, !dbg !679
STORE [*p=q]:   store i32 %331, i32* %len, align 4, !dbg !679
LOAD [p=*q]:   %332 = load i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %333 = load i32* @insize, align 4, !dbg !680
LOAD [p=*q]:   %336 = load i32* @inptr, align 4, !dbg !680
STORE [*p=q]:   store i32 %337, i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %340 = load i8* %339, align 1, !dbg !680
CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
CONTEXT CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %346, i8* %347, align 1, !dbg !681
LOAD [p=*q]:   %350 = load i32* %len, align 4, !dbg !681
STORE [*p=q]:   store i32 %351, i32* %len, align 4, !dbg !681
LOAD [p=*q]:   %352 = load i32* @verbose, align 4, !dbg !682
LOAD [p=*q]:   %355 = load %struct._IO_FILE** @stderr, align 8, !dbg !683
LOAD [p=*q]:   %356 = load i8** @program_name, align 8, !dbg !683
LOAD [p=*q]:   %357 = load i32* %len, align 4, !dbg !683
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
CONTEXT CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %360 = load i8* %flags, align 1, !dbg !686
CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
CONTEXT CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %368 = load i32* %len, align 4, !dbg !688
LOAD [p=*q]:   %370 = load i8* %flags, align 1, !dbg !688
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 %369, i32 %371), !dbg !688
LOAD [p=*q]:   %373 = load i8* %flags, align 1, !dbg !690
LOAD [p=*q]:   %378 = load i32* @no_name, align 4, !dbg !691
LOAD [p=*q]:   %381 = load i32* @to_stdout, align 4, !dbg !691
LOAD [p=*q]:   %384 = load i32* @list, align 4, !dbg !691
LOAD [p=*q]:   %387 = load i32* @part_nb, align 4, !dbg !691
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !696), !dbg !698
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
CONTEXT CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %393, i8** %p, align 8, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %base}, metadata !700), !dbg !701
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %394 = load i8** %p, align 8, !dbg !702
STORE [*p=q]:   store i8* %394, i8** %base, align 8, !dbg !702
LOAD [p=*q]:   %396 = load i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %397 = load i32* @insize, align 4, !dbg !705
LOAD [p=*q]:   %400 = load i32* @inptr, align 4, !dbg !705
STORE [*p=q]:   store i32 %401, i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %404 = load i8* %403, align 1, !dbg !705
CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
CONTEXT CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %411 = load i8** %p, align 8, !dbg !707
STORE [*p=q]:   store i8 %410, i8* %411, !dbg !707
LOAD [p=*q]:   %412 = load i8** %p, align 8, !dbg !708
STORE [*p=q]:   store i8* %413, i8** %p, align 8, !dbg !708
LOAD [p=*q]:   %414 = load i8* %412, !dbg !708
LOAD [p=*q]:   %419 = load i8** %p, align 8, !dbg !710
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
CONTEXT CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
STORE [*p=q]:   store i8* %m, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !576
LOAD [p=*q]:   %3 = load i8** @program_name, align 8, !dbg !576
LOAD [p=*q]:   %4 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
CALL [call func]:   call void @abort_gzip() #7, !dbg !578
LOAD [p=*q]:   %424 = load i8* %flags, align 1, !dbg !714
LOAD [p=*q]:   %429 = load i8** %base, align 8, !dbg !715
LOAD [p=*q]:   %430 = load i8** %p, align 8, !dbg !715
LOAD [p=*q]:   %431 = load i8** %base, align 8, !dbg !715
CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
CONTEXT CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %438 = load i8** %base, align 8, !dbg !716
CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
CONTEXT CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %439, i8** %p, align 8, !dbg !716
LOAD [p=*q]:   %440 = load i8** %base, align 8, !dbg !717
LOAD [p=*q]:   %441 = load i8** %p, align 8, !dbg !717
LOAD [p=*q]:   %442 = load i8** %p, align 8, !dbg !718
CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
CONTEXT CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
	We do not analyze function 'strlen'
CALL [call func]:   call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %441, i64 %444, i32 1, i1 false), !dbg !718
## get_method does not call llvm.memmove.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %445 = load i32* @list, align 4, !dbg !719
LOAD [p=*q]:   %448 = load i8** %base, align 8, !dbg !720
STORE [*p=q]:   store i32 0, i32* @list, align 4, !dbg !722
LOAD [p=*q]:   %455 = load i8* %flags, align 1, !dbg !725
LOAD [p=*q]:   %460 = load i8* %flags, align 1, !dbg !726
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %461), !dbg !726
LOAD [p=*q]:   %463 = load i8* %flags, align 1, !dbg !729
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %crc16}, metadata !730), !dbg !732
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
CONTEXT CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
STORE [*p=q]:   store i32 %471, i32* %crc16, align 4, !dbg !733
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %header16}, metadata !734), !dbg !735
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %472 = load i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %473 = load i32* @insize, align 4, !dbg !736
LOAD [p=*q]:   %476 = load i32* @inptr, align 4, !dbg !736
STORE [*p=q]:   store i32 %477, i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %480 = load i8* %479, align 1, !dbg !736
CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
CONTEXT CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %485, i32* %header16, align 4, !dbg !737
LOAD [p=*q]:   %486 = load i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %487 = load i32* @insize, align 4, !dbg !738
LOAD [p=*q]:   %490 = load i32* @inptr, align 4, !dbg !738
STORE [*p=q]:   store i32 %491, i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %494 = load i8* %493, align 1, !dbg !738
CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
CONTEXT CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %501 = load i32* %header16, align 4, !dbg !739
STORE [*p=q]:   store i32 %502, i32* %header16, align 4, !dbg !739
LOAD [p=*q]:   %503 = load i32* %header16, align 4, !dbg !740
LOAD [p=*q]:   %504 = load i32* %crc16, align 4, !dbg !740
LOAD [p=*q]:   %507 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
LOAD [p=*q]:   %508 = load i8** @program_name, align 8, !dbg !741
LOAD [p=*q]:   %509 = load i32* %header16, align 4, !dbg !741
LOAD [p=*q]:   %510 = load i32* %crc16, align 4, !dbg !741
CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
CONTEXT CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !743
LOAD [p=*q]:   %512 = load i32* @force, align 4, !dbg !744
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !745
LOAD [p=*q]:   %518 = load i32* @part_nb, align 4, !dbg !748
LOAD [p=*q]:   %521 = load i32* @inptr, align 4, !dbg !749
STORE [*p=q]:   store i64 %523, i64* @header_bytes, align 8, !dbg !749
CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
CONTEXT CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %530 = load i32* @inptr, align 4, !dbg !753
CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
CONTEXT CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !755
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !757
LOAD [p=*q]:   %536 = load i32* %2, align 4, !dbg !758
CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
CONTEXT CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %h}, metadata !576), !dbg !580
LOAD [p=*q]:   %3 = load i32* @inptr, align 4, !dbg !581
STORE [*p=q]:   store i8* %5, i8** %h, align 8, !dbg !581
LOAD [p=*q]:   %6 = load i32* %2, align 4, !dbg !582
STORE [*p=q]:   store i32 %6, i32* @ifd, align 4, !dbg !582
LOAD [p=*q]:   %7 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i8* %9, !dbg !583
LOAD [p=*q]:   %13 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %16 = load i8* %15, !dbg !583
LOAD [p=*q]:   %22 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %25 = load i8* %24, !dbg !583
LOAD [p=*q]:   %28 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %31 = load i8* %30, !dbg !583
LOAD [p=*q]:   %37 = load i32* @inptr, align 4, !dbg !583
STORE [*p=q]:   store i32 %38, i32* @inptr, align 4, !dbg !583
LOAD [p=*q]:   %39 = load i32* @inptr, align 4, !dbg !584
LOAD [p=*q]:   %40 = load i32* @insize, align 4, !dbg !584
LOAD [p=*q]:   %43 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %45 = load i8* %44, !dbg !584
LOAD [p=*q]:   %48 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %50 = load i8* %49, !dbg !584
LOAD [p=*q]:   %56 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %59 = load i8* %58, !dbg !584
LOAD [p=*q]:   %62 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %65 = load i8* %64, !dbg !584
LOAD [p=*q]:   %75 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
LOAD [p=*q]:   %76 = load i8** @program_name, align 8, !dbg !585
CALL [call func]:   %77 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([31 x i8]* @.str167, i32 0, i32 0), i8* %76, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !585
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !587
STORE [*p=q]:   store i32 1, i32* %1, !dbg !588
LOAD [p=*q]:   %79 = load i8** %h, align 8, !dbg !589
LOAD [p=*q]:   %81 = load i8* %80, !dbg !589
STORE [*p=q]:   store i32 %82, i32* @method, align 4, !dbg !589
LOAD [p=*q]:   %83 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %86 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %89 = load %struct._IO_FILE** @stderr, align 8, !dbg !591
LOAD [p=*q]:   %90 = load i8** @program_name, align 8, !dbg !591
CALL [call func]:   %91 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([58 x i8]* @.str1168, i32 0, i32 0), i8* %90, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !593
STORE [*p=q]:   store i32 1, i32* %1, !dbg !594
LOAD [p=*q]:   %93 = load i8** %h, align 8, !dbg !595
LOAD [p=*q]:   %95 = load i8* %94, !dbg !595
STORE [*p=q]:   store i32 %97, i32* @decrypt, align 4, !dbg !595
LOAD [p=*q]:   %100 = load %struct._IO_FILE** @stderr, align 8, !dbg !596
LOAD [p=*q]:   %101 = load i8** @program_name, align 8, !dbg !596
CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([38 x i8]* @.str2169, i32 0, i32 0), i8* %101, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !596
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !598
STORE [*p=q]:   store i32 1, i32* %1, !dbg !599
LOAD [p=*q]:   %104 = load i8** %h, align 8, !dbg !600
LOAD [p=*q]:   %106 = load i8* %105, !dbg !600
STORE [*p=q]:   store i32 %110, i32* @ext_header, align 4, !dbg !600
STORE [*p=q]:   store i32 1, i32* @pkzip, align 4, !dbg !601
STORE [*p=q]:   store i32 0, i32* %1, !dbg !602
LOAD [p=*q]:   %112 = load i32* %1, !dbg !603
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !759
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !760
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
CONTEXT CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unpack, i32 (i32, i32)** @work, align 8, !dbg !763
STORE [*p=q]:   store i32 2, i32* @method, align 4, !dbg !765
CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
CONTEXT CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzw, i32 (i32, i32)** @work, align 8, !dbg !768
STORE [*p=q]:   store i32 1, i32* @method, align 4, !dbg !770
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !771
CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
CONTEXT CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzh, i32 (i32, i32)** @work, align 8, !dbg !774
STORE [*p=q]:   store i32 3, i32* @method, align 4, !dbg !776
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !777
LOAD [p=*q]:   %557 = load i32* @force, align 4, !dbg !779
LOAD [p=*q]:   %560 = load i32* @to_stdout, align 4, !dbg !779
LOAD [p=*q]:   %563 = load i32* @list, align 4, !dbg !779
STORE [*p=q]:   store i32 0, i32* @method, align 4, !dbg !780
STORE [*p=q]:   store i32 (i32, i32)* @copy, i32 (i32, i32)** @work, align 8, !dbg !782
LOAD [p=*q]:   %566 = load i32* %imagic1, align 4, !dbg !783
LOAD [p=*q]:   %569 = load i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 %570, i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !785
LOAD [p=*q]:   %572 = load i32* %imagic0, align 4, !dbg !786
LOAD [p=*q]:   %575 = load %struct._IO_FILE** @stdout, align 8, !dbg !787
CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
CONTEXT CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
	We do not analyze function 'fileno'
CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
CONTEXT CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
STORE [*p=q]:   store i32 %fd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i8* %buf, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !576), !dbg !579
STORE [*p=q]:   store i32 %cnt, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !580), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !582), !dbg !584
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !586
LOAD [p=*q]:   %6 = load i8** %2, align 8, !dbg !586
LOAD [p=*q]:   %7 = load i32* %3, align 4, !dbg !586
CALL [call func]:   %8 = call i32 (...)* bitcast (i32 (i32, i8*, i32)* @write_buffer to i32 (...)*)(i32 %5, i8* %6, i32 %7), !dbg !586
STORE [*p=q]:   store i32 %8, i32* %n, align 4, !dbg !586
LOAD [p=*q]:   %9 = load i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %12 = load i32* %n, align 4, !dbg !587
CALL [call func]:   call void @write_error() #7, !dbg !589
LOAD [p=*q]:   %16 = load i32* %n, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %3, align 4, !dbg !591
STORE [*p=q]:   store i32 %18, i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %20 = load i32* %n, align 4, !dbg !592
STORE [*p=q]:   store i8* %22, i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %578 = load i64* @bytes_out, align 8, !dbg !789
STORE [*p=q]:   store i64 %579, i64* @bytes_out, align 8, !dbg !789
LOAD [p=*q]:   %587 = load i32* @method, align 4, !dbg !792
LOAD [p=*q]:   %590 = load i32* @method, align 4, !dbg !793
STORE [*p=q]:   store i32 %590, i32* %1, !dbg !793
LOAD [p=*q]:   %592 = load i32* @part_nb, align 4, !dbg !794
LOAD [p=*q]:   %595 = load %struct._IO_FILE** @stderr, align 8, !dbg !795
LOAD [p=*q]:   %596 = load i8** @program_name, align 8, !dbg !795
CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
CONTEXT CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !797
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !798
LOAD [p=*q]:   %600 = load i8* %599, align 1, !dbg !799
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %inbyte}, metadata !801), !dbg !803
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %604 = load i32* %imagic1, align 4, !dbg !804
STORE [*p=q]:   store i32 %604, i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %606 = load i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %610 = load i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %611 = load i32* @insize, align 4, !dbg !807
LOAD [p=*q]:   %614 = load i32* @inptr, align 4, !dbg !807
STORE [*p=q]:   store i32 %615, i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %618 = load i8* %617, align 1, !dbg !807
CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
CONTEXT CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %623, i32* %inbyte, align 4, !dbg !808
LOAD [p=*q]:   %625 = load i32* %inbyte, align 4, !dbg !809
LOAD [p=*q]:   %628 = load i32* @verbose, align 4, !dbg !810
LOAD [p=*q]:   %631 = load i32* @quiet, align 4, !dbg !812
LOAD [p=*q]:   %634 = load %struct._IO_FILE** @stderr, align 8, !dbg !812
LOAD [p=*q]:   %635 = load i8** @program_name, align 8, !dbg !812
CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
CONTEXT CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %638 = load i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 -3, i32* %1, !dbg !814
LOAD [p=*q]:   %645 = load i32* @quiet, align 4, !dbg !816
LOAD [p=*q]:   %648 = load %struct._IO_FILE** @stderr, align 8, !dbg !816
LOAD [p=*q]:   %649 = load i8** @program_name, align 8, !dbg !816
CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
CONTEXT CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %652 = load i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 -2, i32* %1, !dbg !818
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
STORE [*p=q]:   store i32 %186, i32* @method, align 4, !dbg !649
LOAD [p=*q]:   %187 = load i32* @method, align 4, !dbg !651
LOAD [p=*q]:   %190 = load i32* @ifd, align 4, !dbg !652
CALL [call func]:   %191 = call i32 @close(i32 %190), !dbg !652
CONTEXT CALL [call func]:   %191 = call i32 @close(i32 %190), !dbg !652
	We do not analyze function 'close'
LOAD [p=*q]:   %194 = load i32* @list, align 4, !dbg !656
LOAD [p=*q]:   %197 = load i32* @ifd, align 4, !dbg !657
LOAD [p=*q]:   %198 = load i32* @method, align 4, !dbg !657
CALL [call func]:   call void @do_list(i32 %197, i32 %198), !dbg !657
CONTEXT CALL [call func]:   call void @do_list(i32 %197, i32 %198), !dbg !657
STORE [*p=q]:   store i32 %ifd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 %method, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %crc}, metadata !578), !dbg !581
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %positive_off_t_width}, metadata !582), !dbg !583
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 1, i32* %positive_off_t_width, align 4, !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %o}, metadata !585), !dbg !586
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 9223372036854775807, i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %4 = load i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %7 = load i32* %positive_off_t_width, align 4, !dbg !589
STORE [*p=q]:   store i32 %8, i32* %positive_off_t_width, align 4, !dbg !589
LOAD [p=*q]:   %10 = load i64* %o, align 8, !dbg !592
STORE [*p=q]:   store i64 %11, i64* %o, align 8, !dbg !592
LOAD [p=*q]:   %13 = load i32* @do_list.first_time, align 4, !dbg !593
LOAD [p=*q]:   %16 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 0, i32* @do_list.first_time, align 4, !dbg !594
LOAD [p=*q]:   %19 = load i32* @verbose, align 4, !dbg !596
CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
CONTEXT CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %24 = load i32* @quiet, align 4, !dbg !600
LOAD [p=*q]:   %27 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %28 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %29 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %30 = load i32* %positive_off_t_width, align 4, !dbg !601
CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
CONTEXT CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %34 = load i32* %2, align 4, !dbg !605
LOAD [p=*q]:   %37 = load i64* @total_in, align 8, !dbg !606
LOAD [p=*q]:   %40 = load i64* @total_out, align 8, !dbg !606
LOAD [p=*q]:   %44 = load i32* @verbose, align 4, !dbg !609
CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
CONTEXT CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %49 = load i32* @verbose, align 4, !dbg !613
LOAD [p=*q]:   %52 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %55 = load %struct._IO_FILE** @stdout, align 8, !dbg !614
LOAD [p=*q]:   %56 = load i64* @total_in, align 8, !dbg !614
LOAD [p=*q]:   %57 = load i32* %positive_off_t_width, align 4, !dbg !614
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
CONTEXT CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %59 = load %struct._IO_FILE** @stdout, align 8, !dbg !617
LOAD [p=*q]:   %60 = load i64* @total_out, align 8, !dbg !617
LOAD [p=*q]:   %61 = load i32* %positive_off_t_width, align 4, !dbg !617
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
CONTEXT CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %64 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %65 = load i64* @total_in, align 8, !dbg !620
LOAD [p=*q]:   %66 = load i64* @header_bytes, align 8, !dbg !620
LOAD [p=*q]:   %69 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %70 = load %struct._IO_FILE** @stdout, align 8, !dbg !620
CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
CONTEXT CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
CONTEXT CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
	We do not analyze function 'rpl_printf'
STORE [*p=q]:   store i64 -1, i64* %crc, align 8, !dbg !623
STORE [*p=q]:   store i64 -1, i64* @bytes_out, align 8, !dbg !624
LOAD [p=*q]:   %74 = load i64* @ifile_size, align 8, !dbg !625
STORE [*p=q]:   store i64 %74, i64* @bytes_in, align 8, !dbg !625
LOAD [p=*q]:   %75 = load i32* %2, align 4, !dbg !626
LOAD [p=*q]:   %78 = load i32* @last_member, align 4, !dbg !626
LOAD [p=*q]:   %81 = load i32* %1, align 4, !dbg !627
CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
CONTEXT CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
	We do not analyze function 'lseek'
STORE [*p=q]:   store i64 %82, i64* @bytes_in, align 8, !dbg !627
LOAD [p=*q]:   %83 = load i64* @bytes_in, align 8, !dbg !629
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[8 x i8]* %buf}, metadata !630), !dbg !635
## do_list does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %86 = load i64* @bytes_in, align 8, !dbg !636
STORE [*p=q]:   store i64 %87, i64* @bytes_in, align 8, !dbg !636
LOAD [p=*q]:   %88 = load i32* %1, align 4, !dbg !637
CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
CONTEXT CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
	We do not analyze function 'read'
CALL [call func]:   call void @read_error() #7, !dbg !638
CONTEXT CALL [call func]:   call void @read_error() #7, !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !574), !dbg !576
CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
LOAD [p=*q]:   %2 = load i32* %1, !dbg !577
STORE [*p=q]:   store i32 %2, i32* %e, align 4, !dbg !577
LOAD [p=*q]:   %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i8** @program_name, align 8, !dbg !578
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
LOAD [p=*q]:   %6 = load i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %9 = load i32* %e, align 4, !dbg !580
CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
STORE [*p=q]:   store i32 %9, i32* %10, !dbg !580
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
LOAD [p=*q]:   %12 = load %struct._IO_FILE** @stderr, align 8, !dbg !584
CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
CALL [call func]:   call void @abort_gzip() #7, !dbg !586
LOAD [p=*q]:   %95 = load i8* %94, align 1, !dbg !640
LOAD [p=*q]:   %99 = load i8* %98, align 1, !dbg !640
LOAD [p=*q]:   %108 = load i8* %107, !dbg !640
LOAD [p=*q]:   %114 = load i8* %113, !dbg !640
STORE [*p=q]:   store i64 %121, i64* %crc, align 8, !dbg !640
LOAD [p=*q]:   %125 = load i8* %124, !dbg !641
LOAD [p=*q]:   %131 = load i8* %130, !dbg !641
LOAD [p=*q]:   %141 = load i8* %140, !dbg !641
LOAD [p=*q]:   %148 = load i8* %147, !dbg !641
STORE [*p=q]:   store i64 %155, i64* @bytes_out, align 8, !dbg !641
LOAD [p=*q]:   %158 = load i32* @verbose, align 4, !dbg !644
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.tm** %tm}, metadata !645), !dbg !661
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
CONTEXT CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
	We do not analyze function 'localtime'
STORE [*p=q]:   store %struct.tm* %161, %struct.tm** %tm, align 8, !dbg !662
LOAD [p=*q]:   %162 = load i32* %2, align 4, !dbg !663
LOAD [p=*q]:   %165 = load i8** %164, align 8, !dbg !663
LOAD [p=*q]:   %166 = load i64* %crc, align 8, !dbg !663
CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
CONTEXT CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %168 = load %struct.tm** %tm, align 8, !dbg !664
LOAD [p=*q]:   %171 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %173 = load i32* %172, align 4, !dbg !665
LOAD [p=*q]:   %177 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %179 = load i32* %178, align 4, !dbg !665
LOAD [p=*q]:   %180 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %182 = load i32* %181, align 4, !dbg !665
LOAD [p=*q]:   %183 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %185 = load i32* %184, align 4, !dbg !665
CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
CONTEXT CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
	We do not analyze function 'rpl_printf'
CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
CONTEXT CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %191 = load %struct._IO_FILE** @stdout, align 8, !dbg !668
LOAD [p=*q]:   %192 = load i64* @bytes_in, align 8, !dbg !668
LOAD [p=*q]:   %193 = load i32* %positive_off_t_width, align 4, !dbg !668
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
CONTEXT CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %195 = load %struct._IO_FILE** @stdout, align 8, !dbg !670
LOAD [p=*q]:   %196 = load i64* @bytes_out, align 8, !dbg !670
LOAD [p=*q]:   %197 = load i32* %positive_off_t_width, align 4, !dbg !670
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
CONTEXT CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %199 = load i64* @bytes_in, align 8, !dbg !672
STORE [*p=q]:   store i64 -1, i64* @total_in, align 8, !dbg !673
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !675
LOAD [p=*q]:   %203 = load i64* @total_in, align 8, !dbg !677
LOAD [p=*q]:   %206 = load i64* @bytes_in, align 8, !dbg !678
LOAD [p=*q]:   %207 = load i64* @total_in, align 8, !dbg !678
STORE [*p=q]:   store i64 %208, i64* @total_in, align 8, !dbg !678
LOAD [p=*q]:   %211 = load i64* @bytes_out, align 8, !dbg !681
STORE [*p=q]:   store i64 -1, i64* @total_out, align 8, !dbg !682
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !684
LOAD [p=*q]:   %215 = load i64* @total_out, align 8, !dbg !686
LOAD [p=*q]:   %218 = load i64* @bytes_out, align 8, !dbg !687
LOAD [p=*q]:   %219 = load i64* @total_out, align 8, !dbg !687
STORE [*p=q]:   store i64 %220, i64* @total_out, align 8, !dbg !687
LOAD [p=*q]:   %223 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %224 = load i64* @bytes_in, align 8, !dbg !690
LOAD [p=*q]:   %225 = load i64* @header_bytes, align 8, !dbg !690
LOAD [p=*q]:   %228 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %229 = load %struct._IO_FILE** @stdout, align 8, !dbg !690
CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
CONTEXT CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
CONTEXT CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %199 = load i32* @ifd, align 4, !dbg !659
CALL [call func]:   %200 = call i32 @close(i32 %199), !dbg !659
CONTEXT CALL [call func]:   %200 = call i32 @close(i32 %199), !dbg !659
	We do not analyze function 'close'
CALL [call func]:   call void @read_error() #7, !dbg !660
CONTEXT CALL [call func]:   call void @read_error() #7, !dbg !660
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !574), !dbg !576
## read_error does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
CONTEXT CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %2 = load i32* %1, !dbg !577
STORE [*p=q]:   store i32 %2, i32* %e, align 4, !dbg !577
LOAD [p=*q]:   %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i8** @program_name, align 8, !dbg !578
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
CONTEXT CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %6 = load i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %9 = load i32* %e, align 4, !dbg !580
CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
CONTEXT CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %9, i32* %10, !dbg !580
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
CONTEXT CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
	We do not analyze function 'rpl_perror'
LOAD [p=*q]:   %12 = load %struct._IO_FILE** @stderr, align 8, !dbg !584
CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
CONTEXT CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @abort_gzip() #7, !dbg !586
CONTEXT CALL [call func]:   call void @abort_gzip() #7, !dbg !586
CALL [call func]:   call void @remove_output_file(), !dbg !574
CALL [call func]:   call void (...)* bitcast (void (i32)* @do_exit to void (...)*)(i32 1) #7, !dbg !576
LOAD [p=*q]:   %205 = load i32* @to_stdout, align 4, !dbg !662
LOAD [p=*q]:   %208 = load %struct._IO_FILE** @stdout, align 8, !dbg !663
CALL [call func]:   %209 = call i32 @fileno(%struct._IO_FILE* %208) #3, !dbg !663
CONTEXT CALL [call func]:   %209 = call i32 @fileno(%struct._IO_FILE* %208) #3, !dbg !663
	We do not analyze function 'fileno'
STORE [*p=q]:   store i32 %209, i32* @ofd, align 4, !dbg !663
CALL [call func]:   %211 = call i32 @create_outfile(), !dbg !666
CONTEXT CALL [call func]:   %211 = call i32 @create_outfile(), !dbg !666
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %name_shortened}, metadata !574), !dbg !576
## create_outfile does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 0, i32* %name_shortened, align 4, !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %flags}, metadata !578), !dbg !579
## create_outfile does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @ascii, align 4, !dbg !580
LOAD [p=*q]:   %5 = load i32* @decompress, align 4, !dbg !580
STORE [*p=q]:   store i32 %10, i32* %flags, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %open_errno}, metadata !583), !dbg !585
## create_outfile does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.__sigset_t* %oldset}, metadata !586), !dbg !587
## create_outfile does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %12 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !588
CONTEXT CALL [call func]:   %12 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !588
	We do not analyze function 'sigprocmask'
LOAD [p=*q]:   %13 = load i32* %flags, align 4, !dbg !589
CALL [call func]:   %14 = call i32 (i8*, i32, ...)* @open_safer(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i32 %13, i32 384), !dbg !589
CONTEXT CALL [call func]:   %14 = call i32 (i8*, i32, ...)* @open_safer(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i32 %13, i32 384), !dbg !589
	We do not analyze function 'open_safer'
STORE [*p=q]:   store i32 %14, i32* @ofd, align 4, !dbg !589
STORE [*p=q]:   store volatile i32 %14, i32* @remove_ofname_fd, align 4, !dbg !589
CALL [call func]:   %15 = call i32* @__errno_location() #1, !dbg !590
CONTEXT CALL [call func]:   %15 = call i32* @__errno_location() #1, !dbg !590
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %16 = load i32* %15, !dbg !590
STORE [*p=q]:   store i32 %16, i32* %open_errno, align 4, !dbg !590
CALL [call func]:   %17 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !591
CONTEXT CALL [call func]:   %17 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !591
	We do not analyze function 'sigprocmask'
LOAD [p=*q]:   %18 = load i32* @ofd, align 4, !dbg !592
LOAD [p=*q]:   %22 = load i32* %open_errno, align 4, !dbg !594
CALL [call func]:   call void @shorten_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !595
CONTEXT CALL [call func]:   call void @shorten_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !595
STORE [*p=q]:   store i8* %name, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %trunc}, metadata !579), !dbg !580
STORE [*p=q]:   store i8* null, i8** %trunc, align 8, !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %plen}, metadata !582), !dbg !583
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %min_part}, metadata !584), !dbg !585
STORE [*p=q]:   store i32 3, i32* %min_part, align 4, !dbg !586
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !587), !dbg !588
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !589
CALL [call func]:   %3 = call i64 @strlen(i8* %2) #4, !dbg !589
STORE [*p=q]:   store i32 %4, i32* %len, align 4, !dbg !589
LOAD [p=*q]:   %5 = load i32* @decompress, align 4, !dbg !590
LOAD [p=*q]:   %8 = load i32* %len, align 4, !dbg !591
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([15 x i8]* @.str45, i32 0, i32 0)) #7, !dbg !593
LOAD [p=*q]:   %12 = load i32* %len, align 4, !dbg !594
LOAD [p=*q]:   %15 = load i8** %1, align 8, !dbg !594
STORE [*p=q]:   store i8 0, i8* %16, !dbg !594
LOAD [p=*q]:   %18 = load i8** %1, align 8, !dbg !596
CALL [call func]:   %19 = call i8* (...)* bitcast (i8* (i8*)* @get_suffix to i8* (...)*)(i8* %18), !dbg !596
STORE [*p=q]:   store i8* %19, i8** %p, align 8, !dbg !596
LOAD [p=*q]:   %20 = load i8** %p, align 8, !dbg !597
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([22 x i8]* @.str46, i32 0, i32 0)) #7, !dbg !598
LOAD [p=*q]:   %24 = load i8** %p, align 8, !dbg !599
STORE [*p=q]:   store i8 0, i8* %24, !dbg !599
STORE [*p=q]:   store i32 1, i32* @save_orig_name, align 4, !dbg !600
LOAD [p=*q]:   %25 = load i32* %len, align 4, !dbg !601
LOAD [p=*q]:   %28 = load i8** %p, align 8, !dbg !602
CALL [call func]:   %30 = call i32 @strcmp(i8* %29, i8* getelementptr inbounds ([5 x i8]* @.str47, i32 0, i32 0)) #4, !dbg !602
LOAD [p=*q]:   %33 = load i8** %p, align 8, !dbg !603
CALL [call func]:   %35 = call i8* @strcpy(i8* %34, i8* getelementptr inbounds ([5 x i8]* @.str48, i32 0, i32 0)) #3, !dbg !603
LOAD [p=*q]:   %38 = load i8** %1, align 8, !dbg !607
CALL [call func]:   %39 = call i8* @strrchr(i8* %38, i32 47) #4, !dbg !607
STORE [*p=q]:   store i8* %39, i8** %p, align 8, !dbg !607
LOAD [p=*q]:   %40 = load i8** %p, align 8, !dbg !609
LOAD [p=*q]:   %43 = load i8** %p, align 8, !dbg !609
LOAD [p=*q]:   %46 = load i8** %1, align 8, !dbg !609
STORE [*p=q]:   store i8* %48, i8** %p, align 8, !dbg !609
LOAD [p=*q]:   %50 = load i8** %p, align 8, !dbg !610
LOAD [p=*q]:   %51 = load i8* %50, !dbg !610
LOAD [p=*q]:   %54 = load i8** %p, align 8, !dbg !611
CALL [call func]:   %55 = call i64 @strcspn(i8* %54, i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i32 0)) #4, !dbg !611
STORE [*p=q]:   store i32 %56, i32* %plen, align 4, !dbg !611
LOAD [p=*q]:   %57 = load i32* %plen, align 4, !dbg !613
LOAD [p=*q]:   %58 = load i8** %p, align 8, !dbg !613
STORE [*p=q]:   store i8* %60, i8** %p, align 8, !dbg !613
LOAD [p=*q]:   %61 = load i32* %plen, align 4, !dbg !614
LOAD [p=*q]:   %62 = load i32* %min_part, align 4, !dbg !614
LOAD [p=*q]:   %65 = load i8** %p, align 8, !dbg !615
STORE [*p=q]:   store i8* %66, i8** %trunc, align 8, !dbg !615
LOAD [p=*q]:   %68 = load i8** %p, align 8, !dbg !616
LOAD [p=*q]:   %69 = load i8* %68, !dbg !616
LOAD [p=*q]:   %72 = load i8** %p, align 8, !dbg !617
STORE [*p=q]:   store i8* %73, i8** %p, align 8, !dbg !617
LOAD [p=*q]:   %77 = load i8** %trunc, align 8, !dbg !619
LOAD [p=*q]:   %80 = load i32* %min_part, align 4, !dbg !619
STORE [*p=q]:   store i32 %81, i32* %min_part, align 4, !dbg !619
LOAD [p=*q]:   %86 = load i8** %trunc, align 8, !dbg !620
LOAD [p=*q]:   %90 = load i8** %trunc, align 8, !dbg !623
LOAD [p=*q]:   %92 = load i8* %91, !dbg !623
LOAD [p=*q]:   %93 = load i8** %trunc, align 8, !dbg !623
STORE [*p=q]:   store i8 %92, i8* %94, !dbg !623
LOAD [p=*q]:   %96 = load i8** %trunc, align 8, !dbg !625
STORE [*p=q]:   store i8* %97, i8** %trunc, align 8, !dbg !625
LOAD [p=*q]:   %98 = load i8* %96, !dbg !625
LOAD [p=*q]:   %101 = load i8** %trunc, align 8, !dbg !626
STORE [*p=q]:   store i8* %102, i8** %trunc, align 8, !dbg !626
LOAD [p=*q]:   %104 = load i8** %1, align 8, !dbg !628
LOAD [p=*q]:   %105 = load i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i64 0), !dbg !628
CALL [call func]:   %107 = call i8* @strrchr(i8* %104, i32 %106) #4, !dbg !628
STORE [*p=q]:   store i8* %107, i8** %trunc, align 8, !dbg !628
LOAD [p=*q]:   %108 = load i8** %trunc, align 8, !dbg !630
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([31 x i8]* @.str50, i32 0, i32 0)) #7, !dbg !631
LOAD [p=*q]:   %112 = load i8** %trunc, align 8, !dbg !632
LOAD [p=*q]:   %114 = load i8* %113, !dbg !632
LOAD [p=*q]:   %118 = load i8** %trunc, align 8, !dbg !633
STORE [*p=q]:   store i8* %119, i8** %trunc, align 8, !dbg !633
LOAD [p=*q]:   %122 = load i8** %trunc, align 8, !dbg !634
LOAD [p=*q]:   %123 = load i8** @z_suffix, align 8, !dbg !634
CALL [call func]:   %124 = call i8* @strcpy(i8* %122, i8* %123) #3, !dbg !634
STORE [*p=q]:   store i32 1, i32* %name_shortened, align 4, !dbg !597
CALL [call func]:   %25 = call i32 @check_ofname(), !dbg !599
CONTEXT CALL [call func]:   %25 = call i32 @check_ofname(), !dbg !599
LOAD [p=*q]:   %2 = load i32* @force, align 4, !dbg !574
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %ok}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* %ok, align 4, !dbg !579
LOAD [p=*q]:   %5 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %6 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %7 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([23 x i8]* @.str42, i32 0, i32 0), i8* %6, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !580
LOAD [p=*q]:   %8 = load i32* @foreground, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i8* @presume_input_tty, align 1, !dbg !581
LOAD [p=*q]:   %14 = load %struct._IO_FILE** @stdin, align 8, !dbg !582
CALL [call func]:   %15 = call i32 @fileno(%struct._IO_FILE* %14) #3, !dbg !582
CALL [call func]:   %16 = call i32 @isatty(i32 %15) #3, !dbg !582
LOAD [p=*q]:   %19 = load %struct._IO_FILE** @stderr, align 8, !dbg !583
CALL [call func]:   %20 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([37 x i8]* @.str43, i32 0, i32 0)), !dbg !583
LOAD [p=*q]:   %21 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
CALL [call func]:   %22 = call i32 @rpl_fflush(%struct._IO_FILE* %21), !dbg !585
CALL [call func]:   %23 = call zeroext i1 @yesno(), !dbg !586
STORE [*p=q]:   store i32 %24, i32* %ok, align 4, !dbg !586
LOAD [p=*q]:   %26 = load i32* %ok, align 4, !dbg !588
LOAD [p=*q]:   %29 = load %struct._IO_FILE** @stderr, align 8, !dbg !589
CALL [call func]:   %30 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([18 x i8]* @.str44, i32 0, i32 0)), !dbg !589
LOAD [p=*q]:   %31 = load i32* @exit_code, align 4, !dbg !591
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !592
STORE [*p=q]:   store i32 1, i32* %1, !dbg !593
CALL [call func]:   %37 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !595
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !596
STORE [*p=q]:   store i32 1, i32* %1, !dbg !598
STORE [*p=q]:   store i32 0, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %28 = load i32* @ifd, align 4, !dbg !600
CALL [call func]:   %29 = call i32 @close(i32 %28), !dbg !600
CONTEXT CALL [call func]:   %29 = call i32 @close(i32 %28), !dbg !600
	We do not analyze function 'close'
STORE [*p=q]:   store i32 1, i32* %1, !dbg !602
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !604
CONTEXT CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !604
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
LOAD [p=*q]:   %32 = load i32* @ifd, align 4, !dbg !605
CALL [call func]:   %33 = call i32 @close(i32 %32), !dbg !605
CONTEXT CALL [call func]:   %33 = call i32 @close(i32 %32), !dbg !605
	We do not analyze function 'close'
STORE [*p=q]:   store i32 1, i32* %1, !dbg !606
LOAD [p=*q]:   %36 = load i32* %name_shortened, align 4, !dbg !608
LOAD [p=*q]:   %39 = load i32* @decompress, align 4, !dbg !608
LOAD [p=*q]:   %42 = load i32* @quiet, align 4, !dbg !609
LOAD [p=*q]:   %45 = load %struct._IO_FILE** @stderr, align 8, !dbg !609
LOAD [p=*q]:   %46 = load i8** @program_name, align 8, !dbg !609
CALL [call func]:   %47 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([33 x i8]* @.str41, i32 0, i32 0), i8* %46, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !609
CONTEXT CALL [call func]:   %47 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([33 x i8]* @.str41, i32 0, i32 0), i8* %46, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !609
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %49 = load i32* @exit_code, align 4, !dbg !609
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !609
STORE [*p=q]:   store i32 0, i32* %1, !dbg !613
LOAD [p=*q]:   %55 = load i32* %1, !dbg !614
LOAD [p=*q]:   %215 = load i32* @decompress, align 4, !dbg !669
LOAD [p=*q]:   %218 = load i32* @save_orig_name, align 4, !dbg !669
LOAD [p=*q]:   %221 = load i32* @verbose, align 4, !dbg !669
LOAD [p=*q]:   %224 = load i32* @quiet, align 4, !dbg !669
LOAD [p=*q]:   %227 = load %struct._IO_FILE** @stderr, align 8, !dbg !670
LOAD [p=*q]:   %228 = load i8** @program_name, align 8, !dbg !670
CALL [call func]:   %229 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %227, i8* getelementptr inbounds ([25 x i8]* @.str34, i32 0, i32 0), i8* %228, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !670
CONTEXT CALL [call func]:   %229 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %227, i8* getelementptr inbounds ([25 x i8]* @.str34, i32 0, i32 0), i8* %228, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !670
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %232 = load i32* @save_orig_name, align 4, !dbg !673
LOAD [p=*q]:   %235 = load i32* @no_name, align 4, !dbg !674
STORE [*p=q]:   store i32 %238, i32* @save_orig_name, align 4, !dbg !674
LOAD [p=*q]:   %240 = load i32* @verbose, align 4, !dbg !675
LOAD [p=*q]:   %243 = load %struct._IO_FILE** @stderr, align 8, !dbg !676
CALL [call func]:   %244 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %243, i8* getelementptr inbounds ([5 x i8]* @.str35, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !676
CONTEXT CALL [call func]:   %244 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %243, i8* getelementptr inbounds ([5 x i8]* @.str35, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !676
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %247 = load i32 (i32, i32)** @work, align 8, !dbg !681
LOAD [p=*q]:   %248 = load i32* @ifd, align 4, !dbg !681
LOAD [p=*q]:   %249 = load i32* @ofd, align 4, !dbg !681
CALL [call func]:   %250 = call i32 %247(i32 %248, i32 %249), !dbg !681
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !683
CALL [call func]:   %254 = call i32 @input_eof(), !dbg !686
CONTEXT CALL [call func]:   %254 = call i32 @input_eof(), !dbg !686
LOAD [p=*q]:   %2 = load i32* @decompress, align 4, !dbg !574
LOAD [p=*q]:   %5 = load i32* @last_member, align 4, !dbg !574
STORE [*p=q]:   store i32 1, i32* %1, !dbg !576
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !577
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !577
LOAD [p=*q]:   %13 = load i32* @insize, align 4, !dbg !578
CALL [call func]:   %16 = call i32 @fill_inbuf(i32 1), !dbg !580
CONTEXT CALL [call func]:   %16 = call i32 @fill_inbuf(i32 1), !dbg !580
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 1, i32* %1, !dbg !581
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !582
STORE [*p=q]:   store i32 0, i32* %1, !dbg !584
LOAD [p=*q]:   %22 = load i32* %1, !dbg !585
LOAD [p=*q]:   %258 = load i32* @ifd, align 4, !dbg !688
CALL [call func]:   %259 = call i32 @get_method(i32 %258), !dbg !688
CONTEXT CALL [call func]:   %259 = call i32 @get_method(i32 %258), !dbg !688
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %flags}, metadata !576), !dbg !578
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[10 x i8]* %magic}, metadata !579), !dbg !581
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic0}, metadata !582), !dbg !583
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic1}, metadata !584), !dbg !585
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %stamp}, metadata !586), !dbg !588
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %3 = load i32* @force, align 4, !dbg !589
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !589
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !590
CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
CONTEXT CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %22, i32* %imagic0, align 4, !dbg !592
LOAD [p=*q]:   %23 = load i32* %imagic0, align 4, !dbg !593
STORE [*p=q]:   store i8 %24, i8* %25, align 1, !dbg !593
LOAD [p=*q]:   %26 = load i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* @insize, align 4, !dbg !594
LOAD [p=*q]:   %30 = load i32* @inptr, align 4, !dbg !594
STORE [*p=q]:   store i32 %31, i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %34 = load i8* %33, align 1, !dbg !594
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
CONTEXT CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %39, i32* %imagic1, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* %imagic1, align 4, !dbg !596
STORE [*p=q]:   store i8 %41, i8* %42, align 1, !dbg !596
LOAD [p=*q]:   %44 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %45 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %48 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %49, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !598
CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
CONTEXT CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %58, i8* %59, align 1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %imagic0, align 4, !dbg !601
LOAD [p=*q]:   %61 = load i8* %60, align 1, !dbg !602
LOAD [p=*q]:   %64 = load i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %65 = load i32* @insize, align 4, !dbg !603
LOAD [p=*q]:   %68 = load i32* @inptr, align 4, !dbg !603
STORE [*p=q]:   store i32 %69, i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %72 = load i8* %71, align 1, !dbg !603
CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
CONTEXT CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %78, i8* %79, align 1, !dbg !605
STORE [*p=q]:   store i32 0, i32* %imagic1, align 4, !dbg !606
LOAD [p=*q]:   %81 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %82 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %85 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %86, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %89 = load i8* %88, align 1, !dbg !608
CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
CONTEXT CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %94, i32* %imagic1, align 4, !dbg !610
LOAD [p=*q]:   %95 = load i32* %imagic1, align 4, !dbg !611
STORE [*p=q]:   store i8 %96, i8* %97, align 1, !dbg !611
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !612
LOAD [p=*q]:   %100 = load i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i32 %101, i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !614
STORE [*p=q]:   store i32 0, i32* @last_member, align 4, !dbg !615
CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
CONTEXT CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
	We do not analyze function 'memcmp'
CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
CONTEXT CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %110 = load i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %111 = load i32* @insize, align 4, !dbg !618
LOAD [p=*q]:   %114 = load i32* @inptr, align 4, !dbg !618
STORE [*p=q]:   store i32 %115, i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %118 = load i8* %117, align 1, !dbg !618
CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
CONTEXT CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %123, i32* @method, align 4, !dbg !620
LOAD [p=*q]:   %124 = load i32* @method, align 4, !dbg !621
LOAD [p=*q]:   %127 = load %struct._IO_FILE** @stderr, align 8, !dbg !622
LOAD [p=*q]:   %128 = load i8** @program_name, align 8, !dbg !622
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !622
CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
CONTEXT CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !624
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !625
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !626
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !627
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !627
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !627
CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
CONTEXT CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %146, i8* %flags, align 1, !dbg !628
LOAD [p=*q]:   %147 = load i8* %flags, align 1, !dbg !629
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !630
LOAD [p=*q]:   %153 = load i8** @program_name, align 8, !dbg !630
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
CONTEXT CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !632
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !633
LOAD [p=*q]:   %156 = load i8* %flags, align 1, !dbg !634
LOAD [p=*q]:   %161 = load %struct._IO_FILE** @stderr, align 8, !dbg !635
LOAD [p=*q]:   %162 = load i8** @program_name, align 8, !dbg !635
LOAD [p=*q]:   %163 = load i8* %flags, align 1, !dbg !635
CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
CONTEXT CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !637
LOAD [p=*q]:   %166 = load i32* @force, align 4, !dbg !638
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !639
LOAD [p=*q]:   %171 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %172 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %175 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %176, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %179 = load i8* %178, align 1, !dbg !641
CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
CONTEXT CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i64 %185, i64* %stamp, align 8, !dbg !642
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !643
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !643
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !643
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
CONTEXT CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %202 = load i64* %stamp, align 8, !dbg !644
STORE [*p=q]:   store i64 %203, i64* %stamp, align 8, !dbg !644
LOAD [p=*q]:   %204 = load i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* @insize, align 4, !dbg !645
LOAD [p=*q]:   %208 = load i32* @inptr, align 4, !dbg !645
STORE [*p=q]:   store i32 %209, i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %212 = load i8* %211, align 1, !dbg !645
CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
CONTEXT CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %220 = load i64* %stamp, align 8, !dbg !646
STORE [*p=q]:   store i64 %221, i64* %stamp, align 8, !dbg !646
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !647
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !647
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !647
CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
CONTEXT CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %238 = load i64* %stamp, align 8, !dbg !648
STORE [*p=q]:   store i64 %239, i64* %stamp, align 8, !dbg !648
LOAD [p=*q]:   %240 = load i64* %stamp, align 8, !dbg !649
LOAD [p=*q]:   %243 = load i32* @no_time, align 4, !dbg !649
LOAD [p=*q]:   %246 = load i64* %stamp, align 8, !dbg !650
STORE [*p=q]:   store i64 %246, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !650
STORE [*p=q]:   store i64 0, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !652
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %252 = load i32* @inptr, align 4, !dbg !654
STORE [*p=q]:   store i32 %253, i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %256 = load i8* %255, align 1, !dbg !654
CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
CONTEXT CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %262, i8* %263, align 1, !dbg !655
LOAD [p=*q]:   %264 = load i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %265 = load i32* @insize, align 4, !dbg !656
LOAD [p=*q]:   %268 = load i32* @inptr, align 4, !dbg !656
STORE [*p=q]:   store i32 %269, i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %272 = load i8* %271, align 1, !dbg !656
CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
CONTEXT CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %278, i8* %279, align 1, !dbg !657
LOAD [p=*q]:   %280 = load i8* %flags, align 1, !dbg !658
STORE [*p=q]:   store i8 8, i8* %285, align 1, !dbg !659
LOAD [p=*q]:   %286 = load i8* %flags, align 1, !dbg !661
STORE [*p=q]:   store i8 %286, i8* %287, align 1, !dbg !661
LOAD [p=*q]:   %288 = load i64* %stamp, align 8, !dbg !662
STORE [*p=q]:   store i8 %290, i8* %291, align 1, !dbg !662
LOAD [p=*q]:   %292 = load i64* %stamp, align 8, !dbg !663
STORE [*p=q]:   store i8 %295, i8* %296, align 1, !dbg !663
LOAD [p=*q]:   %297 = load i64* %stamp, align 8, !dbg !664
STORE [*p=q]:   store i8 %300, i8* %301, align 1, !dbg !664
LOAD [p=*q]:   %302 = load i64* %stamp, align 8, !dbg !665
STORE [*p=q]:   store i8 %304, i8* %305, align 1, !dbg !665
CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
CONTEXT CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
CONTEXT CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %310 = load i8* %flags, align 1, !dbg !669
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x i8]* %lenbuf}, metadata !670), !dbg !675
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !676), !dbg !677
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %315 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %316 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %319 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %320, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %323 = load i8* %322, align 1, !dbg !678
CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
CONTEXT CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %329, i8* %330, align 1, !dbg !679
STORE [*p=q]:   store i32 %331, i32* %len, align 4, !dbg !679
LOAD [p=*q]:   %332 = load i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %333 = load i32* @insize, align 4, !dbg !680
LOAD [p=*q]:   %336 = load i32* @inptr, align 4, !dbg !680
STORE [*p=q]:   store i32 %337, i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %340 = load i8* %339, align 1, !dbg !680
CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
CONTEXT CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %346, i8* %347, align 1, !dbg !681
LOAD [p=*q]:   %350 = load i32* %len, align 4, !dbg !681
STORE [*p=q]:   store i32 %351, i32* %len, align 4, !dbg !681
LOAD [p=*q]:   %352 = load i32* @verbose, align 4, !dbg !682
LOAD [p=*q]:   %355 = load %struct._IO_FILE** @stderr, align 8, !dbg !683
LOAD [p=*q]:   %356 = load i8** @program_name, align 8, !dbg !683
LOAD [p=*q]:   %357 = load i32* %len, align 4, !dbg !683
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
CONTEXT CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %360 = load i8* %flags, align 1, !dbg !686
CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
CONTEXT CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %368 = load i32* %len, align 4, !dbg !688
LOAD [p=*q]:   %370 = load i8* %flags, align 1, !dbg !688
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 %369, i32 %371), !dbg !688
LOAD [p=*q]:   %373 = load i8* %flags, align 1, !dbg !690
LOAD [p=*q]:   %378 = load i32* @no_name, align 4, !dbg !691
LOAD [p=*q]:   %381 = load i32* @to_stdout, align 4, !dbg !691
LOAD [p=*q]:   %384 = load i32* @list, align 4, !dbg !691
LOAD [p=*q]:   %387 = load i32* @part_nb, align 4, !dbg !691
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !696), !dbg !698
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
CONTEXT CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %393, i8** %p, align 8, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %base}, metadata !700), !dbg !701
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %394 = load i8** %p, align 8, !dbg !702
STORE [*p=q]:   store i8* %394, i8** %base, align 8, !dbg !702
LOAD [p=*q]:   %396 = load i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %397 = load i32* @insize, align 4, !dbg !705
LOAD [p=*q]:   %400 = load i32* @inptr, align 4, !dbg !705
STORE [*p=q]:   store i32 %401, i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %404 = load i8* %403, align 1, !dbg !705
CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
CONTEXT CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %411 = load i8** %p, align 8, !dbg !707
STORE [*p=q]:   store i8 %410, i8* %411, !dbg !707
LOAD [p=*q]:   %412 = load i8** %p, align 8, !dbg !708
STORE [*p=q]:   store i8* %413, i8** %p, align 8, !dbg !708
LOAD [p=*q]:   %414 = load i8* %412, !dbg !708
LOAD [p=*q]:   %419 = load i8** %p, align 8, !dbg !710
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
CONTEXT CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
STORE [*p=q]:   store i8* %m, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !576
LOAD [p=*q]:   %3 = load i8** @program_name, align 8, !dbg !576
LOAD [p=*q]:   %4 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
CALL [call func]:   call void @abort_gzip() #7, !dbg !578
LOAD [p=*q]:   %424 = load i8* %flags, align 1, !dbg !714
LOAD [p=*q]:   %429 = load i8** %base, align 8, !dbg !715
LOAD [p=*q]:   %430 = load i8** %p, align 8, !dbg !715
LOAD [p=*q]:   %431 = load i8** %base, align 8, !dbg !715
CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
CONTEXT CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %438 = load i8** %base, align 8, !dbg !716
CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
CONTEXT CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %439, i8** %p, align 8, !dbg !716
LOAD [p=*q]:   %440 = load i8** %base, align 8, !dbg !717
LOAD [p=*q]:   %441 = load i8** %p, align 8, !dbg !717
LOAD [p=*q]:   %442 = load i8** %p, align 8, !dbg !718
CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
CONTEXT CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
	We do not analyze function 'strlen'
CALL [call func]:   call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %441, i64 %444, i32 1, i1 false), !dbg !718
## get_method does not call llvm.memmove.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %445 = load i32* @list, align 4, !dbg !719
LOAD [p=*q]:   %448 = load i8** %base, align 8, !dbg !720
STORE [*p=q]:   store i32 0, i32* @list, align 4, !dbg !722
LOAD [p=*q]:   %455 = load i8* %flags, align 1, !dbg !725
LOAD [p=*q]:   %460 = load i8* %flags, align 1, !dbg !726
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %461), !dbg !726
LOAD [p=*q]:   %463 = load i8* %flags, align 1, !dbg !729
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %crc16}, metadata !730), !dbg !732
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
CONTEXT CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
STORE [*p=q]:   store i32 %471, i32* %crc16, align 4, !dbg !733
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %header16}, metadata !734), !dbg !735
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %472 = load i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %473 = load i32* @insize, align 4, !dbg !736
LOAD [p=*q]:   %476 = load i32* @inptr, align 4, !dbg !736
STORE [*p=q]:   store i32 %477, i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %480 = load i8* %479, align 1, !dbg !736
CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
CONTEXT CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %485, i32* %header16, align 4, !dbg !737
LOAD [p=*q]:   %486 = load i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %487 = load i32* @insize, align 4, !dbg !738
LOAD [p=*q]:   %490 = load i32* @inptr, align 4, !dbg !738
STORE [*p=q]:   store i32 %491, i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %494 = load i8* %493, align 1, !dbg !738
CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
CONTEXT CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %501 = load i32* %header16, align 4, !dbg !739
STORE [*p=q]:   store i32 %502, i32* %header16, align 4, !dbg !739
LOAD [p=*q]:   %503 = load i32* %header16, align 4, !dbg !740
LOAD [p=*q]:   %504 = load i32* %crc16, align 4, !dbg !740
LOAD [p=*q]:   %507 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
LOAD [p=*q]:   %508 = load i8** @program_name, align 8, !dbg !741
LOAD [p=*q]:   %509 = load i32* %header16, align 4, !dbg !741
LOAD [p=*q]:   %510 = load i32* %crc16, align 4, !dbg !741
CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
CONTEXT CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !743
LOAD [p=*q]:   %512 = load i32* @force, align 4, !dbg !744
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !745
LOAD [p=*q]:   %518 = load i32* @part_nb, align 4, !dbg !748
LOAD [p=*q]:   %521 = load i32* @inptr, align 4, !dbg !749
STORE [*p=q]:   store i64 %523, i64* @header_bytes, align 8, !dbg !749
CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
CONTEXT CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %530 = load i32* @inptr, align 4, !dbg !753
CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
CONTEXT CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !755
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !757
LOAD [p=*q]:   %536 = load i32* %2, align 4, !dbg !758
CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
CONTEXT CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %h}, metadata !576), !dbg !580
LOAD [p=*q]:   %3 = load i32* @inptr, align 4, !dbg !581
STORE [*p=q]:   store i8* %5, i8** %h, align 8, !dbg !581
LOAD [p=*q]:   %6 = load i32* %2, align 4, !dbg !582
STORE [*p=q]:   store i32 %6, i32* @ifd, align 4, !dbg !582
LOAD [p=*q]:   %7 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i8* %9, !dbg !583
LOAD [p=*q]:   %13 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %16 = load i8* %15, !dbg !583
LOAD [p=*q]:   %22 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %25 = load i8* %24, !dbg !583
LOAD [p=*q]:   %28 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %31 = load i8* %30, !dbg !583
LOAD [p=*q]:   %37 = load i32* @inptr, align 4, !dbg !583
STORE [*p=q]:   store i32 %38, i32* @inptr, align 4, !dbg !583
LOAD [p=*q]:   %39 = load i32* @inptr, align 4, !dbg !584
LOAD [p=*q]:   %40 = load i32* @insize, align 4, !dbg !584
LOAD [p=*q]:   %43 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %45 = load i8* %44, !dbg !584
LOAD [p=*q]:   %48 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %50 = load i8* %49, !dbg !584
LOAD [p=*q]:   %56 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %59 = load i8* %58, !dbg !584
LOAD [p=*q]:   %62 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %65 = load i8* %64, !dbg !584
LOAD [p=*q]:   %75 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
LOAD [p=*q]:   %76 = load i8** @program_name, align 8, !dbg !585
CALL [call func]:   %77 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([31 x i8]* @.str167, i32 0, i32 0), i8* %76, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !585
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !587
STORE [*p=q]:   store i32 1, i32* %1, !dbg !588
LOAD [p=*q]:   %79 = load i8** %h, align 8, !dbg !589
LOAD [p=*q]:   %81 = load i8* %80, !dbg !589
STORE [*p=q]:   store i32 %82, i32* @method, align 4, !dbg !589
LOAD [p=*q]:   %83 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %86 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %89 = load %struct._IO_FILE** @stderr, align 8, !dbg !591
LOAD [p=*q]:   %90 = load i8** @program_name, align 8, !dbg !591
CALL [call func]:   %91 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([58 x i8]* @.str1168, i32 0, i32 0), i8* %90, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !593
STORE [*p=q]:   store i32 1, i32* %1, !dbg !594
LOAD [p=*q]:   %93 = load i8** %h, align 8, !dbg !595
LOAD [p=*q]:   %95 = load i8* %94, !dbg !595
STORE [*p=q]:   store i32 %97, i32* @decrypt, align 4, !dbg !595
LOAD [p=*q]:   %100 = load %struct._IO_FILE** @stderr, align 8, !dbg !596
LOAD [p=*q]:   %101 = load i8** @program_name, align 8, !dbg !596
CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([38 x i8]* @.str2169, i32 0, i32 0), i8* %101, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !596
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !598
STORE [*p=q]:   store i32 1, i32* %1, !dbg !599
LOAD [p=*q]:   %104 = load i8** %h, align 8, !dbg !600
LOAD [p=*q]:   %106 = load i8* %105, !dbg !600
STORE [*p=q]:   store i32 %110, i32* @ext_header, align 4, !dbg !600
STORE [*p=q]:   store i32 1, i32* @pkzip, align 4, !dbg !601
STORE [*p=q]:   store i32 0, i32* %1, !dbg !602
LOAD [p=*q]:   %112 = load i32* %1, !dbg !603
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !759
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !760
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
CONTEXT CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unpack, i32 (i32, i32)** @work, align 8, !dbg !763
STORE [*p=q]:   store i32 2, i32* @method, align 4, !dbg !765
CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
CONTEXT CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzw, i32 (i32, i32)** @work, align 8, !dbg !768
STORE [*p=q]:   store i32 1, i32* @method, align 4, !dbg !770
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !771
CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
CONTEXT CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzh, i32 (i32, i32)** @work, align 8, !dbg !774
STORE [*p=q]:   store i32 3, i32* @method, align 4, !dbg !776
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !777
LOAD [p=*q]:   %557 = load i32* @force, align 4, !dbg !779
LOAD [p=*q]:   %560 = load i32* @to_stdout, align 4, !dbg !779
LOAD [p=*q]:   %563 = load i32* @list, align 4, !dbg !779
STORE [*p=q]:   store i32 0, i32* @method, align 4, !dbg !780
STORE [*p=q]:   store i32 (i32, i32)* @copy, i32 (i32, i32)** @work, align 8, !dbg !782
LOAD [p=*q]:   %566 = load i32* %imagic1, align 4, !dbg !783
LOAD [p=*q]:   %569 = load i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 %570, i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !785
LOAD [p=*q]:   %572 = load i32* %imagic0, align 4, !dbg !786
LOAD [p=*q]:   %575 = load %struct._IO_FILE** @stdout, align 8, !dbg !787
CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
CONTEXT CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
	We do not analyze function 'fileno'
CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
CONTEXT CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
STORE [*p=q]:   store i32 %fd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i8* %buf, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !576), !dbg !579
STORE [*p=q]:   store i32 %cnt, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !580), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !582), !dbg !584
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !586
LOAD [p=*q]:   %6 = load i8** %2, align 8, !dbg !586
LOAD [p=*q]:   %7 = load i32* %3, align 4, !dbg !586
CALL [call func]:   %8 = call i32 (...)* bitcast (i32 (i32, i8*, i32)* @write_buffer to i32 (...)*)(i32 %5, i8* %6, i32 %7), !dbg !586
STORE [*p=q]:   store i32 %8, i32* %n, align 4, !dbg !586
LOAD [p=*q]:   %9 = load i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %12 = load i32* %n, align 4, !dbg !587
CALL [call func]:   call void @write_error() #7, !dbg !589
LOAD [p=*q]:   %16 = load i32* %n, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %3, align 4, !dbg !591
STORE [*p=q]:   store i32 %18, i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %20 = load i32* %n, align 4, !dbg !592
STORE [*p=q]:   store i8* %22, i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %578 = load i64* @bytes_out, align 8, !dbg !789
STORE [*p=q]:   store i64 %579, i64* @bytes_out, align 8, !dbg !789
LOAD [p=*q]:   %587 = load i32* @method, align 4, !dbg !792
LOAD [p=*q]:   %590 = load i32* @method, align 4, !dbg !793
STORE [*p=q]:   store i32 %590, i32* %1, !dbg !793
LOAD [p=*q]:   %592 = load i32* @part_nb, align 4, !dbg !794
LOAD [p=*q]:   %595 = load %struct._IO_FILE** @stderr, align 8, !dbg !795
LOAD [p=*q]:   %596 = load i8** @program_name, align 8, !dbg !795
CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
CONTEXT CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !797
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !798
LOAD [p=*q]:   %600 = load i8* %599, align 1, !dbg !799
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %inbyte}, metadata !801), !dbg !803
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %604 = load i32* %imagic1, align 4, !dbg !804
STORE [*p=q]:   store i32 %604, i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %606 = load i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %610 = load i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %611 = load i32* @insize, align 4, !dbg !807
LOAD [p=*q]:   %614 = load i32* @inptr, align 4, !dbg !807
STORE [*p=q]:   store i32 %615, i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %618 = load i8* %617, align 1, !dbg !807
CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
CONTEXT CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %623, i32* %inbyte, align 4, !dbg !808
LOAD [p=*q]:   %625 = load i32* %inbyte, align 4, !dbg !809
LOAD [p=*q]:   %628 = load i32* @verbose, align 4, !dbg !810
LOAD [p=*q]:   %631 = load i32* @quiet, align 4, !dbg !812
LOAD [p=*q]:   %634 = load %struct._IO_FILE** @stderr, align 8, !dbg !812
LOAD [p=*q]:   %635 = load i8** @program_name, align 8, !dbg !812
CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
CONTEXT CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %638 = load i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 -3, i32* %1, !dbg !814
LOAD [p=*q]:   %645 = load i32* @quiet, align 4, !dbg !816
LOAD [p=*q]:   %648 = load %struct._IO_FILE** @stderr, align 8, !dbg !816
LOAD [p=*q]:   %649 = load i8** @program_name, align 8, !dbg !816
CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
CONTEXT CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %652 = load i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 -2, i32* %1, !dbg !818
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
STORE [*p=q]:   store i32 %259, i32* @method, align 4, !dbg !688
LOAD [p=*q]:   %260 = load i32* @method, align 4, !dbg !689
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !691
LOAD [p=*q]:   %265 = load i32* @ifd, align 4, !dbg !693
CALL [call func]:   %266 = call i32 @close(i32 %265), !dbg !693
CONTEXT CALL [call func]:   %266 = call i32 @close(i32 %265), !dbg !693
	We do not analyze function 'close'
CALL [call func]:   call void @read_error() #7, !dbg !694
CONTEXT CALL [call func]:   call void @read_error() #7, !dbg !694
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !574), !dbg !576
## read_error does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
CONTEXT CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %2 = load i32* %1, !dbg !577
STORE [*p=q]:   store i32 %2, i32* %e, align 4, !dbg !577
LOAD [p=*q]:   %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i8** @program_name, align 8, !dbg !578
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
CONTEXT CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %6 = load i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %9 = load i32* %e, align 4, !dbg !580
CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
CONTEXT CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %9, i32* %10, !dbg !580
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
CONTEXT CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
	We do not analyze function 'rpl_perror'
LOAD [p=*q]:   %12 = load %struct._IO_FILE** @stderr, align 8, !dbg !584
CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
CONTEXT CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @abort_gzip() #7, !dbg !586
CONTEXT CALL [call func]:   call void @abort_gzip() #7, !dbg !586
CALL [call func]:   call void @remove_output_file(), !dbg !574
CALL [call func]:   call void (...)* bitcast (void (i32)* @do_exit to void (...)*)(i32 1) #7, !dbg !576
LOAD [p=*q]:   %270 = load i32* @to_stdout, align 4, !dbg !695
CALL [call func]:   call void @copy_stat(%struct.stat* @istat), !dbg !696
CONTEXT CALL [call func]:   call void @copy_stat(%struct.stat* @istat), !dbg !696
STORE [*p=q]:   store %struct.stat* %ifstat, %struct.stat** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.stat** %1}, metadata !574), !dbg !576
## copy_stat does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %mode}, metadata !577), !dbg !580
## copy_stat does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %4 = load %struct.stat** %1, align 8, !dbg !581
LOAD [p=*q]:   %6 = load i32* %5, align 4, !dbg !581
STORE [*p=q]:   store i32 %7, i32* %mode, align 4, !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !582), !dbg !583
## copy_stat does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x %struct.timespec]* %timespec}, metadata !584), !dbg !588
## copy_stat does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %9 = load %struct.stat** %1, align 8, !dbg !590
CALL [call func]:   %10 = call { i64, i64 } @get_stat_atime(%struct.stat* %9), !dbg !590
CONTEXT CALL [call func]:   %10 = call { i64, i64 } @get_stat_atime(%struct.stat* %9), !dbg !590
	We do not analyze function 'get_stat_atime'
STORE [*p=q]:   store i64 %13, i64* %12, align 1, !dbg !590
STORE [*p=q]:   store i64 %15, i64* %14, align 1, !dbg !590
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 16, i32 8, i1 false), !dbg !590
## copy_stat does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %19 = load %struct.stat** %1, align 8, !dbg !592
CALL [call func]:   %20 = call { i64, i64 } @get_stat_mtime(%struct.stat* %19), !dbg !592
CONTEXT CALL [call func]:   %20 = call { i64, i64 } @get_stat_mtime(%struct.stat* %19), !dbg !592
	We do not analyze function 'get_stat_mtime'
STORE [*p=q]:   store i64 %23, i64* %22, align 1, !dbg !592
STORE [*p=q]:   store i64 %25, i64* %24, align 1, !dbg !592
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false), !dbg !592
## copy_stat does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %28 = load i32* @decompress, align 4, !dbg !593
LOAD [p=*q]:   %31 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !593
LOAD [p=*q]:   %36 = load i64* %35, align 8, !dbg !593
LOAD [p=*q]:   %37 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !593
LOAD [p=*q]:   %42 = load i64* %41, align 8, !dbg !593
LOAD [p=*q]:   %43 = load i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !593
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* bitcast (%struct.timespec* @time_stamp to i8*), i64 16, i32 8, i1 false), !dbg !594
## copy_stat does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %48 = load i32* @verbose, align 4, !dbg !596
LOAD [p=*q]:   %51 = load %struct._IO_FILE** @stderr, align 8, !dbg !597
CALL [call func]:   %52 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([25 x i8]* @.str40, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !597
CONTEXT CALL [call func]:   %52 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([25 x i8]* @.str40, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !597
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %55 = load i32* @ofd, align 4, !dbg !601
CALL [call func]:   %57 = call i32 @fdutimens(i32 %55, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), %struct.timespec* %56), !dbg !601
CONTEXT CALL [call func]:   %57 = call i32 @fdutimens(i32 %55, i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), %struct.timespec* %56), !dbg !601
	We do not analyze function 'fdutimens'
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !602), !dbg !604
## copy_stat does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %60 = call i32* @__errno_location() #1, !dbg !605
CONTEXT CALL [call func]:   %60 = call i32* @__errno_location() #1, !dbg !605
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %61 = load i32* %60, !dbg !605
STORE [*p=q]:   store i32 %61, i32* %e, align 4, !dbg !605
LOAD [p=*q]:   %62 = load i32* @quiet, align 4, !dbg !606
LOAD [p=*q]:   %65 = load %struct._IO_FILE** @stderr, align 8, !dbg !606
LOAD [p=*q]:   %66 = load i8** @program_name, align 8, !dbg !606
CALL [call func]:   %67 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %66), !dbg !606
CONTEXT CALL [call func]:   %67 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %66), !dbg !606
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %69 = load i32* @exit_code, align 4, !dbg !606
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !606
LOAD [p=*q]:   %73 = load i32* @quiet, align 4, !dbg !608
LOAD [p=*q]:   %76 = load i32* %e, align 4, !dbg !609
CALL [call func]:   %77 = call i32* @__errno_location() #1, !dbg !609
CONTEXT CALL [call func]:   %77 = call i32* @__errno_location() #1, !dbg !609
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %76, i32* %77, !dbg !609
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !611
CONTEXT CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !611
	We do not analyze function 'rpl_perror'
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %__x}, metadata !614), !dbg !616
## copy_stat does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %80 = load i32* @ofd, align 4, !dbg !616
LOAD [p=*q]:   %81 = load %struct.stat** %1, align 8, !dbg !616
LOAD [p=*q]:   %83 = load i32* %82, align 4, !dbg !616
LOAD [p=*q]:   %84 = load %struct.stat** %1, align 8, !dbg !616
LOAD [p=*q]:   %86 = load i32* %85, align 4, !dbg !616
CALL [call func]:   %87 = call i32 @fchown(i32 %80, i32 %83, i32 %86) #3, !dbg !616
CONTEXT CALL [call func]:   %87 = call i32 @fchown(i32 %80, i32 %83, i32 %86) #3, !dbg !616
	We do not analyze function 'fchown'
STORE [*p=q]:   store i32 %87, i32* %__x, align 4, !dbg !616
LOAD [p=*q]:   %88 = load i32* %__x, align 4, !dbg !616
LOAD [p=*q]:   %89 = load i32* @ofd, align 4, !dbg !617
LOAD [p=*q]:   %90 = load i32* %mode, align 4, !dbg !617
CALL [call func]:   %91 = call i32 @fchmod(i32 %89, i32 %90) #3, !dbg !617
CONTEXT CALL [call func]:   %91 = call i32 @fchmod(i32 %89, i32 %90) #3, !dbg !617
	We do not analyze function 'fchmod'
STORE [*p=q]:   store i32 %91, i32* %r, align 4, !dbg !617
LOAD [p=*q]:   %92 = load i32* %r, align 4, !dbg !618
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e1}, metadata !619), !dbg !621
## copy_stat does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %95 = call i32* @__errno_location() #1, !dbg !622
CONTEXT CALL [call func]:   %95 = call i32* @__errno_location() #1, !dbg !622
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %96 = load i32* %95, !dbg !622
STORE [*p=q]:   store i32 %96, i32* %e1, align 4, !dbg !622
LOAD [p=*q]:   %97 = load i32* @quiet, align 4, !dbg !623
LOAD [p=*q]:   %100 = load %struct._IO_FILE** @stderr, align 8, !dbg !623
LOAD [p=*q]:   %101 = load i8** @program_name, align 8, !dbg !623
CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %101), !dbg !623
CONTEXT CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %101), !dbg !623
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %104 = load i32* @exit_code, align 4, !dbg !623
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !623
LOAD [p=*q]:   %108 = load i32* @quiet, align 4, !dbg !625
LOAD [p=*q]:   %111 = load i32* %e1, align 4, !dbg !626
CALL [call func]:   %112 = call i32* @__errno_location() #1, !dbg !626
CONTEXT CALL [call func]:   %112 = call i32* @__errno_location() #1, !dbg !626
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %111, i32* %112, !dbg !626
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !628
CONTEXT CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !628
	We do not analyze function 'rpl_perror'
LOAD [p=*q]:   %273 = load i32* @ofd, align 4, !dbg !698
CALL [call func]:   %274 = call i32 @close(i32 %273), !dbg !698
CONTEXT CALL [call func]:   %274 = call i32 @close(i32 %273), !dbg !698
	We do not analyze function 'close'
CALL [call func]:   call void @write_error() #7, !dbg !699
CONTEXT CALL [call func]:   call void @write_error() #7, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !574), !dbg !576
## write_error does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
CONTEXT CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %2 = load i32* %1, !dbg !577
STORE [*p=q]:   store i32 %2, i32* %e, align 4, !dbg !577
LOAD [p=*q]:   %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i8** @program_name, align 8, !dbg !578
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
CONTEXT CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %6 = load i32* %e, align 4, !dbg !579
CALL [call func]:   %7 = call i32* @__errno_location() #1, !dbg !579
CONTEXT CALL [call func]:   %7 = call i32* @__errno_location() #1, !dbg !579
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %6, i32* %7, !dbg !579
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !580
CONTEXT CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !580
	We do not analyze function 'rpl_perror'
CALL [call func]:   call void @abort_gzip() #7, !dbg !581
CONTEXT CALL [call func]:   call void @abort_gzip() #7, !dbg !581
CALL [call func]:   call void @remove_output_file(), !dbg !574
CALL [call func]:   call void (...)* bitcast (void (i32)* @do_exit to void (...)*)(i32 1) #7, !dbg !576
LOAD [p=*q]:   %278 = load i32* @keep, align 4, !dbg !700
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.__sigset_t* %oldset}, metadata !701), !dbg !703
## treat_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %unlink_errno}, metadata !704), !dbg !705
## treat_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %281 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !706
CONTEXT CALL [call func]:   %281 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !706
	We do not analyze function 'sigprocmask'
STORE [*p=q]:   store volatile i32 -1, i32* @remove_ofname_fd, align 4, !dbg !707
CALL [call func]:   %282 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !708
CONTEXT CALL [call func]:   %282 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !708
STORE [*p=q]:   store i8* %filename, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
## xunlink does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !576), !dbg !578
## xunlink does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i32 @unlink(i8* %2) #3, !dbg !579
CONTEXT CALL [call func]:   %3 = call i32 @unlink(i8* %2) #3, !dbg !579
	We do not analyze function 'unlink'
STORE [*p=q]:   store i32 %3, i32* %r, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* %r, align 4, !dbg !580
CALL [call func]:   %286 = call i32* @__errno_location() #1, !dbg !709
CONTEXT CALL [call func]:   %286 = call i32* @__errno_location() #1, !dbg !709
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %287 = load i32* %286, !dbg !709
STORE [*p=q]:   store i32 %289, i32* %unlink_errno, align 4, !dbg !709
CALL [call func]:   %290 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !710
CONTEXT CALL [call func]:   %290 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !710
	We do not analyze function 'sigprocmask'
LOAD [p=*q]:   %291 = load i32* %unlink_errno, align 4, !dbg !711
LOAD [p=*q]:   %294 = load i32* @quiet, align 4, !dbg !712
LOAD [p=*q]:   %297 = load %struct._IO_FILE** @stderr, align 8, !dbg !712
LOAD [p=*q]:   %298 = load i8** @program_name, align 8, !dbg !712
CALL [call func]:   %299 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %297, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %298), !dbg !712
CONTEXT CALL [call func]:   %299 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %297, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %298), !dbg !712
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %301 = load i32* @exit_code, align 4, !dbg !712
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !712
LOAD [p=*q]:   %305 = load i32* @quiet, align 4, !dbg !715
LOAD [p=*q]:   %308 = load i32* %unlink_errno, align 4, !dbg !716
CALL [call func]:   %309 = call i32* @__errno_location() #1, !dbg !716
CONTEXT CALL [call func]:   %309 = call i32* @__errno_location() #1, !dbg !716
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %308, i32* %309, !dbg !716
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !718
CONTEXT CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !718
	We do not analyze function 'rpl_perror'
LOAD [p=*q]:   %314 = load i32* @method, align 4, !dbg !723
LOAD [p=*q]:   %317 = load i32* @to_stdout, align 4, !dbg !724
CALL [call func]:   call void @remove_output_file(), !dbg !726
CONTEXT CALL [call func]:   call void @remove_output_file(), !dbg !726
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %fd}, metadata !574), !dbg !576
## remove_output_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.__sigset_t* %oldset}, metadata !577), !dbg !578
## remove_output_file does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %1 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !579
CONTEXT CALL [call func]:   %1 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @caught_signals, %struct.__sigset_t* %oldset) #3, !dbg !579
	We do not analyze function 'sigprocmask'
LOAD [p=*q]:   %2 = load volatile i32* @remove_ofname_fd, align 4, !dbg !580
STORE [*p=q]:   store i32 %2, i32* %fd, align 4, !dbg !580
LOAD [p=*q]:   %3 = load i32* %fd, align 4, !dbg !581
STORE [*p=q]:   store volatile i32 -1, i32* @remove_ofname_fd, align 4, !dbg !582
LOAD [p=*q]:   %6 = load i32* %fd, align 4, !dbg !584
CALL [call func]:   %7 = call i32 @close(i32 %6), !dbg !584
CONTEXT CALL [call func]:   %7 = call i32 @close(i32 %6), !dbg !584
	We do not analyze function 'close'
CALL [call func]:   %8 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !585
CONTEXT CALL [call func]:   %8 = call i32 @xunlink(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !585
STORE [*p=q]:   store i8* %filename, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i32 @unlink(i8* %2) #3, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %r, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* %r, align 4, !dbg !580
CALL [call func]:   %10 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !587
CONTEXT CALL [call func]:   %10 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %oldset, %struct.__sigset_t* null) #3, !dbg !587
	We do not analyze function 'sigprocmask'
LOAD [p=*q]:   %322 = load i32* @verbose, align 4, !dbg !728
LOAD [p=*q]:   %325 = load i32* @test, align 4, !dbg !729
LOAD [p=*q]:   %328 = load %struct._IO_FILE** @stderr, align 8, !dbg !731
CALL [call func]:   %329 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %328, i8* getelementptr inbounds ([4 x i8]* @.str37, i32 0, i32 0)), !dbg !731
CONTEXT CALL [call func]:   %329 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %328, i8* getelementptr inbounds ([4 x i8]* @.str37, i32 0, i32 0)), !dbg !731
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %331 = load i32* @decompress, align 4, !dbg !734
LOAD [p=*q]:   %334 = load i64* @bytes_out, align 8, !dbg !735
LOAD [p=*q]:   %335 = load i64* @bytes_in, align 8, !dbg !735
LOAD [p=*q]:   %336 = load i64* @header_bytes, align 8, !dbg !735
LOAD [p=*q]:   %339 = load i64* @bytes_out, align 8, !dbg !735
LOAD [p=*q]:   %340 = load %struct._IO_FILE** @stderr, align 8, !dbg !735
CALL [call func]:   call void @display_ratio(i64 %338, i64 %339, %struct._IO_FILE* %340), !dbg !735
CONTEXT CALL [call func]:   call void @display_ratio(i64 %338, i64 %339, %struct._IO_FILE* %340), !dbg !735
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
## display_ratio does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CONTEXT CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %342 = load i64* @bytes_in, align 8, !dbg !738
LOAD [p=*q]:   %343 = load i64* @bytes_out, align 8, !dbg !738
LOAD [p=*q]:   %344 = load i64* @header_bytes, align 8, !dbg !738
LOAD [p=*q]:   %347 = load i64* @bytes_in, align 8, !dbg !738
LOAD [p=*q]:   %348 = load %struct._IO_FILE** @stderr, align 8, !dbg !738
CALL [call func]:   call void @display_ratio(i64 %346, i64 %347, %struct._IO_FILE* %348), !dbg !738
CONTEXT CALL [call func]:   call void @display_ratio(i64 %346, i64 %347, %struct._IO_FILE* %348), !dbg !738
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
## display_ratio does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CONTEXT CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %351 = load i32* @test, align 4, !dbg !740
LOAD [p=*q]:   %354 = load i32* @to_stdout, align 4, !dbg !740
LOAD [p=*q]:   %357 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %357, i8* getelementptr inbounds ([21 x i8]* @.str38, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !741
CONTEXT CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %357, i8* getelementptr inbounds ([21 x i8]* @.str38, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !741
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %360 = load %struct._IO_FILE** @stderr, align 8, !dbg !744
CALL [call func]:   %361 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %360, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !744
CONTEXT CALL [call func]:   %361 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %360, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !744
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %167 = load i32* @rpl_optind, align 4, !dbg !680
LOAD [p=*q]:   %168 = load i32* %2, align 4, !dbg !680
LOAD [p=*q]:   %180 = load i32* @list, align 4, !dbg !687
CALL [call func]:   call void @treat_stdin(), !dbg !685
CONTEXT CALL [call func]:   call void @treat_stdin(), !dbg !685
LOAD [p=*q]:   %2 = load i32* @force, align 4, !dbg !574
LOAD [p=*q]:   %5 = load i32* @list, align 4, !dbg !574
LOAD [p=*q]:   %8 = load i8* @presume_input_tty, align 1, !dbg !574
LOAD [p=*q]:   %11 = load i32* @decompress, align 4, !dbg !576
LOAD [p=*q]:   %14 = load %struct._IO_FILE** @stdin, align 8, !dbg !576
LOAD [p=*q]:   %16 = load %struct._IO_FILE** @stdout, align 8, !dbg !576
CALL [call func]:   %19 = call i32 @fileno(%struct._IO_FILE* %18) #3, !dbg !576
CONTEXT CALL [call func]:   %19 = call i32 @fileno(%struct._IO_FILE* %18) #3, !dbg !576
	We do not analyze function 'fileno'
CALL [call func]:   %20 = call i32 @isatty(i32 %19) #3, !dbg !576
CONTEXT CALL [call func]:   %20 = call i32 @isatty(i32 %19) #3, !dbg !576
	We do not analyze function 'isatty'
LOAD [p=*q]:   %23 = load i32* @quiet, align 4, !dbg !577
LOAD [p=*q]:   %26 = load %struct._IO_FILE** @stderr, align 8, !dbg !579
LOAD [p=*q]:   %27 = load i8** @program_name, align 8, !dbg !579
LOAD [p=*q]:   %28 = load i32* @decompress, align 4, !dbg !579
LOAD [p=*q]:   %31 = load i32* @decompress, align 4, !dbg !579
LOAD [p=*q]:   %34 = load i8** @program_name, align 8, !dbg !579
CALL [call func]:   %35 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([93 x i8]* @.str78, i32 0, i32 0), i8* %27, i8* %30, i8* %33, i8* %34), !dbg !579
CONTEXT CALL [call func]:   %35 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([93 x i8]* @.str78, i32 0, i32 0), i8* %27, i8* %30, i8* %33, i8* %34), !dbg !579
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !580
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !580
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %38 = load i32* @decompress, align 4, !dbg !581
LOAD [p=*q]:   %41 = load i32* @ascii, align 4, !dbg !581
LOAD [p=*q]:   %45 = load i32* @test, align 4, !dbg !584
LOAD [p=*q]:   %48 = load i32* @list, align 4, !dbg !584
LOAD [p=*q]:   %51 = load i32* @decompress, align 4, !dbg !584
LOAD [p=*q]:   %54 = load i32* @ascii, align 4, !dbg !584
CALL [call func]:   %58 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str82, i32 0, i32 0)) #3, !dbg !587
CONTEXT CALL [call func]:   %58 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str82, i32 0, i32 0)) #3, !dbg !587
	We do not analyze function 'strcpy'
CALL [call func]:   %59 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !588
CONTEXT CALL [call func]:   %59 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #3, !dbg !588
	We do not analyze function 'strcpy'
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stdin, align 8, !dbg !589
CALL [call func]:   %61 = call i32 @fileno(%struct._IO_FILE* %60) #3, !dbg !589
CONTEXT CALL [call func]:   %61 = call i32 @fileno(%struct._IO_FILE* %60) #3, !dbg !589
	We do not analyze function 'fileno'
CALL [call func]:   %62 = call i32 @fstat(i32 %61, %struct.stat* @istat) #3, !dbg !589
CONTEXT CALL [call func]:   %62 = call i32 @fstat(i32 %61, %struct.stat* @istat) #3, !dbg !589
	We do not analyze function 'fstat'
CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([15 x i8]* @.str83, i32 0, i32 0)), !dbg !590
CONTEXT CALL [call func]:   call void @progerror(i8* getelementptr inbounds ([15 x i8]* @.str83, i32 0, i32 0)), !dbg !590
STORE [*p=q]:   store i8* %string, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
## progerror does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !576), !dbg !578
## progerror does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
CONTEXT CALL [call func]:   %2 = call i32* @__errno_location() #1, !dbg !579
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %3 = load i32* %2, !dbg !579
STORE [*p=q]:   store i32 %3, i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !580
LOAD [p=*q]:   %5 = load i8** @program_name, align 8, !dbg !580
CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
CONTEXT CALL [call func]:   %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str36, i32 0, i32 0), i8* %5), !dbg !580
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %7 = load i32* %e, align 4, !dbg !581
CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
CONTEXT CALL [call func]:   %8 = call i32* @__errno_location() #1, !dbg !581
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %7, i32* %8, !dbg !581
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !582
CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
CONTEXT CALL [call func]:   call void @rpl_perror(i8* %9), !dbg !582
	We do not analyze function 'rpl_perror'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !583
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !592
CONTEXT CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !592
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %66 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !593
LOAD [p=*q]:   %70 = load i64* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 8), align 8, !dbg !593
STORE [*p=q]:   store i64 %73, i64* @ifile_size, align 8, !dbg !593
STORE [*p=q]:   store i64 -1, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !594
LOAD [p=*q]:   %74 = load i32* @no_time, align 4, !dbg !595
LOAD [p=*q]:   %77 = load i32* @list, align 4, !dbg !595
LOAD [p=*q]:   %80 = load i32* getelementptr inbounds (%struct.stat* @istat, i32 0, i32 3), align 4, !dbg !596
CALL [call func]:   %84 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !598
CONTEXT CALL [call func]:   %84 = call { i64, i64 } @get_stat_mtime(%struct.stat* @istat), !dbg !598
	We do not analyze function 'get_stat_mtime'
STORE [*p=q]:   store i64 %87, i64* %86, align 1, !dbg !598
STORE [*p=q]:   store i64 %89, i64* %88, align 1, !dbg !598
CALL [call func]:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.timespec* @time_stamp to i8*), i8* %90, i64 16, i32 8, i1 false), !dbg !598
## treat_stdin does not call llvm.memcpy.p0i8.p0i8.i64 in our callgraph 
CALL [call func]:   call void @gettime(%struct.timespec* @time_stamp), !dbg !599
CONTEXT CALL [call func]:   call void @gettime(%struct.timespec* @time_stamp), !dbg !599
	We do not analyze function 'gettime'
CALL [call func]:   call void @clear_bufs(), !dbg !601
CONTEXT CALL [call func]:   call void @clear_bufs(), !dbg !601
STORE [*p=q]:   store i32 0, i32* @outcnt, align 4, !dbg !574
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !576
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !576
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !577
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !577
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !602
STORE [*p=q]:   store i32 0, i32* @part_nb, align 4, !dbg !603
LOAD [p=*q]:   %94 = load %struct._IO_FILE** @stdin, align 8, !dbg !604
CALL [call func]:   %95 = call i32 @fileno(%struct._IO_FILE* %94) #3, !dbg !604
CONTEXT CALL [call func]:   %95 = call i32 @fileno(%struct._IO_FILE* %94) #3, !dbg !604
	We do not analyze function 'fileno'
STORE [*p=q]:   store i32 %95, i32* @ifd, align 4, !dbg !604
LOAD [p=*q]:   %96 = load i32* @decompress, align 4, !dbg !605
LOAD [p=*q]:   %99 = load i32* @ifd, align 4, !dbg !606
CALL [call func]:   %100 = call i32 @get_method(i32 %99), !dbg !606
CONTEXT CALL [call func]:   %100 = call i32 @get_method(i32 %99), !dbg !606
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %flags}, metadata !576), !dbg !578
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[10 x i8]* %magic}, metadata !579), !dbg !581
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic0}, metadata !582), !dbg !583
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic1}, metadata !584), !dbg !585
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %stamp}, metadata !586), !dbg !588
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %3 = load i32* @force, align 4, !dbg !589
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !589
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !590
CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
CONTEXT CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %22, i32* %imagic0, align 4, !dbg !592
LOAD [p=*q]:   %23 = load i32* %imagic0, align 4, !dbg !593
STORE [*p=q]:   store i8 %24, i8* %25, align 1, !dbg !593
LOAD [p=*q]:   %26 = load i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* @insize, align 4, !dbg !594
LOAD [p=*q]:   %30 = load i32* @inptr, align 4, !dbg !594
STORE [*p=q]:   store i32 %31, i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %34 = load i8* %33, align 1, !dbg !594
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
CONTEXT CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %39, i32* %imagic1, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* %imagic1, align 4, !dbg !596
STORE [*p=q]:   store i8 %41, i8* %42, align 1, !dbg !596
LOAD [p=*q]:   %44 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %45 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %48 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %49, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !598
CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
CONTEXT CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %58, i8* %59, align 1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %imagic0, align 4, !dbg !601
LOAD [p=*q]:   %61 = load i8* %60, align 1, !dbg !602
LOAD [p=*q]:   %64 = load i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %65 = load i32* @insize, align 4, !dbg !603
LOAD [p=*q]:   %68 = load i32* @inptr, align 4, !dbg !603
STORE [*p=q]:   store i32 %69, i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %72 = load i8* %71, align 1, !dbg !603
CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
CONTEXT CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %78, i8* %79, align 1, !dbg !605
STORE [*p=q]:   store i32 0, i32* %imagic1, align 4, !dbg !606
LOAD [p=*q]:   %81 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %82 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %85 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %86, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %89 = load i8* %88, align 1, !dbg !608
CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
CONTEXT CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %94, i32* %imagic1, align 4, !dbg !610
LOAD [p=*q]:   %95 = load i32* %imagic1, align 4, !dbg !611
STORE [*p=q]:   store i8 %96, i8* %97, align 1, !dbg !611
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !612
LOAD [p=*q]:   %100 = load i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i32 %101, i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !614
STORE [*p=q]:   store i32 0, i32* @last_member, align 4, !dbg !615
CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
CONTEXT CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
	We do not analyze function 'memcmp'
CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
CONTEXT CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %110 = load i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %111 = load i32* @insize, align 4, !dbg !618
LOAD [p=*q]:   %114 = load i32* @inptr, align 4, !dbg !618
STORE [*p=q]:   store i32 %115, i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %118 = load i8* %117, align 1, !dbg !618
CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
CONTEXT CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %123, i32* @method, align 4, !dbg !620
LOAD [p=*q]:   %124 = load i32* @method, align 4, !dbg !621
LOAD [p=*q]:   %127 = load %struct._IO_FILE** @stderr, align 8, !dbg !622
LOAD [p=*q]:   %128 = load i8** @program_name, align 8, !dbg !622
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !622
CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
CONTEXT CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !624
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !625
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !626
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !627
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !627
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !627
CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
CONTEXT CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %146, i8* %flags, align 1, !dbg !628
LOAD [p=*q]:   %147 = load i8* %flags, align 1, !dbg !629
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !630
LOAD [p=*q]:   %153 = load i8** @program_name, align 8, !dbg !630
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
CONTEXT CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !632
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !633
LOAD [p=*q]:   %156 = load i8* %flags, align 1, !dbg !634
LOAD [p=*q]:   %161 = load %struct._IO_FILE** @stderr, align 8, !dbg !635
LOAD [p=*q]:   %162 = load i8** @program_name, align 8, !dbg !635
LOAD [p=*q]:   %163 = load i8* %flags, align 1, !dbg !635
CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
CONTEXT CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !637
LOAD [p=*q]:   %166 = load i32* @force, align 4, !dbg !638
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !639
LOAD [p=*q]:   %171 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %172 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %175 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %176, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %179 = load i8* %178, align 1, !dbg !641
CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
CONTEXT CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i64 %185, i64* %stamp, align 8, !dbg !642
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !643
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !643
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !643
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
CONTEXT CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %202 = load i64* %stamp, align 8, !dbg !644
STORE [*p=q]:   store i64 %203, i64* %stamp, align 8, !dbg !644
LOAD [p=*q]:   %204 = load i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* @insize, align 4, !dbg !645
LOAD [p=*q]:   %208 = load i32* @inptr, align 4, !dbg !645
STORE [*p=q]:   store i32 %209, i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %212 = load i8* %211, align 1, !dbg !645
CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
CONTEXT CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %220 = load i64* %stamp, align 8, !dbg !646
STORE [*p=q]:   store i64 %221, i64* %stamp, align 8, !dbg !646
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !647
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !647
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !647
CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
CONTEXT CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %238 = load i64* %stamp, align 8, !dbg !648
STORE [*p=q]:   store i64 %239, i64* %stamp, align 8, !dbg !648
LOAD [p=*q]:   %240 = load i64* %stamp, align 8, !dbg !649
LOAD [p=*q]:   %243 = load i32* @no_time, align 4, !dbg !649
LOAD [p=*q]:   %246 = load i64* %stamp, align 8, !dbg !650
STORE [*p=q]:   store i64 %246, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !650
STORE [*p=q]:   store i64 0, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !652
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %252 = load i32* @inptr, align 4, !dbg !654
STORE [*p=q]:   store i32 %253, i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %256 = load i8* %255, align 1, !dbg !654
CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
CONTEXT CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %262, i8* %263, align 1, !dbg !655
LOAD [p=*q]:   %264 = load i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %265 = load i32* @insize, align 4, !dbg !656
LOAD [p=*q]:   %268 = load i32* @inptr, align 4, !dbg !656
STORE [*p=q]:   store i32 %269, i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %272 = load i8* %271, align 1, !dbg !656
CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
CONTEXT CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %278, i8* %279, align 1, !dbg !657
LOAD [p=*q]:   %280 = load i8* %flags, align 1, !dbg !658
STORE [*p=q]:   store i8 8, i8* %285, align 1, !dbg !659
LOAD [p=*q]:   %286 = load i8* %flags, align 1, !dbg !661
STORE [*p=q]:   store i8 %286, i8* %287, align 1, !dbg !661
LOAD [p=*q]:   %288 = load i64* %stamp, align 8, !dbg !662
STORE [*p=q]:   store i8 %290, i8* %291, align 1, !dbg !662
LOAD [p=*q]:   %292 = load i64* %stamp, align 8, !dbg !663
STORE [*p=q]:   store i8 %295, i8* %296, align 1, !dbg !663
LOAD [p=*q]:   %297 = load i64* %stamp, align 8, !dbg !664
STORE [*p=q]:   store i8 %300, i8* %301, align 1, !dbg !664
LOAD [p=*q]:   %302 = load i64* %stamp, align 8, !dbg !665
STORE [*p=q]:   store i8 %304, i8* %305, align 1, !dbg !665
CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
CONTEXT CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
CONTEXT CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %310 = load i8* %flags, align 1, !dbg !669
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x i8]* %lenbuf}, metadata !670), !dbg !675
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !676), !dbg !677
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %315 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %316 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %319 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %320, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %323 = load i8* %322, align 1, !dbg !678
CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
CONTEXT CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %329, i8* %330, align 1, !dbg !679
STORE [*p=q]:   store i32 %331, i32* %len, align 4, !dbg !679
LOAD [p=*q]:   %332 = load i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %333 = load i32* @insize, align 4, !dbg !680
LOAD [p=*q]:   %336 = load i32* @inptr, align 4, !dbg !680
STORE [*p=q]:   store i32 %337, i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %340 = load i8* %339, align 1, !dbg !680
CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
CONTEXT CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %346, i8* %347, align 1, !dbg !681
LOAD [p=*q]:   %350 = load i32* %len, align 4, !dbg !681
STORE [*p=q]:   store i32 %351, i32* %len, align 4, !dbg !681
LOAD [p=*q]:   %352 = load i32* @verbose, align 4, !dbg !682
LOAD [p=*q]:   %355 = load %struct._IO_FILE** @stderr, align 8, !dbg !683
LOAD [p=*q]:   %356 = load i8** @program_name, align 8, !dbg !683
LOAD [p=*q]:   %357 = load i32* %len, align 4, !dbg !683
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
CONTEXT CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %360 = load i8* %flags, align 1, !dbg !686
CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
CONTEXT CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %368 = load i32* %len, align 4, !dbg !688
LOAD [p=*q]:   %370 = load i8* %flags, align 1, !dbg !688
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 %369, i32 %371), !dbg !688
LOAD [p=*q]:   %373 = load i8* %flags, align 1, !dbg !690
LOAD [p=*q]:   %378 = load i32* @no_name, align 4, !dbg !691
LOAD [p=*q]:   %381 = load i32* @to_stdout, align 4, !dbg !691
LOAD [p=*q]:   %384 = load i32* @list, align 4, !dbg !691
LOAD [p=*q]:   %387 = load i32* @part_nb, align 4, !dbg !691
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !696), !dbg !698
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
CONTEXT CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %393, i8** %p, align 8, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %base}, metadata !700), !dbg !701
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %394 = load i8** %p, align 8, !dbg !702
STORE [*p=q]:   store i8* %394, i8** %base, align 8, !dbg !702
LOAD [p=*q]:   %396 = load i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %397 = load i32* @insize, align 4, !dbg !705
LOAD [p=*q]:   %400 = load i32* @inptr, align 4, !dbg !705
STORE [*p=q]:   store i32 %401, i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %404 = load i8* %403, align 1, !dbg !705
CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
CONTEXT CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %411 = load i8** %p, align 8, !dbg !707
STORE [*p=q]:   store i8 %410, i8* %411, !dbg !707
LOAD [p=*q]:   %412 = load i8** %p, align 8, !dbg !708
STORE [*p=q]:   store i8* %413, i8** %p, align 8, !dbg !708
LOAD [p=*q]:   %414 = load i8* %412, !dbg !708
LOAD [p=*q]:   %419 = load i8** %p, align 8, !dbg !710
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
CONTEXT CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
STORE [*p=q]:   store i8* %m, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !576
LOAD [p=*q]:   %3 = load i8** @program_name, align 8, !dbg !576
LOAD [p=*q]:   %4 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
CALL [call func]:   call void @abort_gzip() #7, !dbg !578
LOAD [p=*q]:   %424 = load i8* %flags, align 1, !dbg !714
LOAD [p=*q]:   %429 = load i8** %base, align 8, !dbg !715
LOAD [p=*q]:   %430 = load i8** %p, align 8, !dbg !715
LOAD [p=*q]:   %431 = load i8** %base, align 8, !dbg !715
CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
CONTEXT CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %438 = load i8** %base, align 8, !dbg !716
CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
CONTEXT CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %439, i8** %p, align 8, !dbg !716
LOAD [p=*q]:   %440 = load i8** %base, align 8, !dbg !717
LOAD [p=*q]:   %441 = load i8** %p, align 8, !dbg !717
LOAD [p=*q]:   %442 = load i8** %p, align 8, !dbg !718
CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
CONTEXT CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
	We do not analyze function 'strlen'
CALL [call func]:   call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %441, i64 %444, i32 1, i1 false), !dbg !718
## get_method does not call llvm.memmove.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %445 = load i32* @list, align 4, !dbg !719
LOAD [p=*q]:   %448 = load i8** %base, align 8, !dbg !720
STORE [*p=q]:   store i32 0, i32* @list, align 4, !dbg !722
LOAD [p=*q]:   %455 = load i8* %flags, align 1, !dbg !725
LOAD [p=*q]:   %460 = load i8* %flags, align 1, !dbg !726
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %461), !dbg !726
LOAD [p=*q]:   %463 = load i8* %flags, align 1, !dbg !729
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %crc16}, metadata !730), !dbg !732
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
CONTEXT CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
STORE [*p=q]:   store i32 %471, i32* %crc16, align 4, !dbg !733
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %header16}, metadata !734), !dbg !735
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %472 = load i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %473 = load i32* @insize, align 4, !dbg !736
LOAD [p=*q]:   %476 = load i32* @inptr, align 4, !dbg !736
STORE [*p=q]:   store i32 %477, i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %480 = load i8* %479, align 1, !dbg !736
CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
CONTEXT CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %485, i32* %header16, align 4, !dbg !737
LOAD [p=*q]:   %486 = load i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %487 = load i32* @insize, align 4, !dbg !738
LOAD [p=*q]:   %490 = load i32* @inptr, align 4, !dbg !738
STORE [*p=q]:   store i32 %491, i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %494 = load i8* %493, align 1, !dbg !738
CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
CONTEXT CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %501 = load i32* %header16, align 4, !dbg !739
STORE [*p=q]:   store i32 %502, i32* %header16, align 4, !dbg !739
LOAD [p=*q]:   %503 = load i32* %header16, align 4, !dbg !740
LOAD [p=*q]:   %504 = load i32* %crc16, align 4, !dbg !740
LOAD [p=*q]:   %507 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
LOAD [p=*q]:   %508 = load i8** @program_name, align 8, !dbg !741
LOAD [p=*q]:   %509 = load i32* %header16, align 4, !dbg !741
LOAD [p=*q]:   %510 = load i32* %crc16, align 4, !dbg !741
CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
CONTEXT CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !743
LOAD [p=*q]:   %512 = load i32* @force, align 4, !dbg !744
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !745
LOAD [p=*q]:   %518 = load i32* @part_nb, align 4, !dbg !748
LOAD [p=*q]:   %521 = load i32* @inptr, align 4, !dbg !749
STORE [*p=q]:   store i64 %523, i64* @header_bytes, align 8, !dbg !749
CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
CONTEXT CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %530 = load i32* @inptr, align 4, !dbg !753
CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
CONTEXT CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !755
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !757
LOAD [p=*q]:   %536 = load i32* %2, align 4, !dbg !758
CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
CONTEXT CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %h}, metadata !576), !dbg !580
LOAD [p=*q]:   %3 = load i32* @inptr, align 4, !dbg !581
STORE [*p=q]:   store i8* %5, i8** %h, align 8, !dbg !581
LOAD [p=*q]:   %6 = load i32* %2, align 4, !dbg !582
STORE [*p=q]:   store i32 %6, i32* @ifd, align 4, !dbg !582
LOAD [p=*q]:   %7 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i8* %9, !dbg !583
LOAD [p=*q]:   %13 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %16 = load i8* %15, !dbg !583
LOAD [p=*q]:   %22 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %25 = load i8* %24, !dbg !583
LOAD [p=*q]:   %28 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %31 = load i8* %30, !dbg !583
LOAD [p=*q]:   %37 = load i32* @inptr, align 4, !dbg !583
STORE [*p=q]:   store i32 %38, i32* @inptr, align 4, !dbg !583
LOAD [p=*q]:   %39 = load i32* @inptr, align 4, !dbg !584
LOAD [p=*q]:   %40 = load i32* @insize, align 4, !dbg !584
LOAD [p=*q]:   %43 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %45 = load i8* %44, !dbg !584
LOAD [p=*q]:   %48 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %50 = load i8* %49, !dbg !584
LOAD [p=*q]:   %56 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %59 = load i8* %58, !dbg !584
LOAD [p=*q]:   %62 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %65 = load i8* %64, !dbg !584
LOAD [p=*q]:   %75 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
LOAD [p=*q]:   %76 = load i8** @program_name, align 8, !dbg !585
CALL [call func]:   %77 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([31 x i8]* @.str167, i32 0, i32 0), i8* %76, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !585
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !587
STORE [*p=q]:   store i32 1, i32* %1, !dbg !588
LOAD [p=*q]:   %79 = load i8** %h, align 8, !dbg !589
LOAD [p=*q]:   %81 = load i8* %80, !dbg !589
STORE [*p=q]:   store i32 %82, i32* @method, align 4, !dbg !589
LOAD [p=*q]:   %83 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %86 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %89 = load %struct._IO_FILE** @stderr, align 8, !dbg !591
LOAD [p=*q]:   %90 = load i8** @program_name, align 8, !dbg !591
CALL [call func]:   %91 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([58 x i8]* @.str1168, i32 0, i32 0), i8* %90, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !593
STORE [*p=q]:   store i32 1, i32* %1, !dbg !594
LOAD [p=*q]:   %93 = load i8** %h, align 8, !dbg !595
LOAD [p=*q]:   %95 = load i8* %94, !dbg !595
STORE [*p=q]:   store i32 %97, i32* @decrypt, align 4, !dbg !595
LOAD [p=*q]:   %100 = load %struct._IO_FILE** @stderr, align 8, !dbg !596
LOAD [p=*q]:   %101 = load i8** @program_name, align 8, !dbg !596
CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([38 x i8]* @.str2169, i32 0, i32 0), i8* %101, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !596
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !598
STORE [*p=q]:   store i32 1, i32* %1, !dbg !599
LOAD [p=*q]:   %104 = load i8** %h, align 8, !dbg !600
LOAD [p=*q]:   %106 = load i8* %105, !dbg !600
STORE [*p=q]:   store i32 %110, i32* @ext_header, align 4, !dbg !600
STORE [*p=q]:   store i32 1, i32* @pkzip, align 4, !dbg !601
STORE [*p=q]:   store i32 0, i32* %1, !dbg !602
LOAD [p=*q]:   %112 = load i32* %1, !dbg !603
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !759
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !760
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
CONTEXT CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unpack, i32 (i32, i32)** @work, align 8, !dbg !763
STORE [*p=q]:   store i32 2, i32* @method, align 4, !dbg !765
CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
CONTEXT CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzw, i32 (i32, i32)** @work, align 8, !dbg !768
STORE [*p=q]:   store i32 1, i32* @method, align 4, !dbg !770
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !771
CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
CONTEXT CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzh, i32 (i32, i32)** @work, align 8, !dbg !774
STORE [*p=q]:   store i32 3, i32* @method, align 4, !dbg !776
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !777
LOAD [p=*q]:   %557 = load i32* @force, align 4, !dbg !779
LOAD [p=*q]:   %560 = load i32* @to_stdout, align 4, !dbg !779
LOAD [p=*q]:   %563 = load i32* @list, align 4, !dbg !779
STORE [*p=q]:   store i32 0, i32* @method, align 4, !dbg !780
STORE [*p=q]:   store i32 (i32, i32)* @copy, i32 (i32, i32)** @work, align 8, !dbg !782
LOAD [p=*q]:   %566 = load i32* %imagic1, align 4, !dbg !783
LOAD [p=*q]:   %569 = load i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 %570, i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !785
LOAD [p=*q]:   %572 = load i32* %imagic0, align 4, !dbg !786
LOAD [p=*q]:   %575 = load %struct._IO_FILE** @stdout, align 8, !dbg !787
CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
CONTEXT CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
	We do not analyze function 'fileno'
CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
CONTEXT CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
STORE [*p=q]:   store i32 %fd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i8* %buf, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !576), !dbg !579
STORE [*p=q]:   store i32 %cnt, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !580), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !582), !dbg !584
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !586
LOAD [p=*q]:   %6 = load i8** %2, align 8, !dbg !586
LOAD [p=*q]:   %7 = load i32* %3, align 4, !dbg !586
CALL [call func]:   %8 = call i32 (...)* bitcast (i32 (i32, i8*, i32)* @write_buffer to i32 (...)*)(i32 %5, i8* %6, i32 %7), !dbg !586
STORE [*p=q]:   store i32 %8, i32* %n, align 4, !dbg !586
LOAD [p=*q]:   %9 = load i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %12 = load i32* %n, align 4, !dbg !587
CALL [call func]:   call void @write_error() #7, !dbg !589
LOAD [p=*q]:   %16 = load i32* %n, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %3, align 4, !dbg !591
STORE [*p=q]:   store i32 %18, i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %20 = load i32* %n, align 4, !dbg !592
STORE [*p=q]:   store i8* %22, i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %578 = load i64* @bytes_out, align 8, !dbg !789
STORE [*p=q]:   store i64 %579, i64* @bytes_out, align 8, !dbg !789
LOAD [p=*q]:   %587 = load i32* @method, align 4, !dbg !792
LOAD [p=*q]:   %590 = load i32* @method, align 4, !dbg !793
STORE [*p=q]:   store i32 %590, i32* %1, !dbg !793
LOAD [p=*q]:   %592 = load i32* @part_nb, align 4, !dbg !794
LOAD [p=*q]:   %595 = load %struct._IO_FILE** @stderr, align 8, !dbg !795
LOAD [p=*q]:   %596 = load i8** @program_name, align 8, !dbg !795
CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
CONTEXT CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !797
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !798
LOAD [p=*q]:   %600 = load i8* %599, align 1, !dbg !799
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %inbyte}, metadata !801), !dbg !803
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %604 = load i32* %imagic1, align 4, !dbg !804
STORE [*p=q]:   store i32 %604, i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %606 = load i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %610 = load i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %611 = load i32* @insize, align 4, !dbg !807
LOAD [p=*q]:   %614 = load i32* @inptr, align 4, !dbg !807
STORE [*p=q]:   store i32 %615, i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %618 = load i8* %617, align 1, !dbg !807
CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
CONTEXT CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %623, i32* %inbyte, align 4, !dbg !808
LOAD [p=*q]:   %625 = load i32* %inbyte, align 4, !dbg !809
LOAD [p=*q]:   %628 = load i32* @verbose, align 4, !dbg !810
LOAD [p=*q]:   %631 = load i32* @quiet, align 4, !dbg !812
LOAD [p=*q]:   %634 = load %struct._IO_FILE** @stderr, align 8, !dbg !812
LOAD [p=*q]:   %635 = load i8** @program_name, align 8, !dbg !812
CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
CONTEXT CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %638 = load i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 -3, i32* %1, !dbg !814
LOAD [p=*q]:   %645 = load i32* @quiet, align 4, !dbg !816
LOAD [p=*q]:   %648 = load %struct._IO_FILE** @stderr, align 8, !dbg !816
LOAD [p=*q]:   %649 = load i8** @program_name, align 8, !dbg !816
CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
CONTEXT CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %652 = load i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 -2, i32* %1, !dbg !818
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
STORE [*p=q]:   store i32 %100, i32* @method, align 4, !dbg !606
LOAD [p=*q]:   %101 = load i32* @method, align 4, !dbg !608
LOAD [p=*q]:   %104 = load i32* @exit_code, align 4, !dbg !609
CALL [call func]:   call void @do_exit(i32 %104) #7, !dbg !609
CONTEXT CALL [call func]:   call void @do_exit(i32 %104) #7, !dbg !609
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %107 = load i32* @list, align 4, !dbg !612
LOAD [p=*q]:   %110 = load i32* @ifd, align 4, !dbg !613
LOAD [p=*q]:   %111 = load i32* @method, align 4, !dbg !613
CALL [call func]:   call void @do_list(i32 %110, i32 %111), !dbg !613
CONTEXT CALL [call func]:   call void @do_list(i32 %110, i32 %111), !dbg !613
STORE [*p=q]:   store i32 %ifd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 %method, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %crc}, metadata !578), !dbg !581
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %positive_off_t_width}, metadata !582), !dbg !583
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 1, i32* %positive_off_t_width, align 4, !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %o}, metadata !585), !dbg !586
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 9223372036854775807, i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %4 = load i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %7 = load i32* %positive_off_t_width, align 4, !dbg !589
STORE [*p=q]:   store i32 %8, i32* %positive_off_t_width, align 4, !dbg !589
LOAD [p=*q]:   %10 = load i64* %o, align 8, !dbg !592
STORE [*p=q]:   store i64 %11, i64* %o, align 8, !dbg !592
LOAD [p=*q]:   %13 = load i32* @do_list.first_time, align 4, !dbg !593
LOAD [p=*q]:   %16 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 0, i32* @do_list.first_time, align 4, !dbg !594
LOAD [p=*q]:   %19 = load i32* @verbose, align 4, !dbg !596
CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
CONTEXT CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %24 = load i32* @quiet, align 4, !dbg !600
LOAD [p=*q]:   %27 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %28 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %29 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %30 = load i32* %positive_off_t_width, align 4, !dbg !601
CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
CONTEXT CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %34 = load i32* %2, align 4, !dbg !605
LOAD [p=*q]:   %37 = load i64* @total_in, align 8, !dbg !606
LOAD [p=*q]:   %40 = load i64* @total_out, align 8, !dbg !606
LOAD [p=*q]:   %44 = load i32* @verbose, align 4, !dbg !609
CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
CONTEXT CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %49 = load i32* @verbose, align 4, !dbg !613
LOAD [p=*q]:   %52 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %55 = load %struct._IO_FILE** @stdout, align 8, !dbg !614
LOAD [p=*q]:   %56 = load i64* @total_in, align 8, !dbg !614
LOAD [p=*q]:   %57 = load i32* %positive_off_t_width, align 4, !dbg !614
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
CONTEXT CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %59 = load %struct._IO_FILE** @stdout, align 8, !dbg !617
LOAD [p=*q]:   %60 = load i64* @total_out, align 8, !dbg !617
LOAD [p=*q]:   %61 = load i32* %positive_off_t_width, align 4, !dbg !617
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
CONTEXT CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %64 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %65 = load i64* @total_in, align 8, !dbg !620
LOAD [p=*q]:   %66 = load i64* @header_bytes, align 8, !dbg !620
LOAD [p=*q]:   %69 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %70 = load %struct._IO_FILE** @stdout, align 8, !dbg !620
CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
CONTEXT CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
CONTEXT CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
	We do not analyze function 'rpl_printf'
STORE [*p=q]:   store i64 -1, i64* %crc, align 8, !dbg !623
STORE [*p=q]:   store i64 -1, i64* @bytes_out, align 8, !dbg !624
LOAD [p=*q]:   %74 = load i64* @ifile_size, align 8, !dbg !625
STORE [*p=q]:   store i64 %74, i64* @bytes_in, align 8, !dbg !625
LOAD [p=*q]:   %75 = load i32* %2, align 4, !dbg !626
LOAD [p=*q]:   %78 = load i32* @last_member, align 4, !dbg !626
LOAD [p=*q]:   %81 = load i32* %1, align 4, !dbg !627
CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
CONTEXT CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
	We do not analyze function 'lseek'
STORE [*p=q]:   store i64 %82, i64* @bytes_in, align 8, !dbg !627
LOAD [p=*q]:   %83 = load i64* @bytes_in, align 8, !dbg !629
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[8 x i8]* %buf}, metadata !630), !dbg !635
## do_list does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %86 = load i64* @bytes_in, align 8, !dbg !636
STORE [*p=q]:   store i64 %87, i64* @bytes_in, align 8, !dbg !636
LOAD [p=*q]:   %88 = load i32* %1, align 4, !dbg !637
CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
CONTEXT CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
	We do not analyze function 'read'
CALL [call func]:   call void @read_error() #7, !dbg !638
CONTEXT CALL [call func]:   call void @read_error() #7, !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !574), !dbg !576
CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
LOAD [p=*q]:   %2 = load i32* %1, !dbg !577
STORE [*p=q]:   store i32 %2, i32* %e, align 4, !dbg !577
LOAD [p=*q]:   %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i8** @program_name, align 8, !dbg !578
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
LOAD [p=*q]:   %6 = load i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %9 = load i32* %e, align 4, !dbg !580
CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
STORE [*p=q]:   store i32 %9, i32* %10, !dbg !580
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
LOAD [p=*q]:   %12 = load %struct._IO_FILE** @stderr, align 8, !dbg !584
CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
CALL [call func]:   call void @abort_gzip() #7, !dbg !586
LOAD [p=*q]:   %95 = load i8* %94, align 1, !dbg !640
LOAD [p=*q]:   %99 = load i8* %98, align 1, !dbg !640
LOAD [p=*q]:   %108 = load i8* %107, !dbg !640
LOAD [p=*q]:   %114 = load i8* %113, !dbg !640
STORE [*p=q]:   store i64 %121, i64* %crc, align 8, !dbg !640
LOAD [p=*q]:   %125 = load i8* %124, !dbg !641
LOAD [p=*q]:   %131 = load i8* %130, !dbg !641
LOAD [p=*q]:   %141 = load i8* %140, !dbg !641
LOAD [p=*q]:   %148 = load i8* %147, !dbg !641
STORE [*p=q]:   store i64 %155, i64* @bytes_out, align 8, !dbg !641
LOAD [p=*q]:   %158 = load i32* @verbose, align 4, !dbg !644
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.tm** %tm}, metadata !645), !dbg !661
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
CONTEXT CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
	We do not analyze function 'localtime'
STORE [*p=q]:   store %struct.tm* %161, %struct.tm** %tm, align 8, !dbg !662
LOAD [p=*q]:   %162 = load i32* %2, align 4, !dbg !663
LOAD [p=*q]:   %165 = load i8** %164, align 8, !dbg !663
LOAD [p=*q]:   %166 = load i64* %crc, align 8, !dbg !663
CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
CONTEXT CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %168 = load %struct.tm** %tm, align 8, !dbg !664
LOAD [p=*q]:   %171 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %173 = load i32* %172, align 4, !dbg !665
LOAD [p=*q]:   %177 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %179 = load i32* %178, align 4, !dbg !665
LOAD [p=*q]:   %180 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %182 = load i32* %181, align 4, !dbg !665
LOAD [p=*q]:   %183 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %185 = load i32* %184, align 4, !dbg !665
CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
CONTEXT CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
	We do not analyze function 'rpl_printf'
CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
CONTEXT CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %191 = load %struct._IO_FILE** @stdout, align 8, !dbg !668
LOAD [p=*q]:   %192 = load i64* @bytes_in, align 8, !dbg !668
LOAD [p=*q]:   %193 = load i32* %positive_off_t_width, align 4, !dbg !668
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
CONTEXT CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %195 = load %struct._IO_FILE** @stdout, align 8, !dbg !670
LOAD [p=*q]:   %196 = load i64* @bytes_out, align 8, !dbg !670
LOAD [p=*q]:   %197 = load i32* %positive_off_t_width, align 4, !dbg !670
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
CONTEXT CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %199 = load i64* @bytes_in, align 8, !dbg !672
STORE [*p=q]:   store i64 -1, i64* @total_in, align 8, !dbg !673
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !675
LOAD [p=*q]:   %203 = load i64* @total_in, align 8, !dbg !677
LOAD [p=*q]:   %206 = load i64* @bytes_in, align 8, !dbg !678
LOAD [p=*q]:   %207 = load i64* @total_in, align 8, !dbg !678
STORE [*p=q]:   store i64 %208, i64* @total_in, align 8, !dbg !678
LOAD [p=*q]:   %211 = load i64* @bytes_out, align 8, !dbg !681
STORE [*p=q]:   store i64 -1, i64* @total_out, align 8, !dbg !682
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !684
LOAD [p=*q]:   %215 = load i64* @total_out, align 8, !dbg !686
LOAD [p=*q]:   %218 = load i64* @bytes_out, align 8, !dbg !687
LOAD [p=*q]:   %219 = load i64* @total_out, align 8, !dbg !687
STORE [*p=q]:   store i64 %220, i64* @total_out, align 8, !dbg !687
LOAD [p=*q]:   %223 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %224 = load i64* @bytes_in, align 8, !dbg !690
LOAD [p=*q]:   %225 = load i64* @header_bytes, align 8, !dbg !690
LOAD [p=*q]:   %228 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %229 = load %struct._IO_FILE** @stdout, align 8, !dbg !690
CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
CONTEXT CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
CONTEXT CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %114 = load i32 (i32, i32)** @work, align 8, !dbg !618
LOAD [p=*q]:   %115 = load %struct._IO_FILE** @stdin, align 8, !dbg !620
CALL [call func]:   %116 = call i32 @fileno(%struct._IO_FILE* %115) #3, !dbg !620
CONTEXT CALL [call func]:   %116 = call i32 @fileno(%struct._IO_FILE* %115) #3, !dbg !620
	We do not analyze function 'fileno'
LOAD [p=*q]:   %117 = load %struct._IO_FILE** @stdout, align 8, !dbg !621
CALL [call func]:   %118 = call i32 @fileno(%struct._IO_FILE* %117) #3, !dbg !621
CONTEXT CALL [call func]:   %118 = call i32 @fileno(%struct._IO_FILE* %117) #3, !dbg !621
	We do not analyze function 'fileno'
CALL [call func]:   %119 = call i32 %114(i32 %116, i32 %118), !dbg !621
CALL [call func]:   %123 = call i32 @input_eof(), !dbg !623
CONTEXT CALL [call func]:   %123 = call i32 @input_eof(), !dbg !623
LOAD [p=*q]:   %2 = load i32* @decompress, align 4, !dbg !574
LOAD [p=*q]:   %5 = load i32* @last_member, align 4, !dbg !574
STORE [*p=q]:   store i32 1, i32* %1, !dbg !576
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !577
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !577
LOAD [p=*q]:   %13 = load i32* @insize, align 4, !dbg !578
CALL [call func]:   %16 = call i32 @fill_inbuf(i32 1), !dbg !580
CONTEXT CALL [call func]:   %16 = call i32 @fill_inbuf(i32 1), !dbg !580
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 1, i32* %1, !dbg !581
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !582
STORE [*p=q]:   store i32 0, i32* %1, !dbg !584
LOAD [p=*q]:   %22 = load i32* %1, !dbg !585
LOAD [p=*q]:   %127 = load i32* @ifd, align 4, !dbg !625
CALL [call func]:   %128 = call i32 @get_method(i32 %127), !dbg !625
CONTEXT CALL [call func]:   %128 = call i32 @get_method(i32 %127), !dbg !625
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8* %flags}, metadata !576), !dbg !578
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[10 x i8]* %magic}, metadata !579), !dbg !581
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic0}, metadata !582), !dbg !583
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %imagic1}, metadata !584), !dbg !585
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %stamp}, metadata !586), !dbg !588
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %3 = load i32* @force, align 4, !dbg !589
LOAD [p=*q]:   %6 = load i32* @to_stdout, align 4, !dbg !589
LOAD [p=*q]:   %9 = load i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %10 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %13 = load i32* @inptr, align 4, !dbg !590
STORE [*p=q]:   store i32 %14, i32* @inptr, align 4, !dbg !590
LOAD [p=*q]:   %17 = load i8* %16, align 1, !dbg !590
CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
CONTEXT CALL [call func]:   %20 = call i32 @fill_inbuf(i32 1), !dbg !592
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %22, i32* %imagic0, align 4, !dbg !592
LOAD [p=*q]:   %23 = load i32* %imagic0, align 4, !dbg !593
STORE [*p=q]:   store i8 %24, i8* %25, align 1, !dbg !593
LOAD [p=*q]:   %26 = load i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %27 = load i32* @insize, align 4, !dbg !594
LOAD [p=*q]:   %30 = load i32* @inptr, align 4, !dbg !594
STORE [*p=q]:   store i32 %31, i32* @inptr, align 4, !dbg !594
LOAD [p=*q]:   %34 = load i8* %33, align 1, !dbg !594
CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
CONTEXT CALL [call func]:   %37 = call i32 @fill_inbuf(i32 1), !dbg !595
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %39, i32* %imagic1, align 4, !dbg !595
LOAD [p=*q]:   %40 = load i32* %imagic1, align 4, !dbg !596
STORE [*p=q]:   store i8 %41, i8* %42, align 1, !dbg !596
LOAD [p=*q]:   %44 = load i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %45 = load i32* @insize, align 4, !dbg !598
LOAD [p=*q]:   %48 = load i32* @inptr, align 4, !dbg !598
STORE [*p=q]:   store i32 %49, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %52 = load i8* %51, align 1, !dbg !598
CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
CONTEXT CALL [call func]:   %55 = call i32 @fill_inbuf(i32 0), !dbg !600
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %58, i8* %59, align 1, !dbg !600
STORE [*p=q]:   store i32 0, i32* %imagic0, align 4, !dbg !601
LOAD [p=*q]:   %61 = load i8* %60, align 1, !dbg !602
LOAD [p=*q]:   %64 = load i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %65 = load i32* @insize, align 4, !dbg !603
LOAD [p=*q]:   %68 = load i32* @inptr, align 4, !dbg !603
STORE [*p=q]:   store i32 %69, i32* @inptr, align 4, !dbg !603
LOAD [p=*q]:   %72 = load i8* %71, align 1, !dbg !603
CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
CONTEXT CALL [call func]:   %75 = call i32 @fill_inbuf(i32 0), !dbg !605
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %78, i8* %79, align 1, !dbg !605
STORE [*p=q]:   store i32 0, i32* %imagic1, align 4, !dbg !606
LOAD [p=*q]:   %81 = load i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %82 = load i32* @insize, align 4, !dbg !608
LOAD [p=*q]:   %85 = load i32* @inptr, align 4, !dbg !608
STORE [*p=q]:   store i32 %86, i32* @inptr, align 4, !dbg !608
LOAD [p=*q]:   %89 = load i8* %88, align 1, !dbg !608
CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
CONTEXT CALL [call func]:   %92 = call i32 @fill_inbuf(i32 1), !dbg !610
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %94, i32* %imagic1, align 4, !dbg !610
LOAD [p=*q]:   %95 = load i32* %imagic1, align 4, !dbg !611
STORE [*p=q]:   store i8 %96, i8* %97, align 1, !dbg !611
STORE [*p=q]:   store i32 -1, i32* @method, align 4, !dbg !612
LOAD [p=*q]:   %100 = load i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i32 %101, i32* @part_nb, align 4, !dbg !613
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !614
STORE [*p=q]:   store i32 0, i32* @last_member, align 4, !dbg !615
CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
CONTEXT CALL [call func]:   %103 = call i32 @memcmp(i8* %102, i8* getelementptr inbounds ([3 x i8]* @.str57, i32 0, i32 0), i64 2) #4, !dbg !616
	We do not analyze function 'memcmp'
CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
CONTEXT CALL [call func]:   %107 = call i32 @memcmp(i8* %106, i8* getelementptr inbounds ([3 x i8]* @.str58, i32 0, i32 0), i64 2) #4, !dbg !617
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %110 = load i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %111 = load i32* @insize, align 4, !dbg !618
LOAD [p=*q]:   %114 = load i32* @inptr, align 4, !dbg !618
STORE [*p=q]:   store i32 %115, i32* @inptr, align 4, !dbg !618
LOAD [p=*q]:   %118 = load i8* %117, align 1, !dbg !618
CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
CONTEXT CALL [call func]:   %121 = call i32 @fill_inbuf(i32 0), !dbg !620
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %123, i32* @method, align 4, !dbg !620
LOAD [p=*q]:   %124 = load i32* @method, align 4, !dbg !621
LOAD [p=*q]:   %127 = load %struct._IO_FILE** @stderr, align 8, !dbg !622
LOAD [p=*q]:   %128 = load i8** @program_name, align 8, !dbg !622
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !622
CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
CONTEXT CALL [call func]:   %130 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([44 x i8]* @.str59, i32 0, i32 0), i8* %128, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %129), !dbg !622
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !624
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !625
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !626
LOAD [p=*q]:   %132 = load i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %133 = load i32* @insize, align 4, !dbg !627
LOAD [p=*q]:   %136 = load i32* @inptr, align 4, !dbg !627
STORE [*p=q]:   store i32 %137, i32* @inptr, align 4, !dbg !627
LOAD [p=*q]:   %140 = load i8* %139, align 1, !dbg !627
CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
CONTEXT CALL [call func]:   %143 = call i32 @fill_inbuf(i32 0), !dbg !628
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %146, i8* %flags, align 1, !dbg !628
LOAD [p=*q]:   %147 = load i8* %flags, align 1, !dbg !629
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !630
LOAD [p=*q]:   %153 = load i8** @program_name, align 8, !dbg !630
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
CONTEXT CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %152, i8* getelementptr inbounds ([38 x i8]* @.str60, i32 0, i32 0), i8* %153, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !630
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !632
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !633
LOAD [p=*q]:   %156 = load i8* %flags, align 1, !dbg !634
LOAD [p=*q]:   %161 = load %struct._IO_FILE** @stderr, align 8, !dbg !635
LOAD [p=*q]:   %162 = load i8** @program_name, align 8, !dbg !635
LOAD [p=*q]:   %163 = load i8* %flags, align 1, !dbg !635
CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
CONTEXT CALL [call func]:   %165 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([40 x i8]* @.str61, i32 0, i32 0), i8* %162, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %164), !dbg !635
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !637
LOAD [p=*q]:   %166 = load i32* @force, align 4, !dbg !638
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !639
LOAD [p=*q]:   %171 = load i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %172 = load i32* @insize, align 4, !dbg !641
LOAD [p=*q]:   %175 = load i32* @inptr, align 4, !dbg !641
STORE [*p=q]:   store i32 %176, i32* @inptr, align 4, !dbg !641
LOAD [p=*q]:   %179 = load i8* %178, align 1, !dbg !641
CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
CONTEXT CALL [call func]:   %182 = call i32 @fill_inbuf(i32 0), !dbg !642
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i64 %185, i64* %stamp, align 8, !dbg !642
LOAD [p=*q]:   %186 = load i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %187 = load i32* @insize, align 4, !dbg !643
LOAD [p=*q]:   %190 = load i32* @inptr, align 4, !dbg !643
STORE [*p=q]:   store i32 %191, i32* @inptr, align 4, !dbg !643
LOAD [p=*q]:   %194 = load i8* %193, align 1, !dbg !643
CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
CONTEXT CALL [call func]:   %197 = call i32 @fill_inbuf(i32 0), !dbg !644
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %202 = load i64* %stamp, align 8, !dbg !644
STORE [*p=q]:   store i64 %203, i64* %stamp, align 8, !dbg !644
LOAD [p=*q]:   %204 = load i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %205 = load i32* @insize, align 4, !dbg !645
LOAD [p=*q]:   %208 = load i32* @inptr, align 4, !dbg !645
STORE [*p=q]:   store i32 %209, i32* @inptr, align 4, !dbg !645
LOAD [p=*q]:   %212 = load i8* %211, align 1, !dbg !645
CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
CONTEXT CALL [call func]:   %215 = call i32 @fill_inbuf(i32 0), !dbg !646
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %220 = load i64* %stamp, align 8, !dbg !646
STORE [*p=q]:   store i64 %221, i64* %stamp, align 8, !dbg !646
LOAD [p=*q]:   %222 = load i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %223 = load i32* @insize, align 4, !dbg !647
LOAD [p=*q]:   %226 = load i32* @inptr, align 4, !dbg !647
STORE [*p=q]:   store i32 %227, i32* @inptr, align 4, !dbg !647
LOAD [p=*q]:   %230 = load i8* %229, align 1, !dbg !647
CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
CONTEXT CALL [call func]:   %233 = call i32 @fill_inbuf(i32 0), !dbg !648
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %238 = load i64* %stamp, align 8, !dbg !648
STORE [*p=q]:   store i64 %239, i64* %stamp, align 8, !dbg !648
LOAD [p=*q]:   %240 = load i64* %stamp, align 8, !dbg !649
LOAD [p=*q]:   %243 = load i32* @no_time, align 4, !dbg !649
LOAD [p=*q]:   %246 = load i64* %stamp, align 8, !dbg !650
STORE [*p=q]:   store i64 %246, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0), align 8, !dbg !650
STORE [*p=q]:   store i64 0, i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 1), align 8, !dbg !652
LOAD [p=*q]:   %248 = load i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %249 = load i32* @insize, align 4, !dbg !654
LOAD [p=*q]:   %252 = load i32* @inptr, align 4, !dbg !654
STORE [*p=q]:   store i32 %253, i32* @inptr, align 4, !dbg !654
LOAD [p=*q]:   %256 = load i8* %255, align 1, !dbg !654
CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
CONTEXT CALL [call func]:   %259 = call i32 @fill_inbuf(i32 0), !dbg !655
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %262, i8* %263, align 1, !dbg !655
LOAD [p=*q]:   %264 = load i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %265 = load i32* @insize, align 4, !dbg !656
LOAD [p=*q]:   %268 = load i32* @inptr, align 4, !dbg !656
STORE [*p=q]:   store i32 %269, i32* @inptr, align 4, !dbg !656
LOAD [p=*q]:   %272 = load i8* %271, align 1, !dbg !656
CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
CONTEXT CALL [call func]:   %275 = call i32 @fill_inbuf(i32 0), !dbg !657
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %278, i8* %279, align 1, !dbg !657
LOAD [p=*q]:   %280 = load i8* %flags, align 1, !dbg !658
STORE [*p=q]:   store i8 8, i8* %285, align 1, !dbg !659
LOAD [p=*q]:   %286 = load i8* %flags, align 1, !dbg !661
STORE [*p=q]:   store i8 %286, i8* %287, align 1, !dbg !661
LOAD [p=*q]:   %288 = load i64* %stamp, align 8, !dbg !662
STORE [*p=q]:   store i8 %290, i8* %291, align 1, !dbg !662
LOAD [p=*q]:   %292 = load i64* %stamp, align 8, !dbg !663
STORE [*p=q]:   store i8 %295, i8* %296, align 1, !dbg !663
LOAD [p=*q]:   %297 = load i64* %stamp, align 8, !dbg !664
STORE [*p=q]:   store i8 %300, i8* %301, align 1, !dbg !664
LOAD [p=*q]:   %302 = load i64* %stamp, align 8, !dbg !665
STORE [*p=q]:   store i8 %304, i8* %305, align 1, !dbg !665
CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
CONTEXT CALL [call func]:   %306 = call i64 @updcrc(i8* null, i32 0), !dbg !666
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
CONTEXT CALL [call func]:   %308 = call i64 @updcrc(i8* %307, i32 10), !dbg !667
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %310 = load i8* %flags, align 1, !dbg !669
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[2 x i8]* %lenbuf}, metadata !670), !dbg !675
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !676), !dbg !677
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %315 = load i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %316 = load i32* @insize, align 4, !dbg !678
LOAD [p=*q]:   %319 = load i32* @inptr, align 4, !dbg !678
STORE [*p=q]:   store i32 %320, i32* @inptr, align 4, !dbg !678
LOAD [p=*q]:   %323 = load i8* %322, align 1, !dbg !678
CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
CONTEXT CALL [call func]:   %326 = call i32 @fill_inbuf(i32 0), !dbg !679
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %329, i8* %330, align 1, !dbg !679
STORE [*p=q]:   store i32 %331, i32* %len, align 4, !dbg !679
LOAD [p=*q]:   %332 = load i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %333 = load i32* @insize, align 4, !dbg !680
LOAD [p=*q]:   %336 = load i32* @inptr, align 4, !dbg !680
STORE [*p=q]:   store i32 %337, i32* @inptr, align 4, !dbg !680
LOAD [p=*q]:   %340 = load i8* %339, align 1, !dbg !680
CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
CONTEXT CALL [call func]:   %343 = call i32 @fill_inbuf(i32 0), !dbg !681
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i8 %346, i8* %347, align 1, !dbg !681
LOAD [p=*q]:   %350 = load i32* %len, align 4, !dbg !681
STORE [*p=q]:   store i32 %351, i32* %len, align 4, !dbg !681
LOAD [p=*q]:   %352 = load i32* @verbose, align 4, !dbg !682
LOAD [p=*q]:   %355 = load %struct._IO_FILE** @stderr, align 8, !dbg !683
LOAD [p=*q]:   %356 = load i8** @program_name, align 8, !dbg !683
LOAD [p=*q]:   %357 = load i32* %len, align 4, !dbg !683
CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
CONTEXT CALL [call func]:   %358 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %355, i8* getelementptr inbounds ([41 x i8]* @.str62, i32 0, i32 0), i8* %356, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %357), !dbg !683
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %360 = load i8* %flags, align 1, !dbg !686
CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
CONTEXT CALL [call func]:   %366 = call i64 @updcrc(i8* %365, i32 2), !dbg !687
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %368 = load i32* %len, align 4, !dbg !688
LOAD [p=*q]:   %370 = load i8* %flags, align 1, !dbg !688
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 %369, i32 %371), !dbg !688
LOAD [p=*q]:   %373 = load i8* %flags, align 1, !dbg !690
LOAD [p=*q]:   %378 = load i32* @no_name, align 4, !dbg !691
LOAD [p=*q]:   %381 = load i32* @to_stdout, align 4, !dbg !691
LOAD [p=*q]:   %384 = load i32* @list, align 4, !dbg !691
LOAD [p=*q]:   %387 = load i32* @part_nb, align 4, !dbg !691
LOAD [p=*q]:   %390 = load i8* %flags, align 1, !dbg !693
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %391), !dbg !693
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !696), !dbg !698
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
CONTEXT CALL [call func]:   %393 = call i8* @gzip_base_name(i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)) #4, !dbg !699
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %393, i8** %p, align 8, !dbg !699
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %base}, metadata !700), !dbg !701
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %394 = load i8** %p, align 8, !dbg !702
STORE [*p=q]:   store i8* %394, i8** %base, align 8, !dbg !702
LOAD [p=*q]:   %396 = load i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %397 = load i32* @insize, align 4, !dbg !705
LOAD [p=*q]:   %400 = load i32* @inptr, align 4, !dbg !705
STORE [*p=q]:   store i32 %401, i32* @inptr, align 4, !dbg !705
LOAD [p=*q]:   %404 = load i8* %403, align 1, !dbg !705
CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
CONTEXT CALL [call func]:   %407 = call i32 @fill_inbuf(i32 0), !dbg !707
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %411 = load i8** %p, align 8, !dbg !707
STORE [*p=q]:   store i8 %410, i8* %411, !dbg !707
LOAD [p=*q]:   %412 = load i8** %p, align 8, !dbg !708
STORE [*p=q]:   store i8* %413, i8** %p, align 8, !dbg !708
LOAD [p=*q]:   %414 = load i8* %412, !dbg !708
LOAD [p=*q]:   %419 = load i8** %p, align 8, !dbg !710
CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
CONTEXT CALL [call func]:   call void @gzip_error(i8* getelementptr inbounds ([39 x i8]* @.str63, i32 0, i32 0)) #7, !dbg !711
STORE [*p=q]:   store i8* %m, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
LOAD [p=*q]:   %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !576
LOAD [p=*q]:   %3 = load i8** @program_name, align 8, !dbg !576
LOAD [p=*q]:   %4 = load i8** %1, align 8, !dbg !576
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str2184, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i8* %4), !dbg !576
CALL [call func]:   call void @abort_gzip() #7, !dbg !578
LOAD [p=*q]:   %424 = load i8* %flags, align 1, !dbg !714
LOAD [p=*q]:   %429 = load i8** %base, align 8, !dbg !715
LOAD [p=*q]:   %430 = load i8** %p, align 8, !dbg !715
LOAD [p=*q]:   %431 = load i8** %base, align 8, !dbg !715
CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
CONTEXT CALL [call func]:   %436 = call i64 @updcrc(i8* %429, i32 %435), !dbg !715
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
LOAD [p=*q]:   %438 = load i8** %base, align 8, !dbg !716
CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
CONTEXT CALL [call func]:   %439 = call i8* @gzip_base_name(i8* %438) #4, !dbg !716
STORE [*p=q]:   store i8* %fname, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !576), !dbg !578
LOAD [p=*q]:   %2 = load i8** %1, align 8, !dbg !579
CALL [call func]:   %3 = call i8* @strrchr(i8* %2, i32 47) #4, !dbg !579
STORE [*p=q]:   store i8* %3, i8** %p, align 8, !dbg !579
LOAD [p=*q]:   %6 = load i8** %p, align 8, !dbg !580
STORE [*p=q]:   store i8* %7, i8** %1, align 8, !dbg !580
LOAD [p=*q]:   %9 = load i8** %1, align 8, !dbg !581
STORE [*p=q]:   store i8* %439, i8** %p, align 8, !dbg !716
LOAD [p=*q]:   %440 = load i8** %base, align 8, !dbg !717
LOAD [p=*q]:   %441 = load i8** %p, align 8, !dbg !717
LOAD [p=*q]:   %442 = load i8** %p, align 8, !dbg !718
CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
CONTEXT CALL [call func]:   %443 = call i64 @strlen(i8* %442) #4, !dbg !718
	We do not analyze function 'strlen'
CALL [call func]:   call void @llvm.memmove.p0i8.p0i8.i64(i8* %440, i8* %441, i64 %444, i32 1, i1 false), !dbg !718
## get_method does not call llvm.memmove.p0i8.p0i8.i64 in our callgraph 
LOAD [p=*q]:   %445 = load i32* @list, align 4, !dbg !719
LOAD [p=*q]:   %448 = load i8** %base, align 8, !dbg !720
STORE [*p=q]:   store i32 0, i32* @list, align 4, !dbg !722
LOAD [p=*q]:   %455 = load i8* %flags, align 1, !dbg !725
LOAD [p=*q]:   %460 = load i8* %flags, align 1, !dbg !726
CALL [call func]:   call void (...)* bitcast (void (i64, i32)* @discard_input_bytes to void (...)*)(i64 -1, i32 %461), !dbg !726
LOAD [p=*q]:   %463 = load i8* %flags, align 1, !dbg !729
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %crc16}, metadata !730), !dbg !732
## get_method does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
CONTEXT CALL [call func]:   %469 = call i64 @updcrc(i8* %468, i32 0), !dbg !733
STORE [*p=q]:   store i8* %s, i8** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %1}, metadata !574), !dbg !577
STORE [*p=q]:   store i32 %n, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !578), !dbg !579
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %c}, metadata !580), !dbg !582
LOAD [p=*q]:   %3 = load i8** %1, align 8, !dbg !583
STORE [*p=q]:   store i64 4294967295, i64* %c, align 8, !dbg !584
LOAD [p=*q]:   %7 = load i64* @updcrc.crc, align 8, !dbg !587
STORE [*p=q]:   store i64 %7, i64* %c, align 8, !dbg !587
LOAD [p=*q]:   %8 = load i32* %2, align 4, !dbg !589
LOAD [p=*q]:   %12 = load i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %14 = load i8** %1, align 8, !dbg !591
STORE [*p=q]:   store i8* %15, i8** %1, align 8, !dbg !591
LOAD [p=*q]:   %16 = load i8* %14, !dbg !591
LOAD [p=*q]:   %22 = load i64* %21, align 1, !dbg !591
LOAD [p=*q]:   %23 = load i64* %c, align 8, !dbg !591
STORE [*p=q]:   store i64 %25, i64* %c, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 %28, i32* %2, align 4, !dbg !593
LOAD [p=*q]:   %33 = load i64* %c, align 8, !dbg !594
STORE [*p=q]:   store i64 %33, i64* @updcrc.crc, align 8, !dbg !594
LOAD [p=*q]:   %34 = load i64* %c, align 8, !dbg !595
STORE [*p=q]:   store i32 %471, i32* %crc16, align 4, !dbg !733
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %header16}, metadata !734), !dbg !735
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %472 = load i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %473 = load i32* @insize, align 4, !dbg !736
LOAD [p=*q]:   %476 = load i32* @inptr, align 4, !dbg !736
STORE [*p=q]:   store i32 %477, i32* @inptr, align 4, !dbg !736
LOAD [p=*q]:   %480 = load i8* %479, align 1, !dbg !736
CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
CONTEXT CALL [call func]:   %483 = call i32 @fill_inbuf(i32 0), !dbg !737
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %485, i32* %header16, align 4, !dbg !737
LOAD [p=*q]:   %486 = load i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %487 = load i32* @insize, align 4, !dbg !738
LOAD [p=*q]:   %490 = load i32* @inptr, align 4, !dbg !738
STORE [*p=q]:   store i32 %491, i32* @inptr, align 4, !dbg !738
LOAD [p=*q]:   %494 = load i8* %493, align 1, !dbg !738
CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
CONTEXT CALL [call func]:   %497 = call i32 @fill_inbuf(i32 0), !dbg !739
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
LOAD [p=*q]:   %501 = load i32* %header16, align 4, !dbg !739
STORE [*p=q]:   store i32 %502, i32* %header16, align 4, !dbg !739
LOAD [p=*q]:   %503 = load i32* %header16, align 4, !dbg !740
LOAD [p=*q]:   %504 = load i32* %crc16, align 4, !dbg !740
LOAD [p=*q]:   %507 = load %struct._IO_FILE** @stderr, align 8, !dbg !741
LOAD [p=*q]:   %508 = load i8** @program_name, align 8, !dbg !741
LOAD [p=*q]:   %509 = load i32* %header16, align 4, !dbg !741
LOAD [p=*q]:   %510 = load i32* %crc16, align 4, !dbg !741
CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
CONTEXT CALL [call func]:   %511 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([60 x i8]* @.str64, i32 0, i32 0), i8* %508, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0), i32 %509, i32 %510), !dbg !741
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !743
LOAD [p=*q]:   %512 = load i32* @force, align 4, !dbg !744
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !745
LOAD [p=*q]:   %518 = load i32* @part_nb, align 4, !dbg !748
LOAD [p=*q]:   %521 = load i32* @inptr, align 4, !dbg !749
STORE [*p=q]:   store i64 %523, i64* @header_bytes, align 8, !dbg !749
CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
CONTEXT CALL [call func]:   %527 = call i32 @memcmp(i8* %526, i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 2) #4, !dbg !753
	We do not analyze function 'memcmp'
LOAD [p=*q]:   %530 = load i32* @inptr, align 4, !dbg !753
CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
CONTEXT CALL [call func]:   %533 = call i32 @memcmp(i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65, i32 0, i32 0), i64 4) #4, !dbg !754
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 0, i32* @inptr, align 4, !dbg !755
STORE [*p=q]:   store i32 (i32, i32)* @unzip, i32 (i32, i32)** @work, align 8, !dbg !757
LOAD [p=*q]:   %536 = load i32* %2, align 4, !dbg !758
CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
CONTEXT CALL [call func]:   %537 = call i32 @check_zipfile(i32 %536), !dbg !758
STORE [*p=q]:   store i32 %in, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %h}, metadata !576), !dbg !580
LOAD [p=*q]:   %3 = load i32* @inptr, align 4, !dbg !581
STORE [*p=q]:   store i8* %5, i8** %h, align 8, !dbg !581
LOAD [p=*q]:   %6 = load i32* %2, align 4, !dbg !582
STORE [*p=q]:   store i32 %6, i32* @ifd, align 4, !dbg !582
LOAD [p=*q]:   %7 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i8* %9, !dbg !583
LOAD [p=*q]:   %13 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %16 = load i8* %15, !dbg !583
LOAD [p=*q]:   %22 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %25 = load i8* %24, !dbg !583
LOAD [p=*q]:   %28 = load i8** %h, align 8, !dbg !583
LOAD [p=*q]:   %31 = load i8* %30, !dbg !583
LOAD [p=*q]:   %37 = load i32* @inptr, align 4, !dbg !583
STORE [*p=q]:   store i32 %38, i32* @inptr, align 4, !dbg !583
LOAD [p=*q]:   %39 = load i32* @inptr, align 4, !dbg !584
LOAD [p=*q]:   %40 = load i32* @insize, align 4, !dbg !584
LOAD [p=*q]:   %43 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %45 = load i8* %44, !dbg !584
LOAD [p=*q]:   %48 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %50 = load i8* %49, !dbg !584
LOAD [p=*q]:   %56 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %59 = load i8* %58, !dbg !584
LOAD [p=*q]:   %62 = load i8** %h, align 8, !dbg !584
LOAD [p=*q]:   %65 = load i8* %64, !dbg !584
LOAD [p=*q]:   %75 = load %struct._IO_FILE** @stderr, align 8, !dbg !585
LOAD [p=*q]:   %76 = load i8** @program_name, align 8, !dbg !585
CALL [call func]:   %77 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([31 x i8]* @.str167, i32 0, i32 0), i8* %76, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !585
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !587
STORE [*p=q]:   store i32 1, i32* %1, !dbg !588
LOAD [p=*q]:   %79 = load i8** %h, align 8, !dbg !589
LOAD [p=*q]:   %81 = load i8* %80, !dbg !589
STORE [*p=q]:   store i32 %82, i32* @method, align 4, !dbg !589
LOAD [p=*q]:   %83 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %86 = load i32* @method, align 4, !dbg !590
LOAD [p=*q]:   %89 = load %struct._IO_FILE** @stderr, align 8, !dbg !591
LOAD [p=*q]:   %90 = load i8** @program_name, align 8, !dbg !591
CALL [call func]:   %91 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([58 x i8]* @.str1168, i32 0, i32 0), i8* %90, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !593
STORE [*p=q]:   store i32 1, i32* %1, !dbg !594
LOAD [p=*q]:   %93 = load i8** %h, align 8, !dbg !595
LOAD [p=*q]:   %95 = load i8* %94, !dbg !595
STORE [*p=q]:   store i32 %97, i32* @decrypt, align 4, !dbg !595
LOAD [p=*q]:   %100 = load %struct._IO_FILE** @stderr, align 8, !dbg !596
LOAD [p=*q]:   %101 = load i8** @program_name, align 8, !dbg !596
CALL [call func]:   %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([38 x i8]* @.str2169, i32 0, i32 0), i8* %101, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !596
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !598
STORE [*p=q]:   store i32 1, i32* %1, !dbg !599
LOAD [p=*q]:   %104 = load i8** %h, align 8, !dbg !600
LOAD [p=*q]:   %106 = load i8* %105, !dbg !600
STORE [*p=q]:   store i32 %110, i32* @ext_header, align 4, !dbg !600
STORE [*p=q]:   store i32 1, i32* @pkzip, align 4, !dbg !601
STORE [*p=q]:   store i32 0, i32* %1, !dbg !602
LOAD [p=*q]:   %112 = load i32* %1, !dbg !603
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !759
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !760
CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
CONTEXT CALL [call func]:   %543 = call i32 @memcmp(i8* %542, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #4, !dbg !762
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unpack, i32 (i32, i32)** @work, align 8, !dbg !763
STORE [*p=q]:   store i32 2, i32* @method, align 4, !dbg !765
CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
CONTEXT CALL [call func]:   %548 = call i32 @memcmp(i8* %547, i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i64 2) #4, !dbg !767
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzw, i32 (i32, i32)** @work, align 8, !dbg !768
STORE [*p=q]:   store i32 1, i32* @method, align 4, !dbg !770
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !771
CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
CONTEXT CALL [call func]:   %553 = call i32 @memcmp(i8* %552, i8* getelementptr inbounds ([3 x i8]* @.str68, i32 0, i32 0), i64 2) #4, !dbg !773
	We do not analyze function 'memcmp'
STORE [*p=q]:   store i32 (i32, i32)* @unlzh, i32 (i32, i32)** @work, align 8, !dbg !774
STORE [*p=q]:   store i32 3, i32* @method, align 4, !dbg !776
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !777
LOAD [p=*q]:   %557 = load i32* @force, align 4, !dbg !779
LOAD [p=*q]:   %560 = load i32* @to_stdout, align 4, !dbg !779
LOAD [p=*q]:   %563 = load i32* @list, align 4, !dbg !779
STORE [*p=q]:   store i32 0, i32* @method, align 4, !dbg !780
STORE [*p=q]:   store i32 (i32, i32)* @copy, i32 (i32, i32)** @work, align 8, !dbg !782
LOAD [p=*q]:   %566 = load i32* %imagic1, align 4, !dbg !783
LOAD [p=*q]:   %569 = load i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 %570, i32* @inptr, align 4, !dbg !784
STORE [*p=q]:   store i32 1, i32* @last_member, align 4, !dbg !785
LOAD [p=*q]:   %572 = load i32* %imagic0, align 4, !dbg !786
LOAD [p=*q]:   %575 = load %struct._IO_FILE** @stdout, align 8, !dbg !787
CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
CONTEXT CALL [call func]:   %576 = call i32 @fileno(%struct._IO_FILE* %575) #3, !dbg !787
	We do not analyze function 'fileno'
CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
CONTEXT CALL [call func]:   call void @write_buf(i32 %576, i8* %577, i32 1), !dbg !787
STORE [*p=q]:   store i32 %fd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
STORE [*p=q]:   store i8* %buf, i8** %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %2}, metadata !576), !dbg !579
STORE [*p=q]:   store i32 %cnt, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !580), !dbg !581
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !582), !dbg !584
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !586
LOAD [p=*q]:   %6 = load i8** %2, align 8, !dbg !586
LOAD [p=*q]:   %7 = load i32* %3, align 4, !dbg !586
CALL [call func]:   %8 = call i32 (...)* bitcast (i32 (i32, i8*, i32)* @write_buffer to i32 (...)*)(i32 %5, i8* %6, i32 %7), !dbg !586
STORE [*p=q]:   store i32 %8, i32* %n, align 4, !dbg !586
LOAD [p=*q]:   %9 = load i32* %3, align 4, !dbg !586
LOAD [p=*q]:   %12 = load i32* %n, align 4, !dbg !587
CALL [call func]:   call void @write_error() #7, !dbg !589
LOAD [p=*q]:   %16 = load i32* %n, align 4, !dbg !591
LOAD [p=*q]:   %17 = load i32* %3, align 4, !dbg !591
STORE [*p=q]:   store i32 %18, i32* %3, align 4, !dbg !591
LOAD [p=*q]:   %19 = load i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %20 = load i32* %n, align 4, !dbg !592
STORE [*p=q]:   store i8* %22, i8** %2, align 8, !dbg !592
LOAD [p=*q]:   %578 = load i64* @bytes_out, align 8, !dbg !789
STORE [*p=q]:   store i64 %579, i64* @bytes_out, align 8, !dbg !789
LOAD [p=*q]:   %587 = load i32* @method, align 4, !dbg !792
LOAD [p=*q]:   %590 = load i32* @method, align 4, !dbg !793
STORE [*p=q]:   store i32 %590, i32* %1, !dbg !793
LOAD [p=*q]:   %592 = load i32* @part_nb, align 4, !dbg !794
LOAD [p=*q]:   %595 = load %struct._IO_FILE** @stderr, align 8, !dbg !795
LOAD [p=*q]:   %596 = load i8** @program_name, align 8, !dbg !795
CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
CONTEXT CALL [call func]:   %597 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %595, i8* getelementptr inbounds ([29 x i8]* @.str69, i32 0, i32 0), i8* %596, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !795
	We do not analyze function 'rpl_fprintf'
STORE [*p=q]:   store i32 1, i32* @exit_code, align 4, !dbg !797
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !798
LOAD [p=*q]:   %600 = load i8* %599, align 1, !dbg !799
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %inbyte}, metadata !801), !dbg !803
## get_method does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %604 = load i32* %imagic1, align 4, !dbg !804
STORE [*p=q]:   store i32 %604, i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %606 = load i32* %inbyte, align 4, !dbg !804
LOAD [p=*q]:   %610 = load i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %611 = load i32* @insize, align 4, !dbg !807
LOAD [p=*q]:   %614 = load i32* @inptr, align 4, !dbg !807
STORE [*p=q]:   store i32 %615, i32* @inptr, align 4, !dbg !807
LOAD [p=*q]:   %618 = load i8* %617, align 1, !dbg !807
CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
CONTEXT CALL [call func]:   %621 = call i32 @fill_inbuf(i32 1), !dbg !808
STORE [*p=q]:   store i32 %eof_ok, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !576), !dbg !578
STORE [*p=q]:   store i32 0, i32* @insize, align 4, !dbg !579
LOAD [p=*q]:   %4 = load i32* @ifd, align 4, !dbg !581
LOAD [p=*q]:   %5 = load i32* @insize, align 4, !dbg !581
LOAD [p=*q]:   %8 = load i32* @insize, align 4, !dbg !581
CALL [call func]:   %10 = call i32 @read_buffer(i32 %4, i8* %7, i32 %9), !dbg !581
STORE [*p=q]:   store i32 %10, i32* %len, align 4, !dbg !581
LOAD [p=*q]:   %11 = load i32* %len, align 4, !dbg !583
LOAD [p=*q]:   %15 = load i32* %len, align 4, !dbg !585
CALL [call func]:   call void @read_error() #7, !dbg !586
LOAD [p=*q]:   %19 = load i32* %len, align 4, !dbg !588
LOAD [p=*q]:   %20 = load i32* @insize, align 4, !dbg !588
STORE [*p=q]:   store i32 %21, i32* @insize, align 4, !dbg !588
LOAD [p=*q]:   %23 = load i32* @insize, align 4, !dbg !589
LOAD [p=*q]:   %26 = load i32* @insize, align 4, !dbg !590
LOAD [p=*q]:   %29 = load i32* %2, align 4, !dbg !591
STORE [*p=q]:   store i32 -1, i32* %1, !dbg !593
CALL [call func]:   call void @flush_window(), !dbg !594
CALL [call func]:   %33 = call i32* @__errno_location() #1, !dbg !595
STORE [*p=q]:   store i32 0, i32* %33, !dbg !595
CALL [call func]:   call void @read_error() #7, !dbg !596
LOAD [p=*q]:   %35 = load i32* @insize, align 4, !dbg !597
LOAD [p=*q]:   %37 = load i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i64 %38, i64* @bytes_in, align 8, !dbg !597
STORE [*p=q]:   store i32 1, i32* @inptr, align 4, !dbg !598
LOAD [p=*q]:   %39 = load i8* getelementptr inbounds ([32832 x i8]* @inbuf, i32 0, i64 0), align 1, !dbg !599
STORE [*p=q]:   store i32 %40, i32* %1, !dbg !599
LOAD [p=*q]:   %42 = load i32* %1, !dbg !600
STORE [*p=q]:   store i32 %623, i32* %inbyte, align 4, !dbg !808
LOAD [p=*q]:   %625 = load i32* %inbyte, align 4, !dbg !809
LOAD [p=*q]:   %628 = load i32* @verbose, align 4, !dbg !810
LOAD [p=*q]:   %631 = load i32* @quiet, align 4, !dbg !812
LOAD [p=*q]:   %634 = load %struct._IO_FILE** @stderr, align 8, !dbg !812
LOAD [p=*q]:   %635 = load i8** @program_name, align 8, !dbg !812
CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
CONTEXT CALL [call func]:   %636 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %634, i8* getelementptr inbounds ([56 x i8]* @.str70, i32 0, i32 0), i8* %635, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !812
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %638 = load i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !812
STORE [*p=q]:   store i32 -3, i32* %1, !dbg !814
LOAD [p=*q]:   %645 = load i32* @quiet, align 4, !dbg !816
LOAD [p=*q]:   %648 = load %struct._IO_FILE** @stderr, align 8, !dbg !816
LOAD [p=*q]:   %649 = load i8** @program_name, align 8, !dbg !816
CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
CONTEXT CALL [call func]:   %650 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %648, i8* getelementptr inbounds ([53 x i8]* @.str71, i32 0, i32 0), i8* %649, i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !816
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %652 = load i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 2, i32* @exit_code, align 4, !dbg !816
STORE [*p=q]:   store i32 -2, i32* %1, !dbg !818
LOAD [p=*q]:   %657 = load i32* %1, !dbg !819
STORE [*p=q]:   store i32 %128, i32* @method, align 4, !dbg !625
LOAD [p=*q]:   %129 = load i32* @method, align 4, !dbg !626
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !628
LOAD [p=*q]:   %134 = load i32* @verbose, align 4, !dbg !630
LOAD [p=*q]:   %137 = load i32* @test, align 4, !dbg !631
LOAD [p=*q]:   %140 = load %struct._IO_FILE** @stderr, align 8, !dbg !633
CALL [call func]:   %141 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %140, i8* getelementptr inbounds ([5 x i8]* @.str84, i32 0, i32 0)), !dbg !633
CONTEXT CALL [call func]:   %141 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %140, i8* getelementptr inbounds ([5 x i8]* @.str84, i32 0, i32 0)), !dbg !633
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %143 = load i32* @decompress, align 4, !dbg !636
LOAD [p=*q]:   %146 = load i64* @bytes_in, align 8, !dbg !637
LOAD [p=*q]:   %147 = load i64* @bytes_out, align 8, !dbg !637
LOAD [p=*q]:   %148 = load i64* @header_bytes, align 8, !dbg !637
LOAD [p=*q]:   %151 = load i64* @bytes_in, align 8, !dbg !637
LOAD [p=*q]:   %152 = load %struct._IO_FILE** @stderr, align 8, !dbg !637
CALL [call func]:   call void @display_ratio(i64 %150, i64 %151, %struct._IO_FILE* %152), !dbg !637
CONTEXT CALL [call func]:   call void @display_ratio(i64 %150, i64 %151, %struct._IO_FILE* %152), !dbg !637
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
## display_ratio does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CONTEXT CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %153 = load %struct._IO_FILE** @stderr, align 8, !dbg !639
CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !639
CONTEXT CALL [call func]:   %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([2 x i8]* @.str39, i32 0, i32 0)), !dbg !639
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %180 = load i32* @list, align 4, !dbg !687
LOAD [p=*q]:   %180 = load i32* @list, align 4, !dbg !687
LOAD [p=*q]:   %183 = load i32* @quiet, align 4, !dbg !687
LOAD [p=*q]:   %190 = load i32* @exit_code, align 4, !dbg !691
CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
CONTEXT CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %183 = load i32* @quiet, align 4, !dbg !687
LOAD [p=*q]:   %190 = load i32* @exit_code, align 4, !dbg !691
CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
CONTEXT CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %186 = load i32* %file_count, align 4, !dbg !687
LOAD [p=*q]:   %186 = load i32* %file_count, align 4, !dbg !687
CALL [call func]:   call void @do_list(i32 -1, i32 -1), !dbg !688
CONTEXT CALL [call func]:   call void @do_list(i32 -1, i32 -1), !dbg !688
STORE [*p=q]:   store i32 %ifd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 %method, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %crc}, metadata !578), !dbg !581
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %positive_off_t_width}, metadata !582), !dbg !583
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 1, i32* %positive_off_t_width, align 4, !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %o}, metadata !585), !dbg !586
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 9223372036854775807, i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %4 = load i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %7 = load i32* %positive_off_t_width, align 4, !dbg !589
STORE [*p=q]:   store i32 %8, i32* %positive_off_t_width, align 4, !dbg !589
LOAD [p=*q]:   %10 = load i64* %o, align 8, !dbg !592
STORE [*p=q]:   store i64 %11, i64* %o, align 8, !dbg !592
LOAD [p=*q]:   %13 = load i32* @do_list.first_time, align 4, !dbg !593
LOAD [p=*q]:   %16 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 0, i32* @do_list.first_time, align 4, !dbg !594
LOAD [p=*q]:   %19 = load i32* @verbose, align 4, !dbg !596
CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
CONTEXT CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %24 = load i32* @quiet, align 4, !dbg !600
LOAD [p=*q]:   %27 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %28 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %29 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %30 = load i32* %positive_off_t_width, align 4, !dbg !601
CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
CONTEXT CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %34 = load i32* %2, align 4, !dbg !605
LOAD [p=*q]:   %37 = load i64* @total_in, align 8, !dbg !606
LOAD [p=*q]:   %40 = load i64* @total_out, align 8, !dbg !606
LOAD [p=*q]:   %44 = load i32* @verbose, align 4, !dbg !609
CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
CONTEXT CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %49 = load i32* @verbose, align 4, !dbg !613
LOAD [p=*q]:   %52 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %55 = load %struct._IO_FILE** @stdout, align 8, !dbg !614
LOAD [p=*q]:   %56 = load i64* @total_in, align 8, !dbg !614
LOAD [p=*q]:   %57 = load i32* %positive_off_t_width, align 4, !dbg !614
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
CONTEXT CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
CONTEXT CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
CONTEXT CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %59 = load %struct._IO_FILE** @stdout, align 8, !dbg !617
LOAD [p=*q]:   %60 = load i64* @total_out, align 8, !dbg !617
LOAD [p=*q]:   %61 = load i32* %positive_off_t_width, align 4, !dbg !617
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
CONTEXT CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
CONTEXT CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
CONTEXT CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %64 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %65 = load i64* @total_in, align 8, !dbg !620
LOAD [p=*q]:   %66 = load i64* @header_bytes, align 8, !dbg !620
LOAD [p=*q]:   %69 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %70 = load %struct._IO_FILE** @stdout, align 8, !dbg !620
CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
CONTEXT CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
## display_ratio does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CONTEXT CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
CONTEXT CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
	We do not analyze function 'rpl_printf'
STORE [*p=q]:   store i64 -1, i64* %crc, align 8, !dbg !623
STORE [*p=q]:   store i64 -1, i64* @bytes_out, align 8, !dbg !624
LOAD [p=*q]:   %74 = load i64* @ifile_size, align 8, !dbg !625
STORE [*p=q]:   store i64 %74, i64* @bytes_in, align 8, !dbg !625
LOAD [p=*q]:   %75 = load i32* %2, align 4, !dbg !626
LOAD [p=*q]:   %78 = load i32* @last_member, align 4, !dbg !626
LOAD [p=*q]:   %81 = load i32* %1, align 4, !dbg !627
CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
CONTEXT CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
	We do not analyze function 'lseek'
STORE [*p=q]:   store i64 %82, i64* @bytes_in, align 8, !dbg !627
LOAD [p=*q]:   %83 = load i64* @bytes_in, align 8, !dbg !629
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[8 x i8]* %buf}, metadata !630), !dbg !635
## do_list does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %86 = load i64* @bytes_in, align 8, !dbg !636
STORE [*p=q]:   store i64 %87, i64* @bytes_in, align 8, !dbg !636
LOAD [p=*q]:   %88 = load i32* %1, align 4, !dbg !637
CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
CONTEXT CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
	We do not analyze function 'read'
CALL [call func]:   call void @read_error() #7, !dbg !638
CONTEXT CALL [call func]:   call void @read_error() #7, !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !574), !dbg !576
## read_error does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
CONTEXT CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %2 = load i32* %1, !dbg !577
STORE [*p=q]:   store i32 %2, i32* %e, align 4, !dbg !577
LOAD [p=*q]:   %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i8** @program_name, align 8, !dbg !578
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
CONTEXT CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %6 = load i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %9 = load i32* %e, align 4, !dbg !580
CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
CONTEXT CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %9, i32* %10, !dbg !580
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
CONTEXT CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
	We do not analyze function 'rpl_perror'
LOAD [p=*q]:   %12 = load %struct._IO_FILE** @stderr, align 8, !dbg !584
CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
CONTEXT CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @abort_gzip() #7, !dbg !586
CONTEXT CALL [call func]:   call void @abort_gzip() #7, !dbg !586
CALL [call func]:   call void @remove_output_file(), !dbg !574
CALL [call func]:   call void (...)* bitcast (void (i32)* @do_exit to void (...)*)(i32 1) #7, !dbg !576
LOAD [p=*q]:   %95 = load i8* %94, align 1, !dbg !640
LOAD [p=*q]:   %99 = load i8* %98, align 1, !dbg !640
LOAD [p=*q]:   %108 = load i8* %107, !dbg !640
LOAD [p=*q]:   %114 = load i8* %113, !dbg !640
STORE [*p=q]:   store i64 %121, i64* %crc, align 8, !dbg !640
LOAD [p=*q]:   %125 = load i8* %124, !dbg !641
LOAD [p=*q]:   %131 = load i8* %130, !dbg !641
LOAD [p=*q]:   %141 = load i8* %140, !dbg !641
LOAD [p=*q]:   %148 = load i8* %147, !dbg !641
STORE [*p=q]:   store i64 %155, i64* @bytes_out, align 8, !dbg !641
LOAD [p=*q]:   %158 = load i32* @verbose, align 4, !dbg !644
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.tm** %tm}, metadata !645), !dbg !661
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
CONTEXT CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
	We do not analyze function 'localtime'
STORE [*p=q]:   store %struct.tm* %161, %struct.tm** %tm, align 8, !dbg !662
LOAD [p=*q]:   %162 = load i32* %2, align 4, !dbg !663
LOAD [p=*q]:   %165 = load i8** %164, align 8, !dbg !663
LOAD [p=*q]:   %166 = load i64* %crc, align 8, !dbg !663
CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
CONTEXT CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %168 = load %struct.tm** %tm, align 8, !dbg !664
LOAD [p=*q]:   %171 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %173 = load i32* %172, align 4, !dbg !665
LOAD [p=*q]:   %177 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %179 = load i32* %178, align 4, !dbg !665
LOAD [p=*q]:   %180 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %182 = load i32* %181, align 4, !dbg !665
LOAD [p=*q]:   %183 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %185 = load i32* %184, align 4, !dbg !665
CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
CONTEXT CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
	We do not analyze function 'rpl_printf'
CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
CONTEXT CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %191 = load %struct._IO_FILE** @stdout, align 8, !dbg !668
LOAD [p=*q]:   %192 = load i64* @bytes_in, align 8, !dbg !668
LOAD [p=*q]:   %193 = load i32* %positive_off_t_width, align 4, !dbg !668
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
CONTEXT CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
CONTEXT CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
CONTEXT CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %195 = load %struct._IO_FILE** @stdout, align 8, !dbg !670
LOAD [p=*q]:   %196 = load i64* @bytes_out, align 8, !dbg !670
LOAD [p=*q]:   %197 = load i32* %positive_off_t_width, align 4, !dbg !670
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
CONTEXT CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
CONTEXT CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
CONTEXT CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %199 = load i64* @bytes_in, align 8, !dbg !672
STORE [*p=q]:   store i64 -1, i64* @total_in, align 8, !dbg !673
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !675
LOAD [p=*q]:   %203 = load i64* @total_in, align 8, !dbg !677
LOAD [p=*q]:   %206 = load i64* @bytes_in, align 8, !dbg !678
LOAD [p=*q]:   %207 = load i64* @total_in, align 8, !dbg !678
STORE [*p=q]:   store i64 %208, i64* @total_in, align 8, !dbg !678
LOAD [p=*q]:   %211 = load i64* @bytes_out, align 8, !dbg !681
STORE [*p=q]:   store i64 -1, i64* @total_out, align 8, !dbg !682
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !684
LOAD [p=*q]:   %215 = load i64* @total_out, align 8, !dbg !686
LOAD [p=*q]:   %218 = load i64* @bytes_out, align 8, !dbg !687
LOAD [p=*q]:   %219 = load i64* @total_out, align 8, !dbg !687
STORE [*p=q]:   store i64 %220, i64* @total_out, align 8, !dbg !687
LOAD [p=*q]:   %223 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %224 = load i64* @bytes_in, align 8, !dbg !690
LOAD [p=*q]:   %225 = load i64* @header_bytes, align 8, !dbg !690
LOAD [p=*q]:   %228 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %229 = load %struct._IO_FILE** @stdout, align 8, !dbg !690
CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
CONTEXT CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
## display_ratio does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CONTEXT CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
CONTEXT CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %190 = load i32* @exit_code, align 4, !dbg !691
CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
CONTEXT CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
CALL [call func]:   call void @do_list(i32 -1, i32 -1), !dbg !688
CONTEXT CALL [call func]:   call void @do_list(i32 -1, i32 -1), !dbg !688
STORE [*p=q]:   store i32 %ifd, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 %method, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !576), !dbg !577
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %crc}, metadata !578), !dbg !581
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %positive_off_t_width}, metadata !582), !dbg !583
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 1, i32* %positive_off_t_width, align 4, !dbg !584
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %o}, metadata !585), !dbg !586
## do_list does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 9223372036854775807, i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %4 = load i64* %o, align 8, !dbg !587
LOAD [p=*q]:   %7 = load i32* %positive_off_t_width, align 4, !dbg !589
STORE [*p=q]:   store i32 %8, i32* %positive_off_t_width, align 4, !dbg !589
LOAD [p=*q]:   %10 = load i64* %o, align 8, !dbg !592
STORE [*p=q]:   store i64 %11, i64* %o, align 8, !dbg !592
LOAD [p=*q]:   %13 = load i32* @do_list.first_time, align 4, !dbg !593
LOAD [p=*q]:   %16 = load i32* %2, align 4, !dbg !593
STORE [*p=q]:   store i32 0, i32* @do_list.first_time, align 4, !dbg !594
LOAD [p=*q]:   %19 = load i32* @verbose, align 4, !dbg !596
CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
CONTEXT CALL [call func]:   %22 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str14, i32 0, i32 0)), !dbg !597
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %24 = load i32* @quiet, align 4, !dbg !600
LOAD [p=*q]:   %27 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %28 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %29 = load i32* %positive_off_t_width, align 4, !dbg !601
LOAD [p=*q]:   %30 = load i32* %positive_off_t_width, align 4, !dbg !601
CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
CONTEXT CALL [call func]:   %31 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([38 x i8]* @.str15, i32 0, i32 0), i32 %27, i32 %28, i8* getelementptr inbounds ([11 x i8]* @.str16, i32 0, i32 0), i32 %29, i32 %30, i8* getelementptr inbounds ([13 x i8]* @.str17, i32 0, i32 0)), !dbg !601
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %34 = load i32* %2, align 4, !dbg !605
LOAD [p=*q]:   %37 = load i64* @total_in, align 8, !dbg !606
LOAD [p=*q]:   %40 = load i64* @total_out, align 8, !dbg !606
LOAD [p=*q]:   %44 = load i32* @verbose, align 4, !dbg !609
CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
CONTEXT CALL [call func]:   %47 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([29 x i8]* @.str18, i32 0, i32 0)), !dbg !610
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %49 = load i32* @verbose, align 4, !dbg !613
LOAD [p=*q]:   %52 = load i32* @quiet, align 4, !dbg !613
LOAD [p=*q]:   %55 = load %struct._IO_FILE** @stdout, align 8, !dbg !614
LOAD [p=*q]:   %56 = load i64* @total_in, align 8, !dbg !614
LOAD [p=*q]:   %57 = load i32* %positive_off_t_width, align 4, !dbg !614
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %55, i64 %56, i32 %57), !dbg !614
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
CONTEXT CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
CONTEXT CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
CONTEXT CALL [call func]:   %58 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !616
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %59 = load %struct._IO_FILE** @stdout, align 8, !dbg !617
LOAD [p=*q]:   %60 = load i64* @total_out, align 8, !dbg !617
LOAD [p=*q]:   %61 = load i32* %positive_off_t_width, align 4, !dbg !617
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %59, i64 %60, i32 %61), !dbg !617
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
CONTEXT CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
CONTEXT CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
CONTEXT CALL [call func]:   %62 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !618
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %64 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %65 = load i64* @total_in, align 8, !dbg !620
LOAD [p=*q]:   %66 = load i64* @header_bytes, align 8, !dbg !620
LOAD [p=*q]:   %69 = load i64* @total_out, align 8, !dbg !620
LOAD [p=*q]:   %70 = load %struct._IO_FILE** @stdout, align 8, !dbg !620
CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
CONTEXT CALL [call func]:   call void @display_ratio(i64 %68, i64 %69, %struct._IO_FILE* %70), !dbg !620
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
## display_ratio does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CONTEXT CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
CONTEXT CALL [call func]:   %71 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0)), !dbg !621
	We do not analyze function 'rpl_printf'
STORE [*p=q]:   store i64 -1, i64* %crc, align 8, !dbg !623
STORE [*p=q]:   store i64 -1, i64* @bytes_out, align 8, !dbg !624
LOAD [p=*q]:   %74 = load i64* @ifile_size, align 8, !dbg !625
STORE [*p=q]:   store i64 %74, i64* @bytes_in, align 8, !dbg !625
LOAD [p=*q]:   %75 = load i32* %2, align 4, !dbg !626
LOAD [p=*q]:   %78 = load i32* @last_member, align 4, !dbg !626
LOAD [p=*q]:   %81 = load i32* %1, align 4, !dbg !627
CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
CONTEXT CALL [call func]:   %82 = call i64 @lseek(i32 %81, i64 -8, i32 2) #3, !dbg !627
	We do not analyze function 'lseek'
STORE [*p=q]:   store i64 %82, i64* @bytes_in, align 8, !dbg !627
LOAD [p=*q]:   %83 = load i64* @bytes_in, align 8, !dbg !629
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[8 x i8]* %buf}, metadata !630), !dbg !635
## do_list does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %86 = load i64* @bytes_in, align 8, !dbg !636
STORE [*p=q]:   store i64 %87, i64* @bytes_in, align 8, !dbg !636
LOAD [p=*q]:   %88 = load i32* %1, align 4, !dbg !637
CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
CONTEXT CALL [call func]:   %90 = call i64 @read(i32 %88, i8* %89, i64 8), !dbg !637
	We do not analyze function 'read'
CALL [call func]:   call void @read_error() #7, !dbg !638
CONTEXT CALL [call func]:   call void @read_error() #7, !dbg !638
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %e}, metadata !574), !dbg !576
## read_error does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
CONTEXT CALL [call func]:   %1 = call i32* @__errno_location() #1, !dbg !577
	We do not analyze function '__errno_location'
LOAD [p=*q]:   %2 = load i32* %1, !dbg !577
STORE [*p=q]:   store i32 %2, i32* %e, align 4, !dbg !577
LOAD [p=*q]:   %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !578
LOAD [p=*q]:   %4 = load i8** @program_name, align 8, !dbg !578
CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
CONTEXT CALL [call func]:   %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([6 x i8]* @.str5187, i32 0, i32 0), i8* %4), !dbg !578
	We do not analyze function 'rpl_fprintf'
LOAD [p=*q]:   %6 = load i32* %e, align 4, !dbg !579
LOAD [p=*q]:   %9 = load i32* %e, align 4, !dbg !580
CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
CONTEXT CALL [call func]:   %10 = call i32* @__errno_location() #1, !dbg !580
	We do not analyze function '__errno_location'
STORE [*p=q]:   store i32 %9, i32* %10, !dbg !580
CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
CONTEXT CALL [call func]:   call void @rpl_perror(i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !582
	We do not analyze function 'rpl_perror'
LOAD [p=*q]:   %12 = load %struct._IO_FILE** @stderr, align 8, !dbg !584
CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
CONTEXT CALL [call func]:   %13 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([28 x i8]* @.str6188, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ifname, i32 0, i32 0)), !dbg !584
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   call void @abort_gzip() #7, !dbg !586
CONTEXT CALL [call func]:   call void @abort_gzip() #7, !dbg !586
CALL [call func]:   call void @remove_output_file(), !dbg !574
CALL [call func]:   call void (...)* bitcast (void (i32)* @do_exit to void (...)*)(i32 1) #7, !dbg !576
LOAD [p=*q]:   %95 = load i8* %94, align 1, !dbg !640
LOAD [p=*q]:   %99 = load i8* %98, align 1, !dbg !640
LOAD [p=*q]:   %108 = load i8* %107, !dbg !640
LOAD [p=*q]:   %114 = load i8* %113, !dbg !640
STORE [*p=q]:   store i64 %121, i64* %crc, align 8, !dbg !640
LOAD [p=*q]:   %125 = load i8* %124, !dbg !641
LOAD [p=*q]:   %131 = load i8* %130, !dbg !641
LOAD [p=*q]:   %141 = load i8* %140, !dbg !641
LOAD [p=*q]:   %148 = load i8* %147, !dbg !641
STORE [*p=q]:   store i64 %155, i64* @bytes_out, align 8, !dbg !641
LOAD [p=*q]:   %158 = load i32* @verbose, align 4, !dbg !644
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct.tm** %tm}, metadata !645), !dbg !661
## do_list does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
CONTEXT CALL [call func]:   %161 = call %struct.tm* @localtime(i64* getelementptr inbounds (%struct.timespec* @time_stamp, i32 0, i32 0)) #3, !dbg !662
	We do not analyze function 'localtime'
STORE [*p=q]:   store %struct.tm* %161, %struct.tm** %tm, align 8, !dbg !662
LOAD [p=*q]:   %162 = load i32* %2, align 4, !dbg !663
LOAD [p=*q]:   %165 = load i8** %164, align 8, !dbg !663
LOAD [p=*q]:   %166 = load i64* %crc, align 8, !dbg !663
CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
CONTEXT CALL [call func]:   %167 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0), i8* %165, i64 %166), !dbg !663
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %168 = load %struct.tm** %tm, align 8, !dbg !664
LOAD [p=*q]:   %171 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %173 = load i32* %172, align 4, !dbg !665
LOAD [p=*q]:   %177 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %179 = load i32* %178, align 4, !dbg !665
LOAD [p=*q]:   %180 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %182 = load i32* %181, align 4, !dbg !665
LOAD [p=*q]:   %183 = load %struct.tm** %tm, align 8, !dbg !665
LOAD [p=*q]:   %185 = load i32* %184, align 4, !dbg !665
CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
CONTEXT CALL [call func]:   %186 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([17 x i8]* @.str22, i32 0, i32 0), i8* %176, i32 %179, i32 %182, i32 %185), !dbg !665
	We do not analyze function 'rpl_printf'
CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
CONTEXT CALL [call func]:   %188 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([14 x i8]* @.str24, i32 0, i32 0)), !dbg !666
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %191 = load %struct._IO_FILE** @stdout, align 8, !dbg !668
LOAD [p=*q]:   %192 = load i64* @bytes_in, align 8, !dbg !668
LOAD [p=*q]:   %193 = load i32* %positive_off_t_width, align 4, !dbg !668
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %191, i64 %192, i32 %193), !dbg !668
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
CONTEXT CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
CONTEXT CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
CONTEXT CALL [call func]:   %194 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !669
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %195 = load %struct._IO_FILE** @stdout, align 8, !dbg !670
LOAD [p=*q]:   %196 = load i64* @bytes_out, align 8, !dbg !670
LOAD [p=*q]:   %197 = load i32* %positive_off_t_width, align 4, !dbg !670
CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
CONTEXT CALL [call func]:   call void @fprint_off(%struct._IO_FILE* %195, i64 %196, i32 %197), !dbg !670
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %1}, metadata !574), !dbg !627
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %offset, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !628), !dbg !630
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i32 %width, i32* %3, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %3}, metadata !631), !dbg !632
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{[64 x i8]* %buf}, metadata !633), !dbg !638
## fprint_off does not call llvm.dbg.declare in our callgraph 
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8** %p}, metadata !639), !dbg !640
## fprint_off does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i8* %5, i8** %p, align 8, !dbg !641
LOAD [p=*q]:   %6 = load i64* %2, align 8, !dbg !642
LOAD [p=*q]:   %10 = load i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %14 = load i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8* %15, i8** %p, align 8, !dbg !645
STORE [*p=q]:   store i8 %13, i8* %15, !dbg !645
LOAD [p=*q]:   %17 = load i64* %2, align 8, !dbg !645
STORE [*p=q]:   store i64 %18, i64* %2, align 8, !dbg !645
LOAD [p=*q]:   %21 = load i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8* %22, i8** %p, align 8, !dbg !646
STORE [*p=q]:   store i8 45, i8* %22, !dbg !646
LOAD [p=*q]:   %25 = load i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %29 = load i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8* %30, i8** %p, align 8, !dbg !650
STORE [*p=q]:   store i8 %28, i8* %30, !dbg !650
LOAD [p=*q]:   %32 = load i64* %2, align 8, !dbg !650
STORE [*p=q]:   store i64 %33, i64* %2, align 8, !dbg !650
LOAD [p=*q]:   %39 = load i8** %p, align 8, !dbg !651
LOAD [p=*q]:   %43 = load i32* %3, align 4, !dbg !651
STORE [*p=q]:   store i32 %46, i32* %3, align 4, !dbg !651
LOAD [p=*q]:   %48 = load i32* %3, align 4, !dbg !652
STORE [*p=q]:   store i32 %49, i32* %3, align 4, !dbg !652
LOAD [p=*q]:   %52 = load %struct._IO_FILE** %1, align 8, !dbg !653
CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
CONTEXT CALL [call func]:   %53 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %52), !dbg !653
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %56 = load i8** %p, align 8, !dbg !656
LOAD [p=*q]:   %61 = load i8** %p, align 8, !dbg !658
LOAD [p=*q]:   %62 = load i8* %61, !dbg !658
LOAD [p=*q]:   %64 = load %struct._IO_FILE** %1, align 8, !dbg !658
CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
CONTEXT CALL [call func]:   %65 = call i32 @_IO_putc(i32 %63, %struct._IO_FILE* %64), !dbg !658
	We do not analyze function '_IO_putc'
LOAD [p=*q]:   %67 = load i8** %p, align 8, !dbg !659
STORE [*p=q]:   store i8* %68, i8** %p, align 8, !dbg !659
CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
CONTEXT CALL [call func]:   %198 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0)), !dbg !671
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %199 = load i64* @bytes_in, align 8, !dbg !672
STORE [*p=q]:   store i64 -1, i64* @total_in, align 8, !dbg !673
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !675
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !675
LOAD [p=*q]:   %203 = load i64* @total_in, align 8, !dbg !677
LOAD [p=*q]:   %206 = load i64* @bytes_in, align 8, !dbg !678
LOAD [p=*q]:   %207 = load i64* @total_in, align 8, !dbg !678
STORE [*p=q]:   store i64 %208, i64* @total_in, align 8, !dbg !678
LOAD [p=*q]:   %211 = load i64* @bytes_out, align 8, !dbg !681
STORE [*p=q]:   store i64 -1, i64* @total_out, align 8, !dbg !682
STORE [*p=q]:   store i64 0, i64* @header_bytes, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_out, align 8, !dbg !684
STORE [*p=q]:   store i64 0, i64* @bytes_in, align 8, !dbg !684
LOAD [p=*q]:   %215 = load i64* @total_out, align 8, !dbg !686
LOAD [p=*q]:   %218 = load i64* @bytes_out, align 8, !dbg !687
LOAD [p=*q]:   %219 = load i64* @total_out, align 8, !dbg !687
STORE [*p=q]:   store i64 %220, i64* @total_out, align 8, !dbg !687
LOAD [p=*q]:   %223 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %224 = load i64* @bytes_in, align 8, !dbg !690
LOAD [p=*q]:   %225 = load i64* @header_bytes, align 8, !dbg !690
LOAD [p=*q]:   %228 = load i64* @bytes_out, align 8, !dbg !690
LOAD [p=*q]:   %229 = load %struct._IO_FILE** @stdout, align 8, !dbg !690
CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
CONTEXT CALL [call func]:   call void @display_ratio(i64 %227, i64 %228, %struct._IO_FILE* %229), !dbg !690
STORE [*p=q]:   store i64 %num, i64* %1, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %1}, metadata !574), !dbg !577
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store i64 %den, i64* %2, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %2}, metadata !578), !dbg !579
## display_ratio does not call llvm.dbg.declare in our callgraph 
STORE [*p=q]:   store %struct._IO_FILE* %file, %struct._IO_FILE** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{%struct._IO_FILE** %3}, metadata !580), !dbg !632
## display_ratio does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %4 = load %struct._IO_FILE** %3, align 8, !dbg !633
LOAD [p=*q]:   %5 = load i64* %2, align 8, !dbg !633
LOAD [p=*q]:   %9 = load i64* %1, align 8, !dbg !633
LOAD [p=*q]:   %12 = load i64* %2, align 8, !dbg !633
CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
CONTEXT CALL [call func]:   %17 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([8 x i8]* @.str7189, i32 0, i32 0), double %16), !dbg !633
	We do not analyze function 'rpl_fprintf'
CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
CONTEXT CALL [call func]:   %230 = call i32 (i8*, ...)* @rpl_printf(i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @ofname, i32 0, i32 0)), !dbg !691
	We do not analyze function 'rpl_printf'
LOAD [p=*q]:   %190 = load i32* @exit_code, align 4, !dbg !691
CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
CONTEXT CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %190 = load i32* @exit_code, align 4, !dbg !691
CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
CONTEXT CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
STORE [*p=q]:   store i32 %exitcode, i32* %1, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %1}, metadata !574), !dbg !575
## do_exit does not call llvm.dbg.declare in our callgraph 
LOAD [p=*q]:   %2 = load i32* @do_exit.in_exit, align 4, !dbg !576
LOAD [p=*q]:   %5 = load i32* %1, align 4, !dbg !578
CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
CONTEXT CALL [call func]:   call void @exit(i32 %5) #6, !dbg !578
	We do not analyze function 'exit'
STORE [*p=q]:   store i32 1, i32* @do_exit.in_exit, align 4, !dbg !579
LOAD [p=*q]:   %7 = load i8** @env, align 8, !dbg !580
CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
CONTEXT CALL [call func]:   call void @free(i8* %7) #3, !dbg !580
	We do not analyze function 'free'
STORE [*p=q]:   store i8* null, i8** @env, align 8, !dbg !581
LOAD [p=*q]:   %8 = load i8*** @args, align 8, !dbg !582
CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
CONTEXT CALL [call func]:   call void @free(i8* %9) #3, !dbg !582
	We do not analyze function 'free'
STORE [*p=q]:   store i8** null, i8*** @args, align 8, !dbg !583
LOAD [p=*q]:   %10 = load i32* %1, align 4, !dbg !584
CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
CONTEXT CALL [call func]:   call void @exit(i32 %10) #6, !dbg !584
	We do not analyze function 'exit'
LOAD [p=*q]:   %192 = load i32* %1, !dbg !692
## Starting context-insensitive interprocedural analysis
STORE [*p=q]:   store i32 0, i32* %1
STORE [*p=q]:   store i32 %argc, i32* %2, align 4
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %2}, metadata !574), !dbg !575
STORE [*p=q]:   store i8** %argv, i8*** %3, align 8
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i8*** %3}, metadata !576), !dbg !577
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %file_count}, metadata !578), !dbg !580
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i64* %proglen}, metadata !581), !dbg !582
CALL [call func]:   call void @llvm.dbg.declare(metadata !{i32* %optc}, metadata !583), !dbg !584
LOAD [p=*q]:   %4 = load i8*** %3, align 8, !dbg !585
LOAD [p=*q]:   %6 = load i8** %5, !dbg !585
CALL [call func]:   %7 = call i8* @gzip_base_name(i8* %6) #4, !dbg !585
STORE [*p=q]:   store i8* %7, i8** @program_name, align 8, !dbg !585
LOAD [p=*q]:   %8 = load i8** @program_name, align 8, !dbg !586
CALL [call func]:   %9 = call i64 @strlen(i8* %8) #4, !dbg !586
STORE [*p=q]:   store i64 %9, i64* %proglen, align 8, !dbg !586
CALL [call func]:   %10 = call i32 @atexit(void ()* @close_stdin) #3, !dbg !587
LOAD [p=*q]:   %11 = load i64* %proglen, align 8, !dbg !588
LOAD [p=*q]:   %14 = load i8** @program_name, align 8, !dbg !589
LOAD [p=*q]:   %15 = load i64* %proglen, align 8, !dbg !589
CALL [call func]:   %18 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([5 x i8]* @.str1, i32 0, i32 0)) #4, !dbg !589
CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i8* %26, i8** @env, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i8** @env, align 8, !dbg !592
LOAD [p=*q]:   %14 = load i8** @program_name, align 8, !dbg !589
LOAD [p=*q]:   %15 = load i64* %proglen, align 8, !dbg !589
CALL [call func]:   %18 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([5 x i8]* @.str1, i32 0, i32 0)) #4, !dbg !589
LOAD [p=*q]:   %21 = load i64* %proglen, align 8, !dbg !590
LOAD [p=*q]:   %23 = load i8** @program_name, align 8, !dbg !590
STORE [*p=q]:   store i8 0, i8* %24, !dbg !590
CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i8* %26, i8** @env, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i8** @env, align 8, !dbg !592
LOAD [p=*q]:   %21 = load i64* %proglen, align 8, !dbg !590
LOAD [p=*q]:   %23 = load i8** @program_name, align 8, !dbg !590
STORE [*p=q]:   store i8 0, i8* %24, !dbg !590
CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i8* %26, i8** @env, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i8** @env, align 8, !dbg !592
CALL [call func]:   %26 = call i8* @add_envopt(i32* %2, i8*** %3, i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)), !dbg !591
STORE [*p=q]:   store i8* %26, i8** @env, align 8, !dbg !591
LOAD [p=*q]:   %27 = load i8** @env, align 8, !dbg !592
LOAD [p=*q]:   %30 = load i8*** %3, align 8, !dbg !593
STORE [*p=q]:   store i8** %30, i8*** @args, align 8, !dbg !593
STORE [*p=q]:   store i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i8** @z_suffix, align 8, !dbg !594
LOAD [p=*q]:   %32 = load i8** @z_suffix, align 8, !dbg !595
CALL [call func]:   %33 = call i64 @strlen(i8* %32) #4, !dbg !595
STORE [*p=q]:   store i64 %33, i64* @z_len, align 8, !dbg !595
LOAD [p=*q]:   %30 = load i8*** %3, align 8, !dbg !593
STORE [*p=q]:   store i8** %30, i8*** @args, align 8, !dbg !593
STORE [*p=q]:   store i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i8** @z_suffix, align 8, !dbg !594
LOAD [p=*q]:   %32 = load i8** @z_suffix, align 8, !dbg !595
CALL [call func]:   %33 = call i64 @strlen(i8* %32) #4, !dbg !595
STORE [*p=q]:   store i64 %33, i64* @z_len, align 8, !dbg !595
STORE [*p=q]:   store i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i8** @z_suffix, align 8, !dbg !594
LOAD [p=*q]:   %32 = load i8** @z_suffix, align 8, !dbg !595
CALL [call func]:   %33 = call i64 @strlen(i8* %32) #4, !dbg !595
STORE [*p=q]:   store i64 %33, i64* @z_len, align 8, !dbg !595
LOAD [p=*q]:   %35 = load i32* %2, align 4, !dbg !597
LOAD [p=*q]:   %36 = load i8*** %3, align 8, !dbg !597
CALL [call func]:   %37 = call i32 @rpl_getopt_long(i32 %35, i8** %36, i8* getelementptr inbounds ([34 x i8]* @.str3, i32 0, i32 0), %struct.rpl_option* getelementptr inbounds ([26 x %struct.rpl_option]* bitcast (<{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] } }>* @longopts to [26 x %struct.rpl_option]*), i32 0, i32 0), i32* null) #3, !dbg !597
STORE [*p=q]:   store i32 %37, i32* %optc, align 4, !dbg !597
LOAD [p=*q]:   %35 = load i32* %2, align 4, !dbg !597
LOAD [p=*q]:   %36 = load i8*** %3, align 8, !dbg !597
CALL [call func]:   %37 = call i32 @rpl_getopt_long(i32 %35, i8** %36, i8* getelementptr inbounds ([34 x i8]* @.str3, i32 0, i32 0), %struct.rpl_option* getelementptr inbounds ([26 x %struct.rpl_option]* bitcast (<{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] } }>* @longopts to [26 x %struct.rpl_option]*), i32 0, i32 0), i32* null) #3, !dbg !597
STORE [*p=q]:   store i32 %37, i32* %optc, align 4, !dbg !597
LOAD [p=*q]:   %40 = load i32* %optc, align 4, !dbg !598
LOAD [p=*q]:   %103 = load i32* @no_time, align 4, !dbg !658
LOAD [p=*q]:   %40 = load i32* %optc, align 4, !dbg !598
CALL [call func]:   call void @try_help() #7, !dbg !656
STORE [*p=q]:   store i32 1, i32* @ascii, align 4, !dbg !600
LOAD [p=*q]:   %43 = load i8** @rpl_optarg, align 8, !dbg !603
CALL [call func]:   %44 = call i32 @atoi(i8* %43) #4, !dbg !603
STORE [*p=q]:   store i32 %44, i32* @maxbits, align 4, !dbg !603
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !613
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !615
LOAD [p=*q]:   %71 = load i32* @force, align 4, !dbg !617
STORE [*p=q]:   store i32 %72, i32* @force, align 4, !dbg !617
CALL [call func]:   call void @help(), !dbg !619
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !620
CALL [call func]:   call void @help(), !dbg !619
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !620
STORE [*p=q]:   store i32 1, i32* @keep, align 4, !dbg !621
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !623
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !623
STORE [*p=q]:   store i32 1, i32* @list, align 4, !dbg !623
CALL [call func]:   call void @license(), !dbg !625
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !626
STORE [*p=q]:   store i32 1, i32* @no_time, align 4, !dbg !627
STORE [*p=q]:   store i32 0, i32* @no_time, align 4, !dbg !629
STORE [*p=q]:   store i32 1, i32* @no_time, align 4, !dbg !631
STORE [*p=q]:   store i32 1, i32* @no_name, align 4, !dbg !631
STORE [*p=q]:   store i32 0, i32* @no_time, align 4, !dbg !633
STORE [*p=q]:   store i32 0, i32* @no_name, align 4, !dbg !633
STORE [*p=q]:   store i8 1, i8* @presume_input_tty, align 1, !dbg !635
STORE [*p=q]:   store i32 1, i32* @quiet, align 4, !dbg !637
STORE [*p=q]:   store i32 0, i32* @verbose, align 4, !dbg !638
STORE [*p=q]:   store i32 1, i32* @recursive, align 4, !dbg !640
LOAD [p=*q]:   %85 = load i8** @rpl_optarg, align 8, !dbg !642
CALL [call func]:   %86 = call i64 @strlen(i8* %85) #4, !dbg !642
STORE [*p=q]:   store i64 %86, i64* @z_len, align 8, !dbg !642
LOAD [p=*q]:   %87 = load i8** @rpl_optarg, align 8, !dbg !643
STORE [*p=q]:   store i8* %87, i8** @z_suffix, align 8, !dbg !643
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !645
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !645
STORE [*p=q]:   store i32 1, i32* @test, align 4, !dbg !645
LOAD [p=*q]:   %90 = load i32* @verbose, align 4, !dbg !647
STORE [*p=q]:   store i32 %91, i32* @verbose, align 4, !dbg !647
STORE [*p=q]:   store i32 0, i32* @quiet, align 4, !dbg !648
CALL [call func]:   call void @version(), !dbg !650
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !651
LOAD [p=*q]:   %94 = load %struct._IO_FILE** @stderr, align 8, !dbg !652
LOAD [p=*q]:   %95 = load i8** @program_name, align 8, !dbg !652
CALL [call func]:   %96 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([38 x i8]* @.str5, i32 0, i32 0), i8* %95), !dbg !652
CALL [call func]:   call void @try_help() #7, !dbg !653
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
STORE [*p=q]:   store i32 1, i32* @ascii, align 4, !dbg !600
LOAD [p=*q]:   %43 = load i8** @rpl_optarg, align 8, !dbg !603
CALL [call func]:   %44 = call i32 @atoi(i8* %43) #4, !dbg !603
STORE [*p=q]:   store i32 %44, i32* @maxbits, align 4, !dbg !603
LOAD [p=*q]:   %46 = load i8** @rpl_optarg, align 8, !dbg !604
LOAD [p=*q]:   %47 = load i8* %46, !dbg !604
LOAD [p=*q]:   %46 = load i8** @rpl_optarg, align 8, !dbg !604
LOAD [p=*q]:   %47 = load i8* %46, !dbg !604
LOAD [p=*q]:   %50 = load i8** @rpl_optarg, align 8, !dbg !606
LOAD [p=*q]:   %51 = load i8* %50, !dbg !606
LOAD [p=*q]:   %50 = load i8** @rpl_optarg, align 8, !dbg !606
LOAD [p=*q]:   %51 = load i8* %50, !dbg !606
LOAD [p=*q]:   %55 = load i8** @rpl_optarg, align 8, !dbg !606
LOAD [p=*q]:   %56 = load i8* %55, !dbg !606
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stderr, align 8, !dbg !607
LOAD [p=*q]:   %61 = load i8** @program_name, align 8, !dbg !607
CALL [call func]:   %62 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([34 x i8]* @.str4, i32 0, i32 0), i8* %61), !dbg !607
CALL [call func]:   call void @try_help() #7, !dbg !609
LOAD [p=*q]:   %55 = load i8** @rpl_optarg, align 8, !dbg !606
LOAD [p=*q]:   %56 = load i8* %55, !dbg !606
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stderr, align 8, !dbg !607
LOAD [p=*q]:   %61 = load i8** @program_name, align 8, !dbg !607
CALL [call func]:   %62 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([34 x i8]* @.str4, i32 0, i32 0), i8* %61), !dbg !607
CALL [call func]:   call void @try_help() #7, !dbg !609
LOAD [p=*q]:   %60 = load %struct._IO_FILE** @stderr, align 8, !dbg !607
LOAD [p=*q]:   %61 = load i8** @program_name, align 8, !dbg !607
CALL [call func]:   %62 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([34 x i8]* @.str4, i32 0, i32 0), i8* %61), !dbg !607
CALL [call func]:   call void @try_help() #7, !dbg !609
LOAD [p=*q]:   %65 = load i8** @rpl_optarg, align 8, !dbg !611
STORE [*p=q]:   store i8* %66, i8** @rpl_optarg, align 8, !dbg !611
LOAD [p=*q]:   %65 = load i8** @rpl_optarg, align 8, !dbg !611
STORE [*p=q]:   store i8* %66, i8** @rpl_optarg, align 8, !dbg !611
LOAD [p=*q]:   %46 = load i8** @rpl_optarg, align 8, !dbg !604
LOAD [p=*q]:   %47 = load i8* %46, !dbg !604
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !613
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !615
LOAD [p=*q]:   %71 = load i32* @force, align 4, !dbg !617
STORE [*p=q]:   store i32 %72, i32* @force, align 4, !dbg !617
CALL [call func]:   call void @help(), !dbg !619
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !620
STORE [*p=q]:   store i32 1, i32* @keep, align 4, !dbg !621
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !623
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !623
STORE [*p=q]:   store i32 1, i32* @list, align 4, !dbg !623
CALL [call func]:   call void @license(), !dbg !625
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !626
STORE [*p=q]:   store i32 1, i32* @no_time, align 4, !dbg !627
STORE [*p=q]:   store i32 0, i32* @no_time, align 4, !dbg !629
STORE [*p=q]:   store i32 1, i32* @no_time, align 4, !dbg !631
STORE [*p=q]:   store i32 1, i32* @no_name, align 4, !dbg !631
STORE [*p=q]:   store i32 0, i32* @no_time, align 4, !dbg !633
STORE [*p=q]:   store i32 0, i32* @no_name, align 4, !dbg !633
STORE [*p=q]:   store i8 1, i8* @presume_input_tty, align 1, !dbg !635
STORE [*p=q]:   store i32 1, i32* @quiet, align 4, !dbg !637
STORE [*p=q]:   store i32 0, i32* @verbose, align 4, !dbg !638
STORE [*p=q]:   store i32 1, i32* @recursive, align 4, !dbg !640
LOAD [p=*q]:   %85 = load i8** @rpl_optarg, align 8, !dbg !642
CALL [call func]:   %86 = call i64 @strlen(i8* %85) #4, !dbg !642
STORE [*p=q]:   store i64 %86, i64* @z_len, align 8, !dbg !642
LOAD [p=*q]:   %87 = load i8** @rpl_optarg, align 8, !dbg !643
STORE [*p=q]:   store i8* %87, i8** @z_suffix, align 8, !dbg !643
STORE [*p=q]:   store i32 1, i32* @to_stdout, align 4, !dbg !645
STORE [*p=q]:   store i32 1, i32* @decompress, align 4, !dbg !645
STORE [*p=q]:   store i32 1, i32* @test, align 4, !dbg !645
LOAD [p=*q]:   %90 = load i32* @verbose, align 4, !dbg !647
STORE [*p=q]:   store i32 %91, i32* @verbose, align 4, !dbg !647
STORE [*p=q]:   store i32 0, i32* @quiet, align 4, !dbg !648
CALL [call func]:   call void @version(), !dbg !650
CALL [call func]:   call void @do_exit(i32 0) #7, !dbg !651
LOAD [p=*q]:   %94 = load %struct._IO_FILE** @stderr, align 8, !dbg !652
LOAD [p=*q]:   %95 = load i8** @program_name, align 8, !dbg !652
CALL [call func]:   %96 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([38 x i8]* @.str5, i32 0, i32 0), i8* %95), !dbg !652
CALL [call func]:   call void @try_help() #7, !dbg !653
LOAD [p=*q]:   %98 = load i32* %optc, align 4, !dbg !654
STORE [*p=q]:   store i32 %99, i32* @level, align 4, !dbg !654
CALL [call func]:   call void @try_help() #7, !dbg !656
LOAD [p=*q]:   %35 = load i32* %2, align 4, !dbg !597
LOAD [p=*q]:   %36 = load i8*** %3, align 8, !dbg !597
CALL [call func]:   %37 = call i32 @rpl_getopt_long(i32 %35, i8** %36, i8* getelementptr inbounds ([34 x i8]* @.str3, i32 0, i32 0), %struct.rpl_option* getelementptr inbounds ([26 x %struct.rpl_option]* bitcast (<{ { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] }, { i8*, i32, i32*, i32, [4 x i8] } }>* @longopts to [26 x %struct.rpl_option]*), i32 0, i32 0), i32* null) #3, !dbg !597
STORE [*p=q]:   store i32 %37, i32* %optc, align 4, !dbg !597
LOAD [p=*q]:   %103 = load i32* @no_time, align 4, !dbg !658
LOAD [p=*q]:   %106 = load i32* @decompress, align 4, !dbg !659
STORE [*p=q]:   store i32 %106, i32* @no_time, align 4, !dbg !659
LOAD [p=*q]:   %108 = load i32* @no_name, align 4, !dbg !660
LOAD [p=*q]:   %106 = load i32* @decompress, align 4, !dbg !659
STORE [*p=q]:   store i32 %106, i32* @no_time, align 4, !dbg !659
LOAD [p=*q]:   %108 = load i32* @no_name, align 4, !dbg !660
LOAD [p=*q]:   %108 = load i32* @no_name, align 4, !dbg !660
LOAD [p=*q]:   %111 = load i32* @decompress, align 4, !dbg !661
STORE [*p=q]:   store i32 %111, i32* @no_name, align 4, !dbg !661
LOAD [p=*q]:   %113 = load i32* %2, align 4, !dbg !662
LOAD [p=*q]:   %114 = load i32* @rpl_optind, align 4, !dbg !662
STORE [*p=q]:   store i32 %115, i32* %file_count, align 4, !dbg !662
LOAD [p=*q]:   %116 = load i32* @ascii, align 4, !dbg !663
LOAD [p=*q]:   %111 = load i32* @decompress, align 4, !dbg !661
STORE [*p=q]:   store i32 %111, i32* @no_name, align 4, !dbg !661
LOAD [p=*q]:   %113 = load i32* %2, align 4, !dbg !662
LOAD [p=*q]:   %114 = load i32* @rpl_optind, align 4, !dbg !662
STORE [*p=q]:   store i32 %115, i32* %file_count, align 4, !dbg !662
LOAD [p=*q]:   %116 = load i32* @ascii, align 4, !dbg !663
LOAD [p=*q]:   %113 = load i32* %2, align 4, !dbg !662
LOAD [p=*q]:   %114 = load i32* @rpl_optind, align 4, !dbg !662
STORE [*p=q]:   store i32 %115, i32* %file_count, align 4, !dbg !662
LOAD [p=*q]:   %116 = load i32* @ascii, align 4, !dbg !663
LOAD [p=*q]:   %119 = load i32* @quiet, align 4, !dbg !663
LOAD [p=*q]:   %126 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %119 = load i32* @quiet, align 4, !dbg !663
LOAD [p=*q]:   %126 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %122 = load %struct._IO_FILE** @stderr, align 8, !dbg !664
LOAD [p=*q]:   %123 = load i8** @program_name, align 8, !dbg !664
CALL [call func]:   %124 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %122, i8* getelementptr inbounds ([43 x i8]* @.str6, i32 0, i32 0), i8* %123), !dbg !664
LOAD [p=*q]:   %122 = load %struct._IO_FILE** @stderr, align 8, !dbg !664
LOAD [p=*q]:   %123 = load i8** @program_name, align 8, !dbg !664
CALL [call func]:   %124 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %122, i8* getelementptr inbounds ([43 x i8]* @.str6, i32 0, i32 0), i8* %123), !dbg !664
LOAD [p=*q]:   %126 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %126 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %132 = load %struct._IO_FILE** @stderr, align 8, !dbg !668
LOAD [p=*q]:   %133 = load i8** @program_name, align 8, !dbg !668
LOAD [p=*q]:   %134 = load i8** @z_suffix, align 8, !dbg !668
CALL [call func]:   %135 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([25 x i8]* @.str7, i32 0, i32 0), i8* %133, i8* %134), !dbg !668
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !670
LOAD [p=*q]:   %129 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %129 = load i64* @z_len, align 8, !dbg !667
LOAD [p=*q]:   %132 = load %struct._IO_FILE** @stderr, align 8, !dbg !668
LOAD [p=*q]:   %133 = load i8** @program_name, align 8, !dbg !668
LOAD [p=*q]:   %134 = load i8** @z_suffix, align 8, !dbg !668
CALL [call func]:   %135 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([25 x i8]* @.str7, i32 0, i32 0), i8* %133, i8* %134), !dbg !668
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !670
LOAD [p=*q]:   %137 = load i32* @do_lzw, align 4, !dbg !671
LOAD [p=*q]:   %132 = load %struct._IO_FILE** @stderr, align 8, !dbg !668
LOAD [p=*q]:   %133 = load i8** @program_name, align 8, !dbg !668
LOAD [p=*q]:   %134 = load i8** @z_suffix, align 8, !dbg !668
CALL [call func]:   %135 = call i32 (%struct._IO_FILE*, i8*, ...)* @rpl_fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([25 x i8]* @.str7, i32 0, i32 0), i8* %133, i8* %134), !dbg !668
CALL [call func]:   call void @do_exit(i32 1) #7, !dbg !670
LOAD [p=*q]:   %137 = load i32* @do_lzw, align 4, !dbg !671
LOAD [p=*q]:   %140 = load i32* @decompress, align 4, !dbg !671
LOAD [p=*q]:   %144 = load i32* @quiet, align 4, !dbg !673
STORE [*p=q]:   store volatile i32 %146, i32* @exiting_signal, align 4, !dbg !673
CALL [call func]:   call void @install_signal_handlers(), !dbg !674
LOAD [p=*q]:   %147 = load i32* %file_count, align 4, !dbg !675
LOAD [p=*q]:   %140 = load i32* @decompress, align 4, !dbg !671
LOAD [p=*q]:   %144 = load i32* @quiet, align 4, !dbg !673
STORE [*p=q]:   store volatile i32 %146, i32* @exiting_signal, align 4, !dbg !673
CALL [call func]:   call void @install_signal_handlers(), !dbg !674
LOAD [p=*q]:   %147 = load i32* %file_count, align 4, !dbg !675
STORE [*p=q]:   store i32 (i32, i32)* @lzw, i32 (i32, i32)** @work, align 8, !dbg !672
STORE [*p=q]:   store i32 (i32, i32)* @lzw, i32 (i32, i32)** @work, align 8, !dbg !672
LOAD [p=*q]:   %144 = load i32* @quiet, align 4, !dbg !673
STORE [*p=q]:   store volatile i32 %146, i32* @exiting_signal, align 4, !dbg !673
CALL [call func]:   call void @install_signal_handlers(), !dbg !674
LOAD [p=*q]:   %147 = load i32* %file_count, align 4, !dbg !675
LOAD [p=*q]:   %144 = load i32* @quiet, align 4, !dbg !673
STORE [*p=q]:   store volatile i32 %146, i32* @exiting_signal, align 4, !dbg !673
CALL [call func]:   call void @install_signal_handlers(), !dbg !674
LOAD [p=*q]:   %147 = load i32* %file_count, align 4, !dbg !675
LOAD [p=*q]:   %150 = load i32* @to_stdout, align 4, !dbg !676
CALL [call func]:   call void @treat_stdin(), !dbg !685
LOAD [p=*q]:   %150 = load i32* @to_stdout, align 4, !dbg !676
LOAD [p=*q]:   %153 = load i32* @test, align 4, !dbg !676
LOAD [p=*q]:   %153 = load i32* @test, align 4, !dbg !676
LOAD [p=*q]:   %156 = load i32* @list, align 4, !dbg !676
LOAD [p=*q]:   %156 = load i32* @list, align 4, !dbg !676
LOAD [p=*q]:   %159 = load i32* @decompress, align 4, !dbg !676
LOAD [p=*q]:   %159 = load i32* @decompress, align 4, !dbg !676
LOAD [p=*q]:   %162 = load i32* @ascii, align 4, !dbg !676
LOAD [p=*q]:   %162 = load i32* @ascii, align 4, !dbg !676
LOAD [p=*q]:   %167 = load i32* @rpl_optind, align 4, !dbg !680
LOAD [p=*q]:   %168 = load i32* %2, align 4, !dbg !680
LOAD [p=*q]:   %167 = load i32* @rpl_optind, align 4, !dbg !680
LOAD [p=*q]:   %168 = load i32* %2, align 4, !dbg !680
LOAD [p=*q]:   %171 = load i32* @rpl_optind, align 4, !dbg !681
STORE [*p=q]:   store i32 %172, i32* @rpl_optind, align 4, !dbg !681
LOAD [p=*q]:   %174 = load i8*** %3, align 8, !dbg !681
LOAD [p=*q]:   %176 = load i8** %175, !dbg !681
CALL [call func]:   call void @treat_file(i8* %176), !dbg !681
LOAD [p=*q]:   %171 = load i32* @rpl_optind, align 4, !dbg !681
STORE [*p=q]:   store i32 %172, i32* @rpl_optind, align 4, !dbg !681
LOAD [p=*q]:   %174 = load i8*** %3, align 8, !dbg !681
LOAD [p=*q]:   %176 = load i8** %175, !dbg !681
CALL [call func]:   call void @treat_file(i8* %176), !dbg !681
LOAD [p=*q]:   %167 = load i32* @rpl_optind, align 4, !dbg !680
LOAD [p=*q]:   %168 = load i32* %2, align 4, !dbg !680
LOAD [p=*q]:   %180 = load i32* @list, align 4, !dbg !687
CALL [call func]:   call void @treat_stdin(), !dbg !685
LOAD [p=*q]:   %180 = load i32* @list, align 4, !dbg !687
LOAD [p=*q]:   %180 = load i32* @list, align 4, !dbg !687
LOAD [p=*q]:   %183 = load i32* @quiet, align 4, !dbg !687
LOAD [p=*q]:   %190 = load i32* @exit_code, align 4, !dbg !691
CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
LOAD [p=*q]:   %183 = load i32* @quiet, align 4, !dbg !687
LOAD [p=*q]:   %190 = load i32* @exit_code, align 4, !dbg !691
CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
LOAD [p=*q]:   %186 = load i32* %file_count, align 4, !dbg !687
LOAD [p=*q]:   %186 = load i32* %file_count, align 4, !dbg !687
CALL [call func]:   call void @do_list(i32 -1, i32 -1), !dbg !688
LOAD [p=*q]:   %190 = load i32* @exit_code, align 4, !dbg !691
CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
CALL [call func]:   call void @do_list(i32 -1, i32 -1), !dbg !688
LOAD [p=*q]:   %190 = load i32* @exit_code, align 4, !dbg !691
CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
LOAD [p=*q]:   %190 = load i32* @exit_code, align 4, !dbg !691
CALL [call func]:   call void @do_exit(i32 %190) #7, !dbg !691
LOAD [p=*q]:   %192 = load i32* %1, !dbg !692
Analyzing return instruction for main
	  %192 = load i32* %1, !dbg !692
